
main <./moonscript/types.lua:0,0> (218 instructions, 872 bytes at 0x7ff606c068a0)
0+ params, 23 slots, 0 upvalues, 23 locals, 55 constants, 17 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "moonscript.util"
	3	[1]	CALL     	0 2 2
	4	[2]	LOADNIL  	1 1
	5	[3]	GETGLOBAL	2 -1	; require
	6	[3]	LOADK    	3 -3	; "moonscript.data"
	7	[3]	CALL     	2 2 2
	8	[3]	GETTABLE 	1 2 -4	; "Set"
	9	[4]	LOADNIL  	2 2
	10	[5]	GETGLOBAL	3 -5	; table
	11	[5]	GETTABLE 	2 3 -6	; "insert"
	12	[6]	LOADNIL  	3 3
	13	[7]	GETTABLE 	3 0 -7	; "unpack"
	14	[8]	MOVE     	4 1
	15	[8]	NEWTABLE 	5 4 0
	16	[9]	LOADK    	6 -8	; "foreach"
	17	[10]	LOADK    	7 -9	; "for"
	18	[11]	LOADK    	8 -10	; "while"
	19	[13]	LOADK    	9 -11	; "return"
	20	[13]	SETLIST  	5 4 1	; 1
	21	[8]	CALL     	4 2 2
	22	[14]	MOVE     	5 1
	23	[14]	NEWTABLE 	6 6 0
	24	[15]	LOADK    	7 -12	; "if"
	25	[16]	LOADK    	8 -13	; "unless"
	26	[17]	LOADK    	9 -14	; "with"
	27	[18]	LOADK    	10 -15	; "switch"
	28	[19]	LOADK    	11 -16	; "class"
	29	[21]	LOADK    	12 -17	; "do"
	30	[21]	SETLIST  	6 6 1	; 1
	31	[14]	CALL     	5 2 2
	32	[22]	MOVE     	6 1
	33	[22]	NEWTABLE 	7 2 0
	34	[23]	LOADK    	8 -11	; "return"
	35	[25]	LOADK    	9 -18	; "break"
	36	[25]	SETLIST  	7 2 1	; 1
	37	[22]	CALL     	6 2 2
	38	[26]	LOADNIL  	7 7
	39	[36]	CLOSURE  	7 0	; 0x7ff606c06c40
	40	[37]	LOADNIL  	8 8
	41	[39]	GETTABLE 	9 0 -19	; "moon"
	42	[39]	GETTABLE 	9 9 -20	; "type"
	43	[46]	CLOSURE  	8 1	; 0x7ff606c06bc0
	44	[46]	MOVE     	0 9
	45	[46]	CLOSE    	9
	46	[48]	LOADNIL  	9 9
	47	[54]	CLOSURE  	9 2	; 0x7ff606c07760
	48	[54]	MOVE     	0 7
	49	[55]	LOADNIL  	10 10
	50	[60]	CLOSURE  	10 3	; 0x7ff606c07ff0
	51	[61]	LOADNIL  	11 11
	52	[64]	CLOSURE  	11 4	; 0x7ff606c08600
	53	[65]	LOADNIL  	12 12
	54	[68]	CLOSURE  	12 5	; 0x7ff606c08800
	55	[68]	MOVE     	0 7
	56	[69]	NEWTABLE 	13 0 0
	57	[70]	NEWTABLE 	14 0 8
	58	[71]	NEWTABLE 	15 2 0
	59	[71]	NEWTABLE 	16 2 0
	60	[73]	LOADK    	17 -21	; "name"
	61	[75]	LOADK    	18 -22	; "Tmp"
	62	[75]	SETLIST  	16 2 1	; 1
	63	[75]	NEWTABLE 	17 2 0
	64	[77]	LOADK    	18 -23	; "body"
	65	[79]	MOVE     	19 13
	66	[79]	SETLIST  	17 2 1	; 1
	67	[80]	SETLIST  	15 2 1	; 1
	68	[80]	SETTABLE 	14 -16 15	; "class" -
	69	[81]	NEWTABLE 	15 4 0
	70	[81]	NEWTABLE 	16 2 0
	71	[83]	LOADK    	17 -25	; "args"
	72	[85]	MOVE     	18 13
	73	[85]	SETLIST  	16 2 1	; 1
	74	[85]	NEWTABLE 	17 2 0
	75	[87]	LOADK    	18 -26	; "whitelist"
	76	[89]	MOVE     	19 13
	77	[89]	SETLIST  	17 2 1	; 1
	78	[89]	NEWTABLE 	18 2 0
	79	[91]	LOADK    	19 -27	; "arrow"
	80	[93]	LOADK    	20 -28	; "slim"
	81	[93]	SETLIST  	18 2 1	; 1
	82	[93]	NEWTABLE 	19 2 0
	83	[95]	LOADK    	20 -23	; "body"
	84	[97]	MOVE     	21 13
	85	[97]	SETLIST  	19 2 1	; 1
	86	[98]	SETLIST  	15 4 1	; 1
	87	[98]	SETTABLE 	14 -24 15	; "fndef" -
	88	[99]	NEWTABLE 	15 3 0
	89	[99]	NEWTABLE 	16 2 0
	90	[101]	LOADK    	17 -29	; "names"
	91	[103]	MOVE     	18 13
	92	[103]	SETLIST  	16 2 1	; 1
	93	[103]	NEWTABLE 	17 1 0
	94	[106]	LOADK    	18 -30	; "iter"
	95	[106]	SETLIST  	17 1 1	; 1
	96	[106]	NEWTABLE 	18 2 0
	97	[108]	LOADK    	19 -23	; "body"
	98	[110]	MOVE     	20 13
	99	[110]	SETLIST  	18 2 1	; 1
	100	[111]	SETLIST  	15 3 1	; 1
	101	[111]	SETTABLE 	14 -8 15	; "foreach" -
	102	[112]	NEWTABLE 	15 3 0
	103	[112]	NEWTABLE 	16 1 0
	104	[115]	LOADK    	17 -21	; "name"
	105	[115]	SETLIST  	16 1 1	; 1
	106	[115]	NEWTABLE 	17 2 0
	107	[117]	LOADK    	18 -31	; "bounds"
	108	[119]	MOVE     	19 13
	109	[119]	SETLIST  	17 2 1	; 1
	110	[119]	NEWTABLE 	18 2 0
	111	[121]	LOADK    	19 -23	; "body"
	112	[123]	MOVE     	20 13
	113	[123]	SETLIST  	18 2 1	; 1
	114	[124]	SETLIST  	15 3 1	; 1
	115	[124]	SETTABLE 	14 -9 15	; "for" -
	116	[125]	NEWTABLE 	15 2 0
	117	[125]	NEWTABLE 	16 2 0
	118	[127]	LOADK    	17 -32	; "cond"
	119	[129]	MOVE     	18 13
	120	[129]	SETLIST  	16 2 1	; 1
	121	[129]	NEWTABLE 	17 2 0
	122	[131]	LOADK    	18 -23	; "body"
	123	[133]	MOVE     	19 13
	124	[133]	SETLIST  	17 2 1	; 1
	125	[134]	SETLIST  	15 2 1	; 1
	126	[134]	SETTABLE 	14 -10 15	; "while" -
	127	[135]	NEWTABLE 	15 2 0
	128	[135]	NEWTABLE 	16 2 0
	129	[137]	LOADK    	17 -29	; "names"
	130	[139]	MOVE     	18 13
	131	[139]	SETLIST  	16 2 1	; 1
	132	[139]	NEWTABLE 	17 2 0
	133	[141]	LOADK    	18 -34	; "values"
	134	[143]	MOVE     	19 13
	135	[143]	SETLIST  	17 2 1	; 1
	136	[144]	SETLIST  	15 2 1	; 1
	137	[144]	SETTABLE 	14 -33 15	; "assign" -
	138	[145]	NEWTABLE 	15 1 0
	139	[145]	NEWTABLE 	16 2 0
	140	[147]	LOADK    	17 -29	; "names"
	141	[149]	MOVE     	18 13
	142	[149]	SETLIST  	16 2 1	; 1
	143	[150]	SETLIST  	15 1 1	; 1
	144	[150]	SETTABLE 	14 -35 15	; "declare" -
	145	[151]	NEWTABLE 	15 2 0
	146	[151]	NEWTABLE 	16 2 0
	147	[153]	LOADK    	17 -32	; "cond"
	148	[155]	MOVE     	18 13
	149	[155]	SETLIST  	16 2 1	; 1
	150	[155]	NEWTABLE 	17 2 0
	151	[157]	LOADK    	18 -36	; "then"
	152	[159]	MOVE     	19 13
	153	[159]	SETLIST  	17 2 1	; 1
	154	[160]	SETLIST  	15 2 1	; 1
	155	[160]	SETTABLE 	14 -12 15	; "if" -
	156	[162]	LOADNIL  	15 15
	157	[174]	CLOSURE  	15 6	; 0x7ff606c06f10
	158	[174]	MOVE     	0 14
	159	[175]	MOVE     	16 15
	160	[175]	CALL     	16 1 2
	161	[176]	LOADNIL  	17 17
	162	[204]	CLOSURE  	17 7	; 0x7ff606c070c0
	163	[204]	MOVE     	0 14
	164	[204]	MOVE     	0 3
	165	[204]	MOVE     	0 13
	166	[205]	LOADNIL  	18 18
	167	[206]	GETGLOBAL	19 -37	; setmetatable
	168	[206]	NEWTABLE 	20 0 6
	169	[215]	CLOSURE  	21 8	; 0x7ff606c08ba0
	170	[215]	SETTABLE 	20 -38 21	; "group" -
	171	[221]	CLOSURE  	21 9	; 0x7ff606c08f10
	172	[221]	SETTABLE 	20 -17 21	; "do" -
	173	[231]	CLOSURE  	21 10	; 0x7ff606c08fa0
	174	[231]	MOVE     	0 18
	175	[231]	SETTABLE 	20 -39 21	; "assign_one" -
	176	[249]	CLOSURE  	21 11	; 0x7ff606c093d0
	177	[249]	SETTABLE 	20 -5 21	; "table" -
	178	[255]	CLOSURE  	21 12	; 0x7ff606c097a0
	179	[255]	SETTABLE 	20 -40 21	; "block_exp" -
	180	[273]	CLOSURE  	21 13	; 0x7ff606c09860
	181	[273]	MOVE     	0 2
	182	[273]	SETTABLE 	20 -41 21	; "chain" -
	183	[274]	NEWTABLE 	21 0 1
	184	[278]	CLOSURE  	22 14	; 0x7ff606c09d70
	185	[278]	MOVE     	0 17
	186	[278]	SETTABLE 	21 -42 22	; "__index" -
	187	[206]	CALL     	19 3 2
	188	[279]	MOVE     	18 19
	189	[280]	GETGLOBAL	19 -37	; setmetatable
	190	[280]	NEWTABLE 	20 0 0
	191	[280]	NEWTABLE 	21 0 1
	192	[301]	CLOSURE  	22 15	; 0x7ff606c09eb0
	193	[301]	MOVE     	0 16
	194	[301]	MOVE     	0 7
	195	[301]	SETTABLE 	21 -42 22	; "__index" -
	196	[280]	CALL     	19 3 2
	197	[303]	LOADNIL  	20 20
	198	[306]	CLOSURE  	20 16	; 0x7ff606c0ace0
	199	[306]	MOVE     	0 19
	200	[306]	MOVE     	0 7
	201	[307]	NEWTABLE 	21 1 0
	202	[309]	LOADK    	22 -43	; "noop"
	203	[309]	SETLIST  	21 1 1	; 1
	204	[310]	NEWTABLE 	22 0 12
	205	[311]	SETTABLE 	22 -44 7	; "ntype" -
	206	[312]	SETTABLE 	22 -45 20	; "smart_node" -
	207	[313]	SETTABLE 	22 -46 18	; "build" -
	208	[314]	SETTABLE 	22 -47 10	; "is_value" -
	209	[315]	SETTABLE 	22 -48 12	; "is_slice" -
	210	[316]	SETTABLE 	22 -49 4	; "manual_return" -
	211	[317]	SETTABLE 	22 -50 5	; "cascading" -
	212	[318]	SETTABLE 	22 -51 11	; "value_is_singular" -
	213	[319]	SETTABLE 	22 -52 9	; "value_can_be_statement" -
	214	[320]	SETTABLE 	22 -53 8	; "mtype" -
	215	[321]	SETTABLE 	22 -54 6	; "terminating" -
	216	[322]	SETTABLE 	22 -55 21	; "NOOP" -
	217	[323]	RETURN   	22 2
	218	[323]	RETURN   	0 1

function <./moonscript/types.lua:27,36> (16 instructions, 64 bytes at 0x7ff606c06c40)
1 param, 3 slots, 0 upvalues, 2 locals, 5 constants, 0 functions
	1	[28]	GETGLOBAL	1 -1	; type
	2	[28]	MOVE     	2 0
	3	[28]	CALL     	1 2 2
	4	[29]	EQ       	0 -2 1	; "nil" -
	5	[29]	JMP      	3	; to 9
	6	[30]	LOADK    	2 -2	; "nil"
	7	[30]	RETURN   	2 2
	8	[30]	JMP      	7	; to 16
	9	[31]	EQ       	0 -3 1	; "table" -
	10	[31]	JMP      	3	; to 14
	11	[32]	GETTABLE 	2 0 -4	; 1
	12	[32]	RETURN   	2 2
	13	[32]	JMP      	2	; to 16
	14	[34]	LOADK    	2 -5	; "value"
	15	[34]	RETURN   	2 2
	16	[36]	RETURN   	0 1

function <./moonscript/types.lua:40,46> (15 instructions, 60 bytes at 0x7ff606c06bc0)
1 param, 4 slots, 1 upvalue, 2 locals, 3 constants, 0 functions
	1	[41]	GETGLOBAL	1 -1	; getmetatable
	2	[41]	MOVE     	2 0
	3	[41]	CALL     	1 2 2
	4	[42]	TEST     	1 0 0
	5	[42]	JMP      	5	; to 11
	6	[42]	GETTABLE 	2 1 -2	; "smart_node"
	7	[42]	TEST     	2 0 0
	8	[42]	JMP      	2	; to 11
	9	[43]	LOADK    	2 -3	; "table"
	10	[43]	RETURN   	2 2
	11	[45]	GETUPVAL 	2 0	; moon_type
	12	[45]	MOVE     	3 0
	13	[45]	TAILCALL 	2 2 0
	14	[45]	RETURN   	2 0
	15	[46]	RETURN   	0 1

function <./moonscript/types.lua:49,54> (17 instructions, 68 bytes at 0x7ff606c07760)
1 param, 3 slots, 1 upvalue, 1 local, 2 constants, 0 functions
	1	[50]	GETUPVAL 	1 0	; ntype
	2	[50]	MOVE     	2 0
	3	[50]	CALL     	1 2 2
	4	[50]	EQ       	1 1 -1	; - "chain"
	5	[50]	JMP      	2	; to 8
	6	[51]	LOADBOOL 	1 0 0
	7	[51]	RETURN   	1 2
	8	[53]	GETUPVAL 	1 0	; ntype
	9	[53]	LEN      	2 0
	10	[53]	GETTABLE 	2 0 2
	11	[53]	CALL     	1 2 2
	12	[53]	EQ       	1 1 -2	; - "call"
	13	[53]	JMP      	1	; to 15
	14	[53]	LOADBOOL 	1 0 1
	15	[53]	LOADBOOL 	1 1 0
	16	[53]	RETURN   	1 2
	17	[54]	RETURN   	0 1

function <./moonscript/types.lua:56,60> (18 instructions, 72 bytes at 0x7ff606c07ff0)
1 param, 6 slots, 0 upvalues, 3 locals, 7 constants, 0 functions
	1	[57]	GETGLOBAL	1 -1	; require
	2	[57]	LOADK    	2 -2	; "moonscript.compile"
	3	[57]	CALL     	1 2 2
	4	[58]	GETGLOBAL	2 -1	; require
	5	[58]	LOADK    	3 -3	; "moonscript.transform"
	6	[58]	CALL     	2 2 2
	7	[59]	GETTABLE 	3 1 -4	; "Block"
	8	[59]	SELF     	3 3 -5	; "is_value"
	9	[59]	MOVE     	5 0
	10	[59]	CALL     	3 3 2
	11	[59]	TEST     	3 0 1
	12	[59]	JMP      	4	; to 17
	13	[59]	GETTABLE 	3 2 -6	; "Value"
	14	[59]	SELF     	3 3 -7	; "can_transform"
	15	[59]	MOVE     	5 0
	16	[59]	CALL     	3 3 2
	17	[59]	RETURN   	3 2
	18	[60]	RETURN   	0 1

function <./moonscript/types.lua:62,64> (15 instructions, 60 bytes at 0x7ff606c08600)
1 param, 3 slots, 0 upvalues, 1 local, 5 constants, 0 functions
	1	[63]	GETGLOBAL	1 -1	; type
	2	[63]	MOVE     	2 0
	3	[63]	CALL     	1 2 2
	4	[63]	EQ       	0 1 -2	; - "table"
	5	[63]	JMP      	7	; to 13
	6	[63]	GETTABLE 	1 0 -3	; 1
	7	[63]	EQ       	0 1 -4	; - "exp"
	8	[63]	JMP      	4	; to 13
	9	[63]	LEN      	1 0
	10	[63]	EQ       	1 1 -5	; - 2
	11	[63]	JMP      	1	; to 13
	12	[63]	LOADBOOL 	1 0 1
	13	[63]	LOADBOOL 	1 1 0
	14	[63]	RETURN   	1 2
	15	[64]	RETURN   	0 1

function <./moonscript/types.lua:66,68> (15 instructions, 60 bytes at 0x7ff606c08800)
1 param, 3 slots, 1 upvalue, 1 local, 2 constants, 0 functions
	1	[67]	GETUPVAL 	1 0	; ntype
	2	[67]	MOVE     	2 0
	3	[67]	CALL     	1 2 2
	4	[67]	EQ       	0 1 -1	; - "chain"
	5	[67]	JMP      	6	; to 12
	6	[67]	GETUPVAL 	1 0	; ntype
	7	[67]	LEN      	2 0
	8	[67]	GETTABLE 	2 0 2
	9	[67]	CALL     	1 2 2
	10	[67]	EQ       	1 1 -2	; - "slice"
	11	[67]	JMP      	1	; to 13
	12	[67]	LOADBOOL 	1 0 1
	13	[67]	LOADBOOL 	1 1 0
	14	[67]	RETURN   	1 2
	15	[68]	RETURN   	0 1

function <./moonscript/types.lua:163,174> (20 instructions, 80 bytes at 0x7ff606c06f10)
0 params, 14 slots, 1 upvalue, 13 locals, 3 constants, 0 functions
	1	[164]	NEWTABLE 	0 0 0
	2	[165]	GETGLOBAL	1 -1	; pairs
	3	[165]	GETUPVAL 	2 0	; node_types
	4	[165]	CALL     	1 2 4
	5	[165]	JMP      	11	; to 17
	6	[166]	NEWTABLE 	6 0 0
	7	[167]	GETGLOBAL	7 -2	; ipairs
	8	[167]	MOVE     	8 5
	9	[167]	CALL     	7 2 4
	10	[167]	JMP      	3	; to 14
	11	[168]	GETTABLE 	12 11 -3	; 1
	12	[169]	ADD      	13 10 -3	; - 1
	13	[169]	SETTABLE 	6 12 13
	14	[167]	TFORLOOP 	7 2
	15	[169]	JMP      	-5	; to 11
	16	[171]	SETTABLE 	0 4 6
	17	[165]	TFORLOOP 	1 2
	18	[171]	JMP      	-13	; to 6
	19	[173]	RETURN   	0 2
	20	[174]	RETURN   	0 1

function <./moonscript/types.lua:177,204> (16 instructions, 64 bytes at 0x7ff606c070c0)
1 param, 5 slots, 3 upvalues, 2 locals, 2 constants, 1 function
	1	[178]	GETUPVAL 	1 0	; node_types
	2	[178]	GETTABLE 	1 1 0
	3	[179]	TEST     	1 0 1
	4	[179]	JMP      	5	; to 10
	5	[180]	GETGLOBAL	2 -1	; error
	6	[180]	LOADK    	3 -2	; "don't know how to build node: "
	7	[180]	MOVE     	4 0
	8	[180]	CONCAT   	3 3 4
	9	[180]	CALL     	2 2 1
	10	[203]	CLOSURE  	2 0	; 0x7ff606c083c0
	11	[203]	MOVE     	0 0
	12	[203]	MOVE     	0 1
	13	[203]	GETUPVAL 	0 1	; unpack
	14	[203]	GETUPVAL 	0 2	; t
	15	[203]	RETURN   	2 2
	16	[204]	RETURN   	0 1

function <./moonscript/types.lua:182,203> (32 instructions, 128 bytes at 0x7ff606c083c0)
1 param, 11 slots, 4 upvalues, 10 locals, 3 constants, 0 functions
	1	[183]	EQ       	0 0 -1	; - nil
	2	[183]	JMP      	2	; to 5
	3	[184]	NEWTABLE 	1 0 0
	4	[184]	MOVE     	0 1
	5	[186]	NEWTABLE 	1 1 0
	6	[188]	GETUPVAL 	2 0	; name
	7	[188]	SETLIST  	1 1 1	; 1
	8	[189]	GETGLOBAL	2 -2	; ipairs
	9	[189]	GETUPVAL 	3 1	; spec
	10	[189]	CALL     	2 2 4
	11	[189]	JMP      	17	; to 29
	12	[190]	GETUPVAL 	7 2	; unpack
	13	[190]	MOVE     	8 6
	14	[190]	CALL     	7 2 3
	15	[191]	LOADNIL  	9 9
	16	[192]	GETTABLE 	10 0 7
	17	[192]	TEST     	10 0 0
	18	[192]	JMP      	2	; to 21
	19	[193]	GETTABLE 	9 0 7
	20	[193]	JMP      	1	; to 22
	21	[195]	MOVE     	9 8
	22	[197]	GETUPVAL 	10 3	; t
	23	[197]	EQ       	0 9 10
	24	[197]	JMP      	2	; to 27
	25	[198]	NEWTABLE 	10 0 0
	26	[198]	MOVE     	9 10
	27	[200]	ADD      	10 5 -3	; - 1
	28	[200]	SETTABLE 	1 10 9
	29	[189]	TFORLOOP 	2 2
	30	[200]	JMP      	-19	; to 12
	31	[202]	RETURN   	1 2
	32	[203]	RETURN   	0 1

function <./moonscript/types.lua:207,215> (10 instructions, 40 bytes at 0x7ff606c08ba0)
1 param, 4 slots, 0 upvalues, 1 local, 2 constants, 0 functions
	1	[208]	EQ       	0 0 -1	; - nil
	2	[208]	JMP      	2	; to 5
	3	[209]	NEWTABLE 	1 0 0
	4	[209]	MOVE     	0 1
	5	[211]	NEWTABLE 	1 2 0
	6	[212]	LOADK    	2 -2	; "group"
	7	[214]	MOVE     	3 0
	8	[214]	SETLIST  	1 2 1	; 1
	9	[214]	RETURN   	1 2
	10	[215]	RETURN   	0 1

function <./moonscript/types.lua:216,221> (6 instructions, 24 bytes at 0x7ff606c08f10)
1 param, 4 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[217]	NEWTABLE 	1 2 0
	2	[218]	LOADK    	2 -1	; "do"
	3	[220]	MOVE     	3 0
	4	[220]	SETLIST  	1 2 1	; 1
	5	[220]	RETURN   	1 2
	6	[221]	RETURN   	0 1

function <./moonscript/types.lua:222,231> (14 instructions, 56 bytes at 0x7ff606c08fa0)
2 params, 6 slots, 1 upvalue, 2 locals, 3 constants, 0 functions
	1	[223]	GETUPVAL 	2 0	; build
	2	[223]	GETTABLE 	2 2 -1	; "assign"
	3	[223]	NEWTABLE 	3 0 2
	4	[224]	NEWTABLE 	4 1 0
	5	[226]	MOVE     	5 0
	6	[226]	SETLIST  	4 1 1	; 1
	7	[226]	SETTABLE 	3 -2 4	; "names" -
	8	[227]	NEWTABLE 	4 1 0
	9	[229]	MOVE     	5 1
	10	[229]	SETLIST  	4 1 1	; 1
	11	[229]	SETTABLE 	3 -3 4	; "values" -
	12	[223]	TAILCALL 	2 2 0
	13	[230]	RETURN   	2 0
	14	[231]	RETURN   	0 1

function <./moonscript/types.lua:232,249> (26 instructions, 104 bytes at 0x7ff606c093d0)
1 param, 9 slots, 0 upvalues, 6 locals, 6 constants, 0 functions
	1	[233]	EQ       	0 0 -1	; - nil
	2	[233]	JMP      	2	; to 5
	3	[234]	NEWTABLE 	1 0 0
	4	[234]	MOVE     	0 1
	5	[236]	LOADK    	1 -2	; 1
	6	[236]	LEN      	2 0
	7	[236]	LOADK    	3 -2	; 1
	8	[236]	FORPREP  	1 11	; to 20
	9	[237]	GETTABLE 	5 0 4
	10	[238]	GETGLOBAL	6 -3	; type
	11	[238]	GETTABLE 	7 5 -2	; 1
	12	[238]	CALL     	6 2 2
	13	[238]	EQ       	0 6 -4	; - "string"
	14	[238]	JMP      	5	; to 20
	15	[239]	NEWTABLE 	6 2 0
	16	[240]	LOADK    	7 -5	; "key_literal"
	17	[242]	GETTABLE 	8 5 -2	; 1
	18	[242]	SETLIST  	6 2 1	; 1
	19	[242]	SETTABLE 	5 -2 6	; 1 -
	20	[236]	FORLOOP  	1 -12	; to 9
	21	[245]	NEWTABLE 	1 2 0
	22	[246]	LOADK    	2 -6	; "table"
	23	[248]	MOVE     	3 0
	24	[248]	SETLIST  	1 2 1	; 1
	25	[248]	RETURN   	1 2
	26	[249]	RETURN   	0 1

function <./moonscript/types.lua:250,255> (6 instructions, 24 bytes at 0x7ff606c097a0)
1 param, 4 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[251]	NEWTABLE 	1 2 0
	2	[252]	LOADK    	2 -1	; "block_exp"
	3	[254]	MOVE     	3 0
	4	[254]	SETLIST  	1 2 1	; 1
	5	[254]	RETURN   	1 2
	6	[255]	RETURN   	0 1

function <./moonscript/types.lua:256,273> (32 instructions, 128 bytes at 0x7ff606c09860)
1 param, 11 slots, 1 upvalue, 8 locals, 8 constants, 0 functions
	1	[257]	GETTABLE 	1 0 -1	; "base"
	2	[257]	TEST     	1 0 1
	3	[257]	JMP      	3	; to 7
	4	[257]	GETGLOBAL	1 -2	; error
	5	[257]	LOADK    	2 -3	; "expecting base property for chain"
	6	[257]	CALL     	1 2 2
	7	[258]	GETGLOBAL	2 -4	; type
	8	[258]	MOVE     	3 1
	9	[258]	CALL     	2 2 2
	10	[258]	EQ       	0 2 -5	; - "string"
	11	[258]	JMP      	5	; to 17
	12	[259]	NEWTABLE 	2 2 0
	13	[260]	LOADK    	3 -6	; "ref"
	14	[262]	MOVE     	4 1
	15	[262]	SETLIST  	2 2 1	; 1
	16	[262]	MOVE     	1 2
	17	[264]	NEWTABLE 	2 2 0
	18	[265]	LOADK    	3 -7	; "chain"
	19	[267]	MOVE     	4 1
	20	[267]	SETLIST  	2 2 1	; 1
	21	[268]	LOADK    	3 -8	; 1
	22	[268]	LEN      	4 0
	23	[268]	LOADK    	5 -8	; 1
	24	[268]	FORPREP  	3 5	; to 30
	25	[269]	GETTABLE 	7 0 6
	26	[270]	GETUPVAL 	8 0	; insert
	27	[270]	MOVE     	9 2
	28	[270]	MOVE     	10 7
	29	[270]	CALL     	8 3 1
	30	[268]	FORLOOP  	3 -6	; to 25
	31	[272]	RETURN   	2 2
	32	[273]	RETURN   	0 1

function <./moonscript/types.lua:275,278> (10 instructions, 40 bytes at 0x7ff606c09d70)
2 params, 5 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[276]	GETUPVAL 	2 0	; make_builder
	2	[276]	MOVE     	3 1
	3	[276]	CALL     	2 2 2
	4	[276]	SETTABLE 	0 1 2
	5	[277]	GETGLOBAL	2 -1	; rawget
	6	[277]	MOVE     	3 0
	7	[277]	MOVE     	4 1
	8	[277]	TAILCALL 	2 3 0
	9	[277]	RETURN   	2 0
	10	[278]	RETURN   	0 1

function <./moonscript/types.lua:281,301> (14 instructions, 56 bytes at 0x7ff606c09eb0)
2 params, 5 slots, 2 upvalues, 4 locals, 4 constants, 2 functions
	1	[282]	GETUPVAL 	2 0	; key_table
	2	[282]	GETTABLE 	2 2 1
	3	[283]	NEWTABLE 	3 0 3
	4	[284]	SETTABLE 	3 -1 -2	; "smart_node" true
	5	[291]	CLOSURE  	4 0	; 0x7ff606c0a2d0
	6	[291]	MOVE     	0 2
	7	[291]	GETUPVAL 	0 1	; ntype
	8	[291]	SETTABLE 	3 -3 4	; "__index" -
	9	[297]	CLOSURE  	4 1	; 0x7ff606c0aaa0
	10	[297]	MOVE     	0 2
	11	[297]	SETTABLE 	3 -4 4	; "__newindex" -
	12	[299]	SETTABLE 	0 1 3
	13	[300]	RETURN   	3 2
	14	[301]	RETURN   	0 1

function <./moonscript/types.lua:285,291> (28 instructions, 112 bytes at 0x7ff606c0a2d0)
2 params, 8 slots, 2 upvalues, 2 locals, 7 constants, 0 functions
	1	[286]	GETUPVAL 	2 0	; index
	2	[286]	GETTABLE 	2 2 1
	3	[286]	TEST     	2 0 0
	4	[286]	JMP      	7	; to 12
	5	[287]	GETGLOBAL	2 -1	; rawget
	6	[287]	MOVE     	3 0
	7	[287]	GETUPVAL 	4 0	; index
	8	[287]	GETTABLE 	4 4 1
	9	[287]	TAILCALL 	2 3 0
	10	[287]	RETURN   	2 0
	11	[287]	JMP      	16	; to 28
	12	[288]	GETGLOBAL	2 -2	; type
	13	[288]	MOVE     	3 1
	14	[288]	CALL     	2 2 2
	15	[288]	EQ       	0 2 -3	; - "string"
	16	[288]	JMP      	11	; to 28
	17	[289]	GETGLOBAL	2 -4	; error
	18	[289]	LOADK    	3 -5	; "unknown key: `"
	19	[289]	MOVE     	4 1
	20	[289]	LOADK    	5 -6	; "` on node type: `"
	21	[289]	GETUPVAL 	6 1	; ntype
	22	[289]	MOVE     	7 0
	23	[289]	CALL     	6 2 2
	24	[289]	LOADK    	7 -7	; "`"
	25	[289]	CONCAT   	3 3 7
	26	[289]	TAILCALL 	2 2 0
	27	[289]	RETURN   	2 0
	28	[291]	RETURN   	0 1

function <./moonscript/types.lua:292,297> (13 instructions, 52 bytes at 0x7ff606c0aaa0)
3 params, 7 slots, 1 upvalue, 3 locals, 1 constant, 0 functions
	1	[293]	GETUPVAL 	3 0	; index
	2	[293]	GETTABLE 	3 3 1
	3	[293]	TEST     	3 0 0
	4	[293]	JMP      	2	; to 7
	5	[294]	GETUPVAL 	3 0	; index
	6	[294]	GETTABLE 	1 3 1
	7	[296]	GETGLOBAL	3 -1	; rawset
	8	[296]	MOVE     	4 0
	9	[296]	MOVE     	5 1
	10	[296]	MOVE     	6 2
	11	[296]	TAILCALL 	3 4 0
	12	[296]	RETURN   	3 0
	13	[297]	RETURN   	0 1

function <./moonscript/types.lua:304,306> (10 instructions, 40 bytes at 0x7ff606c0ace0)
1 param, 6 slots, 2 upvalues, 1 local, 1 constant, 0 functions
	1	[305]	GETGLOBAL	1 -1	; setmetatable
	2	[305]	MOVE     	2 0
	3	[305]	GETUPVAL 	3 0	; smart_node_mt
	4	[305]	GETUPVAL 	4 1	; ntype
	5	[305]	MOVE     	5 0
	6	[305]	CALL     	4 2 2
	7	[305]	GETTABLE 	3 3 4
	8	[305]	TAILCALL 	1 3 0
	9	[305]	RETURN   	1 0
	10	[306]	RETURN   	0 1
