moonscript, accessed from https://luarocks.org/modules/leafo/moonscript
-----------------------
-- BYTECODE -- line_tables.lua:0-2
0001    TNEW     0   0
0002    RET1     0   2

-----------------------
-- BYTECODE -- watchers.lua:4-32
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   1
0004    UGET     3   0      ; list
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0039
0008 => KPRI     6   1
0009    LOOP     7 => 0035
0010    UGET     7   0      ; list
0011    TGETV    7   7   5
0012    KPRI     8   0
0013    UGET     9   1      ; key_fn
0014    ISF          9
0015    JMP     10 => 0021
0016    UGET     9   1      ; key_fn
0017    MOV     10   7
0018    CALL     9   2   2
0019    MOV      8   9
0020    JMP      9 => 0022
0021 => MOV      8   7
0022 => UGET     9   2      ; seen
0023    TGETV    9   9   8
0024    ISF          9
0025    JMP     10 => 0028
0026    KPRI     6   2
0027    JMP      7 => 0035
0028 => UGET     9   2      ; seen
0029    KPRI    10   2
0030    TSETV   10   9   8
0031    MOV      9   7
0032    TSETV    9   0   1
0033    ADDVN    1   1   0  ; 1
0034    KPRI     6   2
0035 => IST          6
0036    JMP      7 => 0038
0037    JMP      2 => 0039
0038 => FORL     2 => 0008
0039 => RET1     0   2

-- BYTECODE -- watchers.lua:2-33
0001    TNEW     2   0
0002    FNEW     3   0      ; watchers.lua:4
0003    UCLO     0 => 0004
0004 => CALLT    3   1

-- BYTECODE -- watchers.lua:35-37
0001    GGET     2   0      ; "tostring"
0002    MOV      3   0
0003    CALL     2   2   2
0004    KSTR     3   1      ; " "
0005    GGET     4   0      ; "tostring"
0006    MOV      5   1
0007    CALL     4   2   2
0008    GGET     5   0      ; "tostring"
0009    ISNEN    0   0      ; 1
0010    JMP      6 => 0013
0011    KSTR     6   2      ; ""
0012    JMP      7 => 0014
0013 => KSTR     6   3      ; "s"
0014 => CALL     5   2   2
0015    CAT      2   2   5
0016    RET1     2   2

-- BYTECODE -- watchers.lua:43-45
0001    GGET     3   0      ; "io"
0002    TGETS    3   3   1  ; "stderr"
0003    MOV      4   3
0004    TGETS    3   3   2  ; "write"
0005    GGET     5   3      ; "tostring"
0006    TGETS    6   0   4  ; "start_msg"
0007    CALL     5   2   2
0008    KSTR     6   5      ; " with "
0009    GGET     7   3      ; "tostring"
0010    MOV      8   1
0011    CALL     7   2   2
0012    KSTR     8   6      ; " ["
0013    GGET     9   3      ; "tostring"
0014    MOV     10   2
0015    CALL     9   2   2
0016    KSTR    10   7      ; "]\n"
0017    CAT      5   5  10
0018    CALLT    3   3

-- BYTECODE -- watchers.lua:49-51
0001    TSETS    1   0   0  ; "file_list"
0002    RET0     0   1

-- BYTECODE -- watchers.lua:56-60
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- watchers.lua:70-93
0001    KPRI     1   0
0002    GGET     2   0      ; "require"
0003    KSTR     3   1      ; "moonscript.cmd.moonc"
0004    CALL     2   2   2
0005    TGETS    1   2   2  ; "parse_dir"
0006    KPRI     2   0
0007    TNEW     3   0
0008    KSHORT   4   1
0009    TGETS    5   0   3  ; "file_list"
0010    KSHORT   6   1
0011    LEN      7   5
0012    KSHORT   8   1
0013    FORI     6 => 0027
0014 => TGETV   10   5   9
0015    KPRI    11   0
0016    TGETB   11  10   1
0017    MOV     12   1
0018    MOV     13  11
0019    CALL    12   2   2
0020    ISNES   12   4      ; ""
0021    JMP     13 => 0023
0022    KSTR    12   5      ; "./"
0023 => MOV     13  12
0024    TSETV   13   3   4
0025    ADDVN    4   4   0  ; 1
0026    FORL     6 => 0014
0027 => MOV      2   3
0028    UGET     3   0      ; remove_dupes
0029    MOV      4   2
0030    CALLT    3   2

-- BYTECODE -- watchers.lua:95-132
0001    UGET     0   0      ; self
0002    MOV      1   0
0003    TGETS    0   0   0  ; "get_dirs"
0004    CALL     0   2   2
0005    UGET     1   0      ; self
0006    MOV      2   1
0007    TGETS    1   1   1  ; "print_start"
0008    KSTR     3   2      ; "inotify"
0009    UGET     4   1      ; plural
0010    LEN      5   0
0011    KSTR     6   3      ; "dir"
0012    CALL     4   0   3
0013    CALLM    1   1   2
0014    TNEW     1   0
0015    GGET     2   4      ; "require"
0016    KSTR     3   2      ; "inotify"
0017    CALL     2   2   2
0018    TGETS    3   2   5  ; "init"
0019    CALL     3   2   1
0020    KSHORT   4   1
0021    LEN      5   0
0022    KSHORT   6   1
0023    FORI     4 => 0033
0024 => TGETV    8   0   7
0025    MOV     10   3
0026    TGETS    9   3   6  ; "addwatch"
0027    MOV     11   8
0028    TGETS   12   2   7  ; "IN_CLOSE_WRITE"
0029    TGETS   13   2   8  ; "IN_MOVED_TO"
0030    CALL     9   2   5
0031    TSETV    8   1   9
0032    FORL     4 => 0024
0033 => LOOP     4 => 0073
0034    MOV      5   3
0035    TGETS    4   3   9  ; "read"
0036    CALL     4   2   2
0037    IST          4
0038    JMP      5 => 0040
0039    JMP      4 => 0073
0040 => KSHORT   5   1
0041    LEN      6   4
0042    KSHORT   7   1
0043    FORI     5 => 0072
0044 => KPRI     9   1
0045    LOOP    10 => 0068
0046    TGETV   10   4   8
0047    TGETS   11  10  10  ; "name"
0048    MOV     13  11
0049    TGETS   12  11  11  ; "match"
0050    KSTR    14  12      ; "%.moon$"
0051    CALL    12   2   3
0052    IST         12
0053    JMP     12 => 0056
0054    KPRI     9   2
0055    JMP     10 => 0068
0056 => TGETS   12  10  13  ; "wd"
0057    TGETV   12   1  12
0058    ISEQS   12  14      ; "./"
0059    JMP     13 => 0063
0060    MOV     13  12
0061    MOV     14  11
0062    CAT     11  13  14
0063 => GGET    13  15      ; "coroutine"
0064    TGETS   13  13  16  ; "yield"
0065    MOV     14  11
0066    CALL    13   1   2
0067    KPRI     9   2
0068 => IST          9
0069    JMP     10 => 0071
0070    JMP      5 => 0033
0071 => FORL     5 => 0044
0072 => JMP      4 => 0033
0073 => RET0     0   1

-- BYTECODE -- watchers.lua:94-133
0001    GGET     1   0      ; "coroutine"
0002    TGETS    1   1   1  ; "wrap"
0003    FNEW     2   2      ; watchers.lua:95
0004    UCLO     0 => 0005
0005 => CALLT    1   2

-- BYTECODE -- watchers.lua:138-140
0001    UGET     1   0      ; _class_0
0002    TGETS    1   1   0  ; "__parent"
0003    TGETS    1   1   1  ; "__init"
0004    MOV      2   0
0005    VARG     3   0   1
0006    CALLMT   1   1

-- BYTECODE -- watchers.lua:145-155
0001    GGET     2   0      ; "rawget"
0002    UGET     3   0      ; _base_0
0003    MOV      4   1
0004    CALL     2   2   3
0005    ISNEP    2   0
0006    JMP      3 => 0016
0007    GGET     3   0      ; "rawget"
0008    MOV      4   0
0009    KSTR     5   1      ; "__parent"
0010    CALL     3   2   3
0011    ISF          3
0012    JMP      4 => 0017
0013    TGETV    4   3   1
0014    RET1     4   2
0015    JMP      3 => 0017
0016 => RET1     2   2
0017 => RET0     0   1

-- BYTECODE -- watchers.lua:156-160
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- watchers.lua:165-167
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "inotify"
0003    CALLT    0   2

-- BYTECODE -- watchers.lua:164-168
0001    GGET     1   0      ; "pcall"
0002    FNEW     2   1      ; watchers.lua:165
0003    UCLO     0 => 0004
0004 => CALLT    1   2

-- BYTECODE -- watchers.lua:182-184
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "socket"
0003    CALL     0   2   2
0004    TGETS    0   0   2  ; "sleep"
0005    USETV    0   0      ; sleep
0006    RET0     0   1

-- BYTECODE -- watchers.lua:180-190
0001    KPRI     1   0
0002    GGET     2   0      ; "pcall"
0003    FNEW     3   1      ; watchers.lua:182
0004    CALL     2   1   2
0005    IST          1
0006    JMP      2 => 0011
0007    GGET     2   2      ; "require"
0008    KSTR     3   3      ; "moonscript"
0009    CALL     2   2   2
0010    TGETS    1   2   4  ; "_sleep"
0011 => IST          1
0012    JMP      2 => 0016
0013    GGET     2   5      ; "error"
0014    KSTR     3   6      ; "Missing sleep function; install LuaSocke"~
0015    CALL     2   1   2
0016 => UCLO     0 => 0017
0017 => RET1     1   2

-- BYTECODE -- watchers.lua:192-229
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "lfs"
0003    CALL     0   2   2
0004    UGET     1   0      ; self
0005    MOV      2   1
0006    TGETS    1   1   2  ; "get_sleep_func"
0007    CALL     1   2   2
0008    UGET     2   0      ; self
0009    MOV      3   2
0010    TGETS    2   2   3  ; "print_start"
0011    KSTR     4   4      ; "polling"
0012    UGET     5   1      ; plural
0013    UGET     6   0      ; self
0014    TGETS    6   6   5  ; "file_list"
0015    LEN      6   6
0016    KSTR     7   6      ; "files"
0017    CALL     5   0   3
0018    CALLM    2   1   2
0019    TNEW     2   0
0020 => LOOP     3 => 0070
0021    UGET     3   0      ; self
0022    TGETS    3   3   5  ; "file_list"
0023    KSHORT   4   1
0024    LEN      5   3
0025    KSHORT   6   1
0026    FORI     4 => 0065
0027 => KPRI     8   1
0028    LOOP     9 => 0061
0029    TGETV    9   3   7
0030    KPRI    10   0
0031    TGETB   10   9   1
0032    TGETS   11   0   7  ; "attributes"
0033    MOV     12  10
0034    KSTR    13   8      ; "modification"
0035    CALL    11   2   3
0036    GGET    12   9      ; "print"
0037    MOV     13  10
0038    MOV     14  11
0039    CALL    12   1   3
0040    IST         11
0041    JMP     12 => 0046
0042    KPRI    12   0
0043    TSETV   12   2  10
0044    KPRI     8   2
0045    JMP      9 => 0061
0046 => TGETV   12   2  10
0047    IST         12
0048    JMP     12 => 0052
0049    TSETV   11   2  10
0050    KPRI     8   2
0051    JMP      9 => 0061
0052 => TGETV   12   2  10
0053    ISGE    12  11
0054    JMP     12 => 0060
0055    TSETV   11   2  10
0056    GGET    12  10      ; "coroutine"
0057    TGETS   12  12  11  ; "yield"
0058    MOV     13  10
0059    CALL    12   1   2
0060 => KPRI     8   2
0061 => IST          8
0062    JMP      9 => 0064
0063    JMP      4 => 0065
0064 => FORL     4 => 0027
0065 => MOV      4   1
0066    UGET     5   0      ; self
0067    TGETS    5   5  12  ; "polling_rate"
0068    CALL     4   1   2
0069    JMP      3 => 0020
0070 => RET0     0   1

-- BYTECODE -- watchers.lua:191-230
0001    GGET     1   0      ; "coroutine"
0002    TGETS    1   1   1  ; "wrap"
0003    FNEW     2   2      ; watchers.lua:192
0004    UCLO     0 => 0005
0005 => CALLT    1   2

-- BYTECODE -- watchers.lua:235-237
0001    UGET     1   0      ; _class_0
0002    TGETS    1   1   0  ; "__parent"
0003    TGETS    1   1   1  ; "__init"
0004    MOV      2   0
0005    VARG     3   0   1
0006    CALLMT   1   1

-- BYTECODE -- watchers.lua:242-252
0001    GGET     2   0      ; "rawget"
0002    UGET     3   0      ; _base_0
0003    MOV      4   1
0004    CALL     2   2   3
0005    ISNEP    2   0
0006    JMP      3 => 0016
0007    GGET     3   0      ; "rawget"
0008    MOV      4   0
0009    KSTR     5   1      ; "__parent"
0010    CALL     3   2   3
0011    ISF          3
0012    JMP      4 => 0017
0013    TGETV    4   3   1
0014    RET1     4   2
0015    JMP      3 => 0017
0016 => RET1     2   2
0017 => RET0     0   1

-- BYTECODE -- watchers.lua:253-257
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- watchers.lua:0-270
0001    KPRI     0   0
0002    FNEW     0   0      ; watchers.lua:2
0003    KPRI     1   0
0004    FNEW     1   1      ; watchers.lua:35
0005    KNIL     2   3
0006    TDUP     4   2
0007    FNEW     5   3      ; watchers.lua:43
0008    TSETS    5   4   4  ; "print_start"
0009    TSETS    4   4   5  ; "__index"
0010    GGET     5   6      ; "setmetatable"
0011    TDUP     6   8
0012    FNEW     7   7      ; watchers.lua:49
0013    TSETS    7   6   9  ; "__init"
0014    TSETS    4   6  10  ; "__base"
0015    TDUP     7  11
0016    TSETS    4   7   5  ; "__index"
0017    FNEW     8  12      ; watchers.lua:56
0018    TSETS    8   7  13  ; "__call"
0019    CALL     5   2   3
0020    MOV      3   5
0021    TSETS    3   4  14  ; "__class"
0022    MOV      2   3
0023    UCLO     3 => 0024
0024 => KNIL     3   4
0025    MOV      5   2
0026    TDUP     6  16
0027    FNEW     7  15      ; watchers.lua:70
0028    TSETS    7   6  17  ; "get_dirs"
0029    FNEW     7  18      ; watchers.lua:94
0030    TSETS    7   6  19  ; "each_update"
0031    TSETS    6   6   5  ; "__index"
0032    GGET     7   6      ; "setmetatable"
0033    MOV      8   6
0034    TGETS    9   5  10  ; "__base"
0035    CALL     7   1   3
0036    GGET     7   6      ; "setmetatable"
0037    TDUP     8  21
0038    FNEW     9  20      ; watchers.lua:138
0039    TSETS    9   8   9  ; "__init"
0040    TSETS    6   8  10  ; "__base"
0041    TSETS    5   8  22  ; "__parent"
0042    TDUP     9  24
0043    FNEW    10  23      ; watchers.lua:145
0044    TSETS   10   9   5  ; "__index"
0045    FNEW    10  25      ; watchers.lua:156
0046    TSETS   10   9  13  ; "__call"
0047    CALL     7   2   3
0048    MOV      4   7
0049    TSETS    4   6  14  ; "__class"
0050    MOV      7   4
0051    FNEW     8  27      ; watchers.lua:164
0052    TSETS    8   7  26  ; "available"
0053    TGETS    8   5  28  ; "__inherited"
0054    ISF          8
0055    JMP      9 => 0060
0056    TGETS    8   5  28  ; "__inherited"
0057    MOV      9   5
0058    MOV     10   4
0059    CALL     8   1   3
0060 => MOV      3   4
0061    UCLO     4 => 0062
0062 => KNIL     4   5
0063    MOV      6   2
0064    TDUP     7  29
0065    FNEW     8  30      ; watchers.lua:180
0066    TSETS    8   7  31  ; "get_sleep_func"
0067    FNEW     8  32      ; watchers.lua:191
0068    TSETS    8   7  19  ; "each_update"
0069    TSETS    7   7   5  ; "__index"
0070    GGET     8   6      ; "setmetatable"
0071    MOV      9   7
0072    TGETS   10   6  10  ; "__base"
0073    CALL     8   1   3
0074    GGET     8   6      ; "setmetatable"
0075    TDUP     9  34
0076    FNEW    10  33      ; watchers.lua:235
0077    TSETS   10   9   9  ; "__init"
0078    TSETS    7   9  10  ; "__base"
0079    TSETS    6   9  22  ; "__parent"
0080    TDUP    10  36
0081    FNEW    11  35      ; watchers.lua:242
0082    TSETS   11  10   5  ; "__index"
0083    FNEW    11  37      ; watchers.lua:253
0084    TSETS   11  10  13  ; "__call"
0085    CALL     8   2   3
0086    MOV      5   8
0087    TSETS    5   7  14  ; "__class"
0088    TGETS    8   6  28  ; "__inherited"
0089    ISF          8
0090    JMP      9 => 0095
0091    TGETS    8   6  28  ; "__inherited"
0092    MOV      9   6
0093    MOV     10   5
0094    CALL     8   1   3
0095 => MOV      4   5
0096    UCLO     5 => 0097
0097 => TDUP     5  38
0098    TSETS    2   5  39  ; "Watcher"
0099    TSETS    4   5  40  ; "SleepWatcher"
0100    TSETS    3   5  41  ; "InotifyWacher"
0101    UCLO     0 => 0102
0102 => RET1     5   2

-----------------------
-- BYTECODE -- moonc.lua:11-20
0001    UGET     1   0      ; split
0002    MOV      2   0
0003    UGET     3   1      ; dirsep
0004    CALL     1   2   3
0005    KPRI     2   0
0006    KSHORT   3   1
0007    LEN      4   1
0008    KSHORT   5   1
0009    FORI     3 => 0031
0010 => TGETV    7   1   6
0011    ISF          2
0012    JMP      8 => 0025
0013    GGET     8   0      ; "tostring"
0014    MOV      9   2
0015    CALL     8   2   2
0016    GGET     9   0      ; "tostring"
0017    UGET    10   1      ; dirsep
0018    CALL     9   2   2
0019    GGET    10   0      ; "tostring"
0020    MOV     11   7
0021    CALL    10   2   2
0022    CAT      8   8  10
0023    ISTC     2   8
0024    JMP      9 => 0026
0025 => MOV      2   7
0026 => UGET     8   2      ; lfs
0027    TGETS    8   8   1  ; "mkdir"
0028    MOV      9   2
0029    CALL     8   1   2
0030    FORL     3 => 0010
0031 => UGET     3   2      ; lfs
0032    TGETS    3   3   2  ; "attributes"
0033    MOV      4   0
0034    KSTR     5   3      ; "mode"
0035    CALLT    3   3

-- BYTECODE -- moonc.lua:21-23
0001    MOV      2   0
0002    TGETS    1   0   0  ; "match"
0003    KSTR     3   1      ; "^(.-)["
0004    GGET     4   2      ; "tostring"
0005    UGET     5   0      ; dirsep_chars
0006    CALL     4   2   2
0007    KSTR     5   3      ; "]*$"
0008    CAT      3   3   5
0009    CALL     1   2   3
0010    UGET     2   1      ; dirsep
0011    CAT      1   1   2
0012    RET1     1   2

-- BYTECODE -- moonc.lua:24-26
0001    MOV      2   0
0002    TGETS    1   0   0  ; "match"
0003    KSTR     3   1      ; "^(.-)[^"
0004    GGET     4   2      ; "tostring"
0005    UGET     5   0      ; dirsep_chars
0006    CALL     4   2   2
0007    KSTR     5   3      ; "]*$"
0008    CAT      3   3   5
0009    CALL     1   2   3
0010    RET1     1   2

-- BYTECODE -- moonc.lua:27-29
0001    MOV      2   0
0002    TGETS    1   0   0  ; "match"
0003    KSTR     3   1      ; "^.-([^"
0004    GGET     4   2      ; "tostring"
0005    UGET     5   0      ; dirsep_chars
0006    CALL     4   2   2
0007    KSTR     5   3      ; "]*)$"
0008    CAT      3   3   5
0009    CALL     1   2   3
0010    RET1     1   2

-- BYTECODE -- moonc.lua:30-36
0001    MOV      2   0
0002    TGETS    1   0   0  ; "gsub"
0003    KSTR     3   1      ; "%.moon$"
0004    KSTR     4   2      ; ".lua"
0005    CALL     1   2   4
0006    ISNEV    1   0
0007    JMP      2 => 0011
0008    MOV      2   0
0009    KSTR     3   2      ; ".lua"
0010    CAT      1   2   3
0011 => RET1     1   2

-- BYTECODE -- moonc.lua:37-39
0001    KSTR     1   0      ; "%.3fms"
0002    MOV      2   1
0003    TGETS    1   1   1  ; "format"
0004    MULVN    3   0   0  ; 1000
0005    CALLT    1   3

-- BYTECODE -- moonc.lua:44-46
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "socket"
0003    CALL     0   2   2
0004    USETV    0   0      ; socket
0005    RET0     0   1

-- BYTECODE -- moonc.lua:42-56
0001    UGET     0   0      ; socket
0002    ISNEP    0   0
0003    JMP      0 => 0011
0004    GGET     0   0      ; "pcall"
0005    FNEW     1   1      ; moonc.lua:44
0006    CALL     0   1   2
0007    UGET     0   0      ; socket
0008    IST          0
0009    JMP      0 => 0011
0010    USETP    0   1      ; socket
0011 => UGET     0   0      ; socket
0012    ISF          0
0013    JMP      1 => 0019
0014    UGET     0   0      ; socket
0015    TGETS    0   0   2  ; "gettime"
0016    UCLO     0 => 0017
0017 => CALLT    0   1
0018    JMP      0 => 0023
0019 => KPRI     0   0
0020    KSTR     1   3      ; "LuaSocket needed for benchmark"
0021    UCLO     0 => 0022
0022 => RET      0   3
0023 => RET0     0   1

-- BYTECODE -- moonc.lua:58-108
0001    ISNEP    1   0
0002    JMP      2 => 0004
0003    TNEW     1   0
0004 => GGET     2   0      ; "require"
0005    KSTR     3   1      ; "moonscript.parse"
0006    CALL     2   2   2
0007    GGET     3   0      ; "require"
0008    KSTR     4   2      ; "moonscript.compile"
0009    CALL     3   2   2
0010    KPRI     4   0
0011    TGETS    5   1   3  ; "benchmark"
0012    ISF          5
0013    JMP      6 => 0019
0014    GGET     5   4      ; "assert"
0015    UGET     6   0      ; gettime
0016    CALL     6   0   1
0017    CALLM    5   2   0
0018    MOV      4   5
0019 => TGETS    5   2   5  ; "string"
0020    MOV      6   0
0021    CALL     5   3   2
0022    IST          5
0023    JMP      7 => 0027
0024    KPRI     7   0
0025    MOV      8   6
0026    RET      7   3
0027 => ISF          4
0028    JMP      7 => 0032
0029    UGET     7   0      ; gettime
0030    CALL     7   2   1
0031    SUBVV    4   7   4
0032 => TGETS    7   1   6  ; "show_parse_tree"
0033    ISF          7
0034    JMP      8 => 0043
0035    GGET     7   0      ; "require"
0036    KSTR     8   7      ; "moonscript.dump"
0037    CALL     7   2   2
0038    TGETS    8   7   8  ; "tree"
0039    MOV      9   5
0040    CALL     8   1   2
0041    KPRI     8   2
0042    RET1     8   2
0043 => KPRI     7   0
0044    TGETS    8   1   3  ; "benchmark"
0045    ISF          8
0046    JMP      9 => 0050
0047    UGET     8   0      ; gettime
0048    CALL     8   2   1
0049    MOV      7   8
0050 => TGETS    8   3   8  ; "tree"
0051    MOV      9   5
0052    CALL     8   4   2
0053    IST          8
0054    JMP     11 => 0062
0055    KPRI    11   0
0056    TGETS   12   3   9  ; "format_error"
0057    MOV     13   9
0058    MOV     14  10
0059    MOV     15   0
0060    CALL    12   0   4
0061    RETM    11   1
0062 => ISF          7
0063    JMP     11 => 0067
0064    UGET    11   0      ; gettime
0065    CALL    11   2   1
0066    SUBVV    7  11   7
0067 => TGETS   11   1  10  ; "show_posmap"
0068    ISF         11
0069    JMP     12 => 0090
0070    KPRI    11   0
0071    GGET    12   0      ; "require"
0072    KSTR    13  11      ; "moonscript.util"
0073    CALL    12   2   2
0074    TGETS   11  12  12  ; "debug_posmap"
0075    GGET    12  13      ; "print"
0076    KSTR    13  14      ; "Pos"
0077    KSTR    14  15      ; "Lua"
0078    KSTR    15  16      ; ">>"
0079    KSTR    16  17      ; "Moon"
0080    CALL    12   1   5
0081    GGET    12  13      ; "print"
0082    MOV     13  11
0083    MOV     14   9
0084    MOV     15   0
0085    MOV     16   8
0086    CALL    13   0   4
0087    CALLM   12   1   0
0088    KPRI    12   2
0089    RET1    12   2
0090 => TGETS   11   1   3  ; "benchmark"
0091    ISF         11
0092    JMP     12 => 0119
0093    GGET    11  13      ; "print"
0094    GGET    12  18      ; "table"
0095    TGETS   12  12  19  ; "concat"
0096    TDUP    13  24
0097    TGETS   14   1  20  ; "fname"
0098    IST         14
0099    JMP     15 => 0101
0100    KSTR    14  21      ; "stdin"
0101 => TSETB   14  13   1
0102    KSTR    14  22      ; "Parse time  \t"
0103    UGET    15   1      ; format_time
0104    MOV     16   4
0105    CALL    15   2   2
0106    CAT     14  14  15
0107    TSETB   14  13   2
0108    KSTR    14  23      ; "Compile time\t"
0109    UGET    15   1      ; format_time
0110    MOV     16   7
0111    CALL    15   2   2
0112    CAT     14  14  15
0113    TSETB   14  13   3
0114    KSTR    14  25      ; "\n"
0115    CALL    12   0   3
0116    CALLM   11   1   0
0117    KPRI    11   2
0118    RET1    11   2
0119 => RET1     8   2

-- BYTECODE -- moonc.lua:109-119
0001    UGET     2   0      ; mkdir
0002    UGET     3   1      ; parse_dir
0003    MOV      4   0
0004    CALL     3   0   2
0005    CALLM    2   1   0
0006    GGET     2   0      ; "io"
0007    TGETS    2   2   1  ; "open"
0008    MOV      3   0
0009    KSTR     4   2      ; "w"
0010    CALL     2   3   3
0011    IST          2
0012    JMP      4 => 0016
0013    KPRI     4   0
0014    MOV      5   3
0015    RET      4   3
0016 => GGET     4   3      ; "assert"
0017    MOV      6   2
0018    TGETS    5   2   4  ; "write"
0019    MOV      7   1
0020    CALL     5   0   3
0021    CALLM    4   1   0
0022    GGET     4   3      ; "assert"
0023    MOV      6   2
0024    TGETS    5   2   4  ; "write"
0025    KSTR     7   5      ; "\n"
0026    CALL     5   0   3
0027    CALLM    4   1   0
0028    MOV      5   2
0029    TGETS    4   2   6  ; "close"
0030    CALL     4   1   2
0031    KSTR     4   7      ; "build"
0032    RET1     4   2

-- BYTECODE -- moonc.lua:120-142
0001    ISNEP    2   0
0002    JMP      3 => 0004
0003    TNEW     2   0
0004 => GGET     3   0      ; "io"
0005    TGETS    3   3   1  ; "open"
0006    MOV      4   0
0007    CALL     3   2   2
0008    IST          3
0009    JMP      4 => 0013
0010    KPRI     4   0
0011    KSTR     5   2      ; "Can't find file"
0012    RET      4   3
0013 => GGET     4   3      ; "assert"
0014    MOV      6   3
0015    TGETS    5   3   4  ; "read"
0016    KSTR     7   5      ; "*a"
0017    CALL     5   0   3
0018    CALLM    4   2   0
0019    MOV      6   3
0020    TGETS    5   3   6  ; "close"
0021    CALL     5   1   2
0022    UGET     5   0      ; compile_file_text
0023    MOV      6   4
0024    MOV      7   2
0025    CALL     5   3   3
0026    IST          5
0027    JMP      7 => 0031
0028    KPRI     7   0
0029    MOV      8   6
0030    RET      7   3
0031 => ISNEP    5   2
0032    JMP      7 => 0035
0033    KPRI     7   2
0034    RET1     7   2
0035 => TGETS    7   2   7  ; "print"
0036    ISF          7
0037    JMP      8 => 0043
0038    GGET     7   7      ; "print"
0039    MOV      8   5
0040    CALL     7   1   2
0041    KPRI     7   2
0042    RET1     7   2
0043 => UGET     7   1      ; write_file
0044    MOV      8   1
0045    MOV      9   5
0046    CALLT    7   3

-- BYTECODE -- moonc.lua:143-150
0001    MOV      2   0
0002    TGETS    1   0   0  ; "sub"
0003    KSHORT   3   1
0004    KSHORT   4   1
0005    CALL     1   2   4
0006    UGET     2   0      ; dirsep
0007    ISNES    2   1      ; "\"
0008    JMP      2 => 0025
0009    ISEQS    1   2      ; "/"
0010    JMP      2 => 0022
0011    ISEQS    1   1      ; "\"
0012    JMP      2 => 0022
0013    MOV      3   0
0014    TGETS    2   0   0  ; "sub"
0015    KSHORT   4   2
0016    KSHORT   5   1
0017    CALL     2   2   4
0018    ISEQS    2   3      ; ":"
0019    JMP      2 => 0022
0020    KPRI     2   1
0021    JMP      3 => 0023
0022 => KPRI     2   2
0023 => RET1     2   2
0024    JMP      2 => 0032
0025 => UGET     2   0      ; dirsep
0026    ISEQV    1   2
0027    JMP      2 => 0030
0028    KPRI     2   1
0029    JMP      3 => 0031
0030 => KPRI     2   2
0031 => RET1     2   2
0032 => RET0     0   1

-- BYTECODE -- moonc.lua:151-178
0001    ISNEP    1   0
0002    JMP      3 => 0004
0003    KPRI     1   0
0004 => ISNEP    2   0
0005    JMP      3 => 0007
0006    KPRI     2   0
0007 => UGET     3   0      ; convert_path
0008    MOV      4   0
0009    CALL     3   2   2
0010    ISF          1
0011    JMP      4 => 0016
0012    UGET     4   1      ; normalize_dir
0013    MOV      5   1
0014    CALL     4   2   2
0015    MOV      1   4
0016 => ISF          2
0017    JMP      4 => 0048
0018    ISF          1
0019    JMP      4 => 0048
0020    MOV      5   2
0021    TGETS    4   2   0  ; "match"
0022    KSTR     6   1      ; "^(.-)[^"
0023    GGET     7   2      ; "tostring"
0024    UGET     8   2      ; dirsep_chars
0025    CALL     7   2   2
0026    KSTR     8   3      ; "]*["
0027    GGET     9   2      ; "tostring"
0028    UGET    10   2      ; dirsep_chars
0029    CALL     9   2   2
0030    KSTR    10   4      ; "]?$"
0031    CAT      6   6  10
0032    CALL     4   2   3
0033    ISF          4
0034    JMP      5 => 0048
0035    MOV      6   3
0036    TGETS    5   3   5  ; "find"
0037    MOV      7   4
0038    KSHORT   8   1
0039    KPRI     9   2
0040    CALL     5   3   5
0041    ISNEN    5   0      ; 1
0042    JMP      7 => 0048
0043    MOV      8   3
0044    TGETS    7   3   6  ; "sub"
0045    ADDVN    9   6   0  ; 1
0046    CALL     7   2   3
0047    MOV      3   7
0048 => ISF          1
0049    JMP      4 => 0062
0050    UGET     4   3      ; is_abs_path
0051    MOV      5   3
0052    CALL     4   2   2
0053    ISF          4
0054    JMP      5 => 0059
0055    UGET     4   4      ; parse_file
0056    MOV      5   3
0057    CALL     4   2   2
0058    MOV      3   4
0059 => MOV      4   1
0060    MOV      5   3
0061    CAT      3   4   5
0062 => RET1     3   2

-- BYTECODE -- moonc.lua:0-192
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "lfs"
0003    CALL     0   2   2
0004    KPRI     1   0
0005    GGET     2   0      ; "require"
0006    KSTR     3   2      ; "moonscript.util"
0007    CALL     2   2   2
0008    TGETS    1   2   3  ; "split"
0009    KNIL     2  15
0010    GGET    16   4      ; "package"
0011    TGETS   16  16   5  ; "config"
0012    MOV     17  16
0013    TGETS   16  16   6  ; "sub"
0014    KSHORT  18   1
0015    KSHORT  19   1
0016    CALL    16   2   4
0017    MOV      2  16
0018    ISNES    2   7      ; "\"
0019    JMP     16 => 0022
0020    KSTR     3   8      ; "\/"
0021    JMP     16 => 0023
0022 => MOV      3   2
0023 => FNEW     4   9      ; moonc.lua:11
0024    FNEW     5  10      ; moonc.lua:21
0025    FNEW     6  11      ; moonc.lua:24
0026    FNEW     7  12      ; moonc.lua:27
0027    FNEW     8  13      ; moonc.lua:30
0028    FNEW     9  14      ; moonc.lua:37
0029    KPRI    16   0
0030    FNEW    10  15      ; moonc.lua:42
0031    UCLO    16 => 0032
0032 => FNEW    11  16      ; moonc.lua:58
0033    FNEW    12  17      ; moonc.lua:109
0034    FNEW    13  18      ; moonc.lua:120
0035    FNEW    14  19      ; moonc.lua:143
0036    FNEW    15  20      ; moonc.lua:151
0037    TDUP    16  21
0038    TSETS    2  16  22  ; "dirsep"
0039    TSETS    4  16  23  ; "mkdir"
0040    TSETS    5  16  24  ; "normalize_dir"
0041    TSETS    6  16  25  ; "parse_dir"
0042    TSETS    7  16  26  ; "parse_file"
0043    TSETS    8  16  27  ; "convert_path"
0044    TSETS   10  16  28  ; "gettime"
0045    TSETS    9  16  29  ; "format_time"
0046    TSETS   15  16  30  ; "path_to_target"
0047    TSETS   11  16  31  ; "compile_file_text"
0048    TSETS   13  16  32  ; "compile_and_write"
0049    UCLO     0 => 0050
0050 => RET1    16   2

-----------------------
-- BYTECODE -- coverage.lua:2-7
0001    ISNEP    0   0
0002    JMP      1 => 0004
0003    KSTR     0   0      ; ""
0004 => GGET     1   1      ; "io"
0005    TGETS    1   1   2  ; "stderr"
0006    MOV      2   1
0007    TGETS    1   1   3  ; "write"
0008    MOV      3   0
0009    KSTR     4   4      ; "\n"
0010    CAT      3   3   4
0011    CALLT    1   3

-- BYTECODE -- coverage.lua:14-16
0001    KSHORT   1   0
0002    RET1     1   2

-- BYTECODE -- coverage.lua:11-21
0001    GGET     2   0      ; "setmetatable"
0002    TNEW     3   0
0003    TDUP     4   2
0004    FNEW     5   1      ; coverage.lua:14
0005    TSETS    5   4   3  ; "__index"
0006    CALL     2   2   3
0007    TSETV    2   0   1
0008    UCLO     0 => 0009
0009 => RET1     2   2

-- BYTECODE -- coverage.lua:9-23
0001    GGET     0   0      ; "setmetatable"
0002    TNEW     1   0
0003    TDUP     2   2
0004    FNEW     3   1      ; coverage.lua:11
0005    TSETS    3   2   3  ; "__index"
0006    UCLO     0 => 0007
0007 => CALLT    0   3

-- BYTECODE -- coverage.lua:25-42
0001    TNEW     2   0
0002    KSHORT   3   0
0003    KSHORT   4   1
0004    MOV      6   0
0005    TGETS    5   0   0  ; "gmatch"
0006    KSTR     7   1      ; "."
0007    CALL     5   4   3
0008    JMP      8 => 0020
0009 => GGET     9   2      ; "rawget"
0010    MOV     10   1
0011    MOV     11   3
0012    CALL     9   2   3
0013    ISF          9
0014    JMP     10 => 0016
0015    TSETV    9   2   4
0016 => ISNES    8   3      ; "\n"
0017    JMP      9 => 0019
0018    ADDVN    4   4   0  ; 1
0019 => ADDVN    3   3   0  ; 1
0020 => ITERC    8   2   3
0021    ITERL    8 => 0009
0022    RET1     2   2

-- BYTECODE -- coverage.lua:44-59
0001    MOV      3   0
0002    TGETS    2   0   0  ; "gsub"
0003    KSTR     4   1      ; "^@"
0004    KSTR     5   2      ; ""
0005    CALL     2   2   4
0006    MOV      0   2
0007    GGET     2   3      ; "assert"
0008    GGET     3   4      ; "io"
0009    TGETS    3   3   5  ; "open"
0010    MOV      4   0
0011    CALL     3   0   2
0012    CALLM    2   2   0
0013    MOV      4   2
0014    TGETS    3   2   6  ; "read"
0015    KSTR     5   7      ; "*a"
0016    CALL     3   2   3
0017    MOV      5   2
0018    TGETS    4   2   8  ; "close"
0019    CALL     4   1   2
0020    UGET     4   0      ; position_to_lines
0021    MOV      5   3
0022    MOV      6   1
0023    CALL     4   2   3
0024    UGET     5   1      ; log
0025    KSTR     6   9      ; "------| @"
0026    GGET     7  10      ; "tostring"
0027    MOV      8   0
0028    CALL     7   2   2
0029    CAT      6   6   7
0030    CALL     5   1   2
0031    KSHORT   5   1
0032    MOV      6   3
0033    KSTR     7  11      ; "\n"
0034    CAT      6   6   7
0035    MOV      7   6
0036    TGETS    6   6  12  ; "gmatch"
0037    KSTR     8  13      ; "(.-)\n"
0038    CALL     6   4   3
0039    JMP      9 => 0065
0040 => KSTR    10  14      ; "% 5d"
0041    MOV     11  10
0042    TGETS   10  10  15  ; "format"
0043    MOV     12   5
0044    CALL    10   2   3
0045    TGETV   11   4   5
0046    ISF         11
0047    JMP     12 => 0050
0048    KSTR    11  16      ; "*"
0049    JMP     12 => 0051
0050 => KSTR    11  17      ; " "
0051 => UGET    12   1      ; log
0052    GGET    13  10      ; "tostring"
0053    MOV     14  11
0054    CALL    13   2   2
0055    GGET    14  10      ; "tostring"
0056    MOV     15  10
0057    CALL    14   2   2
0058    KSTR    15  18      ; "| "
0059    GGET    16  10      ; "tostring"
0060    MOV     17   9
0061    CALL    16   2   2
0062    CAT     13  13  16
0063    CALL    12   1   2
0064    ADDVN    5   5   0  ; 1
0065 => ITERC    9   2   3
0066    ITERL    9 => 0040
0067    UGET     6   1      ; log
0068    CALLT    6   1

-- BYTECODE -- coverage.lua:64-66
0001    UGET     1   0      ; create_counter
0002    CALL     1   2   1
0003    TSETS    1   0   0  ; "line_counts"
0004    RET0     0   1

-- BYTECODE -- coverage.lua:71-73
0001    UGET     0   0      ; _fn_0
0002    UGET     1   1      ; _base_1
0003    VARG     2   0   0
0004    CALLMT   0   1

-- BYTECODE -- coverage.lua:68-74
0001    UGET     0   0      ; self
0002    TGETS    1   0   0  ; "process_line"
0003    FNEW     2   1      ; coverage.lua:71
0004    UCLO     0 => 0005
0005 => RET1     2   2

-- BYTECODE -- coverage.lua:67-75
0001    GGET     1   0      ; "debug"
0002    TGETS    1   1   1  ; "sethook"
0003    FNEW     2   2      ; coverage.lua:68
0004    CALL     2   2   1
0005    KSTR     3   3      ; "l"
0006    UCLO     0 => 0007
0007 => CALLT    1   3

-- BYTECODE -- coverage.lua:76-78
0001    GGET     1   0      ; "debug"
0002    TGETS    1   1   1  ; "sethook"
0003    CALLT    1   1

-- BYTECODE -- coverage.lua:79-81
0001    MOV      2   0
0002    TGETS    1   0   0  ; "format_results"
0003    CALLT    1   2

-- BYTECODE -- coverage.lua:82-86
0001    GGET     3   0      ; "debug"
0002    TGETS    3   3   1  ; "getinfo"
0003    KSHORT   4   2
0004    KSTR     5   2      ; "S"
0005    CALL     3   2   3
0006    TGETS    4   3   3  ; "source"
0007    TGETS    5   0   4  ; "line_counts"
0008    TGETV    5   5   4
0009    TGETS    6   0   4  ; "line_counts"
0010    TGETV    6   6   4
0011    TGETV    6   6   2
0012    ADDVN    6   6   0  ; 1
0013    TSETV    6   5   2
0014    RET0     0   1

-- BYTECODE -- coverage.lua:87-122
0001    GGET     1   0      ; "require"
0002    KSTR     2   1      ; "moonscript.line_tables"
0003    CALL     1   2   2
0004    UGET     2   0      ; create_counter
0005    CALL     2   2   1
0006    GGET     3   2      ; "pairs"
0007    TGETS    4   0   3  ; "line_counts"
0008    CALL     3   4   2
0009    ISNEXT   6 => 0043
0010 => KPRI     8   1
0011    LOOP     9 => 0040
0012    TGETV    9   1   6
0013    IST          9
0014    JMP     10 => 0017
0015    KPRI     8   2
0016    JMP      9 => 0040
0017 => GGET    10   2      ; "pairs"
0018    MOV     11   7
0019    CALL    10   4   2
0020    ISNEXT  13 => 0037
0021 => KPRI    15   1
0022    LOOP    16 => 0034
0023    TGETV   16   9  13
0024    IST         16
0025    JMP     17 => 0028
0026    KPRI    15   2
0027    JMP     16 => 0034
0028 => TGETV   17   2   6
0029    TGETV   18   2   6
0030    TGETV   18  18  16
0031    ADDVV   18  18  14
0032    TSETV   18  17  16
0033    KPRI    15   2
0034 => IST         15
0035    JMP     16 => 0037
0036    JMP     10 => 0039
0037 => ITERN   13   3   3
0038    ITERL   13 => 0021
0039 => KPRI     8   2
0040 => IST          8
0041    JMP      9 => 0043
0042    JMP      3 => 0045
0043 => ITERN    6   3   3
0044    ITERL    6 => 0010
0045 => GGET     3   2      ; "pairs"
0046    MOV      4   2
0047    CALL     3   4   2
0048    ISNEXT   6 => 0053
0049 => UGET     8   1      ; format_file
0050    MOV      9   6
0051    MOV     10   7
0052    CALL     8   1   3
0053 => ITERN    6   3   3
0054    ITERL    6 => 0049
0055    RET0     0   1

-- BYTECODE -- coverage.lua:126-128
0001    MOV      2   0
0002    TGETS    1   0   0  ; "reset"
0003    CALLT    1   2

-- BYTECODE -- coverage.lua:133-137
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- coverage.lua:0-145
0001    KPRI     0   0
0002    FNEW     0   0      ; coverage.lua:2
0003    KPRI     1   0
0004    FNEW     1   1      ; coverage.lua:9
0005    KPRI     2   0
0006    FNEW     2   2      ; coverage.lua:25
0007    KPRI     3   0
0008    FNEW     3   3      ; coverage.lua:44
0009    KNIL     4   5
0010    TDUP     6   5
0011    FNEW     7   4      ; coverage.lua:64
0012    TSETS    7   6   6  ; "reset"
0013    FNEW     7   7      ; coverage.lua:67
0014    TSETS    7   6   8  ; "start"
0015    FNEW     7   9      ; coverage.lua:76
0016    TSETS    7   6  10  ; "stop"
0017    FNEW     7  11      ; coverage.lua:79
0018    TSETS    7   6  12  ; "print_results"
0019    FNEW     7  13      ; coverage.lua:82
0020    TSETS    7   6  14  ; "process_line"
0021    FNEW     7  15      ; coverage.lua:87
0022    TSETS    7   6  16  ; "format_results"
0023    TSETS    6   6  17  ; "__index"
0024    GGET     7  18      ; "setmetatable"
0025    TDUP     8  20
0026    FNEW     9  19      ; coverage.lua:126
0027    TSETS    9   8  21  ; "__init"
0028    TSETS    6   8  22  ; "__base"
0029    TDUP     9  23
0030    TSETS    6   9  17  ; "__index"
0031    FNEW    10  24      ; coverage.lua:133
0032    TSETS   10   9  25  ; "__call"
0033    CALL     7   2   3
0034    MOV      5   7
0035    TSETS    5   6  26  ; "__class"
0036    MOV      4   5
0037    UCLO     5 => 0038
0038 => TDUP     5  27
0039    TSETS    4   5  28  ; "CodeCoverage"
0040    UCLO     0 => 0041
0041 => RET1     5   2

-----------------------
-- BYTECODE -- lint.lua:58-66
0001    TGETS    2   0   0  ; "lint_unused_names"
0002    ISF          2
0003    JMP      3 => 0012
0004    TGETS    2   0   0  ; "lint_unused_names"
0005    TGETV    2   2   1
0006    ISF          2
0007    JMP      3 => 0012
0008    TGETS    2   0   0  ; "lint_unused_names"
0009    KPRI     3   1
0010    TSETV    3   2   1
0011    RET0     0   1
0012 => TGETS    2   0   1  ; "parent"
0013    ISF          2
0014    JMP      3 => 0020
0015    TGETS    2   0   1  ; "parent"
0016    MOV      3   2
0017    TGETS    2   2   2  ; "lint_mark_used"
0018    MOV      4   1
0019    CALLT    2   3
0020 => RET0     0   1

-- BYTECODE -- lint.lua:100-102
0001    TGETB    2   0   1
0002    TGETB    3   1   1
0003    ISLT     2   3
0004    JMP      2 => 0007
0005    KPRI     2   1
0006    JMP      3 => 0008
0007 => KPRI     2   2
0008 => RET1     2   2

-- BYTECODE -- lint.lua:108-117
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   1
0004    UGET     3   0      ; names
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0019
0008 => UGET     6   0      ; names
0009    TGETV    6   6   5
0010    KSTR     7   0      ; "`"
0011    GGET     8   1      ; "tostring"
0012    MOV      9   6
0013    CALL     8   2   2
0014    KSTR     9   0      ; "`"
0015    CAT      7   7   9
0016    TSETV    7   0   1
0017    ADDVN    1   1   0  ; 1
0018    FORL     2 => 0008
0019 => RET1     0   2

-- BYTECODE -- lint.lua:67-121
0001    TGETS    1   0   0  ; "lint_unused_names"
0002    ISF          1
0003    JMP      2 => 0009
0004    GGET     1   1      ; "next"
0005    TGETS    2   0   0  ; "lint_unused_names"
0006    CALL     1   2   2
0007    IST          1
0008    JMP      1 => 0010
0009 => UCLO     0 => 0087
0010 => TNEW     1   0
0011    GGET     2   2      ; "pairs"
0012    TGETS    3   0   0  ; "lint_unused_names"
0013    CALL     2   4   2
0014    ISNEXT   5 => 0034
0015 => KPRI     7   1
0016    LOOP     8 => 0031
0017    IST          6
0018    JMP      8 => 0021
0019    KPRI     7   2
0020    JMP      8 => 0031
0021 => TGETV    8   1   6
0022    IST          8
0023    JMP      9 => 0025
0024    TNEW     8   0
0025 => TSETV    8   1   6
0026    UGET     8   0      ; insert
0027    TGETV    9   1   6
0028    MOV     10   5
0029    CALL     8   1   3
0030    KPRI     7   2
0031 => IST          7
0032    JMP      8 => 0034
0033    JMP      2 => 0036
0034 => ITERN    5   3   3
0035    ITERL    5 => 0015
0036 => KPRI     2   0
0037    TNEW     3   0
0038    KSHORT   4   1
0039    GGET     5   2      ; "pairs"
0040    MOV      6   1
0041    CALL     5   4   2
0042    ISNEXT   8 => 0048
0043 => TNEW    10   3
0044    TSETB    8  10   1
0045    TSETB    9  10   2
0046    TSETV   10   3   4
0047    ADDVN    4   4   0  ; 1
0048 => ITERN    8   3   3
0049    ITERL    8 => 0043
0050    MOV      2   3
0051    GGET     3   3      ; "table"
0052    TGETS    3   3   4  ; "sort"
0053    MOV      4   2
0054    FNEW     5   5      ; lint.lua:100
0055    CALL     3   1   3
0056    KSHORT   3   1
0057    LEN      4   2
0058    KSHORT   5   1
0059    FORI     3 => 0086
0060 => TGETV    7   2   6
0061    KNIL     8   9
0062    TGETB   10   7   1
0063    TGETB    9   7   2
0064    MOV      8  10
0065    UGET    10   0      ; insert
0066    MOV     12   0
0067    TGETS   11   0   6  ; "get_root_block"
0068    CALL    11   2   2
0069    TGETS   11  11   7  ; "lint_errors"
0070    TNEW    12   3
0071    KSTR    13   8      ; "assigned but unused "
0072    GGET    14   9      ; "tostring"
0073    GGET    15   3      ; "table"
0074    TGETS   15  15  10  ; "concat"
0075    FNEW    16  11      ; lint.lua:108
0076    CALL    16   2   1
0077    KSTR    17  12      ; ", "
0078    CALL    15   0   3
0079    CALLM   14   2   0
0080    CAT     13  13  14
0081    TSETB   13  12   1
0082    TSETB    8  12   2
0083    CALL    10   1   3
0084    UCLO     7 => 0085
0085 => FORL     3 => 0060
0086 => RET0     0   1
0087 => RET0     0   1

-- BYTECODE -- lint.lua:122-125
0001    MOV      2   0
0002    TGETS    1   0   0  ; "lint_check_unused"
0003    CALL     1   1   2
0004    UGET     1   0      ; _class_0
0005    TGETS    1   1   1  ; "__parent"
0006    TGETS    1   1   2  ; "__base"
0007    TGETS    1   1   3  ; "render"
0008    MOV      2   0
0009    VARG     3   0   1
0010    CALLMT   1   1

-- BYTECODE -- lint.lua:126-138
0001    UGET     1   0      ; _class_0
0002    TGETS    1   1   0  ; "__parent"
0003    TGETS    1   1   1  ; "__base"
0004    TGETS    1   1   2  ; "block"
0005    MOV      2   0
0006    VARG     3   0   1
0007    CALLM    1   2   1
0008    TGETS    2   0   2  ; "block"
0009    TSETS    2   1   2  ; "block"
0010    TGETS    2   0   3  ; "render"
0011    TSETS    2   1   3  ; "render"
0012    TGETS    2   0   4  ; "get_root_block"
0013    TSETS    2   1   4  ; "get_root_block"
0014    TGETS    2   0   5  ; "lint_check_unused"
0015    TSETS    2   1   5  ; "lint_check_unused"
0016    TGETS    2   0   6  ; "lint_mark_used"
0017    TSETS    2   1   6  ; "lint_mark_used"
0018    TGETS    2   0   7  ; "value_compilers"
0019    TSETS    2   1   7  ; "value_compilers"
0020    TGETS    2   0   8  ; "statement_compilers"
0021    TSETS    2   1   8  ; "statement_compilers"
0022    RET1     1   2

-- BYTECODE -- lint.lua:148-150
0001    UGET     0   0      ; self
0002    RET1     0   2

-- BYTECODE -- lint.lua:154-164
0001    TGETB    2   1   2
0002    MOV      4   0
0003    TGETS    3   0   0  ; "has_name"
0004    MOV      5   2
0005    CALL     3   2   3
0006    IST          3
0007    JMP      4 => 0033
0008    UGET     3   0      ; whitelist_globals
0009    TGETV    3   3   2
0010    IST          3
0011    JMP      4 => 0033
0012    MOV      4   2
0013    TGETS    3   2   1  ; "match"
0014    KSTR     5   2      ; "%."
0015    CALL     3   2   3
0016    IST          3
0017    JMP      3 => 0033
0018    UGET     3   1      ; insert
0019    UGET     4   2      ; self
0020    TGETS    4   4   3  ; "lint_errors"
0021    TNEW     5   3
0022    KSTR     6   4      ; "accessing global `"
0023    GGET     7   5      ; "tostring"
0024    MOV      8   2
0025    CALL     7   2   2
0026    KSTR     8   6      ; "`"
0027    CAT      6   6   8
0028    TSETB    6   5   1
0029    KSHORT   6  -1
0030    TGETV    6   1   6
0031    TSETB    6   5   2
0032    CALL     3   1   3
0033 => MOV      4   0
0034    TGETS    3   0   7  ; "lint_mark_used"
0035    MOV      5   2
0036    CALL     3   1   3
0037    UGET     3   3      ; vc
0038    TGETS    3   3   8  ; "ref"
0039    MOV      4   0
0040    MOV      5   1
0041    CALLT    3   3

-- BYTECODE -- lint.lua:170-198
0001    TGETB    2   1   2
0002    KSHORT   3   1
0003    LEN      4   2
0004    KSHORT   5   1
0005    FORI     3 => 0058
0006 => KPRI     7   1
0007    LOOP     8 => 0054
0008    TGETV    8   2   6
0009    GGET     9   0      ; "type"
0010    MOV     10   8
0011    CALL     9   2   2
0012    ISNES    9   1      ; "table"
0013    JMP      9 => 0019
0014    TGETB    9   8   1
0015    ISNES    9   2      ; "temp_name"
0016    JMP      9 => 0019
0017    KPRI     7   2
0018    JMP      8 => 0054
0019 => MOV     10   0
0020    TGETS    9   0   3  ; "extract_assign_name"
0021    MOV     11   8
0022    CALL     9   3   3
0023    IST         10
0024    JMP     11 => 0037
0025    ISF          9
0026    JMP     11 => 0035
0027    MOV     12   0
0028    TGETS   11   0   4  ; "has_name"
0029    MOV     13   9
0030    KPRI    14   2
0031    CALL    11   2   4
0032    NOT     11  11
0033    IST         11
0034    JMP     11 => 0037
0035 => KPRI     7   2
0036    JMP      8 => 0054
0037 => ISNES    9   5      ; "_"
0038    JMP     11 => 0041
0039    KPRI     7   2
0040    JMP      8 => 0054
0041 => TGETS   11   0   6  ; "lint_unused_names"
0042    IST         11
0043    JMP     12 => 0045
0044    TNEW    11   0
0045 => TSETS   11   0   6  ; "lint_unused_names"
0046    TGETS   11   0   6  ; "lint_unused_names"
0047    KSHORT  12  -1
0048    TGETV   12   1  12
0049    IST         12
0050    JMP     13 => 0052
0051    KSHORT  12   0
0052 => TSETV   12  11   9
0053    KPRI     7   2
0054 => IST          7
0055    JMP      8 => 0057
0056    JMP      3 => 0058
0057 => FORL     3 => 0006
0058 => UGET     3   0      ; sc
0059    TGETS    3   3   7  ; "assign"
0060    MOV      4   0
0061    MOV      5   1
0062    CALLT    3   3

-- BYTECODE -- lint.lua:143-202
0001    ISNEP    1   0
0002    JMP      2 => 0004
0003    UGET     1   0      ; default_whitelist
0004 => UGET     2   1      ; _class_0
0005    TGETS    2   2   0  ; "__parent"
0006    TGETS    2   2   1  ; "__init"
0007    MOV      3   0
0008    VARG     4   0   2
0009    CALLM    2   1   1
0010    FNEW     2   3      ; lint.lua:148
0011    TSETS    2   0   2  ; "get_root_block"
0012    TNEW     2   0
0013    TSETS    2   0   4  ; "lint_errors"
0014    TGETS    2   0   5  ; "value_compilers"
0015    GGET     3   6      ; "setmetatable"
0016    TDUP     4   8
0017    FNEW     5   7      ; lint.lua:154
0018    TSETS    5   4   9  ; "ref"
0019    TDUP     5  10
0020    TSETS    2   5  11  ; "__index"
0021    CALL     3   2   3
0022    TSETS    3   0   5  ; "value_compilers"
0023    TGETS    3   0  12  ; "statement_compilers"
0024    GGET     4   6      ; "setmetatable"
0025    TDUP     5  14
0026    FNEW     6  13      ; lint.lua:170
0027    TSETS    6   5  15  ; "assign"
0028    TDUP     6  16
0029    TSETS    3   6  11  ; "__index"
0030    CALL     4   2   3
0031    TSETS    4   0  12  ; "statement_compilers"
0032    UCLO     0 => 0033
0033 => RET0     0   1

-- BYTECODE -- lint.lua:207-217
0001    GGET     2   0      ; "rawget"
0002    UGET     3   0      ; _base_0
0003    MOV      4   1
0004    CALL     2   2   3
0005    ISNEP    2   0
0006    JMP      3 => 0016
0007    GGET     3   0      ; "rawget"
0008    MOV      4   0
0009    KSTR     5   1      ; "__parent"
0010    CALL     3   2   3
0011    ISF          3
0012    JMP      4 => 0017
0013    TGETV    4   3   1
0014    RET1     4   2
0015    JMP      3 => 0017
0016 => RET1     2   2
0017 => RET0     0   1

-- BYTECODE -- lint.lua:218-222
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- lint.lua:231-269
0001    GGET     3   0      ; "next"
0002    MOV      4   0
0003    CALL     3   2   2
0004    IST          3
0005    JMP      3 => 0007
0006    RET0     0   1
0007 => KNIL     3   4
0008    GGET     5   1      ; "require"
0009    KSTR     6   2      ; "moonscript.util"
0010    CALL     5   2   2
0011    TGETS    6   5   3  ; "pos_to_line"
0012    TGETS    4   5   4  ; "get_line"
0013    MOV      3   6
0014    KPRI     5   0
0015    TNEW     6   0
0016    KSHORT   7   1
0017    KSHORT   8   1
0018    LEN      9   0
0019    KSHORT  10   1
0020    FORI     8 => 0070
0021 => TGETV   12   0  11
0022    KNIL    13  14
0023    TGETB   15  12   1
0024    TGETB   14  12   2
0025    MOV     13  15
0026    ISF         14
0027    JMP     15 => 0067
0028    MOV     15   3
0029    MOV     16   1
0030    MOV     17  14
0031    CALL    15   2   3
0032    KSTR    16   5      ; "line "
0033    GGET    17   6      ; "tostring"
0034    MOV     18  15
0035    CALL    17   2   2
0036    KSTR    18   7      ; ": "
0037    GGET    19   6      ; "tostring"
0038    MOV     20  13
0039    CALL    19   2   2
0040    CAT     13  16  19
0041    KSTR    16   8      ; "> "
0042    MOV     17   4
0043    MOV     18   1
0044    MOV     19  15
0045    CALL    17   2   3
0046    CAT     16  16  17
0047    GGET    17   9      ; "math"
0048    TGETS   17  17  10  ; "max"
0049    LEN     18  13
0050    LEN     19  16
0051    CALL    17   2   3
0052    GGET    18  11      ; "table"
0053    TGETS   18  18  12  ; "concat"
0054    TNEW    19   4
0055    TSETB   13  19   1
0056    KSTR    20  13      ; "="
0057    MOV     21  20
0058    TGETS   20  20  14  ; "rep"
0059    MOV     22  17
0060    CALL    20   2   3
0061    TSETB   20  19   2
0062    TSETB   16  19   3
0063    KSTR    20  15      ; "\n"
0064    CALL    18   2   3
0065    TSETV   18   6   7
0066    JMP     15 => 0068
0067 => TSETV   13   6   7
0068 => ADDVN    7   7   0  ; 1
0069    FORL     8 => 0021
0070 => MOV      5   6
0071    ISF          2
0072    JMP      6 => 0079
0073    GGET     6  11      ; "table"
0074    TGETS    6   6  16  ; "insert"
0075    MOV      7   5
0076    KSHORT   8   1
0077    MOV      9   2
0078    CALL     6   1   4
0079 => GGET     6  11      ; "table"
0080    TGETS    6   6  12  ; "concat"
0081    MOV      7   5
0082    KSTR     8  17      ; "\n\n"
0083    CALLT    6   3

-- BYTECODE -- lint.lua:276-278
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "lint_config"
0003    CALL     0   2   2
0004    USETV    0   0      ; lint_config
0005    RET0     0   1

-- BYTECODE -- lint.lua:273-295
0001    UGET     1   0      ; lint_config
0002    IST          1
0003    JMP      1 => 0009
0004    TNEW     1   0
0005    USETV    0   1      ; lint_config
0006    GGET     1   0      ; "pcall"
0007    FNEW     2   1      ; lint.lua:276
0008    CALL     1   1   2
0009 => UGET     1   0      ; lint_config
0010    TGETS    1   1   2  ; "whitelist_globals"
0011    IST          1
0012    JMP      1 => 0016
0013    UGET     1   1      ; default_whitelist
0014    UCLO     0 => 0015
0015 => RET1     1   2
0016 => TNEW     1   0
0017    GGET     2   3      ; "pairs"
0018    UGET     3   0      ; lint_config
0019    TGETS    3   3   2  ; "whitelist_globals"
0020    CALL     2   4   2
0021    ISNEXT   5 => 0038
0022 => MOV      8   0
0023    TGETS    7   0   4  ; "match"
0024    MOV      9   5
0025    CALL     7   2   3
0026    ISF          7
0027    JMP      8 => 0038
0028    KSHORT   7   1
0029    LEN      8   6
0030    KSHORT   9   1
0031    FORI     7 => 0038
0032 => TGETV   11   6  10
0033    UGET    12   2      ; insert
0034    MOV     13   1
0035    MOV     14  11
0036    CALL    12   1   3
0037    FORL     7 => 0032
0038 => ITERN    5   3   3
0039    ITERL    5 => 0022
0040    GGET     2   5      ; "setmetatable"
0041    UGET     3   3      ; Set
0042    MOV      4   1
0043    CALL     3   2   2
0044    TDUP     4   6
0045    UGET     5   1      ; default_whitelist
0046    TSETS    5   4   7  ; "__index"
0047    UCLO     0 => 0048
0048 => CALLT    2   3

-- BYTECODE -- lint.lua:298-311
0001    ISNEP    1   0
0002    JMP      3 => 0004
0003    KSTR     1   0      ; "string input"
0004 => GGET     3   1      ; "require"
0005    KSTR     4   2      ; "moonscript.parse"
0006    CALL     3   2   2
0007    TGETS    4   3   3  ; "string"
0008    MOV      5   0
0009    CALL     4   3   2
0010    IST          4
0011    JMP      6 => 0015
0012    KPRI     6   0
0013    MOV      7   5
0014    RET      6   3
0015 => UGET     6   0      ; LinterBlock
0016    MOV      7   2
0017    CALL     6   2   2
0018    MOV      8   6
0019    TGETS    7   6   4  ; "stms"
0020    MOV      9   4
0021    CALL     7   1   3
0022    MOV      8   6
0023    TGETS    7   6   5  ; "lint_check_unused"
0024    CALL     7   1   2
0025    UGET     7   1      ; format_lint
0026    TGETS    8   6   6  ; "lint_errors"
0027    MOV      9   0
0028    MOV     10   1
0029    CALLT    7   4

-- BYTECODE -- lint.lua:313-319
0001    GGET     1   0      ; "io"
0002    TGETS    1   1   1  ; "open"
0003    MOV      2   0
0004    CALL     1   3   2
0005    IST          1
0006    JMP      3 => 0010
0007    KPRI     3   0
0008    MOV      4   2
0009    RET      3   3
0010 => UGET     3   0      ; lint_code
0011    MOV      5   1
0012    TGETS    4   1   2  ; "read"
0013    KSTR     6   3      ; "*a"
0014    CALL     4   2   3
0015    MOV      5   0
0016    UGET     6   1      ; whitelist_for_file
0017    MOV      7   0
0018    CALL     6   0   2
0019    CALLMT   3   2

-- BYTECODE -- lint.lua:0-324
0001    KPRI     0   0
0002    GGET     1   0      ; "table"
0003    TGETS    0   1   1  ; "insert"
0004    KPRI     1   0
0005    GGET     2   2      ; "require"
0006    KSTR     3   3      ; "moonscript.data"
0007    CALL     2   2   2
0008    TGETS    1   2   4  ; "Set"
0009    KPRI     2   0
0010    GGET     3   2      ; "require"
0011    KSTR     4   5      ; "moonscript.compile"
0012    CALL     3   2   2
0013    TGETS    2   3   6  ; "Block"
0014    KPRI     3   0
0015    GGET     4   2      ; "require"
0016    KSTR     5   7      ; "moonscript.util"
0017    CALL     4   2   2
0018    TGETS    4   4   8  ; "moon"
0019    TGETS    3   4   9  ; "type"
0020    MOV      4   1
0021    TDUP     5  10
0022    CALL     4   2   2
0023    KNIL     5   6
0024    MOV      7   2
0025    TDUP     8  12
0026    FNEW     9  11      ; lint.lua:58
0027    TSETS    9   8  13  ; "lint_mark_used"
0028    FNEW     9  14      ; lint.lua:67
0029    TSETS    9   8  15  ; "lint_check_unused"
0030    FNEW     9  16      ; lint.lua:122
0031    TSETS    9   8  17  ; "render"
0032    FNEW     9  18      ; lint.lua:126
0033    TSETS    9   8  19  ; "block"
0034    TSETS    8   8  20  ; "__index"
0035    GGET     9  21      ; "setmetatable"
0036    MOV     10   8
0037    TGETS   11   7  22  ; "__base"
0038    CALL     9   1   3
0039    GGET     9  21      ; "setmetatable"
0040    TDUP    10  24
0041    FNEW    11  23      ; lint.lua:143
0042    TSETS   11  10  25  ; "__init"
0043    TSETS    8  10  22  ; "__base"
0044    TSETS    7  10  26  ; "__parent"
0045    TDUP    11  28
0046    FNEW    12  27      ; lint.lua:207
0047    TSETS   12  11  20  ; "__index"
0048    FNEW    12  29      ; lint.lua:218
0049    TSETS   12  11  30  ; "__call"
0050    CALL     9   2   3
0051    MOV      6   9
0052    TSETS    6   8  31  ; "__class"
0053    TGETS    9   7  32  ; "__inherited"
0054    ISF          9
0055    JMP     10 => 0060
0056    TGETS    9   7  32  ; "__inherited"
0057    MOV     10   7
0058    MOV     11   6
0059    CALL     9   1   3
0060 => MOV      5   6
0061    UCLO     6 => 0062
0062 => KPRI     6   0
0063    FNEW     6  33      ; lint.lua:231
0064    KNIL     7   8
0065    FNEW     7  34      ; lint.lua:273
0066    UCLO     8 => 0067
0067 => KPRI     8   0
0068    FNEW     8  35      ; lint.lua:298
0069    KPRI     9   0
0070    FNEW     9  36      ; lint.lua:313
0071    TDUP    10  37
0072    TSETS    8  10  38  ; "lint_code"
0073    TSETS    9  10  39  ; "lint_file"
0074    UCLO     0 => 0075
0075 => RET1    10   2

-----------------------
-- BYTECODE -- args.lua:4-23
0001    KNIL     1   2
0002    GGET     3   0      ; "type"
0003    MOV      4   0
0004    CALL     3   2   2
0005    ISNES    3   1      ; "table"
0006    JMP      3 => 0013
0007    UGET     3   0      ; unpack
0008    MOV      4   0
0009    CALL     3   2   2
0010    MOV      2   0
0011    MOV      1   3
0012    JMP      3 => 0016
0013 => MOV      3   0
0014    TNEW     2   0
0015    MOV      1   3
0016 => GGET     3   2      ; "assert"
0017    KSTR     4   3      ; "no flags for arguments"
0018    CALL     3   1   2
0019    TNEW     3   0
0020    MOV      5   1
0021    TGETS    4   1   4  ; "gmatch"
0022    KSTR     6   5      ; "%w:?"
0023    CALL     4   4   3
0024    JMP      7 => 0041
0025 => MOV      9   7
0026    TGETS    8   7   6  ; "match"
0027    KSTR    10   7      ; ":$"
0028    CALL     8   2   3
0029    ISF          8
0030    JMP      9 => 0039
0031    MOV      9   7
0032    TGETS    8   7   8  ; "sub"
0033    KSHORT  10   1
0034    KSHORT  11   1
0035    CALL     8   2   4
0036    TDUP     9   9
0037    TSETV    9   3   8
0038    JMP      8 => 0041
0039 => TNEW     8   0
0040    TSETV    8   3   7
0041 => ITERC    7   2   3
0042    ITERL    7 => 0025
0043    RET1     3   2

-- BYTECODE -- args.lua:25-65
0001    UGET     2   0      ; parse_spec
0002    MOV      3   0
0003    CALL     2   2   2
0004    MOV      0   2
0005    TNEW     2   0
0006    TNEW     3   0
0007    KPRI     4   0
0008    KSHORT   5   1
0009    LEN      6   1
0010    KSHORT   7   1
0011    FORI     5 => 0054
0012 => KPRI     9   1
0013    LOOP    10 => 0050
0014    TGETV   10   1   8
0015    TNEW    11   0
0016    ISF          4
0017    JMP     12 => 0021
0018    TSETV   10   2   4
0019    KPRI     9   2
0020    JMP     10 => 0050
0021 => MOV     13  10
0022    TGETS   12  10   0  ; "match"
0023    KSTR    14   1      ; "-(%w+)"
0024    CALL    12   2   3
0025    ISF         12
0026    JMP     13 => 0044
0027    TGETV   13   0  12
0028    ISF         13
0029    JMP     14 => 0033
0030    KPRI    14   2
0031    TSETV   14   2  13
0032    JMP     14 => 0042
0033 => MOV     15  12
0034    TGETS   14  12   2  ; "gmatch"
0035    KSTR    16   3      ; "."
0036    CALL    14   4   3
0037    JMP     17 => 0040
0038 => KPRI    18   2
0039    TSETV   18   2  17
0040 => ITERC   17   2   3
0041    ITERL   17 => 0038
0042 => KPRI     9   2
0043    JMP     10 => 0050
0044 => GGET    12   4      ; "table"
0045    TGETS   12  12   5  ; "insert"
0046    MOV     13   3
0047    MOV     14  10
0048    CALL    12   1   3
0049    KPRI     9   2
0050 => IST          9
0051    JMP     10 => 0053
0052    JMP      5 => 0054
0053 => FORL     5 => 0012
0054 => MOV      5   2
0055    MOV      6   3
0056    RET      5   3

-- BYTECODE -- args.lua:0-70
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.util"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "unpack"
0006    KPRI     1   0
0007    FNEW     1   3      ; args.lua:4
0008    KPRI     2   0
0009    FNEW     2   4      ; args.lua:25
0010    TDUP     3   5
0011    TSETS    2   3   6  ; "parse_arguments"
0012    TSETS    1   3   7  ; "parse_spec"
0013    UCLO     0 => 0014
0014 => RET1     3   2

-----------------------
-- BYTECODE -- errors.lua:11-16
0001    GGET     0   0      ; "error"
0002    TDUP     1   1
0003    VARG     2   0   0
0004    TSETM    2   0      ; 2
0005    CALLT    0   2

-- BYTECODE -- errors.lua:18-27
0001    TGETV    3   2   0
0002    IST          3
0003    JMP      3 => 0018
0004    GGET     3   0      ; "assert"
0005    GGET     4   1      ; "io"
0006    TGETS    4   4   2  ; "open"
0007    MOV      5   0
0008    CALL     4   0   2
0009    CALLM    3   2   0
0010    MOV      5   3
0011    TGETS    4   3   3  ; "read"
0012    KSTR     6   4      ; "*a"
0013    CALL     4   2   3
0014    TSETV    4   2   0
0015    MOV      5   3
0016    TGETS    4   3   5  ; "close"
0017    CALL     4   1   2
0018 => UGET     3   0      ; pos_to_line
0019    TGETV    4   2   0
0020    MOV      5   1
0021    CALLT    3   3

-- BYTECODE -- errors.lua:29-36
0001    MOV      4   2
0002    KSHORT   5   0
0003    KSHORT   6  -1
0004    FORI     4 => 0014
0005 => TGETV    8   1   7
0006    ISF          8
0007    JMP      9 => 0013
0008    UGET     8   0      ; lookup_line
0009    MOV      9   0
0010    TGETV   10   1   7
0011    MOV     11   3
0012    CALLT    8   4
0013 => FORL     4 => 0005
0014 => KSTR     4   0      ; "unknown"
0015    RET1     4   2

-- BYTECODE -- errors.lua:38-64
0001    ISNEP    1   0
0002    JMP      2 => 0004
0003    KSTR     1   0      ; "moonscript_chunk"
0004 => UGET     2   0      ; split
0005    MOV      3   0
0006    KSTR     4   1      ; "\n"
0007    CALL     2   2   3
0008    MOV      0   2
0009    LEN      2   0
0010 => KSHORT   3   1
0011    ISGE     3   2
0012    JMP      3 => 0024
0013    LOOP     3 => 0024
0014    TGETV    3   0   2
0015    MOV      4   3
0016    TGETS    3   3   2  ; "match"
0017    MOV      5   1
0018    CALL     3   2   3
0019    ISF          3
0020    JMP      4 => 0022
0021    JMP      3 => 0024
0022 => SUBVN    2   2   0  ; 1
0023    JMP      3 => 0010
0024 => TNEW     3   0
0025    KSHORT   4   1
0026    MOV      5   2
0027    KSHORT   6   1
0028    KSHORT   7   0
0029    ISGE     5   7
0030    JMP      7 => 0035
0031    LEN      7   0
0032    ADDVV    7   7   5
0033    IST          7
0034    JMP      8 => 0036
0035 => MOV      7   5
0036 => KSHORT   8   1
0037    FORI     6 => 0042
0038 => TGETV   10   0   9
0039    TSETV   10   3   4
0040    ADDVN    4   4   0  ; 1
0041    FORL     6 => 0038
0042 => MOV      0   3
0043    KSTR     3   3      ; "function '"
0044    MOV      4   1
0045    KSTR     5   4      ; "'"
0046    CAT      3   3   5
0047    LEN      4   0
0048    LEN      5   0
0049    TGETV    5   0   5
0050    MOV      6   5
0051    TGETS    5   5   5  ; "gsub"
0052    MOV      7   3
0053    KSTR     8   6      ; "main chunk"
0054    CALL     5   2   4
0055    TSETV    5   0   4
0056    UGET     4   1      ; concat
0057    MOV      5   0
0058    KSTR     6   1      ; "\n"
0059    CALLT    4   3

-- BYTECODE -- errors.lua:80-97
0001    MOV      2   0
0002    TGETS    1   0   0  ; "match"
0003    KSTR     3   1      ; "^(.-):(%d+): (.*)$"
0004    CALL     1   4   3
0005    UGET     4   0      ; line_tables
0006    KSTR     5   2      ; "@"
0007    GGET     6   3      ; "tostring"
0008    MOV      7   1
0009    CALL     6   2   2
0010    CAT      5   5   6
0011    TGETV    4   4   5
0012    ISF          1
0013    JMP      5 => 0030
0014    ISF          4
0015    JMP      5 => 0030
0016    UGET     5   1      ; concat
0017    TDUP     6   4
0018    TSETB    1   6   1
0019    UGET     7   2      ; reverse_line_number
0020    MOV      8   1
0021    MOV      9   4
0022    MOV     10   2
0023    UGET    11   3      ; cache
0024    CALL     7   2   5
0025    TSETB    7   6   3
0026    TSETB    2   6   6
0027    TSETB    3   6   8
0028    CALLT    5   2
0029    JMP      5 => 0031
0030 => RET1     0   2
0031 => RET0     0   1

-- BYTECODE -- errors.lua:66-111
0001    GGET     2   0      ; "require"
0002    KSTR     3   1      ; "moonscript.line_tables"
0003    CALL     2   2   2
0004    KNIL     3   6
0005    UGET     7   0      ; lpeg
0006    TGETS    7   7   2  ; "V"
0007    UGET     8   0      ; lpeg
0008    TGETS    8   8   3  ; "S"
0009    UGET     9   0      ; lpeg
0010    TGETS    9   9   4  ; "Ct"
0011    UGET    10   0      ; lpeg
0012    TGETS    6  10   5  ; "C"
0013    MOV      5   9
0014    MOV      4   8
0015    MOV      3   7
0016    KSTR     7   6      ; "stack traceback:"
0017    MOV      8   3
0018    KSTR     9   7      ; "Header"
0019    CALL     8   2   2
0020    MOV      9   3
0021    KSTR    10   8      ; "Line"
0022    CALL     9   2   2
0023    UGET    10   0      ; lpeg
0024    TGETS   10  10   3  ; "S"
0025    KSTR    11   9      ; "\n"
0026    CALL    10   2   2
0027    UGET    11   0      ; lpeg
0028    TGETS   11  11  10  ; "P"
0029    TDUP    12  11
0030    TSETB    8  12   1
0031    MULVV   13   7  10
0032    MOV     14   5
0033    KSHORT  15   1
0034    POW     15   9  15
0035    CALL    14   2   2
0036    MULVV   13  13  14
0037    TSETS   13  12   7  ; "Header"
0038    KSTR    13  12      ; "\t"
0039    MOV     14   6
0040    SUBNV   15  10   0  ; 1
0041    KSHORT  16   0
0042    POW     15  15  16
0043    CALL    14   2   2
0044    MULVV   13  13  14
0045    ADDVN   14  10   1  ; -1
0046    MULVV   13  13  14
0047    TSETS   13  12   8  ; "Line"
0048    CALL    11   2   2
0049    TNEW    12   0
0050    KPRI    13   0
0051    FNEW    13  13      ; errors.lua:80
0052    MOV     14  13
0053    MOV     15   1
0054    CALL    14   2   2
0055    MOV      1  14
0056    MOV     15  11
0057    TGETS   14  11  14  ; "match"
0058    MOV     16   0
0059    CALL    14   2   3
0060    IST         14
0061    JMP     15 => 0065
0062    KPRI    15   0
0063    UCLO     0 => 0064
0064 => RET1    15   2
0065 => GGET    15  15      ; "ipairs"
0066    MOV     16  14
0067    CALL    15   4   2
0068    JMP     18 => 0073
0069 => MOV     20  13
0070    MOV     21  19
0071    CALL    20   2   2
0072    TSETV   20  14  18
0073 => ITERC   18   3   3
0074    ITERL   18 => 0069
0075    UGET    15   1      ; concat
0076    TNEW    16   4
0077    KSTR    17  16      ; "moon: "
0078    MOV     18   1
0079    CAT     17  17  18
0080    TSETB   17  16   1
0081    TSETB    7  16   2
0082    KSTR    17  12      ; "\t"
0083    UGET    18   1      ; concat
0084    MOV     19  14
0085    KSTR    20  17      ; "\n\t"
0086    CALL    18   2   3
0087    CAT     17  17  18
0088    TSETB   17  16   3
0089    KSTR    17   9      ; "\n"
0090    UCLO     0 => 0091
0091 => CALLT   15   3

-- BYTECODE -- errors.lua:0-118
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "moonscript.util"
0003    CALL     0   2   2
0004    GGET     1   0      ; "require"
0005    KSTR     2   2      ; "lpeg"
0006    CALL     1   2   2
0007    KNIL     2   3
0008    GGET     4   3      ; "table"
0009    TGETS    5   4   4  ; "concat"
0010    TGETS    3   4   5  ; "insert"
0011    MOV      2   5
0012    KNIL     4   5
0013    TGETS    6   0   6  ; "split"
0014    TGETS    5   0   7  ; "pos_to_line"
0015    MOV      4   6
0016    KPRI     6   0
0017    FNEW     6   8      ; errors.lua:11
0018    KPRI     7   0
0019    FNEW     7   9      ; errors.lua:18
0020    KPRI     8   0
0021    FNEW     8  10      ; errors.lua:29
0022    KPRI     9   0
0023    FNEW     9  11      ; errors.lua:38
0024    KPRI    10   0
0025    FNEW    10  12      ; errors.lua:66
0026    TDUP    11  13
0027    TSETS   10  11  14  ; "rewrite_traceback"
0028    TSETS    9  11  15  ; "truncate_traceback"
0029    TSETS    6  11  16  ; "user_error"
0030    TSETS    8  11  17  ; "reverse_line_number"
0031    UCLO     0 => 0032
0032 => RET1    11   2

-----------------------
-- BYTECODE -- init.lua:0-6
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "moonscript.base"
0003    CALL     0   2   2
0004    TGETS    1   0   2  ; "insert_loader"
0005    CALL     1   1   1
0006    RET1     0   2

-----------------------
-- BYTECODE -- dump.lua:2-25
0001    ISNEP    1   0
0002    JMP      2 => 0004
0003    KSHORT   1   1
0004 => GGET     2   0      ; "type"
0005    MOV      3   0
0006    CALL     2   2   2
0007    ISNES    2   1      ; "string"
0008    JMP      2 => 0014
0009    KSTR     2   2      ; """
0010    MOV      3   0
0011    KSTR     4   2      ; """
0012    CAT      2   2   4
0013    RET1     2   2
0014 => GGET     2   0      ; "type"
0015    MOV      3   0
0016    CALL     2   2   2
0017    ISEQS    2   3      ; "table"
0018    JMP      2 => 0022
0019    GGET     2   4      ; "tostring"
0020    MOV      3   0
0021    CALLT    2   2
0022 => KPRI     2   0
0023    TNEW     3   0
0024    KSHORT   4   1
0025    KSHORT   5   1
0026    LEN      6   0
0027    KSHORT   7   1
0028    FORI     5 => 0037
0029 => TGETV    9   0   8
0030    UGET    10   0      ; flat_value
0031    MOV     11   9
0032    ADDVN   12   1   0  ; 1
0033    CALL    10   2   3
0034    TSETV   10   3   4
0035    ADDVN    4   4   0  ; 1
0036    FORL     5 => 0029
0037 => MOV      2   3
0038    KSHORT   3  -1
0039    TGETV    3   0   3
0040    KSTR     4   5      ; "{"
0041    ISF          3
0042    JMP      5 => 0049
0043    KSTR     5   6      ; "["
0044    MOV      6   3
0045    KSTR     7   7      ; "] "
0046    CAT      5   5   7
0047    IST          5
0048    JMP      6 => 0050
0049 => KSTR     5   8      ; ""
0050 => GGET     6   3      ; "table"
0051    TGETS    6   6   9  ; "concat"
0052    MOV      7   2
0053    KSTR     8  10      ; ", "
0054    CALL     6   2   3
0055    KSTR     7  11      ; "}"
0056    CAT      4   4   7
0057    RET1     4   2

-- BYTECODE -- dump.lua:27-29
0001    UGET     1   0      ; flat_value
0002    MOV      2   0
0003    CALLT    1   2

-- BYTECODE -- dump.lua:31-37
0001    MOV      1   0
0002    KSHORT   2   1
0003    LEN      3   1
0004    KSHORT   4   1
0005    FORI     2 => 0013
0006 => TGETV    6   1   5
0007    GGET     7   0      ; "print"
0008    UGET     8   0      ; flat_value
0009    MOV      9   6
0010    CALL     8   0   2
0011    CALLM    7   1   0
0012    FORL     2 => 0006
0013 => RET0     0   1

-- BYTECODE -- dump.lua:0-42
0001    KPRI     0   0
0002    FNEW     0   0      ; dump.lua:2
0003    KPRI     1   0
0004    FNEW     1   1      ; dump.lua:27
0005    KPRI     2   0
0006    FNEW     2   2      ; dump.lua:31
0007    TDUP     3   3
0008    TSETS    1   3   4  ; "value"
0009    TSETS    2   3   5  ; "tree"
0010    UCLO     0 => 0011
0011 => RET1     3   2

-----------------------
-- BYTECODE -- compile.lua:31-38
0001    ISNEP    2   0
0002    JMP      3 => 0004
0003    LEN      2   0
0004 => TGETS    3   0   0  ; "posmap"
0005    TGETV    3   3   2
0006    IST          3
0007    JMP      3 => 0010
0008    TGETS    3   0   0  ; "posmap"
0009    TSETV    1   3   2
0010 => RET0     0   1

-- BYTECODE -- compile.lua:39-49
0001    UGET     2   0      ; mtype
0002    MOV      3   1
0003    CALL     2   2   2
0004    UGET     3   1      ; Line
0005    ISNEV    3   2
0006    JMP      3 => 0012
0007    MOV      4   1
0008    TGETS    3   1   0  ; "render"
0009    MOV      5   0
0010    CALL     3   1   3
0011    JMP      3 => 0023
0012 => UGET     3   2      ; Block
0013    ISNEV    3   2
0014    JMP      3 => 0020
0015    MOV      4   1
0016    TGETS    3   1   0  ; "render"
0017    MOV      5   0
0018    CALL     3   1   3
0019    JMP      3 => 0023
0020 => LEN      3   0
0021    ADDVN    3   3   0  ; 1
0022    TSETV    1   0   3
0023 => RET1     0   2

-- BYTECODE -- compile.lua:50-75
0001    ISNEP    1   0
0002    JMP      3 => 0004
0003    KSHORT   1   0
0004 => ISNEP    2   0
0005    JMP      3 => 0007
0006    TNEW     2   0
0007 => TGETS    3   0   0  ; "posmap"
0008    GGET     4   1      ; "ipairs"
0009    MOV      5   0
0010    CALL     4   4   2
0011    JMP      7 => 0053
0012 => UGET     9   0      ; mtype
0013    MOV     10   8
0014    CALL     9   2   2
0015    ISEQS    9   2      ; "string"
0016    JMP     10 => 0020
0017    UGET    10   1      ; DelayedLine
0018    ISNEV   10   9
0019    JMP     10 => 0034
0020 => ADDVN    1   1   0  ; 1
0021    TGETV   10   3   7
0022    TSETV   10   2   1
0023    MOV     11   8
0024    TGETS   10   8   3  ; "gmatch"
0025    KSTR    12   4      ; "\n"
0026    CALL    10   4   3
0027    JMP     13 => 0029
0028 => ADDVN    1   1   0  ; 1
0029 => ITERC   13   2   3
0030    ITERL   13 => 0028
0031    TGETV   10   3   7
0032    TSETV   10   2   1
0033    JMP     10 => 0053
0034 => UGET    10   2      ; Lines
0035    ISNEV   10   9
0036    JMP     10 => 0046
0037    KPRI    10   0
0038    MOV     12   8
0039    TGETS   11   8   5  ; "flatten_posmap"
0040    MOV     13   1
0041    MOV     14   2
0042    CALL    11   3   4
0043    MOV      1  12
0044    MOV     10  11
0045    JMP     10 => 0053
0046 => GGET    10   6      ; "error"
0047    KSTR    11   7      ; "Unknown item in Lines: "
0048    GGET    12   8      ; "tostring"
0049    MOV     13   8
0050    CALL    12   2   2
0051    CAT     11  11  12
0052    CALL    10   1   2
0053 => ITERC    7   3   3
0054    ITERL    7 => 0012
0055    MOV      4   2
0056    MOV      5   1
0057    RET      4   3

-- BYTECODE -- compile.lua:76-110
0001    ISNEP    1   0
0002    JMP      3 => 0004
0003    KPRI     1   0
0004 => ISNEP    2   0
0005    JMP      3 => 0007
0006    TNEW     2   0
0007 => KSHORT   3   1
0008    LEN      4   0
0009    KSHORT   5   1
0010    FORI     3 => 0092
0011 => TGETV    7   0   6
0012    UGET     8   0      ; mtype
0013    MOV      9   7
0014    CALL     8   2   2
0015    UGET     9   1      ; DelayedLine
0016    ISNEV    8   9
0017    JMP      9 => 0023
0018    MOV     10   7
0019    TGETS    9   7   0  ; "render"
0020    CALL     9   2   2
0021    MOV      7   9
0022    KSTR     8   1      ; "string"
0023 => MOV      9   8
0024    ISNES    9   1      ; "string"
0025    JMP     10 => 0068
0026    ISF          1
0027    JMP     10 => 0032
0028    UGET    10   2      ; insert
0029    MOV     11   2
0030    MOV     12   1
0031    CALL    10   1   3
0032 => UGET    10   2      ; insert
0033    MOV     11   2
0034    MOV     12   7
0035    CALL    10   1   3
0036    GGET    10   2      ; "type"
0037    ADDVN   11   6   0  ; 1
0038    TGETV   11   0  11
0039    CALL    10   2   2
0040    ISNES   10   1      ; "string"
0041    JMP     10 => 0063
0042    MOV     11   7
0043    TGETS   10   7   3  ; "sub"
0044    KSHORT  12  -1
0045    CALL    10   2   3
0046    ISEQS   10   4      ; ")"
0047    JMP     11 => 0050
0048    ISNES   10   5      ; "]"
0049    JMP     11 => 0063
0050 => ADDVN   11   6   0  ; 1
0051    TGETV   11   0  11
0052    MOV     12  11
0053    TGETS   11  11   3  ; "sub"
0054    KSHORT  13   1
0055    KSHORT  14   1
0056    CALL    11   2   4
0057    ISNES   11   6      ; "("
0058    JMP     11 => 0063
0059    UGET    11   2      ; insert
0060    MOV     12   2
0061    KSTR    13   7      ; ";"
0062    CALL    11   1   3
0063 => UGET    10   2      ; insert
0064    MOV     11   2
0065    KSTR    12   8      ; "\n"
0066    CALL    10   1   3
0067    JMP     10 => 0091
0068 => UGET    10   3      ; Lines
0069    ISNEV   10   9
0070    JMP     10 => 0084
0071    MOV     11   7
0072    TGETS   10   7   9  ; "flatten"
0073    ISF          1
0074    JMP     12 => 0080
0075    MOV     12   1
0076    UGET    13   4      ; indent_char
0077    CAT     12  12  13
0078    IST         12
0079    JMP     13 => 0081
0080 => UGET    12   4      ; indent_char
0081 => MOV     13   2
0082    CALL    10   1   4
0083    JMP     10 => 0091
0084 => GGET    10  10      ; "error"
0085    KSTR    11  11      ; "Unknown item in Lines: "
0086    GGET    12  12      ; "tostring"
0087    MOV     13   7
0088    CALL    12   2   2
0089    CAT     11  11  12
0090    CALL    10   1   2
0091 => FORL     3 => 0011
0092 => RET1     2   2

-- BYTECODE -- compile.lua:113-126
0001    GGET     1   0      ; "type"
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISNES    1   1      ; "table"
0005    JMP      1 => 0021
0006    TNEW     1   0
0007    KSHORT   2   1
0008    KSHORT   3   1
0009    LEN      4   0
0010    KSHORT   5   1
0011    FORI     3 => 0019
0012 => TGETV    7   0   6
0013    UGET     8   0      ; strip
0014    MOV      9   7
0015    CALL     8   2   2
0016    TSETV    8   1   2
0017    ADDVN    2   2   0  ; 1
0018    FORL     3 => 0012
0019 => RET1     1   2
0020    JMP      1 => 0022
0021 => RET1     0   2
0022 => RET0     0   1

-- BYTECODE -- compile.lua:111-128
0001    KPRI     1   0
0002    FNEW     1   0      ; compile.lua:113
0003    KSTR     2   1      ; "Lines<"
0004    GGET     3   2      ; "tostring"
0005    UGET     4   0      ; util
0006    TGETS    4   4   3  ; "dump"
0007    MOV      5   1
0008    MOV      6   0
0009    CALL     5   0   2
0010    CALLM    4   2   0
0011    MOV      5   4
0012    TGETS    4   4   4  ; "sub"
0013    KSHORT   6   1
0014    KSHORT   7  -2
0015    CALL     4   0   4
0016    CALLM    3   2   0
0017    KSTR     4   5      ; ">"
0018    CAT      2   2   4
0019    UCLO     0 => 0020
0020 => RET1     2   2

-- BYTECODE -- compile.lua:132-134
0001    TNEW     1   0
0002    TSETS    1   0   0  ; "posmap"
0003    RET0     0   1

-- BYTECODE -- compile.lua:139-143
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- compile.lua:152-160
0001    KSHORT   3   1
0002    LEN      4   1
0003    KSHORT   5   1
0004    FORI     3 => 0017
0005 => MOV      8   0
0006    TGETS    7   0   0  ; "append"
0007    TGETV    9   1   6
0008    CALL     7   1   3
0009    LEN      7   1
0010    ISGE     6   7
0011    JMP      7 => 0016
0012    UGET     7   0      ; insert
0013    MOV      8   0
0014    MOV      9   2
0015    CALL     7   1   3
0016 => FORL     3 => 0005
0017 => KPRI     3   0
0018    RET1     3   2

-- BYTECODE -- compile.lua:161-176
0001    UGET     2   0      ; Line
0002    UGET     3   1      ; mtype
0003    MOV      4   1
0004    CALL     3   2   2
0005    ISNEV    2   3
0006    JMP      2 => 0023
0007    TGETS    2   0   0  ; "pos"
0008    IST          2
0009    JMP      2 => 0012
0010    TGETS    2   1   0  ; "pos"
0011    TSETS    2   0   0  ; "pos"
0012 => KSHORT   2   1
0013    LEN      3   1
0014    KSHORT   4   1
0015    FORI     2 => 0022
0016 => TGETV    6   1   5
0017    MOV      8   0
0018    TGETS    7   0   1  ; "append"
0019    MOV      9   6
0020    CALL     7   1   3
0021    FORL     2 => 0016
0022 => JMP      2 => 0027
0023 => UGET     2   2      ; insert
0024    MOV      3   0
0025    MOV      4   1
0026    CALL     2   1   3
0027 => VARG     2   2   2
0028    ISF          2
0029    JMP      3 => 0034
0030    MOV      3   0
0031    TGETS    2   0   1  ; "append"
0032    VARG     4   0   2
0033    CALLMT   2   1
0034 => RET0     0   1

-- BYTECODE -- compile.lua:180-183
0001    UGET     0   0      ; buffer
0002    MOV      1   0
0003    TGETS    0   0   0  ; "add"
0004    UGET     2   1      ; concat
0005    UGET     3   2      ; current
0006    CALL     2   0   2
0007    CALLM    0   1   1
0008    UGET     0   0      ; buffer
0009    MOV      1   0
0010    TGETS    0   0   1  ; "mark_pos"
0011    UGET     2   3      ; self
0012    TGETS    2   2   2  ; "pos"
0013    CALLT    0   3

-- BYTECODE -- compile.lua:177-207
0001    TNEW     2   0
0002    KPRI     3   0
0003    FNEW     3   0      ; compile.lua:180
0004    KSHORT   4   1
0005    LEN      5   0
0006    KSHORT   6   1
0007    FORI     4 => 0049
0008 => TGETV    8   0   7
0009    UGET     9   1      ; mtype
0010    MOV     10   8
0011    CALL     9   2   2
0012    UGET    10   2      ; Block
0013    ISNEV   10   9
0014    JMP     10 => 0044
0015    MOV     11   8
0016    TGETS   10   8   1  ; "render"
0017    UGET    12   3      ; Lines
0018    CALL    12   0   1
0019    CALLM   10   2   1
0020    KSHORT  11   1
0021    LEN     12  10
0022    KSHORT  13   1
0023    FORI    11 => 0043
0024 => TGETV   15  10  14
0025    GGET    16   2      ; "type"
0026    MOV     17  15
0027    CALL    16   2   2
0028    ISNES   16   3      ; "string"
0029    JMP     16 => 0035
0030    UGET    16   4      ; insert
0031    MOV     17   2
0032    MOV     18  15
0033    CALL    16   1   3
0034    JMP     16 => 0042
0035 => MOV     16   3
0036    CALL    16   1   1
0037    MOV     17   1
0038    TGETS   16   1   4  ; "add"
0039    MOV     18  15
0040    CALL    16   1   3
0041    TNEW     2   0
0042 => FORL    11 => 0024
0043 => JMP     10 => 0048
0044 => UGET    10   4      ; insert
0045    MOV     11   2
0046    MOV     12   8
0047    CALL    10   1   3
0048 => FORL     4 => 0008
0049 => TGETB    4   2   1
0050    ISF          4
0051    JMP      5 => 0054
0052    MOV      4   3
0053    CALL     4   1   1
0054 => UCLO     0 => 0055
0055 => RET1     1   2

-- BYTECODE -- compile.lua:208-210
0001    KSTR     1   0      ; "Line<"
0002    GGET     2   1      ; "tostring"
0003    UGET     3   0      ; util
0004    TGETS    3   3   2  ; "dump"
0005    MOV      4   0
0006    CALL     3   2   2
0007    MOV      4   3
0008    TGETS    3   3   3  ; "sub"
0009    KSHORT   5   1
0010    KSHORT   6  -2
0011    CALL     3   0   4
0012    CALLM    2   2   0
0013    KSTR     3   4      ; ">"
0014    CAT      1   1   3
0015    RET1     1   2

-- BYTECODE -- compile.lua:214-214
0001    RET0     0   1

-- BYTECODE -- compile.lua:219-223
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- compile.lua:231-231
0001    RET0     0   1

-- BYTECODE -- compile.lua:232-235
0001    MOV      2   0
0002    TGETS    1   0   0  ; "prepare"
0003    CALL     1   1   2
0004    UGET     1   0      ; concat
0005    MOV      2   0
0006    CALLT    1   2

-- BYTECODE -- compile.lua:239-241
0001    TSETS    1   0   0  ; "prepare"
0002    RET0     0   1

-- BYTECODE -- compile.lua:246-250
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- compile.lua:264-272
0001    KPRI     1   0
0002    GGET     2   0      ; "type"
0003    TGETS    3   0   1  ; "header"
0004    CALL     2   2   2
0005    ISNES    2   2      ; "string"
0006    JMP      2 => 0009
0007    TGETS    1   0   1  ; "header"
0008    JMP      2 => 0017
0009 => UGET     2   0      ; unpack
0010    TGETS    3   0   1  ; "header"
0011    MOV      4   3
0012    TGETS    3   3   3  ; "render"
0013    TNEW     5   0
0014    CALL     3   0   3
0015    CALLM    2   2   0
0016    MOV      1   2
0017 => KSTR     2   4      ; "Block<"
0018    GGET     3   5      ; "tostring"
0019    MOV      4   1
0020    CALL     3   2   2
0021    KSTR     4   6      ; "> <- "
0022    GGET     5   5      ; "tostring"
0023    TGETS    6   0   7  ; "parent"
0024    CALL     5   2   2
0025    CAT      2   2   5
0026    RET1     2   2

-- BYTECODE -- compile.lua:273-275
0001    TGETS    3   0   0  ; "_state"
0002    TSETV    2   3   1
0003    RET0     0   1

-- BYTECODE -- compile.lua:276-278
0001    TGETS    2   0   0  ; "_state"
0002    TGETV    2   2   1
0003    RET1     2   2

-- BYTECODE -- compile.lua:279-281
0001    GGET     2   0      ; "rawget"
0002    TGETS    3   0   1  ; "_state"
0003    MOV      4   1
0004    CALLT    2   3

-- BYTECODE -- compile.lua:282-284
0001    TGETS    3   0   0  ; "_listeners"
0002    TSETV    2   3   1
0003    RET0     0   1

-- BYTECODE -- compile.lua:285-287
0001    TGETS    2   0   0  ; "_listeners"
0002    KPRI     3   0
0003    TSETV    3   2   1
0004    RET0     0   1

-- BYTECODE -- compile.lua:288-295
0001    TGETS    2   0   0  ; "_listeners"
0002    TGETV    2   2   1
0003    ISF          2
0004    JMP      3 => 0009
0005    MOV      3   2
0006    MOV      4   0
0007    VARG     5   0   2
0008    CALLMT   3   1
0009 => RET0     0   1

-- BYTECODE -- compile.lua:296-311
0001    KPRI     2   1
0002    KPRI     3   0
0003    UGET     4   0      ; mtype
0004    MOV      5   1
0005    CALL     4   2   2
0006    UGET     5   1      ; LocalName
0007    ISNEV    5   4
0008    JMP      5 => 0016
0009    KPRI     2   2
0010    MOV      6   1
0011    TGETS    5   1   0  ; "get_name"
0012    MOV      7   0
0013    CALL     5   2   3
0014    MOV      3   5
0015    JMP      5 => 0039
0016 => UGET     5   2      ; NameProxy
0017    ISNEV    5   4
0018    JMP      5 => 0025
0019    MOV      6   1
0020    TGETS    5   1   0  ; "get_name"
0021    MOV      7   0
0022    CALL     5   2   3
0023    MOV      3   5
0024    JMP      5 => 0039
0025 => ISNES    4   1      ; "table"
0026    JMP      5 => 0036
0027    TGETB    5   1   1
0028    ISNES    5   2      ; "ref"
0029    JMP      5 => 0032
0030    TGETB    3   1   2
0031    JMP      5 => 0039
0032 => KPRI     3   1
0033    JMP      5 => 0035
0034    KPRI     3   2
0035 => JMP      5 => 0039
0036 => ISNES    4   3      ; "string"
0037    JMP      5 => 0039
0038    MOV      3   1
0039 => MOV      5   3
0040    MOV      6   2
0041    RET      5   3

-- BYTECODE -- compile.lua:312-343
0001    KPRI     2   0
0002    TNEW     3   0
0003    KSHORT   4   1
0004    KSHORT   5   1
0005    LEN      6   1
0006    KSHORT   7   1
0007    FORI     5 => 0049
0008 => KPRI     9   1
0009    LOOP    10 => 0045
0010    TGETV   10   1   8
0011    MOV     12   0
0012    TGETS   11   0   0  ; "extract_assign_name"
0013    MOV     13  10
0014    CALL    11   3   3
0015    IST         12
0016    JMP     13 => 0029
0017    ISF         11
0018    JMP     13 => 0027
0019    MOV     14   0
0020    TGETS   13   0   1  ; "has_name"
0021    MOV     15  11
0022    KPRI    16   2
0023    CALL    13   2   4
0024    NOT     13  13
0025    IST         13
0026    JMP     13 => 0029
0027 => KPRI     9   2
0028    JMP     10 => 0045
0029 => MOV     14   0
0030    TGETS   13   0   2  ; "put_name"
0031    MOV     15  11
0032    CALL    13   1   3
0033    MOV     14   0
0034    TGETS   13   0   3  ; "name_exported"
0035    MOV     15  11
0036    CALL    13   2   3
0037    ISF         13
0038    JMP     14 => 0041
0039    KPRI     9   2
0040    JMP     10 => 0045
0041 => MOV     13  11
0042    TSETV   13   3   4
0043    ADDVN    4   4   0  ; 1
0044    KPRI     9   2
0045 => IST          9
0046    JMP     10 => 0048
0047    JMP      5 => 0049
0048 => FORL     5 => 0008
0049 => MOV      2   3
0050    RET1     2   2

-- BYTECODE -- compile.lua:344-346
0001    UGET     2   0      ; Set
0002    MOV      3   1
0003    CALL     2   2   2
0004    TSETS    2   0   0  ; "_name_whitelist"
0005    RET0     0   1

-- BYTECODE -- compile.lua:347-354
0001    TGETS    2   0   0  ; "export_all"
0002    ISF          2
0003    JMP      3 => 0006
0004    KPRI     2   2
0005    RET1     2   2
0006 => TGETS    2   0   1  ; "export_proper"
0007    ISF          2
0008    JMP      3 => 0017
0009    MOV      3   1
0010    TGETS    2   1   2  ; "match"
0011    KSTR     4   3      ; "^%u"
0012    CALL     2   2   3
0013    ISF          2
0014    JMP      3 => 0017
0015    KPRI     2   2
0016    RET1     2   2
0017 => RET0     0   1

-- BYTECODE -- compile.lua:355-364
0001    VARG     2   2   2
0002    GGET     3   0      ; "select"
0003    KSTR     4   1      ; "#"
0004    VARG     5   0   2
0005    CALLM    3   2   1
0006    ISNEN    3   0      ; 0
0007    JMP      3 => 0009
0008    KPRI     2   2
0009 => UGET     3   0      ; NameProxy
0010    UGET     4   1      ; mtype
0011    MOV      5   1
0012    CALL     4   2   2
0013    ISNEV    3   4
0014    JMP      3 => 0020
0015    MOV      4   1
0016    TGETS    3   1   2  ; "get_name"
0017    MOV      5   0
0018    CALL     3   2   3
0019    MOV      1   3
0020 => TGETS    3   0   3  ; "_names"
0021    TSETV    2   3   1
0022    RET0     0   1

-- BYTECODE -- compile.lua:365-377
0001    IST          2
0002    JMP      3 => 0011
0003    MOV      4   0
0004    TGETS    3   0   0  ; "name_exported"
0005    MOV      5   1
0006    CALL     3   2   3
0007    ISF          3
0008    JMP      4 => 0011
0009    KPRI     3   2
0010    RET1     3   2
0011 => TGETS    3   0   1  ; "_names"
0012    TGETV    3   3   1
0013    ISNEP    3   0
0014    JMP      4 => 0032
0015    TGETS    4   0   2  ; "parent"
0016    ISF          4
0017    JMP      5 => 0032
0018    TGETS    4   0   3  ; "_name_whitelist"
0019    ISF          4
0020    JMP      4 => 0025
0021    TGETS    4   0   3  ; "_name_whitelist"
0022    TGETV    4   4   1
0023    ISF          4
0024    JMP      5 => 0033
0025 => TGETS    4   0   2  ; "parent"
0026    MOV      5   4
0027    TGETS    4   4   4  ; "has_name"
0028    MOV      6   1
0029    KPRI     7   2
0030    CALLT    4   4
0031    JMP      4 => 0033
0032 => RET1     3   2
0033 => RET0     0   1

-- BYTECODE -- compile.lua:378-392
0001    UGET     2   0      ; mtype
0002    MOV      3   1
0003    CALL     2   2   2
0004    ISNES    2   0      ; "string"
0005    JMP      3 => 0011
0006    MOV      4   0
0007    TGETS    3   0   1  ; "has_name"
0008    MOV      5   1
0009    KPRI     6   1
0010    CALLT    3   4
0011 => UGET     3   1      ; NameProxy
0012    ISEQV    2   3
0013    JMP      3 => 0017
0014    UGET     3   2      ; LocalName
0015    ISNEV    2   3
0016    JMP      3 => 0019
0017 => KPRI     3   2
0018    RET1     3   2
0019 => ISNES    2   2      ; "table"
0020    JMP      3 => 0034
0021    TGETB    3   1   1
0022    ISEQS    3   3      ; "ref"
0023    JMP      3 => 0030
0024    TGETB    3   1   1
0025    ISNES    3   4      ; "chain"
0026    JMP      3 => 0034
0027    LEN      3   1
0028    ISNEN    3   0      ; 2
0029    JMP      3 => 0034
0030 => MOV      4   0
0031    TGETS    3   0   5  ; "is_local"
0032    TGETB    5   1   2
0033    CALLT    3   3
0034 => KPRI     3   1
0035    RET1     3   2

-- BYTECODE -- compile.lua:393-410
0001    IST          1
0002    JMP      3 => 0004
0003    KSTR     1   0      ; "moon"
0004 => KPRI     3   2
0005    KPRI     4   0
0006    KSHORT   5   0
0007 => ISF          3
0008    JMP      6 => 0025
0009    LOOP     6 => 0025
0010    UGET     6   0      ; concat
0011    TDUP     7   1
0012    TSETB    1   7   2
0013    TSETB    5   7   3
0014    KSTR     8   2      ; "_"
0015    CALL     6   2   3
0016    MOV      4   6
0017    ADDVN    5   5   0  ; 1
0018    MOV      7   0
0019    TGETS    6   0   3  ; "has_name"
0020    MOV      8   4
0021    KPRI     9   2
0022    CALL     6   2   4
0023    MOV      3   6
0024    JMP      6 => 0007
0025 => IST          2
0026    JMP      6 => 0031
0027    MOV      7   0
0028    TGETS    6   0   4  ; "put_name"
0029    MOV      8   4
0030    CALL     6   1   3
0031 => RET1     4   2

-- BYTECODE -- compile.lua:411-423
0001    MOV      4   0
0002    TGETS    3   0   0  ; "free_name"
0003    MOV      5   1
0004    KPRI     6   2
0005    CALL     3   2   4
0006    MOV      5   0
0007    TGETS    4   0   1  ; "stm"
0008    TDUP     6   2
0009    TNEW     7   3
0010    TSETB    3   7   1
0011    TSETB    7   6   2
0012    TNEW     7   3
0013    TSETB    2   7   1
0014    TSETB    7   6   3
0015    CALL     4   1   3
0016    RET1     3   2

-- BYTECODE -- compile.lua:424-433
0001    TGETS    3   0   0  ; "_lines"
0002    MOV      5   3
0003    TGETS    4   3   1  ; "add"
0004    MOV      6   1
0005    CALL     4   1   3
0006    ISF          2
0007    JMP      4 => 0012
0008    MOV      5   3
0009    TGETS    4   3   2  ; "mark_pos"
0010    MOV      6   2
0011    CALL     4   1   3
0012 => RET1     1   2

-- BYTECODE -- compile.lua:434-450
0001    MOV      3   1
0002    TGETS    2   1   0  ; "add"
0003    TGETS    4   0   1  ; "header"
0004    CALL     2   1   3
0005    MOV      3   1
0006    TGETS    2   1   2  ; "mark_pos"
0007    TGETS    4   0   3  ; "pos"
0008    CALL     2   1   3
0009    TGETS    2   0   4  ; "next"
0010    ISF          2
0011    JMP      3 => 0022
0012    MOV      3   1
0013    TGETS    2   1   0  ; "add"
0014    TGETS    4   0   5  ; "_lines"
0015    CALL     2   1   3
0016    TGETS    2   0   4  ; "next"
0017    MOV      3   2
0018    TGETS    2   2   6  ; "render"
0019    MOV      4   1
0020    CALL     2   1   3
0021    JMP      2 => 0059
0022 => TGETS    2   0   5  ; "_lines"
0023    LEN      2   2
0024    ISNEN    2   0      ; 0
0025    JMP      2 => 0047
0026    GGET     2   7      ; "type"
0027    LEN      3   1
0028    TGETV    3   1   3
0029    CALL     2   2   2
0030    ISNES    2   8      ; "string"
0031    JMP      2 => 0047
0032    LEN      2   1
0033    LEN      3   1
0034    TGETV    3   1   3
0035    KSTR     4   9      ; " "
0036    UGET     5   0      ; unpack
0037    UGET     6   1      ; Lines
0038    CALL     6   2   1
0039    MOV      7   6
0040    TGETS    6   6   0  ; "add"
0041    TGETS    8   0  10  ; "footer"
0042    CALL     6   0   3
0043    CALLM    5   2   0
0044    CAT      3   3   5
0045    TSETV    3   1   2
0046    JMP      2 => 0059
0047 => MOV      3   1
0048    TGETS    2   1   0  ; "add"
0049    TGETS    4   0   5  ; "_lines"
0050    CALL     2   1   3
0051    MOV      3   1
0052    TGETS    2   1   0  ; "add"
0053    TGETS    4   0  10  ; "footer"
0054    CALL     2   1   3
0055    MOV      3   1
0056    TGETS    2   1   2  ; "mark_pos"
0057    TGETS    4   0   3  ; "pos"
0058    CALL     2   1   3
0059 => RET1     1   2

-- BYTECODE -- compile.lua:451-453
0001    UGET     3   0      ; Block
0002    MOV      4   0
0003    MOV      5   1
0004    MOV      6   2
0005    CALLT    3   4

-- BYTECODE -- compile.lua:454-460
0001    UGET     1   0      ; Line
0002    CALL     1   2   1
0003    MOV      3   1
0004    TGETS    2   1   0  ; "append"
0005    VARG     4   0   1
0006    CALLM    2   1   1
0007    RET1     1   2

-- BYTECODE -- compile.lua:461-463
0001    TGETS    2   0   0  ; "statement_compilers"
0002    UGET     3   0      ; ntype
0003    MOV      4   1
0004    CALL     3   2   2
0005    TGETV    2   2   3
0006    ISNEP    2   0
0007    JMP      2 => 0010
0008    KPRI     2   1
0009    JMP      3 => 0011
0010 => KPRI     2   2
0011 => RET1     2   2

-- BYTECODE -- compile.lua:464-467
0001    UGET     2   0      ; ntype
0002    MOV      3   1
0003    CALL     2   2   2
0004    TGETS    3   0   0  ; "value_compilers"
0005    TGETV    3   3   2
0006    ISNEP    3   0
0007    JMP      3 => 0012
0008    ISEQS    2   1      ; "value"
0009    JMP      3 => 0012
0010    KPRI     3   1
0011    JMP      4 => 0013
0012 => KPRI     3   2
0013 => RET1     3   2

-- BYTECODE -- compile.lua:468-474
0001    GGET     2   0      ; "type"
0002    MOV      3   1
0003    CALL     2   2   2
0004    ISNES    2   1      ; "string"
0005    JMP      2 => 0008
0006    RET1     1   2
0007    JMP      2 => 0013
0008 => MOV      3   0
0009    TGETS    2   0   2  ; "value"
0010    MOV      4   1
0011    VARG     5   0   2
0012    CALLMT   2   2
0013 => RET0     0   1

-- BYTECODE -- compile.lua:475-503
0001    TGETS    2   0   0  ; "transform"
0002    TGETS    2   2   1  ; "value"
0003    MOV      3   1
0004    CALL     2   2   2
0005    MOV      1   2
0006    KPRI     2   0
0007    GGET     3   2      ; "type"
0008    MOV      4   1
0009    CALL     3   2   2
0010    ISEQS    3   3      ; "table"
0011    JMP      3 => 0014
0012    KSTR     2   4      ; "raw_value"
0013    JMP      3 => 0015
0014 => TGETB    2   1   1
0015 => TGETS    3   0   5  ; "value_compilers"
0016    TGETV    3   3   2
0017    IST          3
0018    JMP      4 => 0032
0019    GGET     4   6      ; "error"
0020    TDUP     5   7
0021    KSTR     6   8      ; "Failed to find value compiler for: "
0022    UGET     7   0      ; dump
0023    TGETS    7   7   1  ; "value"
0024    MOV      8   1
0025    CALL     7   2   2
0026    CAT      6   6   7
0027    TSETB    6   5   2
0028    KSHORT   6  -1
0029    TGETV    6   1   6
0030    TSETB    6   5   3
0031    CALL     4   1   2
0032 => MOV      4   3
0033    MOV      5   0
0034    MOV      6   1
0035    VARG     7   0   2
0036    CALLM    4   2   2
0037    GGET     5   2      ; "type"
0038    MOV      6   1
0039    CALL     5   2   2
0040    ISNES    5   3      ; "table"
0041    JMP      5 => 0061
0042    KSHORT   5  -1
0043    TGETV    5   1   5
0044    ISF          5
0045    JMP      6 => 0061
0046    GGET     5   2      ; "type"
0047    MOV      6   4
0048    CALL     5   2   2
0049    ISNES    5   9      ; "string"
0050    JMP      5 => 0058
0051    UGET     5   1      ; Line
0052    CALL     5   2   1
0053    MOV      7   5
0054    TGETS    6   5  10  ; "append"
0055    MOV      8   4
0056    CALL     6   1   3
0057    MOV      4   5
0058 => KSHORT   5  -1
0059    TGETV    5   1   5
0060    TSETS    5   4  11  ; "pos"
0061 => RET1     4   2

-- BYTECODE -- compile.lua:508-517
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   1
0004    UGET     3   0      ; values
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0018
0008 => UGET     6   0      ; values
0009    TGETV    6   6   5
0010    UGET     7   1      ; self
0011    MOV      8   7
0012    TGETS    7   7   0  ; "value"
0013    MOV      9   6
0014    CALL     7   2   3
0015    TSETV    7   0   1
0016    ADDVN    1   1   0  ; 1
0017    FORL     2 => 0008
0018 => RET1     0   2

-- BYTECODE -- compile.lua:504-520
0001    IST          2
0002    JMP      3 => 0004
0003    KSTR     2   0      ; ", "
0004 => UGET     3   0      ; Line
0005    CALL     3   2   1
0006    MOV      5   3
0007    TGETS    4   3   1  ; "append_list"
0008    FNEW     6   2      ; compile.lua:508
0009    CALL     6   2   1
0010    MOV      7   2
0011    CALL     4   1   4
0012    UCLO     0 => 0013
0013 => RET1     3   2

-- BYTECODE -- compile.lua:521-554
0001    IST          1
0002    JMP      2 => 0004
0003    RET0     0   1
0004 => TGETS    2   0   0  ; "transform"
0005    TGETS    2   2   1  ; "statement"
0006    MOV      3   1
0007    CALL     2   2   2
0008    MOV      1   2
0009    KPRI     2   0
0010    TGETS    3   0   2  ; "statement_compilers"
0011    UGET     4   0      ; ntype
0012    MOV      5   1
0013    CALL     4   2   2
0014    TGETV    3   3   4
0015    ISF          3
0016    JMP      4 => 0024
0017    MOV      4   3
0018    MOV      5   0
0019    MOV      6   1
0020    VARG     7   0   2
0021    CALLM    4   2   2
0022    MOV      2   4
0023    JMP      4 => 0045
0024 => UGET     4   1      ; value_can_be_statement
0025    MOV      5   1
0026    CALL     4   2   2
0027    ISF          4
0028    JMP      5 => 0035
0029    MOV      5   0
0030    TGETS    4   0   3  ; "value"
0031    MOV      6   1
0032    CALL     4   2   3
0033    MOV      2   4
0034    JMP      4 => 0045
0035 => MOV      5   0
0036    TGETS    4   0   4  ; "stm"
0037    TDUP     6   5
0038    TDUP     7   6
0039    TSETB    7   6   2
0040    TNEW     7   3
0041    TSETB    1   7   1
0042    TSETB    7   6   3
0043    CALL     4   2   3
0044    MOV      2   4
0045 => ISF          2
0046    JMP      3 => 0068
0047    GGET     3   7      ; "type"
0048    MOV      4   1
0049    CALL     3   2   2
0050    ISNES    3   8      ; "table"
0051    JMP      3 => 0064
0052    GGET     3   7      ; "type"
0053    MOV      4   2
0054    CALL     3   2   2
0055    ISNES    3   8      ; "table"
0056    JMP      3 => 0064
0057    KSHORT   3  -1
0058    TGETV    3   1   3
0059    ISF          3
0060    JMP      4 => 0064
0061    KSHORT   3  -1
0062    TGETV    3   1   3
0063    TSETS    3   2   9  ; "pos"
0064 => MOV      4   0
0065    TGETS    3   0  10  ; "add"
0066    MOV      5   2
0067    CALL     3   1   3
0068 => KPRI     3   0
0069    RET1     3   2

-- BYTECODE -- compile.lua:555-569
0001    ISF          2
0002    JMP      3 => 0006
0003    GGET     3   0      ; "error"
0004    KSTR     4   1      ; "deprecated stms call, use transformer"
0005    CALL     3   1   2
0006 => KNIL     3   4
0007    TGETS    5   0   2  ; "current_stms"
0008    TGETS    4   0   3  ; "current_stm_i"
0009    MOV      3   5
0010    TSETS    1   0   2  ; "current_stms"
0011    KSHORT   5   1
0012    LEN      6   1
0013    KSHORT   7   1
0014    FORI     5 => 0021
0015 => TSETS    8   0   3  ; "current_stm_i"
0016    MOV     10   0
0017    TGETS    9   0   4  ; "stm"
0018    TGETV   11   1   8
0019    CALL     9   1   3
0020    FORL     5 => 0015
0021 => TSETS    3   0   2  ; "current_stms"
0022    TSETS    4   0   3  ; "current_stm_i"
0023    KPRI     5   0
0024    RET1     5   2

-- BYTECODE -- compile.lua:570-577
0001    TDUP     2   0
0002    TGETS    3   0   1  ; "_lines"
0003    TSETB    3   2   2
0004    UGET     3   0      ; Lines
0005    CALL     3   2   1
0006    TSETS    3   0   1  ; "_lines"
0007    MOV      4   0
0008    TGETS    3   0   2  ; "stms"
0009    MOV      5   1
0010    MOV      6   2
0011    CALL     5   0   2
0012    CALLMT   3   1

-- BYTECODE -- compile.lua:581-605
0001    MOV      4   1
0002    MOV      5   2
0003    TSETS    3   0   2  ; "footer"
0004    TSETS    5   0   1  ; "header"
0005    TSETS    4   0   0  ; "parent"
0006    UGET     4   0      ; Lines
0007    CALL     4   2   1
0008    TSETS    4   0   3  ; "_lines"
0009    TNEW     4   0
0010    TSETS    4   0   4  ; "_names"
0011    TNEW     4   0
0012    TSETS    4   0   5  ; "_state"
0013    TNEW     4   0
0014    TSETS    4   0   6  ; "_listeners"
0015    TDUP     4  10
0016    UGET     5   1      ; transform
0017    TGETS    5   5   8  ; "Value"
0018    MOV      6   5
0019    TGETS    5   5   9  ; "bind"
0020    MOV      7   0
0021    CALL     5   2   3
0022    TSETS    5   4  11  ; "value"
0023    UGET     5   1      ; transform
0024    TGETS    5   5  12  ; "Statement"
0025    MOV      6   5
0026    TGETS    5   5   9  ; "bind"
0027    MOV      7   0
0028    CALL     5   2   3
0029    TSETS    5   4  13  ; "statement"
0030    TSETS    4   0   7  ; "transform"
0031    TGETS    4   0   0  ; "parent"
0032    ISF          4
0033    JMP      5 => 0056
0034    TGETS    4   0   0  ; "parent"
0035    TGETS    4   4  14  ; "root"
0036    TSETS    4   0  14  ; "root"
0037    TGETS    4   0   0  ; "parent"
0038    TGETS    4   4  15  ; "indent"
0039    ADDVN    4   4   0  ; 1
0040    TSETS    4   0  15  ; "indent"
0041    GGET     4  16      ; "setmetatable"
0042    TGETS    5   0   5  ; "_state"
0043    TDUP     6  17
0044    TGETS    7   0   0  ; "parent"
0045    TGETS    7   7   5  ; "_state"
0046    TSETS    7   6  18  ; "__index"
0047    CALL     4   1   3
0048    GGET     4  16      ; "setmetatable"
0049    TGETS    5   0   6  ; "_listeners"
0050    TDUP     6  19
0051    TGETS    7   0   0  ; "parent"
0052    TGETS    7   7   6  ; "_listeners"
0053    TSETS    7   6  18  ; "__index"
0054    CALLT    4   3
0055    JMP      4 => 0058
0056 => KSHORT   4   0
0057    TSETS    4   0  15  ; "indent"
0058 => RET0     0   1

-- BYTECODE -- compile.lua:610-614
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- compile.lua:623-625
0001    KSTR     1   0      ; "RootBlock<>"
0002    RET1     1   2

-- BYTECODE -- compile.lua:626-631
0001    TGETS    2   0   0  ; "options"
0002    TGETS    2   2   1  ; "implicitly_return_root"
0003    ISEQP    2   1
0004    JMP      2 => 0013
0005    UGET     2   0      ; transform
0006    TGETS    2   2   2  ; "Statement"
0007    TGETS    2   2   3  ; "transformers"
0008    TGETS    2   2   4  ; "root_stms"
0009    MOV      3   0
0010    MOV      4   1
0011    CALL     2   2   3
0012    MOV      1   2
0013 => MOV      3   0
0014    TGETS    2   0   5  ; "stms"
0015    MOV      4   1
0016    CALLT    2   3

-- BYTECODE -- compile.lua:632-638
0001    TGETS    1   0   0  ; "_lines"
0002    MOV      2   1
0003    TGETS    1   1   1  ; "flatten"
0004    CALL     1   2   2
0005    LEN      2   1
0006    TGETV    2   1   2
0007    ISNES    2   2      ; "\n"
0008    JMP      2 => 0012
0009    LEN      2   1
0010    KPRI     3   0
0011    TSETV    3   1   2
0012 => GGET     2   3      ; "table"
0013    TGETS    2   2   4  ; "concat"
0014    MOV      3   1
0015    CALLT    2   2

-- BYTECODE -- compile.lua:643-647
0001    TSETS    1   0   0  ; "options"
0002    TSETS    0   0   1  ; "root"
0003    UGET     2   0      ; _class_0
0004    TGETS    2   2   2  ; "__parent"
0005    TGETS    2   2   3  ; "__init"
0006    MOV      3   0
0007    CALLT    2   2

-- BYTECODE -- compile.lua:652-662
0001    GGET     2   0      ; "rawget"
0002    UGET     3   0      ; _base_0
0003    MOV      4   1
0004    CALL     2   2   3
0005    ISNEP    2   0
0006    JMP      3 => 0016
0007    GGET     3   0      ; "rawget"
0008    MOV      4   0
0009    KSTR     5   1      ; "__parent"
0010    CALL     3   2   3
0011    ISF          3
0012    JMP      4 => 0017
0013    TGETV    4   3   1
0014    RET1     4   2
0015    JMP      3 => 0017
0016 => RET1     2   2
0017 => RET0     0   1

-- BYTECODE -- compile.lua:663-667
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- compile.lua:676-689
0001    KPRI     3   0
0002    ISF          1
0003    JMP      4 => 0027
0004    UGET     4   0      ; pos_to_line
0005    MOV      5   2
0006    MOV      6   1
0007    CALL     4   2   3
0008    KPRI     5   0
0009    UGET     6   1      ; get_closest_line
0010    MOV      7   2
0011    MOV      8   4
0012    CALL     6   3   3
0013    MOV      4   7
0014    MOV      5   6
0015    IST          5
0016    JMP      6 => 0018
0017    KSTR     5   0      ; ""
0018 => KSTR     6   1      ; " [%d] >>    %s"
0019    MOV      7   6
0020    TGETS    6   6   2  ; "format"
0021    MOV      8   4
0022    UGET     9   2      ; trim
0023    MOV     10   5
0024    CALL     9   0   2
0025    CALLM    6   2   2
0026    MOV      3   6
0027 => UGET     4   3      ; concat
0028    TNEW     5   3
0029    KSTR     6   3      ; "Compile error: "
0030    MOV      7   0
0031    CAT      6   6   7
0032    TSETB    6   5   1
0033    TSETB    3   5   2
0034    KSTR     6   4      ; "\n"
0035    CALLT    4   3

-- BYTECODE -- compile.lua:691-699
0001    KPRI     1   0
0002    UGET     2   0      ; RootBlock
0003    CALL     2   2   1
0004    MOV      4   2
0005    TGETS    3   2   0  ; "add"
0006    MOV      6   2
0007    TGETS    5   2   1  ; "value"
0008    MOV      7   0
0009    CALL     5   0   3
0010    CALLM    3   1   1
0011    MOV      4   2
0012    TGETS    3   2   2  ; "render"
0013    CALL     3   2   2
0014    MOV      1   3
0015    RET1     1   2

-- BYTECODE -- compile.lua:707-709
0001    UGET     0   0      ; scope
0002    MOV      1   0
0003    TGETS    0   0   0  ; "root_stms"
0004    UGET     2   1      ; tree
0005    CALLT    0   3

-- BYTECODE -- compile.lua:701-731
0001    ISNEP    1   0
0002    JMP      2 => 0004
0003    TNEW     1   0
0004 => GGET     2   0      ; "assert"
0005    MOV      3   0
0006    KSTR     4   1      ; "missing tree"
0007    CALL     2   1   3
0008    TGETS    2   1   2  ; "scope"
0009    IST          2
0010    JMP      3 => 0012
0011    UGET     2   0      ; RootBlock
0012 => MOV      3   1
0013    CALL     2   2   2
0014    GGET     3   3      ; "coroutine"
0015    TGETS    3   3   4  ; "create"
0016    FNEW     4   5      ; compile.lua:707
0017    CALL     3   2   2
0018    GGET     4   3      ; "coroutine"
0019    TGETS    4   4   6  ; "resume"
0020    MOV      5   3
0021    CALL     4   3   2
0022    IST          4
0023    JMP      6 => 0071
0024    KNIL     6   7
0025    GGET     8   7      ; "type"
0026    MOV      9   5
0027    CALL     8   2   2
0028    ISNES    8   8      ; "table"
0029    JMP      8 => 0052
0030    TGETB    8   5   1
0031    ISEQS    8   9      ; "user-error"
0032    JMP      9 => 0035
0033    ISNES    8  10      ; "compile-error"
0034    JMP      9 => 0042
0035 => UGET     9   1      ; unpack
0036    MOV     10   5
0037    KSHORT  11   2
0038    CALL     9   3   3
0039    MOV      7  10
0040    MOV      6   9
0041    JMP      9 => 0064
0042 => GGET     9  11      ; "error"
0043    KSTR    10  12      ; "Unknown error thrown"
0044    UGET    11   2      ; util
0045    TGETS   11  11  13  ; "dump"
0046    MOV     12   6
0047    CALL    11   0   2
0048    CALLM    9   3   1
0049    MOV      7  10
0050    MOV      6   9
0051    JMP      8 => 0064
0052 => UGET     8   3      ; concat
0053    TNEW     9   3
0054    TSETB    5   9   1
0055    GGET    10  14      ; "debug"
0056    TGETS   10  10  15  ; "traceback"
0057    MOV     11   3
0058    CALL    10   0   2
0059    TSETM   10   0      ; 2
0060    KSTR    10  16      ; "\n"
0061    CALL     8   3   3
0062    MOV      7   9
0063    MOV      6   8
0064 => KPRI     8   0
0065    MOV      9   6
0066    ISTC    10   7
0067    JMP     10 => 0069
0068    TGETS   10   2  17  ; "last_pos"
0069 => UCLO     0 => 0070
0070 => RET      8   4
0071 => MOV      7   2
0072    TGETS    6   2  18  ; "render"
0073    CALL     6   2   2
0074    TGETS    7   2  19  ; "_lines"
0075    MOV      8   7
0076    TGETS    7   7  20  ; "flatten_posmap"
0077    CALL     7   2   2
0078    MOV      8   6
0079    MOV      9   7
0080    UCLO     0 => 0081
0081 => RET      8   3

-- BYTECODE -- compile.lua:0-749
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "moonscript.util"
0003    CALL     0   2   2
0004    GGET     1   0      ; "require"
0005    KSTR     2   2      ; "moonscript.dump"
0006    CALL     1   2   2
0007    GGET     2   0      ; "require"
0008    KSTR     3   3      ; "moonscript.transform"
0009    CALL     2   2   2
0010    KNIL     3   4
0011    GGET     5   0      ; "require"
0012    KSTR     6   4      ; "moonscript.transform.names"
0013    CALL     5   2   2
0014    TGETS    6   5   5  ; "NameProxy"
0015    TGETS    4   5   6  ; "LocalName"
0016    MOV      3   6
0017    KPRI     5   0
0018    GGET     6   0      ; "require"
0019    KSTR     7   7      ; "moonscript.data"
0020    CALL     6   2   2
0021    TGETS    5   6   8  ; "Set"
0022    KNIL     6   7
0023    GGET     8   0      ; "require"
0024    KSTR     9   9      ; "moonscript.types"
0025    CALL     8   2   2
0026    TGETS    9   8  10  ; "ntype"
0027    TGETS    7   8  11  ; "value_can_be_statement"
0028    MOV      6   9
0029    GGET     8   0      ; "require"
0030    KSTR     9  12      ; "moonscript.compile.statement"
0031    CALL     8   2   2
0032    GGET     9   0      ; "require"
0033    KSTR    10  13      ; "moonscript.compile.value"
0034    CALL     9   2   2
0035    KNIL    10  11
0036    GGET    12  14      ; "table"
0037    TGETS   13  12  15  ; "concat"
0038    TGETS   11  12  16  ; "insert"
0039    MOV     10  13
0040    KNIL    12  15
0041    TGETS   16   0  17  ; "pos_to_line"
0042    TGETS   17   0  18  ; "get_closest_line"
0043    TGETS   18   0  19  ; "trim"
0044    TGETS   15   0  20  ; "unpack"
0045    MOV     14  18
0046    MOV     13  17
0047    MOV     12  16
0048    TGETS   16   0  21  ; "moon"
0049    TGETS   16  16  22  ; "type"
0050    KSTR    17  23      ; "  "
0051    KNIL    18  23
0052    TDUP    24  25
0053    FNEW    25  24      ; compile.lua:31
0054    TSETS   25  24  26  ; "mark_pos"
0055    FNEW    25  27      ; compile.lua:39
0056    TSETS   25  24  28  ; "add"
0057    FNEW    25  29      ; compile.lua:50
0058    TSETS   25  24  30  ; "flatten_posmap"
0059    FNEW    25  31      ; compile.lua:76
0060    TSETS   25  24  32  ; "flatten"
0061    FNEW    25  33      ; compile.lua:111
0062    TSETS   25  24  34  ; "__tostring"
0063    TSETS   24  24  35  ; "__index"
0064    GGET    25  36      ; "setmetatable"
0065    TDUP    26  38
0066    FNEW    27  37      ; compile.lua:132
0067    TSETS   27  26  39  ; "__init"
0068    TSETS   24  26  40  ; "__base"
0069    TDUP    27  41
0070    TSETS   24  27  35  ; "__index"
0071    FNEW    28  42      ; compile.lua:139
0072    TSETS   28  27  43  ; "__call"
0073    CALL    25   2   3
0074    MOV     23  25
0075    TSETS   23  24  44  ; "__class"
0076    MOV     20  23
0077    UCLO    23 => 0078
0078 => KPRI    23   0
0079    TDUP    24  45
0080    FNEW    25  46      ; compile.lua:152
0081    TSETS   25  24  47  ; "append_list"
0082    FNEW    25  48      ; compile.lua:161
0083    TSETS   25  24  49  ; "append"
0084    FNEW    25  50      ; compile.lua:177
0085    TSETS   25  24  51  ; "render"
0086    FNEW    25  52      ; compile.lua:208
0087    TSETS   25  24  34  ; "__tostring"
0088    TSETS   24  24  35  ; "__index"
0089    GGET    25  36      ; "setmetatable"
0090    TDUP    26  54
0091    FNEW    27  53      ; compile.lua:214
0092    TSETS   27  26  39  ; "__init"
0093    TSETS   24  26  40  ; "__base"
0094    TDUP    27  55
0095    TSETS   24  27  35  ; "__index"
0096    FNEW    28  56      ; compile.lua:219
0097    TSETS   28  27  43  ; "__call"
0098    CALL    25   2   3
0099    MOV     23  25
0100    TSETS   23  24  44  ; "__class"
0101    MOV     18  23
0102    UCLO    23 => 0103
0103 => KPRI    23   0
0104    TDUP    24  58
0105    FNEW    25  57      ; compile.lua:231
0106    TSETS   25  24  59  ; "prepare"
0107    FNEW    25  60      ; compile.lua:232
0108    TSETS   25  24  51  ; "render"
0109    TSETS   24  24  35  ; "__index"
0110    GGET    25  36      ; "setmetatable"
0111    TDUP    26  62
0112    FNEW    27  61      ; compile.lua:239
0113    TSETS   27  26  39  ; "__init"
0114    TSETS   24  26  40  ; "__base"
0115    TDUP    27  63
0116    TSETS   24  27  35  ; "__index"
0117    FNEW    28  64      ; compile.lua:246
0118    TSETS   28  27  43  ; "__call"
0119    CALL    25   2   3
0120    MOV     23  25
0121    TSETS   23  24  44  ; "__class"
0122    MOV     19  23
0123    UCLO    23 => 0124
0124 => KPRI    23   0
0125    TDUP    24  65
0126    TSETS    9  24  66  ; "value_compilers"
0127    TSETS    8  24  67  ; "statement_compilers"
0128    FNEW    25  68      ; compile.lua:264
0129    TSETS   25  24  34  ; "__tostring"
0130    FNEW    25  69      ; compile.lua:273
0131    TSETS   25  24  70  ; "set"
0132    FNEW    25  71      ; compile.lua:276
0133    TSETS   25  24  72  ; "get"
0134    FNEW    25  73      ; compile.lua:279
0135    TSETS   25  24  74  ; "get_current"
0136    FNEW    25  75      ; compile.lua:282
0137    TSETS   25  24  76  ; "listen"
0138    FNEW    25  77      ; compile.lua:285
0139    TSETS   25  24  78  ; "unlisten"
0140    FNEW    25  79      ; compile.lua:288
0141    TSETS   25  24  80  ; "send"
0142    FNEW    25  81      ; compile.lua:296
0143    TSETS   25  24  82  ; "extract_assign_name"
0144    FNEW    25  83      ; compile.lua:312
0145    TSETS   25  24  84  ; "declare"
0146    FNEW    25  85      ; compile.lua:344
0147    TSETS   25  24  86  ; "whitelist_names"
0148    FNEW    25  87      ; compile.lua:347
0149    TSETS   25  24  88  ; "name_exported"
0150    FNEW    25  89      ; compile.lua:355
0151    TSETS   25  24  90  ; "put_name"
0152    FNEW    25  91      ; compile.lua:365
0153    TSETS   25  24  92  ; "has_name"
0154    FNEW    25  93      ; compile.lua:378
0155    TSETS   25  24  94  ; "is_local"
0156    FNEW    25  95      ; compile.lua:393
0157    TSETS   25  24  96  ; "free_name"
0158    FNEW    25  97      ; compile.lua:411
0159    TSETS   25  24  98  ; "init_free_var"
0160    FNEW    25  99      ; compile.lua:424
0161    TSETS   25  24  28  ; "add"
0162    FNEW    25 100      ; compile.lua:434
0163    TSETS   25  24  51  ; "render"
0164    FNEW    25 101      ; compile.lua:451
0165    TSETS   25  24 102  ; "block"
0166    FNEW    25 103      ; compile.lua:454
0167    TSETS   25  24 104  ; "line"
0168    FNEW    25 105      ; compile.lua:461
0169    TSETS   25  24 106  ; "is_stm"
0170    FNEW    25 107      ; compile.lua:464
0171    TSETS   25  24 108  ; "is_value"
0172    FNEW    25 109      ; compile.lua:468
0173    TSETS   25  24 110  ; "name"
0174    FNEW    25 111      ; compile.lua:475
0175    TSETS   25  24 112  ; "value"
0176    FNEW    25 113      ; compile.lua:504
0177    TSETS   25  24 114  ; "values"
0178    FNEW    25 115      ; compile.lua:521
0179    TSETS   25  24 116  ; "stm"
0180    FNEW    25 117      ; compile.lua:555
0181    TSETS   25  24 118  ; "stms"
0182    FNEW    25 119      ; compile.lua:570
0183    TSETS   25  24 120  ; "splice"
0184    TSETS   24  24  35  ; "__index"
0185    GGET    25  36      ; "setmetatable"
0186    TDUP    26 122
0187    FNEW    27 121      ; compile.lua:581
0188    TSETS   27  26  39  ; "__init"
0189    TSETS   24  26  40  ; "__base"
0190    TDUP    27 123
0191    TSETS   24  27  35  ; "__index"
0192    FNEW    28 124      ; compile.lua:610
0193    TSETS   28  27  43  ; "__call"
0194    CALL    25   2   3
0195    MOV     23  25
0196    TSETS   23  24  44  ; "__class"
0197    MOV     21  23
0198    UCLO    23 => 0199
0199 => KPRI    23   0
0200    MOV     24  21
0201    TDUP    25 126
0202    FNEW    26 125      ; compile.lua:623
0203    TSETS   26  25  34  ; "__tostring"
0204    FNEW    26 127      ; compile.lua:626
0205    TSETS   26  25 128  ; "root_stms"
0206    FNEW    26 129      ; compile.lua:632
0207    TSETS   26  25  51  ; "render"
0208    TSETS   25  25  35  ; "__index"
0209    GGET    26  36      ; "setmetatable"
0210    MOV     27  25
0211    TGETS   28  24  40  ; "__base"
0212    CALL    26   1   3
0213    GGET    26  36      ; "setmetatable"
0214    TDUP    27 131
0215    FNEW    28 130      ; compile.lua:643
0216    TSETS   28  27  39  ; "__init"
0217    TSETS   25  27  40  ; "__base"
0218    TSETS   24  27 132  ; "__parent"
0219    TDUP    28 134
0220    FNEW    29 133      ; compile.lua:652
0221    TSETS   29  28  35  ; "__index"
0222    FNEW    29 135      ; compile.lua:663
0223    TSETS   29  28  43  ; "__call"
0224    CALL    26   2   3
0225    MOV     23  26
0226    TSETS   23  25  44  ; "__class"
0227    TGETS   26  24 136  ; "__inherited"
0228    ISF         26
0229    JMP     27 => 0234
0230    TGETS   26  24 136  ; "__inherited"
0231    MOV     27  24
0232    MOV     28  23
0233    CALL    26   1   3
0234 => MOV     22  23
0235    UCLO    23 => 0236
0236 => KPRI    23   0
0237    FNEW    23 137      ; compile.lua:676
0238    KPRI    24   0
0239    FNEW    24 138      ; compile.lua:691
0240    KPRI    25   0
0241    FNEW    25 139      ; compile.lua:701
0242    GGET    26   0      ; "require"
0243    KSTR    27   7      ; "moonscript.data"
0244    CALL    26   2   2
0245    GGET    27 140      ; "pairs"
0246    TDUP    28 141
0247    TSETS   18  28 142  ; "Line"
0248    TSETS   20  28 143  ; "Lines"
0249    TSETS   19  28 144  ; "DelayedLine"
0250    CALL    27   4   2
0251    ISNEXT  30 => 0253
0252 => TSETV   31  26  30
0253 => ITERN   30   3   3
0254    ITERL   30 => 0252
0255    TDUP    26 145
0256    TSETS   25  26 146  ; "tree"
0257    TSETS   24  26 112  ; "value"
0258    TSETS   23  26 147  ; "format_error"
0259    TSETS   21  26 148  ; "Block"
0260    TSETS   22  26 149  ; "RootBlock"
0261    UCLO     0 => 0262
0262 => RET1    26   2

-----------------------
-- BYTECODE -- transform.lua:0-5
0001    TDUP     0   2
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.transform.statement"
0004    CALL     1   2   2
0005    TSETS    1   0   3  ; "Statement"
0006    GGET     1   0      ; "require"
0007    KSTR     2   4      ; "moonscript.transform.value"
0008    CALL     1   2   2
0009    TSETS    1   0   5  ; "Value"
0010    RET1     0   2

-----------------------
-- BYTECODE -- env.lua:20-32
0001    TNEW     0   0
0002    KSHORT   1   1
0003    TNEW     2   3
0004    VARG     3   0   0
0005    TSETM    3   0      ; 1
0006    KSHORT   3   1
0007    LEN      4   2
0008    KSHORT   5   1
0009    FORI     3 => 0017
0010 => TGETV    7   2   6
0011    GGET     8   0      ; "tostring"
0012    MOV      9   7
0013    CALL     8   2   2
0014    TSETV    8   0   1
0015    ADDVN    1   1   1  ; 1
0016    FORL     3 => 0010
0017 => RET1     0   2

-- BYTECODE -- env.lua:19-34
0001    GGET     0   0      ; "table"
0002    TGETS    0   0   1  ; "concat"
0003    FNEW     1   2      ; env.lua:20
0004    VARG     2   0   0
0005    CALLM    1   2   0
0006    KSTR     2   3      ; ", "
0007    CALL     0   2   3
0008    GGET     1   4      ; "io"
0009    TGETS    1   1   5  ; "stderr"
0010    MOV      2   1
0011    TGETS    1   1   6  ; "write"
0012    GGET     3   7      ; "tostring"
0013    UGET     4   0      ; indent_char
0014    MOV      5   4
0015    TGETS    4   4   8  ; "rep"
0016    UGET     6   1      ; indent
0017    CALL     4   0   3
0018    CALLM    3   2   0
0019    GGET     4   7      ; "tostring"
0020    MOV      5   0
0021    CALL     4   2   2
0022    KSTR     5   9      ; "\n"
0023    CAT      3   3   5
0024    UCLO     0 => 0025
0025 => CALLT    1   3

-- BYTECODE -- env.lua:37-42
0001    MOV      3   0
0002    TGETS    2   0   0  ; "sub"
0003    MOV      4   1
0004    KSHORT   5  -1
0005    CALL     2   2   4
0006    MOV      3   2
0007    TGETS    2   2   1  ; "match"
0008    KSTR     4   2      ; "^([^\n]*)"
0009    CALL     2   2   3
0010    UGET     3   0      ; iprint
0011    KSTR     4   3      ; "* "
0012    GGET     5   4      ; "tostring"
0013    UGET     6   1      ; name
0014    CALL     5   2   2
0015    KSTR     6   5      ; " ("
0016    GGET     7   4      ; "tostring"
0017    MOV      8   2
0018    CALL     7   2   2
0019    KSTR     8   6      ; ")"
0020    CAT      4   4   8
0021    CALL     3   1   2
0022    UGET     3   2      ; indent
0023    ADDVN    3   3   0  ; 1
0024    USETV    2   3      ; indent
0025    KPRI     3   2
0026    RET1     3   2

-- BYTECODE -- env.lua:42-46
0001    UGET     2   0      ; iprint
0002    UGET     3   1      ; name
0003    KPRI     4   2
0004    CALL     2   1   3
0005    UGET     2   2      ; indent
0006    SUBVN    2   2   0  ; 1
0007    USETV    2   2      ; indent
0008    KPRI     2   2
0009    VARG     3   0   2
0010    RETM     2   1

-- BYTECODE -- env.lua:46-50
0001    UGET     0   0      ; iprint
0002    UGET     1   1      ; name
0003    KPRI     2   1
0004    CALL     0   1   3
0005    UGET     0   2      ; indent
0006    SUBVN    0   0   0  ; 1
0007    USETV    2   0      ; indent
0008    KPRI     0   1
0009    RET1     0   2

-- BYTECODE -- env.lua:35-52
0001    UGET     1   0      ; V
0002    MOV      2   0
0003    CALL     1   2   2
0004    UGET     2   1      ; Cmt
0005    KSTR     3   0      ; ""
0006    FNEW     4   1      ; env.lua:37
0007    CALL     2   2   3
0008    UGET     3   1      ; Cmt
0009    MOV      4   1
0010    FNEW     5   2      ; env.lua:42
0011    CALL     3   2   3
0012    MULVV    2   2   3
0013    UGET     3   1      ; Cmt
0014    KSTR     4   0      ; ""
0015    FNEW     5   3      ; env.lua:46
0016    CALL     3   2   3
0017    ADDVV    1   2   3
0018    UCLO     0 => 0019
0019 => RET1     1   2

-- BYTECODE -- env.lua:55-65
0001    UGET     2   0      ; env
0002    TGETV    2   2   1
0003    ISEQP    2   0
0004    JMP      3 => 0006
0005    RET1     2   2
0006 => MOV      4   1
0007    TGETS    3   1   0  ; "match"
0008    KSTR     5   1      ; "^[A-Z][A-Za-z0-9]*$"
0009    CALL     3   2   3
0010    ISF          3
0011    JMP      4 => 0016
0012    UGET     3   1      ; wrap_name
0013    MOV      4   1
0014    CALL     3   2   2
0015    RET1     3   2
0016 => GGET     3   2      ; "error"
0017    KSTR     4   3      ; "unknown variable referenced: "
0018    GGET     5   4      ; "tostring"
0019    MOV      6   1
0020    CALL     5   2   2
0021    CAT      4   4   5
0022    CALLT    3   2

-- BYTECODE -- env.lua:7-67
0001    KNIL     2   3
0002    GGET     4   0      ; "require"
0003    KSTR     5   1      ; "lpeg"
0004    CALL     4   2   2
0005    TGETS    5   4   2  ; "V"
0006    TGETS    3   4   3  ; "Cmt"
0007    MOV      2   5
0008    UGET     4   0      ; getfenv
0009    MOV      5   1
0010    CALL     4   2   2
0011    MOV      5   2
0012    ISF          0
0013    JMP      6 => 0020
0014    KSHORT   6   0
0015    KSTR     7   4      ; "  "
0016    KPRI     8   0
0017    FNEW     8   5      ; env.lua:19
0018    FNEW     5   6      ; env.lua:35
0019    UCLO     6 => 0020
0020 => UGET     6   1      ; setfenv
0021    MOV      7   1
0022    GGET     8   7      ; "setmetatable"
0023    TNEW     9   0
0024    TDUP    10   9
0025    FNEW    11   8      ; env.lua:55
0026    TSETS   11  10  10  ; "__index"
0027    CALL     8   0   3
0028    UCLO     0 => 0029
0029 => CALLMT   6   1

-- BYTECODE -- env.lua:0-71
0001    KNIL     0   1
0002    GGET     2   0      ; "require"
0003    KSTR     3   1      ; "moonscript.util"
0004    CALL     2   2   2
0005    TGETS    3   2   2  ; "getfenv"
0006    TGETS    1   2   3  ; "setfenv"
0007    MOV      0   3
0008    KPRI     2   0
0009    FNEW     2   4      ; env.lua:7
0010    TDUP     3   5
0011    TSETS    2   3   6  ; "wrap_env"
0012    UCLO     0 => 0013
0013 => RET1     3   2

-----------------------
-- BYTECODE -- literals.lua:9-11
0001    LEN      1   0
0002    RET1     1   2

-- BYTECODE -- literals.lua:0-40
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.util"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "safe_module"
0006    KNIL     1   4
0007    GGET     5   0      ; "require"
0008    KSTR     6   3      ; "lpeg"
0009    CALL     5   2   2
0010    TGETS    6   5   4  ; "S"
0011    TGETS    7   5   5  ; "P"
0012    TGETS    8   5   6  ; "R"
0013    TGETS    4   5   7  ; "C"
0014    MOV      3   8
0015    MOV      2   7
0016    MOV      1   6
0017    GGET     5   0      ; "require"
0018    KSTR     6   3      ; "lpeg"
0019    CALL     5   2   2
0020    TGETS    6   5   8  ; "luversion"
0021    ISF          6
0022    JMP      7 => 0026
0023    TGETS    6   5   9  ; "L"
0024    IST          6
0025    JMP      7 => 0027
0026 => FNEW     6  10      ; literals.lua:9
0027 => MOV      7   1
0028    KSTR     8  11      ; " \t\r\n"
0029    CALL     7   2   2
0030    KSHORT   8   0
0031    POW      7   7   8
0032    MOV      8   1
0033    KSTR     9  12      ; " \t"
0034    CALL     8   2   2
0035    KSHORT   9   0
0036    POW      8   8   9
0037    MOV      9   2
0038    KSTR    10  13      ; "\r"
0039    CALL     9   2   2
0040    KSHORT  10  -1
0041    POW      9   9  10
0042    MOV     10   2
0043    KSTR    11  14      ; "\n"
0044    CALL    10   2   2
0045    MULVV    9   9  10
0046    ADDVN   10   9   0  ; -1
0047    MOV     11   2
0048    KSTR    12  15      ; "--"
0049    CALL    11   2   2
0050    MOV     12   1
0051    KSTR    13  16      ; "\r\n"
0052    CALL    12   2   2
0053    SUBNV   12  12   1  ; 1
0054    KSHORT  13   0
0055    POW     12  12  13
0056    MULVV   11  11  12
0057    MOV     12   6
0058    MOV     13  10
0059    CALL    12   2   2
0060    MULVV   11  11  12
0061    KSHORT  12  -1
0062    POW     12  11  12
0063    MULVV   12   8  12
0064    MOV     13   1
0065    KSTR    14  12      ; " \t"
0066    CALL    13   2   2
0067    KSHORT  14   1
0068    POW     13  13  14
0069    KSHORT  14  -1
0070    POW     14  11  14
0071    MULVV   13  13  14
0072    MULVV   14  12   9
0073    MOV     15  14
0074    MOV     16   3
0075    KSTR    17  17      ; "az"
0076    KSTR    18  18      ; "AZ"
0077    KSTR    19  19      ; "09"
0078    KSTR    20  20      ; "__"
0079    CALL    16   2   5
0080    MOV     17   4
0081    MOV     18   3
0082    KSTR    19  17      ; "az"
0083    KSTR    20  18      ; "AZ"
0084    KSTR    21  20      ; "__"
0085    CALL    18   2   4
0086    KSHORT  19   0
0087    POW     19  16  19
0088    MULVV   18  18  19
0089    CALL    17   2   2
0090    MOV     18   2
0091    KSTR    19  21      ; "0x"
0092    CALL    18   2   2
0093    MOV     19   3
0094    KSTR    20  19      ; "09"
0095    KSTR    21  22      ; "af"
0096    KSTR    22  23      ; "AF"
0097    CALL    19   2   4
0098    KSHORT  20   1
0099    POW     19  19  20
0100    MULVV   18  18  19
0101    MOV     19   1
0102    KSTR    20  24      ; "uU"
0103    CALL    19   2   2
0104    KSHORT  20  -1
0105    POW     19  19  20
0106    MOV     20   1
0107    KSTR    21  25      ; "lL"
0108    CALL    20   2   2
0109    KSHORT  21   2
0110    POW     20  20  21
0111    MULVV   19  19  20
0112    KSHORT  20  -1
0113    POW     19  19  20
0114    MULVV   18  18  19
0115    MOV     19   3
0116    KSTR    20  19      ; "09"
0117    CALL    19   2   2
0118    KSHORT  20   1
0119    POW     19  19  20
0120    MOV     20   1
0121    KSTR    21  24      ; "uU"
0122    CALL    20   2   2
0123    KSHORT  21  -1
0124    POW     20  20  21
0125    MOV     21   1
0126    KSTR    22  25      ; "lL"
0127    CALL    21   2   2
0128    KSHORT  22   2
0129    POW     21  21  22
0130    MULVV   20  20  21
0131    MULVV   19  19  20
0132    ADDVV   18  18  19
0133    MOV     19   3
0134    KSTR    20  19      ; "09"
0135    CALL    19   2   2
0136    KSHORT  20   1
0137    POW     19  19  20
0138    MOV     20   2
0139    KSTR    21  26      ; "."
0140    CALL    20   2   2
0141    MOV     21   3
0142    KSTR    22  19      ; "09"
0143    CALL    21   2   2
0144    KSHORT  22   1
0145    POW     21  21  22
0146    MULVV   20  20  21
0147    KSHORT  21  -1
0148    POW     20  20  21
0149    MULVV   19  19  20
0150    MOV     20   2
0151    KSTR    21  26      ; "."
0152    CALL    20   2   2
0153    MOV     21   3
0154    KSTR    22  19      ; "09"
0155    CALL    21   2   2
0156    KSHORT  22   1
0157    POW     21  21  22
0158    MULVV   20  20  21
0159    ADDVV   19  19  20
0160    MOV     20   1
0161    KSTR    21  27      ; "eE"
0162    CALL    20   2   2
0163    MOV     21   2
0164    KSTR    22  28      ; "-"
0165    CALL    21   2   2
0166    KSHORT  22  -1
0167    POW     21  21  22
0168    MULVV   20  20  21
0169    MOV     21   3
0170    KSTR    22  19      ; "09"
0171    CALL    21   2   2
0172    KSHORT  22   1
0173    POW     21  21  22
0174    MULVV   20  20  21
0175    KSHORT  21  -1
0176    POW     20  20  21
0177    MULVV   19  19  20
0178    ADDVV   18  18  19
0179    MOV     19   2
0180    KSTR    20  29      ; "#!"
0181    CALL    19   2   2
0182    MOV     20   2
0183    SUBNV   21  10   1  ; 1
0184    CALL    20   2   2
0185    KSHORT  21   0
0186    POW     20  20  21
0187    MULVV   19  19  20
0188    MOV     20   0
0189    KSTR    21  30      ; "moonscript.parse.literals"
0190    TDUP    22  31
0191    TSETS    6  22   9  ; "L"
0192    TSETS    7  22  32  ; "White"
0193    TSETS    9  22  33  ; "Break"
0194    TSETS   10  22  34  ; "Stop"
0195    TSETS   11  22  35  ; "Comment"
0196    TSETS   12  22  36  ; "Space"
0197    TSETS   13  22  37  ; "SomeSpace"
0198    TSETS   14  22  38  ; "SpaceBreak"
0199    TSETS   15  22  39  ; "EmptyLine"
0200    TSETS   16  22  40  ; "AlphaNum"
0201    TSETS   17  22  41  ; "Name"
0202    TSETS   18  22  42  ; "Num"
0203    TSETS   19  22  43  ; "Shebang"
0204    UCLO     0 => 0205
0205 => CALLT   20   3

-----------------------
-- BYTECODE -- util.lua:12-25
0001    KSHORT   1   0
0002    MOV      3   0
0003    TGETS    2   0   0  ; "gmatch"
0004    KSTR     4   1      ; "[\t ]"
0005    CALL     2   4   3
0006    JMP      5 => 0015
0007 => MOV      6   5
0008    ISNES    6   2      ; " "
0009    JMP      7 => 0012
0010    ADDVN    1   1   0  ; 1
0011    JMP      7 => 0015
0012 => ISNES    6   3      ; "\t"
0013    JMP      7 => 0015
0014    ADDVN    1   1   1  ; 4
0015 => ITERC    5   2   3
0016    ITERL    5 => 0007
0017    RET1     1   2

-- BYTECODE -- util.lua:26-28
0001    KPRI     0   1
0002    RET1     0   2

-- BYTECODE -- util.lua:30-32
0001    MULVV    2   0   1
0002    UGET     3   0      ; Cut
0003    MULVV    3   1   3
0004    ADDVV    2   2   3
0005    RET1     2   2

-- BYTECODE -- util.lua:34-43
0001    MOV      3   0
0002    TGETS    2   0   0  ; "sub"
0003    MOV      4   1
0004    CALL     2   2   3
0005    MOV      0   2
0006    MOV      3   0
0007    TGETS    2   0   1  ; "match"
0008    KSTR     4   2      ; "^(.-)\n"
0009    CALL     2   2   3
0010    ISF          2
0011    JMP      3 => 0013
0012    RET1     2   2
0013 => MOV      3   0
0014    TGETS    2   0   1  ; "match"
0015    KSTR     4   3      ; "^.-$"
0016    CALLT    2   3

-- BYTECODE -- util.lua:45-95
0001    ISNEP    2   0
0002    JMP      3 => 0004
0003    KPRI     2   2
0004 => TNEW     3   3
0005    TNEW     4   0
0006    TSETB    4   3   1
0007    MOV      5   0
0008    TGETS    4   0   0  ; "gmatch"
0009    KSTR     6   1      ; "."
0010    CALL     4   4   3
0011    JMP      7 => 0031
0012 => LEN      8   3
0013    LEN      9   3
0014    TGETV    9   3   9
0015    IST          9
0016    JMP     10 => 0018
0017    TNEW     9   0
0018 => TSETV    9   3   8
0019    GGET     8   2      ; "table"
0020    TGETS    8   8   3  ; "insert"
0021    LEN      9   3
0022    TGETV    9   3   9
0023    MOV     10   7
0024    CALL     8   1   3
0025    ISNES    7   4      ; "\n"
0026    JMP      8 => 0031
0027    LEN      8   3
0028    ADDVN    8   8   0  ; 1
0029    TNEW     9   0
0030    TSETV    9   3   8
0031 => ITERC    7   2   3
0032    ITERL    7 => 0012
0033    GGET     4   5      ; "ipairs"
0034    MOV      5   3
0035    CALL     4   4   2
0036    JMP      7 => 0042
0037 => GGET     9   2      ; "table"
0038    TGETS    9   9   6  ; "concat"
0039    MOV     10   8
0040    CALL     9   2   2
0041    TSETV    9   3   7
0042 => ITERC    7   3   3
0043    ITERL    7 => 0037
0044    KPRI     4   0
0045    SUBVN    5   1   0  ; 1
0046    GGET     6   5      ; "ipairs"
0047    MOV      7   3
0048    CALL     6   4   2
0049    JMP      9 => 0098
0050 => LEN     11  10
0051    ISGE     5  11
0052    JMP     11 => 0096
0053    MOV     12  10
0054    TGETS   11  10   7  ; "sub"
0055    KSHORT  13   1
0056    MOV     14   5
0057    CALL    11   2   4
0058    MOV     13  10
0059    TGETS   12  10   7  ; "sub"
0060    ADDVN   14   5   0  ; 1
0061    CALL    12   2   3
0062    TNEW    13   3
0063    GGET    14   8      ; "tostring"
0064    MOV     15  11
0065    CALL    14   2   2
0066    KSTR    15   9      ; "◉"
0067    GGET    16   8      ; "tostring"
0068    MOV     17  12
0069    CALL    16   2   2
0070    CAT     14  14  16
0071    TSETB   14  13   1
0072    MOV      4  13
0073    ISF          2
0074    JMP     13 => 0100
0075    SUBVN   13   9   0  ; 1
0076    TGETV   13   3  13
0077    ISF         13
0078    JMP     14 => 0085
0079    GGET    14   2      ; "table"
0080    TGETS   14  14   3  ; "insert"
0081    MOV     15   4
0082    KSHORT  16   1
0083    MOV     17  13
0084    CALL    14   1   4
0085 => ADDVN   13   9   0  ; 1
0086    TGETV   13   3  13
0087    ISF         13
0088    JMP     14 => 0100
0089    GGET    14   2      ; "table"
0090    TGETS   14  14   3  ; "insert"
0091    MOV     15   4
0092    MOV     16  13
0093    CALL    14   1   3
0094    JMP      6 => 0100
0095    JMP     11 => 0098
0096 => LEN     11  10
0097    SUBVV    5   5  11
0098 => ITERC    9   3   3
0099    ITERL    9 => 0050
0100 => IST          4
0101    JMP      6 => 0104
0102    KSTR     6  10      ; "-"
0103    RET1     6   2
0104 => GGET     6   2      ; "table"
0105    TGETS    6   6   6  ; "concat"
0106    MOV      7   4
0107    CALL     6   2   2
0108    MOV      4   6
0109    MOV      7   4
0110    TGETS    6   4  11  ; "gsub"
0111    KSTR     8  12      ; "\n*$"
0112    KSTR     9  13      ; ""
0113    CALL     6   2   4
0114    RET1     6   2

-- BYTECODE -- util.lua:98-103
0001    TNEW     0   3
0002    UGET     1   0      ; name
0003    TSETB    1   0   1
0004    VARG     1   0   0
0005    TSETM    1   0      ; 2
0006    RET1     0   2

-- BYTECODE -- util.lua:97-104
0001    FNEW     1   0      ; util.lua:98
0002    UCLO     0 => 0003
0003 => RET1     1   2

-- BYTECODE -- util.lua:107-112
0001    GGET     2   0      ; "type"
0002    MOV      3   1
0003    CALL     2   2   2
0004    ISNES    2   1      ; "table"
0005    JMP      2 => 0008
0006    KSHORT   2  -1
0007    TSETV    0   1   2
0008 => RET1     1   2

-- BYTECODE -- util.lua:106-113
0001    UGET     1   0      ; Cp
0002    CALL     1   2   1
0003    MULVV    1   1   0
0004    FNEW     2   0      ; util.lua:107
0005    DIVVV    1   1   2
0006    UCLO     0 => 0007
0007 => RET1     1   2

-- BYTECODE -- util.lua:119-122
0001    GGET     2   0      ; "print"
0002    KSTR     3   1      ; "++ got "
0003    GGET     4   2      ; "tostring"
0004    UGET     5   0      ; what
0005    CALL     4   2   2
0006    CAT      3   3   4
0007    KSTR     4   3      ; "["
0008    GGET     5   2      ; "tostring"
0009    UGET     6   1      ; show_line_position
0010    MOV      7   0
0011    MOV      8   1
0012    UGET     9   2      ; context
0013    CALL     6   0   4
0014    CALLM    5   2   0
0015    KSTR     6   4      ; "]"
0016    CAT      4   4   6
0017    CALL     2   1   3
0018    KPRI     2   2
0019    RET1     2   2

-- BYTECODE -- util.lua:115-123
0001    ISNEP    1   0
0002    JMP      2 => 0004
0003    KPRI     1   2
0004 => UGET     2   0      ; Cmt
0005    KSTR     3   0      ; ""
0006    FNEW     4   1      ; util.lua:119
0007    UCLO     0 => 0008
0008 => CALLT    2   3

-- BYTECODE -- util.lua:126-132
0001    LEN      1   0
0002    ISNEN    1   0      ; 1
0003    JMP      1 => 0006
0004    TGETB    1   0   1
0005    RET1     1   2
0006 => GGET     1   0      ; "table"
0007    TGETS    1   1   1  ; "insert"
0008    MOV      2   0
0009    KSHORT   3   1
0010    UGET     4   0      ; name
0011    CALL     1   1   4
0012    RET1     0   2

-- BYTECODE -- util.lua:125-133
0001    FNEW     1   0      ; util.lua:126
0002    UCLO     0 => 0003
0003 => RET1     1   2

-- BYTECODE -- util.lua:141-153
0001    ISNES    0   0      ; "..."
0002    JMP      1 => 0005
0003    KPRI     1   1
0004    RET1     1   2
0005 => UGET     1   0      ; ntype
0006    MOV      2   0
0007    CALL     1   2   2
0008    ISEQS    1   1      ; "ref"
0009    JMP      2 => 0018
0010    ISEQS    1   2      ; "self"
0011    JMP      2 => 0018
0012    ISEQS    1   3      ; "value"
0013    JMP      2 => 0018
0014    ISEQS    1   4      ; "self_class"
0015    JMP      2 => 0018
0016    ISNES    1   5      ; "table"
0017    JMP      2 => 0021
0018 => KPRI     2   2
0019    RET1     2   2
0020    JMP      2 => 0033
0021 => ISNES    1   6      ; "chain"
0022    JMP      2 => 0031
0023    UGET     2   1      ; chain_assignable
0024    UGET     3   0      ; ntype
0025    LEN      4   0
0026    TGETV    4   0   4
0027    CALL     3   2   2
0028    TGETV    2   2   3
0029    RET1     2   2
0030    JMP      2 => 0033
0031 => KPRI     2   1
0032    RET1     2   2
0033 => RET0     0   1

-- BYTECODE -- util.lua:156-162
0001    UGET     3   0      ; is_assignable
0002    MOV      4   2
0003    CALL     3   2   2
0004    ISF          3
0005    JMP      4 => 0010
0006    KPRI     3   2
0007    MOV      4   2
0008    RET      3   3
0009    JMP      3 => 0012
0010 => KPRI     3   1
0011    RET1     3   2
0012 => RET0     0   1

-- BYTECODE -- util.lua:166-196
0001    IST          1
0002    JMP      2 => 0006
0003    UGET     2   0      ; flatten_explist
0004    MOV      3   0
0005    CALLT    2   2
0006 => KSHORT   2   1
0007    LEN      3   0
0008    KSHORT   4   1
0009    FORI     2 => 0021
0010 => TGETV    6   0   5
0011    UGET     7   1      ; is_assignable
0012    MOV      8   6
0013    CALL     7   2   2
0014    IST          7
0015    JMP      7 => 0020
0016    GGET     7   0      ; "error"
0017    TDUP     8   1
0018    TSETB    6   8   1
0019    CALL     7   1   2
0020 => FORL     2 => 0010
0021 => UGET     2   2      ; ntype
0022    MOV      3   1
0023    CALL     2   2   2
0024    MOV      3   2
0025    ISNES    3   2      ; "assign"
0026    JMP      4 => 0036
0027    TDUP     4   3
0028    TSETB    0   4   2
0029    UGET     5   3      ; unpack
0030    MOV      6   1
0031    KSHORT   7   2
0032    CALL     5   0   3
0033    TSETM    5   0      ; 3
0034    RET1     4   2
0035    JMP      4 => 0055
0036 => ISNES    3   4      ; "update"
0037    JMP      4 => 0048
0038    TDUP     4   5
0039    TGETB    5   0   1
0040    TSETB    5   4   2
0041    UGET     5   3      ; unpack
0042    MOV      6   1
0043    KSHORT   7   2
0044    CALL     5   0   3
0045    TSETM    5   0      ; 3
0046    RET1     4   2
0047    JMP      4 => 0055
0048 => GGET     4   0      ; "error"
0049    KSTR     5   6      ; "unknown assign expression: "
0050    GGET     6   7      ; "tostring"
0051    MOV      7   2
0052    CALL     6   2   2
0053    CAT      5   5   6
0054    CALLT    4   2
0055 => RET0     0   1

-- BYTECODE -- util.lua:199-207
0001    ISF          1
0002    JMP      2 => 0009
0003    UGET     2   0      ; format_assign
0004    TNEW     3   3
0005    TSETB    0   3   1
0006    MOV      4   1
0007    CALLT    2   3
0008    JMP      2 => 0010
0009 => RET1     0   2
0010 => RET0     0   1

-- BYTECODE -- util.lua:209-211
0001    UGET     1   0      ; Space
0002    MULVV    1   1   0
0003    RET1     1   2

-- BYTECODE -- util.lua:213-215
0001    RET1     0   2

-- BYTECODE -- util.lua:217-226
0001    UGET     2   0      ; P
0002    KSTR     3   0      ; "\"
0003    GGET     4   1      ; "tostring"
0004    MOV      5   0
0005    CALL     4   2   2
0006    CAT      3   3   4
0007    CALL     2   2   2
0008    KSTR     3   2      ; "\\"
0009    ADDVV    2   2   3
0010    UGET     3   0      ; P
0011    MOV      4   0
0012    CALL     3   2   2
0013    SUBNV    3   3   0  ; 1
0014    ADDVV    2   2   3
0015    ISF          1
0016    JMP      3 => 0041
0017    UGET     3   1      ; symx
0018    KSTR     4   3      ; "#{"
0019    CALL     3   2   2
0020    UGET     4   2      ; V
0021    KSTR     5   4      ; "Exp"
0022    CALL     4   2   2
0023    MULVV    3   3   4
0024    UGET     4   3      ; sym
0025    KSTR     5   5      ; "}"
0026    CALL     4   2   2
0027    MULVV    3   3   4
0028    UGET     4   4      ; C
0029    SUBVV    5   2   3
0030    KSHORT   6   1
0031    POW      5   5   6
0032    CALL     4   2   2
0033    UGET     5   5      ; mark
0034    KSTR     6   6      ; "interpolate"
0035    CALL     5   2   2
0036    DIVVV    5   3   5
0037    ADDVV    4   4   5
0038    KSHORT   5   0
0039    POW      2   4   5
0040    JMP      3 => 0046
0041 => UGET     3   4      ; C
0042    KSHORT   4   0
0043    POW      4   2   4
0044    CALL     3   2   2
0045    MOV      2   3
0046 => UGET     3   4      ; C
0047    UGET     4   1      ; symx
0048    MOV      5   0
0049    CALL     4   0   2
0050    CALLM    3   2   0
0051    MULVV    3   3   2
0052    UGET     4   3      ; sym
0053    MOV      5   0
0054    CALL     4   2   2
0055    MULVV    3   3   4
0056    UGET     4   5      ; mark
0057    KSTR     5   7      ; "string"
0058    CALL     4   2   2
0059    DIVVV    3   3   4
0060    RET1     3   2

-- BYTECODE -- util.lua:228-235
0001    TDUP     1   0
0002    TNEW     2   3
0003    TSETB    0   2   1
0004    TSETB    2   1   2
0005    RET1     1   2

-- BYTECODE -- util.lua:237-254
0001    LEN      2   1
0002    ISNEN    2   0      ; 0
0003    JMP      2 => 0005
0004    RET1     0   2
0005 => TDUP     2   0
0006    TSETB    1   2   2
0007    MOV      1   2
0008    UGET     2   0      ; ntype
0009    MOV      3   0
0010    CALL     2   2   2
0011    ISNES    2   1      ; "chain"
0012    JMP      2 => 0019
0013    GGET     2   2      ; "table"
0014    TGETS    2   2   3  ; "insert"
0015    MOV      3   0
0016    MOV      4   1
0017    CALL     2   1   3
0018    RET1     0   2
0019 => TDUP     2   4
0020    TSETB    0   2   2
0021    TSETB    1   2   3
0022    RET1     2   2

-- BYTECODE -- util.lua:256-265
0001    IST          1
0002    JMP      2 => 0004
0003    RET1     0   2
0004 => TDUP     2   0
0005    TSETB    0   2   2
0006    TSETB    1   2   3
0007    RET1     2   2

-- BYTECODE -- util.lua:267-269
0001    LEN      4   3
0002    LEN      5   2
0003    ISEQV    4   5
0004    JMP      4 => 0007
0005    KPRI     4   1
0006    JMP      5 => 0008
0007 => KPRI     4   2
0008 => RET1     4   2

-- BYTECODE -- util.lua:271-283
0001    TNEW     2   3
0002    TDUP     3   0
0003    TSETB    0   3   2
0004    TSETB    3   2   1
0005    TDUP     3   1
0006    TSETB    0   3   2
0007    KSHORT   4  -1
0008    TSETV    1   3   4
0009    TSETB    3   2   2
0010    RET1     2   2

-- BYTECODE -- util.lua:0-307
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.util"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "unpack"
0006    KNIL     1   6
0007    GGET     7   0      ; "require"
0008    KSTR     8   3      ; "lpeg"
0009    CALL     7   2   2
0010    TGETS    8   7   4  ; "P"
0011    TGETS    9   7   5  ; "C"
0012    TGETS   10   7   6  ; "S"
0013    TGETS   11   7   7  ; "Cp"
0014    TGETS   12   7   8  ; "Cmt"
0015    TGETS    6   7   9  ; "V"
0016    MOV      5  12
0017    MOV      4  11
0018    MOV      3  10
0019    MOV      2   9
0020    MOV      1   8
0021    KPRI     7   0
0022    GGET     8   0      ; "require"
0023    KSTR     9  10      ; "moonscript.types"
0024    CALL     8   2   2
0025    TGETS    7   8  11  ; "ntype"
0026    KPRI     8   0
0027    GGET     9   0      ; "require"
0028    KSTR    10  12      ; "moonscript.parse.literals"
0029    CALL     9   2   2
0030    TGETS    8   9  13  ; "Space"
0031    MOV      9   2
0032    MOV     10   3
0033    KSTR    11  14      ; "\t "
0034    CALL    10   2   2
0035    KSHORT  11   0
0036    POW     10  10  11
0037    CALL     9   2   2
0038    FNEW    10  15      ; util.lua:12
0039    DIVVV    9   9  10
0040    MOV     10   1
0041    FNEW    11  16      ; util.lua:26
0042    CALL    10   2   2
0043    KPRI    11   0
0044    FNEW    11  17      ; util.lua:30
0045    KPRI    12   0
0046    FNEW    12  18      ; util.lua:34
0047    KPRI    13   0
0048    FNEW    13  19      ; util.lua:45
0049    KPRI    14   0
0050    FNEW    14  20      ; util.lua:97
0051    KPRI    15   0
0052    FNEW    15  21      ; util.lua:106
0053    KPRI    16   0
0054    FNEW    16  22      ; util.lua:115
0055    KPRI    17   0
0056    FNEW    17  23      ; util.lua:125
0057    KPRI    18   0
0058    TDUP    19  24
0059    FNEW    18  25      ; util.lua:141
0060    UCLO    19 => 0061
0061 => KPRI    19   0
0062    FNEW    19  26      ; util.lua:156
0063    KPRI    20   0
0064    MOV     21  17
0065    KSTR    22  27      ; "explist"
0066    CALL    21   2   2
0067    FNEW    20  28      ; util.lua:166
0068    UCLO    21 => 0069
0069 => KPRI    21   0
0070    FNEW    21  29      ; util.lua:199
0071    KPRI    22   0
0072    FNEW    22  30      ; util.lua:209
0073    KPRI    23   0
0074    FNEW    23  31      ; util.lua:213
0075    KPRI    24   0
0076    FNEW    24  32      ; util.lua:217
0077    KPRI    25   0
0078    FNEW    25  33      ; util.lua:228
0079    KPRI    26   0
0080    FNEW    26  34      ; util.lua:237
0081    KPRI    27   0
0082    FNEW    27  35      ; util.lua:256
0083    KPRI    28   0
0084    FNEW    28  36      ; util.lua:267
0085    KPRI    29   0
0086    FNEW    29  37      ; util.lua:271
0087    TDUP    30  38
0088    TSETS    9  30  39  ; "Indent"
0089    TSETS   10  30  40  ; "Cut"
0090    TSETS   11  30  41  ; "ensure"
0091    TSETS   12  30  42  ; "extract_line"
0092    TSETS   14  30  43  ; "mark"
0093    TSETS   15  30  44  ; "pos"
0094    TSETS   17  30  45  ; "flatten_or_mark"
0095    TSETS   18  30  46  ; "is_assignable"
0096    TSETS   19  30  47  ; "check_assignable"
0097    TSETS   20  30  48  ; "format_assign"
0098    TSETS   21  30  49  ; "format_single_assign"
0099    TSETS   22  30  50  ; "sym"
0100    TSETS   23  30  51  ; "symx"
0101    TSETS   24  30  52  ; "simple_string"
0102    TSETS   25  30  53  ; "wrap_func_arg"
0103    TSETS   26  30  54  ; "join_chain"
0104    TSETS   27  30  55  ; "wrap_decorator"
0105    TSETS   28  30  56  ; "check_lua_string"
0106    TSETS   29  30  57  ; "self_assign"
0107    TSETS   16  30  58  ; "got"
0108    TSETS   13  30  59  ; "show_line_position"
0109    UCLO     0 => 0110
0110 => RET1    30   2

-----------------------
-- BYTECODE -- version.lua:4-6
0001    GGET     0   0      ; "print"
0002    KSTR     1   1      ; "MoonScript version "
0003    GGET     2   2      ; "tostring"
0004    UGET     3   0      ; version
0005    CALL     2   2   2
0006    CAT      1   1   2
0007    CALLT    0   2

-- BYTECODE -- version.lua:0-8
0001    KSTR     0   0      ; "0.5.0"
0002    TDUP     1   1
0003    TSETS    0   1   2  ; "version"
0004    FNEW     2   3      ; version.lua:4
0005    TSETS    2   1   4  ; "print_version"
0006    UCLO     0 => 0007
0007 => RET1     1   2

-----------------------
-- BYTECODE -- value.lua:20-29
0001    KNIL     2   5
0002    TGETB    6   1   1
0003    TGETB    7   1   2
0004    TGETB    8   1   3
0005    TGETB    5   1   4
0006    MOV      4   8
0007    MOV      3   7
0008    MOV      2   6
0009    ISFC     2   3
0010    JMP      6 => 0016
0011    MOV      7   3
0012    TGETS    6   3   0  ; "call"
0013    MOV      8   0
0014    CALL     6   2   3
0015    MOV      2   6
0016 => MOV      7   0
0017    TGETS    6   0   1  ; "value"
0018    MOV      8   4
0019    CALL     6   2   3
0020    ISFC     2   5
0021    JMP      7 => 0027
0022    MOV      8   5
0023    TGETS    7   5   0  ; "call"
0024    MOV      9   0
0025    CALL     7   2   3
0026    MOV      2   7
0027 => RET1     6   2

-- BYTECODE -- value.lua:32-37
0001    MODVN    2   0   0  ; 2
0002    ISNEN    2   1      ; 1
0003    JMP      2 => 0007
0004    ISNES    1   0      ; "!="
0005    JMP      2 => 0007
0006    KSTR     1   1      ; "~="
0007 => UGET     2   0      ; self
0008    MOV      3   2
0009    TGETS    2   2   2  ; "value"
0010    MOV      4   1
0011    CALLT    2   3

-- BYTECODE -- value.lua:40-50
0001    TNEW     0   0
0002    KSHORT   1   1
0003    GGET     2   0      ; "ipairs"
0004    UGET     3   0      ; node
0005    CALL     2   4   2
0006    JMP      5 => 0016
0007 => KSHORT   7   1
0008    ISGE     7   5
0009    JMP      7 => 0016
0010    UGET     7   1      ; _comp
0011    MOV      8   5
0012    MOV      9   6
0013    CALL     7   2   3
0014    TSETV    7   0   1
0015    ADDVN    1   1   0  ; 1
0016 => ITERC    5   3   3
0017    ITERL    5 => 0007
0018    RET1     0   2

-- BYTECODE -- value.lua:30-53
0001    KPRI     2   0
0002    FNEW     2   0      ; value.lua:32
0003    MOV      4   0
0004    TGETS    3   0   1  ; "line"
0005    CALL     3   2   2
0006    MOV      5   3
0007    TGETS    4   3   2  ; "append_list"
0008    FNEW     6   3      ; value.lua:40
0009    CALL     6   2   1
0010    KSTR     7   4      ; " "
0011    CALL     4   1   4
0012    UCLO     0 => 0013
0013 => RET1     3   2

-- BYTECODE -- value.lua:57-66
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   2
0004    UGET     3   0      ; node
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0018
0008 => UGET     6   0      ; node
0009    TGETV    6   6   5
0010    UGET     7   1      ; self
0011    MOV      8   7
0012    TGETS    7   7   0  ; "value"
0013    MOV      9   6
0014    CALL     7   2   3
0015    TSETV    7   0   1
0016    ADDVN    1   1   0  ; 1
0017    FORL     2 => 0008
0018 => RET1     0   2

-- BYTECODE -- value.lua:54-69
0001    MOV      3   0
0002    TGETS    2   0   0  ; "line"
0003    CALL     2   2   2
0004    MOV      4   2
0005    TGETS    3   2   1  ; "append_list"
0006    FNEW     5   2      ; value.lua:57
0007    CALL     5   2   1
0008    KSTR     6   3      ; ", "
0009    CALL     3   1   4
0010    UCLO     0 => 0011
0011 => RET1     2   2

-- BYTECODE -- value.lua:70-72
0001    MOV      3   0
0002    TGETS    2   0   0  ; "line"
0003    KSTR     4   1      ; "("
0004    MOV      6   0
0005    TGETS    5   0   2  ; "value"
0006    TGETB    7   1   2
0007    CALL     5   2   3
0008    KSTR     6   3      ; ")"
0009    CALLT    2   5

-- BYTECODE -- value.lua:73-80
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    MOV      5   2
0006    TGETS    4   2   0  ; "gsub"
0007    KSTR     6   1      ; "%["
0008    KSTR     7   2      ; "]"
0009    CALL     4   2   4
0010    ISEQS    2   3      ; "'"
0011    JMP      5 => 0014
0012    ISNES    2   4      ; """
0013    JMP      5 => 0020
0014 => MOV      6   3
0015    TGETS    5   3   0  ; "gsub"
0016    KSTR     7   5      ; "[\r\n]"
0017    UGET     8   1      ; string_chars
0018    CALL     5   2   4
0019    MOV      3   5
0020 => MOV      5   2
0021    MOV      6   3
0022    MOV      7   4
0023    CAT      5   5   7
0024    RET1     5   2

-- BYTECODE -- value.lua:101-116
0001    UGET     1   0      ; unpack
0002    MOV      2   0
0003    CALL     1   3   2
0004    ISNES    1   0      ; "call"
0005    JMP      3 => 0015
0006    KSTR     3   1      ; "("
0007    UGET     4   1      ; self
0008    MOV      5   4
0009    TGETS    4   4   2  ; "values"
0010    MOV      6   2
0011    CALL     4   2   3
0012    KSTR     5   3      ; ")"
0013    RET      3   4
0014    JMP      3 => 0055
0015 => ISNES    1   4      ; "index"
0016    JMP      3 => 0026
0017    KSTR     3   5      ; "["
0018    UGET     4   1      ; self
0019    MOV      5   4
0020    TGETS    4   4   6  ; "value"
0021    MOV      6   2
0022    CALL     4   2   3
0023    KSTR     5   7      ; "]"
0024    RET      3   4
0025    JMP      3 => 0055
0026 => ISNES    1   8      ; "dot"
0027    JMP      3 => 0034
0028    KSTR     3   9      ; "."
0029    GGET     4  10      ; "tostring"
0030    MOV      5   2
0031    CALL     4   0   2
0032    RETM     3   1
0033    JMP      3 => 0055
0034 => ISNES    1  11      ; "colon"
0035    JMP      3 => 0042
0036    KSTR     3  12      ; ":"
0037    GGET     4  10      ; "tostring"
0038    MOV      5   2
0039    CALL     4   0   2
0040    RETM     3   1
0041    JMP      3 => 0055
0042 => ISNES    1  13      ; "colon_stub"
0043    JMP      3 => 0048
0044    UGET     3   2      ; user_error
0045    KSTR     4  14      ; "Uncalled colon stub"
0046    CALLT    3   2
0047    JMP      3 => 0055
0048 => GGET     3  15      ; "error"
0049    KSTR     4  16      ; "Unknown chain action: "
0050    GGET     5  10      ; "tostring"
0051    MOV      6   1
0052    CALL     5   2   2
0053    CAT      4   4   5
0054    CALLT    3   2
0055 => RET0     0   1

-- BYTECODE -- value.lua:81-134
0001    TGETB    2   1   2
0002    UGET     3   0      ; ntype
0003    MOV      4   2
0004    CALL     3   2   2
0005    KSHORT   4   3
0006    ISEQS    3   0      ; "dot"
0007    JMP      5 => 0012
0008    ISEQS    3   1      ; "colon"
0009    JMP      5 => 0012
0010    ISNES    3   2      ; "index"
0011    JMP      5 => 0023
0012 => MOV      6   0
0013    TGETS    5   0   3  ; "get"
0014    KSTR     7   4      ; "scope_var"
0015    CALL     5   2   3
0016    MOV      2   5
0017    IST          2
0018    JMP      5 => 0022
0019    UGET     5   1      ; user_error
0020    KSTR     6   5      ; "Short-dot syntax must be called within a"~
0021    CALL     5   1   2
0022 => KSHORT   4   2
0023 => ISNES    3   6      ; "ref"
0024    JMP      5 => 0028
0025    TGETB    5   2   2
0026    ISEQS    5   7      ; "super"
0027    JMP      5 => 0030
0028 => ISNES    2   7      ; "super"
0029    JMP      5 => 0043
0030 => MOV      6   0
0031    TGETS    5   0   3  ; "get"
0032    KSTR     7   7      ; "super"
0033    CALL     5   2   3
0034    ISF          5
0035    JMP      6 => 0043
0036    MOV      7   0
0037    TGETS    6   0   8  ; "value"
0038    MOV      8   5
0039    MOV      9   0
0040    MOV     10   1
0041    CALL     8   0   3
0042    UCLO     0 => 0100
0043 => KPRI     5   0
0044    FNEW     5   9      ; value.lua:101
0045    ISEQS    3  10      ; "self"
0046    JMP      6 => 0049
0047    ISNES    3  11      ; "self_class"
0048    JMP      6 => 0061
0049 => TGETB    6   1   3
0050    ISF          6
0051    JMP      7 => 0061
0052    UGET     6   0      ; ntype
0053    TGETB    7   1   3
0054    CALL     6   2   2
0055    ISNES    6  12      ; "call"
0056    JMP      6 => 0061
0057    MOV      6   3
0058    KSTR     7  13      ; "_colon"
0059    CAT      6   6   7
0060    TSETB    6   2   1
0061 => MOV      7   0
0062    TGETS    6   0   8  ; "value"
0063    MOV      8   2
0064    CALL     6   2   3
0065    UGET     7   0      ; ntype
0066    MOV      8   2
0067    CALL     7   2   2
0068    ISNES    7  14      ; "exp"
0069    JMP      7 => 0077
0070    MOV      8   0
0071    TGETS    7   0  15  ; "line"
0072    KSTR     9  16      ; "("
0073    MOV     10   6
0074    KSTR    11  17      ; ")"
0075    CALL     7   2   5
0076    MOV      6   7
0077 => KPRI     7   0
0078    MOV      9   0
0079    TGETS    8   0  15  ; "line"
0080    CALL     8   2   2
0081    MOV      9   4
0082    LEN     10   1
0083    KSHORT  11   1
0084    FORI     9 => 0093
0085 => TGETV   13   1  12
0086    MOV     15   8
0087    TGETS   14   8  18  ; "append"
0088    MOV     16   5
0089    MOV     17  13
0090    CALL    16   0   2
0091    CALLM   14   1   1
0092    FORL     9 => 0085
0093 => MOV      7   8
0094    MOV      9   0
0095    TGETS    8   0  15  ; "line"
0096    MOV     10   6
0097    MOV     11   7
0098    UCLO     0 => 0099
0099 => CALLT    8   4
0100 => CALLMT   6   1

-- BYTECODE -- value.lua:135-239
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   5   3
0005    TNEW     6   0
0006    TNEW     7   0
0007    KPRI     8   0
0008    TNEW     9   0
0009    KSHORT  10   1
0010    KSHORT  11   1
0011    LEN     12   2
0012    KSHORT  13   1
0013    FORI    11 => 0045
0014 => TGETV   15   2  14
0015    UGET    16   0      ; unpack
0016    MOV     17  15
0017    CALL    16   3   2
0018    GGET    18   0      ; "type"
0019    MOV     19  16
0020    CALL    18   2   2
0021    ISNES   18   1      ; "string"
0022    JMP     18 => 0024
0023    JMP     18 => 0035
0024 => TGETB   18  16   1
0025    ISEQS   18   2      ; "self"
0026    JMP     18 => 0030
0027    TGETB   18  16   1
0028    ISNES   18   3      ; "self_class"
0029    JMP     18 => 0034
0030 => UGET    18   1      ; insert
0031    MOV     19   7
0032    MOV     20  16
0033    CALL    18   1   3
0034 => TGETB   16  16   2
0035 => ISF         17
0036    JMP     18 => 0041
0037    UGET    18   1      ; insert
0038    MOV     19   6
0039    MOV     20  15
0040    CALL    18   1   3
0041 => MOV     18  16
0042    TSETV   18   9  10
0043    ADDVN   10  10   0  ; 1
0044    FORL    11 => 0014
0045 => MOV      8   9
0046    ISNES    4   4      ; "fat"
0047    JMP      9 => 0053
0048    UGET     9   1      ; insert
0049    MOV     10   8
0050    KSHORT  11   1
0051    KSTR    12   2      ; "self"
0052    CALL     9   1   4
0053 => MOV     10   0
0054    TGETS    9   0   5  ; "block"
0055    CALL     9   2   2
0056    LEN     10   3
0057    KSHORT  11   0
0058    ISGE    11  10
0059    JMP     10 => 0064
0060    MOV     11   9
0061    TGETS   10   9   6  ; "whitelist_names"
0062    MOV     12   3
0063    CALL    10   1   3
0064 => KSHORT  10   1
0065    LEN     11   8
0066    KSHORT  12   1
0067    FORI    10 => 0074
0068 => TGETV   14   8  13
0069    MOV     16   9
0070    TGETS   15   9   7  ; "put_name"
0071    MOV     17  14
0072    CALL    15   1   3
0073    FORL    10 => 0068
0074 => KSHORT  10   1
0075    LEN     11   6
0076    KSHORT  12   1
0077    FORI    10 => 0108
0078 => TGETV   14   6  13
0079    UGET    15   0      ; unpack
0080    MOV     16  14
0081    CALL    15   3   2
0082    GGET    17   0      ; "type"
0083    MOV     18  15
0084    CALL    17   2   2
0085    ISNES   17   8      ; "table"
0086    JMP     17 => 0088
0087    TGETB   15  15   2
0088 => MOV     18   9
0089    TGETS   17   9   9  ; "stm"
0090    TDUP    19  10
0091    TDUP    20  11
0092    TDUP    21  12
0093    TSETB   15  21   2
0094    TSETB   21  20   2
0095    TSETB   20  19   2
0096    TNEW    20   3
0097    TDUP    21  13
0098    TNEW    22   3
0099    TSETB   15  22   1
0100    TSETB   22  21   2
0101    TNEW    22   3
0102    TSETB   16  22   1
0103    TSETB   22  21   3
0104    TSETB   21  20   1
0105    TSETB   20  19   3
0106    CALL    17   1   3
0107    FORL    10 => 0078
0108 => KPRI    10   0
0109    TNEW    11   0
0110    KSHORT  12   1
0111    KSHORT  13   1
0112    LEN     14   7
0113    KSHORT  15   1
0114    FORI    13 => 0120
0115 => TGETV   17   7  16
0116    TGETB   18  17   2
0117    TSETV   18  11  12
0118    ADDVN   12  12   0  ; 1
0119    FORL    13 => 0115
0120 => MOV     10  11
0121    LEN     11   7
0122    KSHORT  12   0
0123    ISGE    12  11
0124    JMP     11 => 0131
0125    MOV     12   9
0126    TGETS   11   9   9  ; "stm"
0127    TDUP    13  14
0128    TSETB    7  13   2
0129    TSETB   10  13   3
0130    CALL    11   1   3
0131 => MOV     12   9
0132    TGETS   11   9  15  ; "stms"
0133    MOV     13   5
0134    CALL    11   1   3
0135    LEN     11   2
0136    LEN     12   8
0137    ISGE    12  11
0138    JMP     11 => 0151
0139    TNEW    11   0
0140    KSHORT  12   1
0141    KSHORT  13   1
0142    LEN     14   2
0143    KSHORT  15   1
0144    FORI    13 => 0150
0145 => TGETV   17   2  16
0146    TGETB   18  17   1
0147    TSETV   18  11  12
0148    ADDVN   12  12   0  ; 1
0149    FORL    13 => 0145
0150 => MOV      8  11
0151 => KSTR    11  17      ; "function("
0152    UGET    12   2      ; concat
0153    MOV     13   8
0154    KSTR    14  18      ; ", "
0155    CALL    12   2   3
0156    KSTR    13  19      ; ")"
0157    CAT     11  11  13
0158    TSETS   11   9  16  ; "header"
0159    RET1     9   2

-- BYTECODE -- value.lua:245-266
0001    LEN      1   0
0002    ISNEN    1   0      ; 2
0003    JMP      1 => 0055
0004    UGET     1   0      ; unpack
0005    MOV      2   0
0006    CALL     1   3   2
0007    UGET     3   1      ; ntype
0008    MOV      4   1
0009    CALL     3   2   2
0010    ISNES    3   0      ; "key_literal"
0011    JMP      3 => 0022
0012    UGET     3   2      ; data
0013    TGETS    3   3   1  ; "lua_keywords"
0014    TGETB    4   1   2
0015    TGETV    3   3   4
0016    ISF          3
0017    JMP      4 => 0022
0018    TDUP     3   2
0019    TGETB    4   1   2
0020    TSETB    4   3   3
0021    MOV      1   3
0022 => KPRI     3   0
0023    UGET     4   1      ; ntype
0024    MOV      5   1
0025    CALL     4   2   2
0026    ISNES    4   0      ; "key_literal"
0027    JMP      4 => 0030
0028    TGETB    3   1   2
0029    JMP      4 => 0042
0030 => UGET     4   3      ; self
0031    MOV      5   4
0032    TGETS    4   4   3  ; "line"
0033    KSTR     6   4      ; "["
0034    UGET     7   4      ; _with_0
0035    MOV      8   7
0036    TGETS    7   7   5  ; "value"
0037    MOV      9   1
0038    CALL     7   2   3
0039    KSTR     8   6      ; "]"
0040    CALL     4   2   5
0041    MOV      3   4
0042 => UGET     4   3      ; self
0043    MOV      5   4
0044    TGETS    4   4   3  ; "line"
0045    MOV      6   3
0046    KSTR     7   7      ; " = "
0047    UGET     8   4      ; _with_0
0048    MOV      9   8
0049    TGETS    8   8   5  ; "value"
0050    MOV     10   2
0051    CALL     8   0   3
0052    CALLM    4   2   3
0053    RET1     4   2
0054    JMP      1 => 0064
0055 => UGET     1   3      ; self
0056    MOV      2   1
0057    TGETS    1   1   3  ; "line"
0058    UGET     3   4      ; _with_0
0059    MOV      4   3
0060    TGETS    3   3   5  ; "value"
0061    TGETB    5   0   1
0062    CALL     3   0   3
0063    CALLMT   1   1
0064 => RET0     0   1

-- BYTECODE -- value.lua:240-279
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   2   3
0005    MOV      4   0
0006    TGETS    3   0   0  ; "block"
0007    KSTR     5   1      ; "{"
0008    KSTR     6   2      ; "}"
0009    CALL     3   2   4
0010    KPRI     4   0
0011    FNEW     4   3      ; value.lua:245
0012    ISF          2
0013    JMP      5 => 0034
0014    LEN      5   2
0015    GGET     6   4      ; "ipairs"
0016    MOV      7   2
0017    CALL     6   4   2
0018    JMP      9 => 0032
0019 => MOV     11   4
0020    MOV     12  10
0021    CALL    11   2   2
0022    ISEQV    5   9
0023    JMP     12 => 0028
0024    MOV     13  11
0025    TGETS   12  11   5  ; "append"
0026    UGET    14   3      ; table_delim
0027    CALL    12   1   3
0028 => MOV     13   3
0029    TGETS   12   3   6  ; "add"
0030    MOV     14  11
0031    CALL    12   1   3
0032 => ITERC    9   3   3
0033    ITERL    9 => 0019
0034 => UCLO     0 => 0035
0035 => RET1     3   2
0036    UCLO     3 => 0037
0037 => UCLO     0 => 0038
0038 => RET0     0   1

-- BYTECODE -- value.lua:280-282
0001    MOV      3   0
0002    TGETS    2   0   0  ; "line"
0003    KSTR     4   1      ; "-"
0004    MOV      6   0
0005    TGETS    5   0   2  ; "value"
0006    TGETB    7   1   2
0007    CALL     5   0   3
0008    CALLMT   2   2

-- BYTECODE -- value.lua:283-285
0001    MOV      3   1
0002    TGETS    2   1   0  ; "get_name"
0003    MOV      4   0
0004    VARG     5   0   2
0005    CALLMT   2   2

-- BYTECODE -- value.lua:286-288
0001    TGETB    2   1   2
0002    RET1     2   2

-- BYTECODE -- value.lua:289-291
0001    MOV      3   0
0002    TGETS    2   0   0  ; "line"
0003    KSTR     4   1      ; "~"
0004    MOV      6   0
0005    TGETS    5   0   2  ; "value"
0006    TGETB    7   1   2
0007    CALL     5   0   3
0008    CALLMT   2   2

-- BYTECODE -- value.lua:292-294
0001    MOV      3   0
0002    TGETS    2   0   0  ; "line"
0003    KSTR     4   1      ; "#"
0004    MOV      6   0
0005    TGETS    5   0   2  ; "value"
0006    TGETB    7   1   2
0007    CALL     5   0   3
0008    CALLMT   2   2

-- BYTECODE -- value.lua:295-297
0001    MOV      3   0
0002    TGETS    2   0   0  ; "line"
0003    KSTR     4   1      ; "not "
0004    MOV      6   0
0005    TGETS    5   0   2  ; "value"
0006    TGETB    7   1   2
0007    CALL     5   0   3
0008    CALLMT   2   2

-- BYTECODE -- value.lua:298-300
0001    KSTR     2   0      ; "self."
0002    MOV      4   0
0003    TGETS    3   0   1  ; "name"
0004    TGETB    5   1   2
0005    CALL     3   2   3
0006    CAT      2   2   3
0007    RET1     2   2

-- BYTECODE -- value.lua:301-303
0001    KSTR     2   0      ; "self.__class."
0002    MOV      4   0
0003    TGETS    3   0   1  ; "name"
0004    TGETB    5   1   2
0005    CALL     3   2   3
0006    CAT      2   2   3
0007    RET1     2   2

-- BYTECODE -- value.lua:304-306
0001    KSTR     2   0      ; "self:"
0002    MOV      4   0
0003    TGETS    3   0   1  ; "name"
0004    TGETB    5   1   2
0005    CALL     3   2   3
0006    CAT      2   2   3
0007    RET1     2   2

-- BYTECODE -- value.lua:307-309
0001    KSTR     2   0      ; "self.__class:"
0002    MOV      4   0
0003    TGETS    3   0   1  ; "name"
0004    TGETB    5   1   2
0005    CALL     3   2   3
0006    CAT      2   2   3
0007    RET1     2   2

-- BYTECODE -- value.lua:310-318
0001    TGETB    2   1   2
0002    ISNES    2   0      ; "super"
0003    JMP      2 => 0009
0004    MOV      3   0
0005    TGETS    2   0   1  ; "get"
0006    KSTR     4   0      ; "super"
0007    CALL     2   2   3
0008    JMP      3 => 0012
0009 => KPRI     2   1
0010    JMP      3 => 0012
0011    KPRI     2   2
0012 => ISF          2
0013    JMP      3 => 0020
0014    MOV      4   0
0015    TGETS    3   0   2  ; "value"
0016    MOV      5   2
0017    MOV      6   0
0018    CALL     5   0   2
0019    CALLMT   3   1
0020 => GGET     2   3      ; "tostring"
0021    TGETB    3   1   2
0022    CALLT    2   2

-- BYTECODE -- value.lua:319-324
0001    ISNES    1   0      ; "..."
0002    JMP      2 => 0007
0003    MOV      3   0
0004    TGETS    2   0   1  ; "send"
0005    KSTR     4   2      ; "varargs"
0006    CALL     2   1   3
0007 => GGET     2   3      ; "tostring"
0008    MOV      3   1
0009    CALLT    2   2

-- BYTECODE -- value.lua:0-326
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "moonscript.util"
0003    CALL     0   2   2
0004    GGET     1   0      ; "require"
0005    KSTR     2   2      ; "moonscript.data"
0006    CALL     1   2   2
0007    KPRI     2   0
0008    GGET     3   0      ; "require"
0009    KSTR     4   3      ; "moonscript.types"
0010    CALL     3   2   2
0011    TGETS    2   3   4  ; "ntype"
0012    KPRI     3   0
0013    GGET     4   0      ; "require"
0014    KSTR     5   5      ; "moonscript.errors"
0015    CALL     4   2   2
0016    TGETS    3   4   6  ; "user_error"
0017    KNIL     4   5
0018    GGET     6   7      ; "table"
0019    TGETS    7   6   8  ; "concat"
0020    TGETS    5   6   9  ; "insert"
0021    MOV      4   7
0022    KPRI     6   0
0023    TGETS    6   0  10  ; "unpack"
0024    KSTR     7  11      ; ","
0025    TDUP     8  12
0026    TDUP     9  14
0027    FNEW    10  13      ; value.lua:20
0028    TSETS   10   9  15  ; "scoped"
0029    FNEW    10  16      ; value.lua:30
0030    TSETS   10   9  17  ; "exp"
0031    FNEW    10  18      ; value.lua:54
0032    TSETS   10   9  19  ; "explist"
0033    FNEW    10  20      ; value.lua:70
0034    TSETS   10   9  21  ; "parens"
0035    FNEW    10  22      ; value.lua:73
0036    TSETS   10   9  23  ; "string"
0037    FNEW    10  24      ; value.lua:81
0038    TSETS   10   9  25  ; "chain"
0039    FNEW    10  26      ; value.lua:135
0040    TSETS   10   9  27  ; "fndef"
0041    FNEW    10  28      ; value.lua:240
0042    TSETS   10   9   7  ; "table"
0043    FNEW    10  29      ; value.lua:280
0044    TSETS   10   9  30  ; "minus"
0045    FNEW    10  31      ; value.lua:283
0046    TSETS   10   9  32  ; "temp_name"
0047    FNEW    10  33      ; value.lua:286
0048    TSETS   10   9  34  ; "number"
0049    FNEW    10  35      ; value.lua:289
0050    TSETS   10   9  36  ; "bitnot"
0051    FNEW    10  37      ; value.lua:292
0052    TSETS   10   9  38  ; "length"
0053    FNEW    10  39      ; value.lua:295
0054    TSETS   10   9  40  ; "not"
0055    FNEW    10  41      ; value.lua:298
0056    TSETS   10   9  42  ; "self"
0057    FNEW    10  43      ; value.lua:301
0058    TSETS   10   9  44  ; "self_class"
0059    FNEW    10  45      ; value.lua:304
0060    TSETS   10   9  46  ; "self_colon"
0061    FNEW    10  47      ; value.lua:307
0062    TSETS   10   9  48  ; "self_class_colon"
0063    FNEW    10  49      ; value.lua:310
0064    TSETS   10   9  50  ; "ref"
0065    FNEW    10  51      ; value.lua:319
0066    TSETS   10   9  52  ; "raw_value"
0067    UCLO     0 => 0068
0068 => RET1     9   2

-----------------------
-- BYTECODE -- statement.lua:11-13
0001    MOV      3   0
0002    TGETS    2   0   0  ; "add"
0003    TGETB    4   1   2
0004    CALLT    2   3

-- BYTECODE -- statement.lua:14-20
0001    TGETB    2   1   2
0002    KSHORT   3   1
0003    LEN      4   2
0004    KSHORT   5   1
0005    FORI     3 => 0012
0006 => TGETV    7   2   6
0007    MOV      9   0
0008    TGETS    8   0   0  ; "add"
0009    MOV     10   7
0010    CALL     8   1   3
0011    FORL     3 => 0006
0012 => RET0     0   1

-- BYTECODE -- statement.lua:27-36
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   1
0004    UGET     3   0      ; undeclared
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0018
0008 => UGET     6   0      ; undeclared
0009    TGETV    6   6   5
0010    UGET     7   1      ; self
0011    MOV      8   7
0012    TGETS    7   7   0  ; "name"
0013    MOV      9   6
0014    CALL     7   2   3
0015    TSETV    7   0   1
0016    ADDVN    1   1   0  ; 1
0017    FORL     2 => 0008
0018 => RET1     0   2

-- BYTECODE -- statement.lua:21-40
0001    TGETB    2   1   2
0002    MOV      4   0
0003    TGETS    3   0   0  ; "declare"
0004    MOV      5   2
0005    CALL     3   2   3
0006    LEN      4   3
0007    KSHORT   5   0
0008    ISGE     5   4
0009    JMP      4 => 0022
0010    MOV      5   0
0011    TGETS    4   0   1  ; "line"
0012    KSTR     6   2      ; "local "
0013    CALL     4   2   3
0014    MOV      6   4
0015    TGETS    5   4   3  ; "append_list"
0016    FNEW     7   4      ; statement.lua:27
0017    CALL     7   2   1
0018    KSTR     8   5      ; ", "
0019    CALL     5   1   4
0020    UCLO     0 => 0021
0021 => RET1     4   2
0022 => UCLO     0 => 0023
0023 => RET0     0   1

-- BYTECODE -- statement.lua:46-55
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   1
0004    UGET     3   0      ; names
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0018
0008 => UGET     6   0      ; names
0009    TGETV    6   6   5
0010    UGET     7   1      ; self
0011    MOV      8   7
0012    TGETS    7   7   0  ; "name"
0013    MOV      9   6
0014    CALL     7   2   3
0015    TSETV    7   0   1
0016    ADDVN    1   1   0  ; 1
0017    FORL     2 => 0008
0018 => RET1     0   2

-- BYTECODE -- statement.lua:41-58
0001    TGETB    2   1   2
0002    MOV      4   0
0003    TGETS    3   0   0  ; "declare"
0004    MOV      5   2
0005    CALL     3   1   3
0006    MOV      4   0
0007    TGETS    3   0   1  ; "line"
0008    KSTR     5   2      ; "local "
0009    CALL     3   2   3
0010    MOV      5   3
0011    TGETS    4   3   3  ; "append_list"
0012    FNEW     6   4      ; statement.lua:46
0013    CALL     6   2   1
0014    KSTR     7   5      ; ", "
0015    CALL     4   1   4
0016    UCLO     0 => 0017
0017 => RET1     3   2

-- BYTECODE -- statement.lua:79-88
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   1
0004    UGET     3   0      ; names
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0018
0008 => UGET     6   0      ; names
0009    TGETV    6   6   5
0010    UGET     7   1      ; self
0011    MOV      8   7
0012    TGETS    7   7   0  ; "value"
0013    MOV      9   6
0014    CALL     7   2   3
0015    TSETV    7   0   1
0016    ADDVN    1   1   0  ; 1
0017    FORL     2 => 0008
0018 => RET1     0   2

-- BYTECODE -- statement.lua:91-100
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   1
0004    UGET     3   0      ; values
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0018
0008 => UGET     6   0      ; values
0009    TGETV    6   6   5
0010    UGET     7   1      ; self
0011    MOV      8   7
0012    TGETS    7   7   0  ; "value"
0013    MOV      9   6
0014    CALL     7   2   3
0015    TSETV    7   0   1
0016    ADDVN    1   1   0  ; 1
0017    FORL     2 => 0008
0018 => RET1     0   2

-- BYTECODE -- statement.lua:59-103
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    MOV      5   0
0006    TGETS    4   0   0  ; "declare"
0007    MOV      6   2
0008    CALL     4   2   3
0009    KSTR     5   1      ; "local "
0010    UGET     6   1      ; concat
0011    MOV      7   4
0012    KSTR     8   2      ; ", "
0013    CALL     6   2   3
0014    CAT      5   5   6
0015    KPRI     6   1
0016    KSHORT   7   1
0017 => LEN      8   3
0018    ISGT     7   8
0019    JMP      8 => 0029
0020    LOOP     8 => 0029
0021    UGET     8   2      ; ntype
0022    TGETV    9   3   7
0023    CALL     8   2   2
0024    ISNES    8   3      ; "fndef"
0025    JMP      8 => 0027
0026    KPRI     6   2
0027 => ADDVN    7   7   0  ; 1
0028    JMP      8 => 0017
0029 => MOV      9   0
0030    TGETS    8   0   4  ; "line"
0031    CALL     8   2   2
0032    LEN      9   4
0033    LEN     10   2
0034    ISNEV    9  10
0035    JMP      9 => 0043
0036    IST          6
0037    JMP      9 => 0043
0038    MOV     10   8
0039    TGETS    9   8   5  ; "append"
0040    MOV     11   5
0041    CALL     9   1   3
0042    JMP      9 => 0059
0043 => LEN      9   4
0044    KSHORT  10   0
0045    ISGE    10   9
0046    JMP      9 => 0053
0047    MOV     10   0
0048    TGETS    9   0   6  ; "add"
0049    MOV     11   5
0050    KSHORT  12  -1
0051    TGETV   12   1  12
0052    CALL     9   1   4
0053 => MOV     10   8
0054    TGETS    9   8   7  ; "append_list"
0055    FNEW    11   8      ; statement.lua:79
0056    CALL    11   2   1
0057    KSTR    12   2      ; ", "
0058    CALL     9   1   4
0059 => MOV     10   8
0060    TGETS    9   8   5  ; "append"
0061    KSTR    11   9      ; " = "
0062    CALL     9   1   3
0063    MOV     10   8
0064    TGETS    9   8   7  ; "append_list"
0065    FNEW    11  10      ; statement.lua:91
0066    CALL    11   2   1
0067    KSTR    12   2      ; ", "
0068    CALL     9   1   4
0069    UCLO     0 => 0070
0070 => RET1     8   2

-- BYTECODE -- statement.lua:105-109
0001    UGET     0   0      ; node
0002    TGETB    0   0   2
0003    ISEQS    0   0      ; ""
0004    JMP      0 => 0011
0005    UGET     0   1      ; self
0006    MOV      1   0
0007    TGETS    0   0   1  ; "value"
0008    UGET     2   0      ; node
0009    TGETB    2   2   2
0010    CALLT    0   3
0011 => RET0     0   1

-- BYTECODE -- statement.lua:104-110
0001    MOV      3   0
0002    TGETS    2   0   0  ; "line"
0003    KSTR     4   1      ; "return "
0004    FNEW     5   2      ; statement.lua:105
0005    CALL     5   0   1
0006    UCLO     0 => 0007
0007 => CALLMT   2   2

-- BYTECODE -- statement.lua:111-113
0001    KSTR     2   0      ; "break"
0002    RET1     2   2

-- BYTECODE -- statement.lua:124-137
0001    TGETB    1   0   1
0002    KSHORT   2   2
0003    KPRI     3   0
0004    ISNES    1   0      ; "else"
0005    JMP      4 => 0013
0006    UGET     4   0      ; self
0007    MOV      5   4
0008    TGETS    4   4   1  ; "block"
0009    KSTR     6   0      ; "else"
0010    CALL     4   2   3
0011    MOV      3   4
0012    JMP      4 => 0030
0013 => ADDVN    2   2   0  ; 1
0014    UGET     4   0      ; self
0015    MOV      5   4
0016    TGETS    4   4   1  ; "block"
0017    UGET     6   0      ; self
0018    MOV      7   6
0019    TGETS    6   6   2  ; "line"
0020    KSTR     8   3      ; "elseif "
0021    UGET     9   0      ; self
0022    MOV     10   9
0023    TGETS    9   9   4  ; "value"
0024    TGETB   11   0   2
0025    CALL     9   2   3
0026    KSTR    10   5      ; " then"
0027    CALL     6   0   5
0028    CALLM    4   2   1
0029    MOV      3   4
0030 => MOV      5   3
0031    TGETS    4   3   6  ; "stms"
0032    TGETV    6   0   2
0033    CALL     4   1   3
0034    UGET     4   1      ; current
0035    TSETS    3   4   7  ; "next"
0036    USETV    1   3      ; current
0037    RET0     0   1

-- BYTECODE -- statement.lua:114-143
0001    TGETB    2   1   2
0002    TGETB    3   1   3
0003    KPRI     4   0
0004    MOV      6   0
0005    TGETS    5   0   0  ; "block"
0006    MOV      8   0
0007    TGETS    7   0   1  ; "line"
0008    KSTR     9   2      ; "if "
0009    MOV     11   0
0010    TGETS   10   0   3  ; "value"
0011    MOV     12   2
0012    CALL    10   2   3
0013    KSTR    11   4      ; " then"
0014    CALL     7   0   5
0015    CALLM    5   2   1
0016    MOV      7   5
0017    TGETS    6   5   5  ; "stms"
0018    MOV      8   3
0019    CALL     6   1   3
0020    MOV      4   5
0021    MOV      5   4
0022    KPRI     6   0
0023    FNEW     6   6      ; statement.lua:124
0024    KSHORT   7   4
0025    LEN      8   1
0026    KSHORT   9   1
0027    FORI     7 => 0033
0028 => TGETV   11   1  10
0029    MOV     12   6
0030    MOV     13  11
0031    CALL    12   1   2
0032    FORL     7 => 0028
0033 => UCLO     0 => 0034
0034 => RET1     4   2

-- BYTECODE -- statement.lua:144-151
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    MOV      5   0
0006    TGETS    4   0   0  ; "block"
0007    KSTR     6   1      ; "repeat"
0008    MOV      8   0
0009    TGETS    7   0   2  ; "line"
0010    KSTR     9   3      ; "until "
0011    MOV     11   0
0012    TGETS   10   0   4  ; "value"
0013    MOV     12   2
0014    CALL    10   0   3
0015    CALLM    7   0   2
0016    CALLM    4   2   2
0017    MOV      6   4
0018    TGETS    5   4   5  ; "stms"
0019    MOV      7   3
0020    CALL     5   1   3
0021    RET1     4   2

-- BYTECODE -- statement.lua:152-159
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    MOV      5   0
0006    TGETS    4   0   0  ; "block"
0007    MOV      7   0
0008    TGETS    6   0   1  ; "line"
0009    KSTR     8   2      ; "while "
0010    MOV     10   0
0011    TGETS    9   0   3  ; "value"
0012    MOV     11   2
0013    CALL     9   2   3
0014    KSTR    10   4      ; " do"
0015    CALL     6   0   5
0016    CALLM    4   2   1
0017    MOV      6   4
0018    TGETS    5   4   5  ; "stms"
0019    MOV      7   3
0020    CALL     5   1   3
0021    RET1     4   2

-- BYTECODE -- statement.lua:160-174
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   4   3
0005    MOV      6   0
0006    TGETS    5   0   0  ; "line"
0007    KSTR     7   1      ; "for "
0008    MOV      9   0
0009    TGETS    8   0   2  ; "name"
0010    MOV     10   2
0011    CALL     8   2   3
0012    KSTR     9   3      ; " = "
0013    MOV     11   0
0014    TGETS   10   0   4  ; "value"
0015    TDUP    12   5
0016    UGET    13   0      ; unpack
0017    MOV     14   3
0018    CALL    13   0   2
0019    TSETM   13   0      ; 2
0020    CALL    10   2   3
0021    KSTR    11   6      ; " do"
0022    CALL     5   2   7
0023    MOV      7   0
0024    TGETS    6   0   7  ; "block"
0025    MOV      8   5
0026    CALL     6   2   3
0027    MOV      8   6
0028    TGETS    7   6   8  ; "declare"
0029    TNEW     9   3
0030    TSETB    2   9   1
0031    CALL     7   1   3
0032    MOV      8   6
0033    TGETS    7   6   9  ; "stms"
0034    MOV      9   4
0035    CALL     7   1   3
0036    RET1     6   2

-- BYTECODE -- statement.lua:185-194
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   1
0004    UGET     3   0      ; names
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0019
0008 => UGET     6   0      ; names
0009    TGETV    6   6   5
0010    UGET     7   1      ; _with_0
0011    MOV      8   7
0012    TGETS    7   7   0  ; "name"
0013    MOV      9   6
0014    KPRI    10   1
0015    CALL     7   2   4
0016    TSETV    7   0   1
0017    ADDVN    1   1   0  ; 1
0018    FORL     2 => 0008
0019 => RET1     0   2

-- BYTECODE -- statement.lua:196-205
0001    TNEW     0   0
0002    KSHORT   1   1
0003    KSHORT   2   1
0004    UGET     3   0      ; exps
0005    LEN      3   3
0006    KSHORT   4   1
0007    FORI     2 => 0018
0008 => UGET     6   0      ; exps
0009    TGETV    6   6   5
0010    UGET     7   1      ; self
0011    MOV      8   7
0012    TGETS    7   7   0  ; "value"
0013    MOV      9   6
0014    CALL     7   2   3
0015    TSETV    7   0   1
0016    ADDVN    1   1   0  ; 1
0017    FORL     2 => 0008
0018 => RET1     0   2

-- BYTECODE -- statement.lua:175-211
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   4   3
0005    KPRI     5   0
0006    MOV      7   0
0007    TGETS    6   0   0  ; "line"
0008    CALL     6   2   2
0009    MOV      8   6
0010    TGETS    7   6   1  ; "append"
0011    KSTR     9   2      ; "for "
0012    CALL     7   1   3
0013    MOV      5   6
0014    MOV      7   0
0015    TGETS    6   0   3  ; "block"
0016    MOV      8   5
0017    CALL     6   2   3
0018    MOV      8   5
0019    TGETS    7   5   4  ; "append_list"
0020    FNEW     9   5      ; statement.lua:185
0021    CALL     9   2   1
0022    KSTR    10   6      ; ", "
0023    CALL     7   1   4
0024    MOV      8   5
0025    TGETS    7   5   1  ; "append"
0026    KSTR     9   7      ; " in "
0027    CALL     7   1   3
0028    MOV      8   5
0029    TGETS    7   5   4  ; "append_list"
0030    FNEW     9   8      ; statement.lua:196
0031    CALL     9   2   1
0032    KSTR    10   9      ; ","
0033    CALL     7   1   4
0034    MOV      8   5
0035    TGETS    7   5   1  ; "append"
0036    KSTR     9  10      ; " do"
0037    CALL     7   1   3
0038    MOV      8   6
0039    TGETS    7   6  11  ; "declare"
0040    MOV      9   2
0041    CALL     7   1   3
0042    MOV      8   6
0043    TGETS    7   6  12  ; "stms"
0044    MOV      9   4
0045    CALL     7   1   3
0046    UCLO     0 => 0047
0047 => RET1     6   2
0048    UCLO     6 => 0049
0049 => UCLO     0 => 0050
0050 => RET0     0   1

-- BYTECODE -- statement.lua:212-224
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   2   3
0005    GGET     3   0      ; "type"
0006    MOV      4   2
0007    CALL     3   2   2
0008    ISNES    3   1      ; "string"
0009    JMP      3 => 0020
0010    ISNES    2   2      ; "*"
0011    JMP      3 => 0015
0012    KPRI     3   2
0013    TSETS    3   0   3  ; "export_all"
0014    JMP      3 => 0024
0015 => ISNES    2   4      ; "^"
0016    JMP      3 => 0024
0017    KPRI     3   2
0018    TSETS    3   0   5  ; "export_proper"
0019    JMP      3 => 0024
0020 => MOV      4   0
0021    TGETS    3   0   6  ; "declare"
0022    MOV      5   2
0023    CALL     3   1   3
0024 => KPRI     3   0
0025    RET1     3   2

-- BYTECODE -- statement.lua:225-228
0001    MOV      3   1
0002    TGETS    2   1   0  ; "call"
0003    MOV      4   0
0004    CALL     2   1   3
0005    KPRI     2   0
0006    RET1     2   2

-- BYTECODE -- statement.lua:229-231
0001    MOV      3   0
0002    TGETS    2   0   0  ; "stms"
0003    TGETB    4   1   2
0004    CALLT    2   3

-- BYTECODE -- statement.lua:232-238
0001    MOV      3   0
0002    TGETS    2   0   0  ; "block"
0003    CALL     2   2   2
0004    MOV      4   2
0005    TGETS    3   2   1  ; "stms"
0006    TGETB    5   1   2
0007    CALL     3   1   3
0008    RET1     2   2

-- BYTECODE -- statement.lua:239-239
0001    RET0     0   1

-- BYTECODE -- statement.lua:0-241
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.types"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "ntype"
0006    KNIL     1   2
0007    GGET     3   3      ; "table"
0008    TGETS    4   3   4  ; "concat"
0009    TGETS    2   3   5  ; "insert"
0010    MOV      1   4
0011    KPRI     3   0
0012    GGET     4   0      ; "require"
0013    KSTR     5   6      ; "moonscript.util"
0014    CALL     4   2   2
0015    TGETS    3   4   7  ; "unpack"
0016    TDUP     4   9
0017    FNEW     5   8      ; statement.lua:11
0018    TSETS    5   4  10  ; "raw"
0019    FNEW     5  11      ; statement.lua:14
0020    TSETS    5   4  12  ; "lines"
0021    FNEW     5  13      ; statement.lua:21
0022    TSETS    5   4  14  ; "declare"
0023    FNEW     5  15      ; statement.lua:41
0024    TSETS    5   4  16  ; "declare_with_shadows"
0025    FNEW     5  17      ; statement.lua:59
0026    TSETS    5   4  18  ; "assign"
0027    FNEW     5  19      ; statement.lua:104
0028    TSETS    5   4  20  ; "return"
0029    FNEW     5  21      ; statement.lua:111
0030    TSETS    5   4  22  ; "break"
0031    FNEW     5  23      ; statement.lua:114
0032    TSETS    5   4  24  ; "if"
0033    FNEW     5  25      ; statement.lua:144
0034    TSETS    5   4  26  ; "repeat"
0035    FNEW     5  27      ; statement.lua:152
0036    TSETS    5   4  28  ; "while"
0037    FNEW     5  29      ; statement.lua:160
0038    TSETS    5   4  30  ; "for"
0039    FNEW     5  31      ; statement.lua:175
0040    TSETS    5   4  32  ; "foreach"
0041    FNEW     5  33      ; statement.lua:212
0042    TSETS    5   4  34  ; "export"
0043    FNEW     5  35      ; statement.lua:225
0044    TSETS    5   4  36  ; "run"
0045    FNEW     5  37      ; statement.lua:229
0046    TSETS    5   4  38  ; "group"
0047    FNEW     5  39      ; statement.lua:232
0048    TSETS    5   4  40  ; "do"
0049    FNEW     5  41      ; statement.lua:239
0050    TSETS    5   4  42  ; "noop"
0051    UCLO     0 => 0052
0052 => RET1     4   2

-----------------------
-- BYTECODE -- data.lua:7-14
0001    TNEW     1   0
0002    KSHORT   2   1
0003    LEN      3   0
0004    KSHORT   4   1
0005    FORI     2 => 0010
0006 => TGETV    6   0   5
0007    KPRI     7   2
0008    TSETV    7   1   6
0009    FORL     2 => 0006
0010 => RET1     1   2

-- BYTECODE -- data.lua:19-21
0001    KSTR     1   0      ; "<Stack {"
0002    UGET     2   0      ; concat
0003    MOV      3   0
0004    KSTR     4   1      ; ", "
0005    CALL     2   2   3
0006    KSTR     3   2      ; "}>"
0007    CAT      1   1   3
0008    RET1     1   2

-- BYTECODE -- data.lua:22-24
0001    UGET     1   0      ; remove
0002    MOV      2   0
0003    CALLT    1   2

-- BYTECODE -- data.lua:25-32
0001    UGET     2   0      ; insert
0002    MOV      3   0
0003    MOV      4   1
0004    CALL     2   1   3
0005    VARG     2   2   2
0006    ISF          2
0007    JMP      3 => 0013
0008    MOV      3   0
0009    TGETS    2   0   0  ; "push"
0010    VARG     4   0   2
0011    CALLMT   2   1
0012    JMP      2 => 0014
0013 => RET1     1   2
0014 => RET0     0   1

-- BYTECODE -- data.lua:33-35
0001    LEN      1   0
0002    TGETV    1   0   1
0003    RET1     1   2

-- BYTECODE -- data.lua:39-42
0001    MOV      2   0
0002    TGETS    1   0   0  ; "push"
0003    VARG     3   0   1
0004    CALLM    1   1   1
0005    KPRI     1   0
0006    RET1     1   2

-- BYTECODE -- data.lua:47-51
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- data.lua:0-84
0001    KNIL     0   2
0002    GGET     3   0      ; "table"
0003    TGETS    4   3   1  ; "concat"
0004    TGETS    5   3   2  ; "remove"
0005    TGETS    2   3   3  ; "insert"
0006    MOV      1   5
0007    MOV      0   4
0008    KPRI     3   0
0009    FNEW     3   4      ; data.lua:7
0010    KNIL     4   5
0011    TDUP     6   6
0012    FNEW     7   5      ; data.lua:19
0013    TSETS    7   6   7  ; "__tostring"
0014    FNEW     7   8      ; data.lua:22
0015    TSETS    7   6   9  ; "pop"
0016    FNEW     7  10      ; data.lua:25
0017    TSETS    7   6  11  ; "push"
0018    FNEW     7  12      ; data.lua:33
0019    TSETS    7   6  13  ; "top"
0020    TSETS    6   6  14  ; "__index"
0021    GGET     7  15      ; "setmetatable"
0022    TDUP     8  17
0023    FNEW     9  16      ; data.lua:39
0024    TSETS    9   8  18  ; "__init"
0025    TSETS    6   8  19  ; "__base"
0026    TDUP     9  20
0027    TSETS    6   9  14  ; "__index"
0028    FNEW    10  21      ; data.lua:47
0029    TSETS   10   9  22  ; "__call"
0030    CALL     7   2   3
0031    MOV      5   7
0032    TSETS    5   6  23  ; "__class"
0033    MOV      4   5
0034    UCLO     5 => 0035
0035 => MOV      5   3
0036    TDUP     6  24
0037    CALL     5   2   2
0038    TDUP     6  25
0039    TSETS    3   6  26  ; "Set"
0040    TSETS    4   6  27  ; "Stack"
0041    TSETS    5   6  28  ; "lua_keywords"
0042    UCLO     0 => 0043
0043 => RET1     6   2

-----------------------
-- BYTECODE -- base.lua:20-47
0001    KPRI     1   0
0002    TNEW     2   0
0003    KSHORT   3   1
0004    UGET     4   0      ; split
0005    MOV      5   0
0006    KSTR     6   0      ; ";"
0007    CALL     4   2   3
0008    KSHORT   5   1
0009    LEN      6   4
0010    KSHORT   7   1
0011    FORI     5 => 0033
0012 => KPRI     9   1
0013    LOOP    10 => 0029
0014    TGETV   10   4   8
0015    MOV     12  10
0016    TGETS   11  10   1  ; "match"
0017    KSTR    13   2      ; "^(.-)%.lua$"
0018    CALL    11   2   3
0019    IST         11
0020    JMP     12 => 0023
0021    KPRI     9   2
0022    JMP     10 => 0029
0023 => MOV     12  11
0024    KSTR    13   3      ; ".moon"
0025    CAT     12  12  13
0026    TSETV   12   2   3
0027    ADDVN    3   3   0  ; 1
0028    KPRI     9   2
0029 => IST          9
0030    JMP     10 => 0032
0031    JMP      5 => 0033
0032 => FORL     5 => 0012
0033 => MOV      1   2
0034    UGET     2   1      ; concat
0035    MOV      3   1
0036    KSTR     4   0      ; ";"
0037    CALLT    2   3

-- BYTECODE -- base.lua:48-65
0001    ISNEP    1   0
0002    JMP      2 => 0004
0003    TNEW     1   0
0004 => GGET     2   0      ; "type"
0005    MOV      3   0
0006    CALL     2   2   2
0007    ISEQS    2   1      ; "string"
0008    JMP      2 => 0018
0009    GGET     2   0      ; "type"
0010    MOV      3   0
0011    CALL     2   2   2
0012    KPRI     3   0
0013    KSTR     4   2      ; "expecting string (got "
0014    MOV      5   2
0015    KSTR     6   3      ; ")"
0016    CAT      4   4   6
0017    RET      3   3
0018 => UGET     2   0      ; parse
0019    TGETS    2   2   1  ; "string"
0020    MOV      3   0
0021    CALL     2   3   2
0022    IST          2
0023    JMP      4 => 0027
0024    KPRI     4   0
0025    MOV      5   3
0026    RET      4   3
0027 => UGET     4   1      ; compile
0028    TGETS    4   4   4  ; "tree"
0029    MOV      5   2
0030    MOV      6   1
0031    CALL     4   4   3
0032    IST          4
0033    JMP      7 => 0042
0034    KPRI     7   0
0035    UGET     8   1      ; compile
0036    TGETS    8   8   5  ; "format_error"
0037    MOV      9   5
0038    MOV     10   6
0039    MOV     11   0
0040    CALL     8   0   4
0041    RETM     7   1
0042 => MOV      7   4
0043    MOV      8   5
0044    RET      7   3

-- BYTECODE -- base.lua:66-86
0001    MOV      2   0
0002    TGETS    1   0   0  ; "gsub"
0003    KSTR     3   1      ; "%."
0004    UGET     4   0      ; dirsep
0005    CALL     1   2   4
0006    KNIL     2   3
0007    GGET     4   2      ; "package"
0008    TGETS    4   4   3  ; "moonpath"
0009    MOV      5   4
0010    TGETS    4   4   4  ; "gmatch"
0011    KSTR     6   5      ; "[^;]+"
0012    CALL     4   4   3
0013    JMP      7 => 0028
0014 => MOV      9   7
0015    TGETS    8   7   0  ; "gsub"
0016    KSTR    10   6      ; "?"
0017    MOV     11   1
0018    CALL     8   2   4
0019    MOV      3   8
0020    GGET     8   7      ; "io"
0021    TGETS    8   8   8  ; "open"
0022    MOV      9   3
0023    CALL     8   2   2
0024    MOV      2   8
0025    ISF          2
0026    JMP      8 => 0028
0027    JMP      4 => 0030
0028 => ITERC    7   2   3
0029    ITERL    7 => 0014
0030 => ISF          2
0031    JMP      4 => 0056
0032    MOV      5   2
0033    TGETS    4   2   9  ; "read"
0034    KSTR     6  10      ; "*a"
0035    CALL     4   2   3
0036    MOV      6   2
0037    TGETS    5   2  11  ; "close"
0038    CALL     5   1   2
0039    UGET     5   1      ; loadstring
0040    MOV      6   4
0041    KSTR     7  12      ; "@"
0042    GGET     8  13      ; "tostring"
0043    MOV      9   3
0044    CALL     8   2   2
0045    CAT      7   7   8
0046    CALL     5   3   3
0047    IST          5
0048    JMP      7 => 0055
0049    GGET     7  14      ; "error"
0050    MOV      8   3
0051    KSTR     9  15      ; ": "
0052    MOV     10   6
0053    CAT      8   8  10
0054    CALL     7   1   2
0055 => RET1     5   2
0056 => KPRI     4   0
0057    KSTR     5  16      ; "Could not find moon file"
0058    RET      4   3

-- BYTECODE -- base.lua:87-101
0001    UGET     0   0      ; get_options
0002    VARG     1   0   0
0003    CALLM    0   6   0
0004    IST          2
0005    JMP      5 => 0007
0006    KSTR     2   0      ; "=(moonscript.loadstring)"
0007 => UGET     5   1      ; to_lua
0008    MOV      6   1
0009    MOV      7   0
0010    CALL     5   3   3
0011    IST          5
0012    JMP      7 => 0016
0013    KPRI     7   0
0014    MOV      8   6
0015    RET      7   3
0016 => ISF          2
0017    JMP      7 => 0020
0018    UGET     7   2      ; line_tables
0019    TSETV    6   7   2
0020 => UGET     7   3      ; lua
0021    TGETS    7   7   1  ; "loadstring"
0022    IST          7
0023    JMP      8 => 0026
0024    UGET     7   3      ; lua
0025    TGETS    7   7   2  ; "load"
0026 => MOV      8   5
0027    MOV      9   2
0028    UGET    10   4      ; unpack
0029    TNEW    11   3
0030    TSETB    3  11   1
0031    TSETB    4  11   2
0032    CALL    10   0   2
0033    CALLMT   7   2

-- BYTECODE -- base.lua:102-110
0001    GGET     1   0      ; "io"
0002    TGETS    1   1   1  ; "open"
0003    MOV      2   0
0004    CALL     1   3   2
0005    IST          1
0006    JMP      3 => 0010
0007    KPRI     3   0
0008    MOV      4   2
0009    RET      3   3
0010 => GGET     3   2      ; "assert"
0011    MOV      5   1
0012    TGETS    4   1   3  ; "read"
0013    KSTR     6   4      ; "*a"
0014    CALL     4   0   3
0015    CALLM    3   2   0
0016    MOV      5   1
0017    TGETS    4   1   5  ; "close"
0018    CALL     4   1   2
0019    UGET     4   0      ; loadstring
0020    MOV      5   3
0021    KSTR     6   6      ; "@"
0022    GGET     7   7      ; "tostring"
0023    MOV      8   0
0024    CALL     7   2   2
0025    CAT      6   6   7
0026    VARG     7   0   1
0027    CALLMT   4   2

-- BYTECODE -- base.lua:111-114
0001    GGET     0   0      ; "assert"
0002    UGET     1   0      ; loadfile
0003    VARG     2   0   0
0004    CALLM    1   0   0
0005    CALLM    0   2   0
0006    MOV      1   0
0007    CALLT    1   1

-- BYTECODE -- base.lua:115-131
0001    ISNEP    0   0
0002    JMP      1 => 0004
0003    KSHORT   0   2
0004 => GGET     1   0      ; "package"
0005    TGETS    1   1   1  ; "moonpath"
0006    IST          1
0007    JMP      1 => 0014
0008    GGET     1   0      ; "package"
0009    UGET     2   0      ; create_moonpath
0010    GGET     3   0      ; "package"
0011    TGETS    3   3   2  ; "path"
0012    CALL     2   2   2
0013    TSETS    2   1   1  ; "moonpath"
0014 => GGET     1   0      ; "package"
0015    TGETS    1   1   3  ; "loaders"
0016    IST          1
0017    JMP      2 => 0020
0018    GGET     1   0      ; "package"
0019    TGETS    1   1   4  ; "searchers"
0020 => KSHORT   2   1
0021    LEN      3   1
0022    KSHORT   4   1
0023    FORI     2 => 0031
0024 => TGETV    6   1   5
0025    UGET     7   1      ; moon_loader
0026    ISNEV    6   7
0027    JMP      7 => 0030
0028    KPRI     7   1
0029    RET1     7   2
0030 => FORL     2 => 0024
0031 => UGET     2   2      ; insert
0032    MOV      3   1
0033    MOV      4   0
0034    UGET     5   1      ; moon_loader
0035    CALL     2   1   4
0036    KPRI     2   2
0037    RET1     2   2

-- BYTECODE -- base.lua:132-141
0001    GGET     0   0      ; "package"
0002    TGETS    0   0   1  ; "loaders"
0003    IST          0
0004    JMP      1 => 0007
0005    GGET     0   0      ; "package"
0006    TGETS    0   0   2  ; "searchers"
0007 => GGET     1   3      ; "ipairs"
0008    MOV      2   0
0009    CALL     1   4   2
0010    JMP      4 => 0020
0011 => UGET     6   0      ; moon_loader
0012    ISNEV    5   6
0013    JMP      6 => 0020
0014    UGET     6   1      ; remove
0015    MOV      7   0
0016    MOV      8   4
0017    CALL     6   1   3
0018    KPRI     6   2
0019    RET1     6   2
0020 => ITERC    4   3   3
0021    ITERL    4 => 0011
0022    KPRI     1   1
0023    RET1     1   2

-- BYTECODE -- base.lua:0-154
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "moonscript.compile"
0003    CALL     0   2   2
0004    GGET     1   0      ; "require"
0005    KSTR     2   2      ; "moonscript.parse"
0006    CALL     1   2   2
0007    KNIL     2   4
0008    GGET     5   3      ; "table"
0009    TGETS    6   5   4  ; "concat"
0010    TGETS    7   5   5  ; "insert"
0011    TGETS    4   5   6  ; "remove"
0012    MOV      3   7
0013    MOV      2   6
0014    KNIL     5   8
0015    GGET     9   0      ; "require"
0016    KSTR    10   7      ; "moonscript.util"
0017    CALL     9   2   2
0018    TGETS   10   9   8  ; "split"
0019    TGETS   11   9   9  ; "dump"
0020    TGETS   12   9  10  ; "get_options"
0021    TGETS    8   9  11  ; "unpack"
0022    MOV      7  12
0023    MOV      6  11
0024    MOV      5  10
0025    TDUP     9  12
0026    GGET    10  13      ; "loadstring"
0027    TSETS   10   9  13  ; "loadstring"
0028    GGET    10  14      ; "load"
0029    TSETS   10   9  14  ; "load"
0030    KNIL    10  19
0031    KSTR    10  15      ; "/"
0032    GGET    20   0      ; "require"
0033    KSTR    21  16      ; "moonscript.line_tables"
0034    CALL    20   2   2
0035    MOV     11  20
0036    FNEW    12  17      ; base.lua:20
0037    FNEW    13  18      ; base.lua:48
0038    FNEW    14  19      ; base.lua:66
0039    FNEW    15  20      ; base.lua:87
0040    FNEW    16  21      ; base.lua:102
0041    FNEW    17  22      ; base.lua:111
0042    FNEW    18  23      ; base.lua:115
0043    FNEW    19  24      ; base.lua:132
0044    TDUP    20  25
0045    TSETS   18  20  26  ; "insert_loader"
0046    TSETS   19  20  27  ; "remove_loader"
0047    TSETS   13  20  28  ; "to_lua"
0048    TSETS   14  20  29  ; "moon_loader"
0049    TSETS   10  20  30  ; "dirsep"
0050    TSETS   17  20  31  ; "dofile"
0051    TSETS   16  20  32  ; "loadfile"
0052    TSETS   15  20  13  ; "loadstring"
0053    TSETS   12  20  33  ; "create_moonpath"
0054    UCLO     0 => 0055
0055 => RET1    20   2

-----------------------
-- BYTECODE -- types.lua:27-36
0001    GGET     1   0      ; "type"
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISNES    1   1      ; "nil"
0005    JMP      2 => 0009
0006    KSTR     2   1      ; "nil"
0007    RET1     2   2
0008    JMP      2 => 0016
0009 => ISNES    1   2      ; "table"
0010    JMP      2 => 0014
0011    TGETB    2   0   1
0012    RET1     2   2
0013    JMP      2 => 0016
0014 => KSTR     2   3      ; "value"
0015    RET1     2   2
0016 => RET0     0   1

-- BYTECODE -- types.lua:40-46
0001    GGET     1   0      ; "getmetatable"
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISF          1
0005    JMP      2 => 0011
0006    TGETS    2   1   1  ; "smart_node"
0007    ISF          2
0008    JMP      3 => 0011
0009    KSTR     2   2      ; "table"
0010    RET1     2   2
0011 => UGET     2   0      ; moon_type
0012    MOV      3   0
0013    CALLT    2   2

-- BYTECODE -- types.lua:49-54
0001    UGET     1   0      ; ntype
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISEQS    1   0      ; "chain"
0005    JMP      1 => 0008
0006    KPRI     1   1
0007    RET1     1   2
0008 => UGET     1   0      ; ntype
0009    LEN      2   0
0010    TGETV    2   0   2
0011    CALL     1   2   2
0012    ISEQS    1   1      ; "call"
0013    JMP      1 => 0016
0014    KPRI     1   1
0015    JMP      2 => 0017
0016 => KPRI     1   2
0017 => RET1     1   2

-- BYTECODE -- types.lua:56-60
0001    GGET     1   0      ; "require"
0002    KSTR     2   1      ; "moonscript.compile"
0003    CALL     1   2   2
0004    GGET     2   0      ; "require"
0005    KSTR     3   2      ; "moonscript.transform"
0006    CALL     2   2   2
0007    TGETS    3   1   3  ; "Block"
0008    MOV      4   3
0009    TGETS    3   3   4  ; "is_value"
0010    MOV      5   0
0011    CALL     3   2   3
0012    IST          3
0013    JMP      4 => 0019
0014    TGETS    3   2   5  ; "Value"
0015    MOV      4   3
0016    TGETS    3   3   6  ; "can_transform"
0017    MOV      5   0
0018    CALL     3   2   3
0019 => RET1     3   2

-- BYTECODE -- types.lua:62-64
0001    GGET     1   0      ; "type"
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISNES    1   1      ; "table"
0005    JMP      1 => 0014
0006    TGETB    1   0   1
0007    ISNES    1   2      ; "exp"
0008    JMP      1 => 0014
0009    LEN      1   0
0010    ISEQN    1   0      ; 2
0011    JMP      1 => 0014
0012    KPRI     1   1
0013    JMP      2 => 0015
0014 => KPRI     1   2
0015 => RET1     1   2

-- BYTECODE -- types.lua:66-68
0001    UGET     1   0      ; ntype
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISNES    1   0      ; "chain"
0005    JMP      1 => 0012
0006    UGET     1   0      ; ntype
0007    LEN      2   0
0008    TGETV    2   0   2
0009    CALL     1   2   2
0010    ISEQS    1   1      ; "slice"
0011    JMP      1 => 0014
0012 => KPRI     1   1
0013    JMP      2 => 0015
0014 => KPRI     1   2
0015 => RET1     1   2

-- BYTECODE -- types.lua:163-174
0001    TNEW     0   0
0002    GGET     1   0      ; "pairs"
0003    UGET     2   0      ; node_types
0004    CALL     1   4   2
0005    ISNEXT   4 => 0017
0006 => TNEW     6   0
0007    GGET     7   1      ; "ipairs"
0008    MOV      8   5
0009    CALL     7   4   2
0010    JMP     10 => 0014
0011 => TGETB   12  11   1
0012    ADDVN   13  10   0  ; 1
0013    TSETV   13   6  12
0014 => ITERC   10   3   3
0015    ITERL   10 => 0011
0016    TSETV    6   0   4
0017 => ITERN    4   3   3
0018    ITERL    4 => 0006
0019    RET1     0   2

-- BYTECODE -- types.lua:182-203
0001    ISNEP    0   0
0002    JMP      1 => 0004
0003    TNEW     0   0
0004 => TNEW     1   3
0005    UGET     2   0      ; name
0006    TSETB    2   1   1
0007    GGET     2   0      ; "ipairs"
0008    UGET     3   1      ; spec
0009    CALL     2   4   2
0010    JMP      5 => 0027
0011 => UGET     7   2      ; unpack
0012    MOV      8   6
0013    CALL     7   3   2
0014    KPRI     9   0
0015    TGETV   10   0   7
0016    ISF         10
0017    JMP     11 => 0020
0018    TGETV    9   0   7
0019    JMP     10 => 0021
0020 => MOV      9   8
0021 => UGET    10   3      ; t
0022    ISNEV    9  10
0023    JMP     10 => 0025
0024    TNEW     9   0
0025 => ADDVN   10   5   0  ; 1
0026    TSETV    9   1  10
0027 => ITERC    5   3   3
0028    ITERL    5 => 0011
0029    RET1     1   2

-- BYTECODE -- types.lua:177-204
0001    UGET     1   0      ; node_types
0002    TGETV    1   1   0
0003    IST          1
0004    JMP      2 => 0010
0005    GGET     2   0      ; "error"
0006    KSTR     3   1      ; "don't know how to build node: "
0007    MOV      4   0
0008    CAT      3   3   4
0009    CALL     2   1   2
0010 => FNEW     2   2      ; types.lua:182
0011    UCLO     0 => 0012
0012 => RET1     2   2

-- BYTECODE -- types.lua:207-215
0001    ISNEP    0   0
0002    JMP      1 => 0004
0003    TNEW     0   0
0004 => TDUP     1   0
0005    TSETB    0   1   2
0006    RET1     1   2

-- BYTECODE -- types.lua:216-221
0001    TDUP     1   0
0002    TSETB    0   1   2
0003    RET1     1   2

-- BYTECODE -- types.lua:222-231
0001    UGET     2   0      ; build
0002    TGETS    2   2   0  ; "assign"
0003    TDUP     3   1
0004    TNEW     4   3
0005    TSETB    0   4   1
0006    TSETS    4   3   2  ; "names"
0007    TNEW     4   3
0008    TSETB    1   4   1
0009    TSETS    4   3   3  ; "values"
0010    CALLT    2   2

-- BYTECODE -- types.lua:232-249
0001    ISNEP    0   0
0002    JMP      1 => 0004
0003    TNEW     0   0
0004 => KSHORT   1   1
0005    LEN      2   0
0006    KSHORT   3   1
0007    FORI     1 => 0019
0008 => TGETV    5   0   4
0009    GGET     6   0      ; "type"
0010    TGETB    7   5   1
0011    CALL     6   2   2
0012    ISNES    6   1      ; "string"
0013    JMP      6 => 0018
0014    TDUP     6   2
0015    TGETB    7   5   1
0016    TSETB    7   6   2
0017    TSETB    6   5   1
0018 => FORL     1 => 0008
0019 => TDUP     1   3
0020    TSETB    0   1   2
0021    RET1     1   2

-- BYTECODE -- types.lua:250-255
0001    TDUP     1   0
0002    TSETB    0   1   2
0003    RET1     1   2

-- BYTECODE -- types.lua:256-273
0001    TGETS    1   0   0  ; "base"
0002    IST          1
0003    JMP      2 => 0007
0004    GGET     1   1      ; "error"
0005    KSTR     2   2      ; "expecting base property for chain"
0006    CALL     1   2   2
0007 => GGET     2   3      ; "type"
0008    MOV      3   1
0009    CALL     2   2   2
0010    ISNES    2   4      ; "string"
0011    JMP      2 => 0015
0012    TDUP     2   5
0013    TSETB    1   2   2
0014    MOV      1   2
0015 => TDUP     2   6
0016    TSETB    1   2   2
0017    KSHORT   3   1
0018    LEN      4   0
0019    KSHORT   5   1
0020    FORI     3 => 0027
0021 => TGETV    7   0   6
0022    UGET     8   0      ; insert
0023    MOV      9   2
0024    MOV     10   7
0025    CALL     8   1   3
0026    FORL     3 => 0021
0027 => RET1     2   2

-- BYTECODE -- types.lua:275-278
0001    UGET     2   0      ; make_builder
0002    MOV      3   1
0003    CALL     2   2   2
0004    TSETV    2   0   1
0005    GGET     2   0      ; "rawget"
0006    MOV      3   0
0007    MOV      4   1
0008    CALLT    2   3

-- BYTECODE -- types.lua:285-291
0001    UGET     2   0      ; index
0002    TGETV    2   2   1
0003    ISF          2
0004    JMP      3 => 0011
0005    GGET     2   0      ; "rawget"
0006    MOV      3   0
0007    UGET     4   0      ; index
0008    TGETV    4   4   1
0009    CALLT    2   3
0010    JMP      2 => 0026
0011 => GGET     2   1      ; "type"
0012    MOV      3   1
0013    CALL     2   2   2
0014    ISNES    2   2      ; "string"
0015    JMP      2 => 0026
0016    GGET     2   3      ; "error"
0017    KSTR     3   4      ; "unknown key: `"
0018    MOV      4   1
0019    KSTR     5   5      ; "` on node type: `"
0020    UGET     6   1      ; ntype
0021    MOV      7   0
0022    CALL     6   2   2
0023    KSTR     7   6      ; "`"
0024    CAT      3   3   7
0025    CALLT    2   2
0026 => RET0     0   1

-- BYTECODE -- types.lua:292-297
0001    UGET     3   0      ; index
0002    TGETV    3   3   1
0003    ISF          3
0004    JMP      4 => 0007
0005    UGET     3   0      ; index
0006    TGETV    1   3   1
0007 => GGET     3   0      ; "rawset"
0008    MOV      4   0
0009    MOV      5   1
0010    MOV      6   2
0011    CALLT    3   4

-- BYTECODE -- types.lua:281-301
0001    UGET     2   0      ; key_table
0002    TGETV    2   2   1
0003    TDUP     3   0
0004    FNEW     4   1      ; types.lua:285
0005    TSETS    4   3   2  ; "__index"
0006    FNEW     4   3      ; types.lua:292
0007    TSETS    4   3   4  ; "__newindex"
0008    TSETV    3   0   1
0009    UCLO     0 => 0010
0010 => RET1     3   2

-- BYTECODE -- types.lua:304-306
0001    GGET     1   0      ; "setmetatable"
0002    MOV      2   0
0003    UGET     3   0      ; smart_node_mt
0004    UGET     4   1      ; ntype
0005    MOV      5   0
0006    CALL     4   2   2
0007    TGETV    3   3   4
0008    CALLT    1   3

-- BYTECODE -- types.lua:0-324
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "moonscript.util"
0003    CALL     0   2   2
0004    KPRI     1   0
0005    GGET     2   0      ; "require"
0006    KSTR     3   2      ; "moonscript.data"
0007    CALL     2   2   2
0008    TGETS    1   2   3  ; "Set"
0009    KPRI     2   0
0010    GGET     3   4      ; "table"
0011    TGETS    2   3   5  ; "insert"
0012    KPRI     3   0
0013    TGETS    3   0   6  ; "unpack"
0014    MOV      4   1
0015    TDUP     5   7
0016    CALL     4   2   2
0017    MOV      5   1
0018    TDUP     6   8
0019    CALL     5   2   2
0020    MOV      6   1
0021    TDUP     7   9
0022    CALL     6   2   2
0023    KPRI     7   0
0024    FNEW     7  10      ; types.lua:27
0025    KPRI     8   0
0026    TGETS    9   0  11  ; "moon"
0027    TGETS    9   9  12  ; "type"
0028    FNEW     8  13      ; types.lua:40
0029    UCLO     9 => 0030
0030 => KPRI     9   0
0031    FNEW     9  14      ; types.lua:49
0032    KPRI    10   0
0033    FNEW    10  15      ; types.lua:56
0034    KPRI    11   0
0035    FNEW    11  16      ; types.lua:62
0036    KPRI    12   0
0037    FNEW    12  17      ; types.lua:66
0038    TNEW    13   0
0039    TDUP    14  20
0040    TNEW    15   3
0041    TDUP    16  18
0042    TSETB   16  15   1
0043    TDUP    16  19
0044    TSETB   13  16   2
0045    TSETB   16  15   2
0046    TSETS   15  14  21  ; "class"
0047    TNEW    15   5
0048    TDUP    16  22
0049    TSETB   13  16   2
0050    TSETB   16  15   1
0051    TDUP    16  23
0052    TSETB   13  16   2
0053    TSETB   16  15   2
0054    TDUP    16  24
0055    TSETB   16  15   3
0056    TDUP    16  25
0057    TSETB   13  16   2
0058    TSETB   16  15   4
0059    TSETS   15  14  26  ; "fndef"
0060    TNEW    15   4
0061    TDUP    16  27
0062    TSETB   13  16   2
0063    TSETB   16  15   1
0064    TDUP    16  28
0065    TSETB   16  15   2
0066    TDUP    16  29
0067    TSETB   13  16   2
0068    TSETB   16  15   3
0069    TSETS   15  14  30  ; "foreach"
0070    TNEW    15   4
0071    TDUP    16  31
0072    TSETB   16  15   1
0073    TDUP    16  32
0074    TSETB   13  16   2
0075    TSETB   16  15   2
0076    TDUP    16  33
0077    TSETB   13  16   2
0078    TSETB   16  15   3
0079    TSETS   15  14  34  ; "for"
0080    TNEW    15   3
0081    TDUP    16  35
0082    TSETB   13  16   2
0083    TSETB   16  15   1
0084    TDUP    16  36
0085    TSETB   13  16   2
0086    TSETB   16  15   2
0087    TSETS   15  14  37  ; "while"
0088    TNEW    15   3
0089    TDUP    16  38
0090    TSETB   13  16   2
0091    TSETB   16  15   1
0092    TDUP    16  39
0093    TSETB   13  16   2
0094    TSETB   16  15   2
0095    TSETS   15  14  40  ; "assign"
0096    TNEW    15   3
0097    TDUP    16  41
0098    TSETB   13  16   2
0099    TSETB   16  15   1
0100    TSETS   15  14  42  ; "declare"
0101    TNEW    15   3
0102    TDUP    16  43
0103    TSETB   13  16   2
0104    TSETB   16  15   1
0105    TDUP    16  44
0106    TSETB   13  16   2
0107    TSETB   16  15   2
0108    TSETS   15  14  45  ; "if"
0109    KPRI    15   0
0110    FNEW    15  46      ; types.lua:163
0111    MOV     16  15
0112    CALL    16   2   1
0113    KPRI    17   0
0114    FNEW    17  47      ; types.lua:177
0115    KPRI    18   0
0116    GGET    19  48      ; "setmetatable"
0117    TDUP    20  50
0118    FNEW    21  49      ; types.lua:207
0119    TSETS   21  20  51  ; "group"
0120    FNEW    21  52      ; types.lua:216
0121    TSETS   21  20  53  ; "do"
0122    FNEW    21  54      ; types.lua:222
0123    TSETS   21  20  55  ; "assign_one"
0124    FNEW    21  56      ; types.lua:232
0125    TSETS   21  20   4  ; "table"
0126    FNEW    21  57      ; types.lua:250
0127    TSETS   21  20  58  ; "block_exp"
0128    FNEW    21  59      ; types.lua:256
0129    TSETS   21  20  60  ; "chain"
0130    TDUP    21  62
0131    FNEW    22  61      ; types.lua:275
0132    TSETS   22  21  63  ; "__index"
0133    CALL    19   2   3
0134    MOV     18  19
0135    GGET    19  48      ; "setmetatable"
0136    TNEW    20   0
0137    TDUP    21  65
0138    FNEW    22  64      ; types.lua:281
0139    TSETS   22  21  63  ; "__index"
0140    CALL    19   2   3
0141    KPRI    20   0
0142    FNEW    20  66      ; types.lua:304
0143    TDUP    21  67
0144    TDUP    22  68
0145    TSETS    7  22  69  ; "ntype"
0146    TSETS   20  22  70  ; "smart_node"
0147    TSETS   18  22  71  ; "build"
0148    TSETS   10  22  72  ; "is_value"
0149    TSETS   12  22  73  ; "is_slice"
0150    TSETS    4  22  74  ; "manual_return"
0151    TSETS    5  22  75  ; "cascading"
0152    TSETS   11  22  76  ; "value_is_singular"
0153    TSETS    9  22  77  ; "value_can_be_statement"
0154    TSETS    8  22  78  ; "mtype"
0155    TSETS    6  22  79  ; "terminating"
0156    TSETS   21  22  80  ; "NOOP"
0157    UCLO     0 => 0158
0158 => RET1    22   2

-----------------------
-- BYTECODE -- util.lua:6-8
0001    UGET     1   0      ; type
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISNES    1   0      ; "table"
0005    JMP      1 => 0008
0006    TGETS    1   0   1  ; "__class"
0007    JMP      2 => 0011
0008 => KPRI     1   1
0009    JMP      2 => 0011
0010    KPRI     1   2
0011 => RET1     1   2

-- BYTECODE -- util.lua:9-21
0001    UGET     2   0      ; type
0002    MOV      3   0
0003    CALL     2   2   2
0004    ISEQS    2   0      ; "table"
0005    JMP      2 => 0008
0006    KPRI     2   1
0007    RET1     2   2
0008 => TGETS    2   0   1  ; "__class"
0009 => ISF          2
0010    JMP      3 => 0018
0011    LOOP     3 => 0018
0012    ISNEV    2   1
0013    JMP      3 => 0016
0014    KPRI     3   2
0015    RET1     3   2
0016 => TGETS    2   2   2  ; "__parent"
0017    JMP      3 => 0009
0018 => KPRI     3   1
0019    RET1     3   2

-- BYTECODE -- util.lua:22-31
0001    UGET     1   0      ; type
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISNES    1   0      ; "table"
0005    JMP      2 => 0010
0006    TGETS    2   0   1  ; "__class"
0007    ISF          2
0008    JMP      3 => 0010
0009    RET1     2   2
0010 => RET1     1   2

-- BYTECODE -- util.lua:34-40
0001    KSHORT   2   1
0002    MOV      4   0
0003    TGETS    3   0   0  ; "sub"
0004    KSHORT   5   1
0005    MOV      6   1
0006    CALL     3   2   4
0007    MOV      4   3
0008    TGETS    3   3   1  ; "gmatch"
0009    KSTR     5   2      ; "\n"
0010    CALL     3   4   3
0011    JMP      6 => 0013
0012 => ADDVN    2   2   0  ; 1
0013 => ITERC    6   2   3
0014    ITERL    6 => 0012
0015    RET1     2   2

-- BYTECODE -- util.lua:42-44
0001    MOV      2   0
0002    TGETS    1   0   0  ; "match"
0003    KSTR     3   1      ; "^%s*(.-)%s*$"
0004    CALLT    1   3

-- BYTECODE -- util.lua:46-53
0001    MOV      3   0
0002    TGETS    2   0   0  ; "gmatch"
0003    KSTR     4   1      ; "([^\n]*)\n?"
0004    CALL     2   4   3
0005    JMP      5 => 0010
0006 => ISNEN    1   0      ; 1
0007    JMP      6 => 0009
0008    RET1     5   2
0009 => SUBVN    1   1   0  ; 1
0010 => ITERC    5   2   3
0011    ITERL    5 => 0006
0012    RET0     0   1

-- BYTECODE -- util.lua:55-62
0001    UGET     2   0      ; get_line
0002    MOV      3   0
0003    MOV      4   1
0004    CALL     2   2   3
0005    ISF          2
0006    JMP      3 => 0012
0007    UGET     3   1      ; trim
0008    MOV      4   2
0009    CALL     3   2   2
0010    ISNES    3   0      ; ""
0011    JMP      3 => 0020
0012 => KSHORT   3   1
0013    ISGE     3   1
0014    JMP      3 => 0020
0015    UGET     3   2      ; get_closest_line
0016    MOV      4   0
0017    SUBVN    5   1   0  ; 1
0018    CALLT    3   3
0019    JMP      3 => 0023
0020 => MOV      3   2
0021    MOV      4   1
0022    RET      3   3
0023 => RET0     0   1

-- BYTECODE -- util.lua:64-76
0001    ISNES    0   0      ; ""
0002    JMP      2 => 0005
0003    TNEW     2   0
0004    RET1     2   2
0005 => MOV      2   0
0006    MOV      3   1
0007    CAT      0   2   3
0008    TNEW     2   0
0009    KSHORT   3   1
0010    MOV      5   0
0011    TGETS    4   0   1  ; "gmatch"
0012    KSTR     6   2      ; "(.-)"
0013    MOV      7   1
0014    CAT      6   6   7
0015    CALL     4   4   3
0016    JMP      7 => 0019
0017 => TSETV    7   2   3
0018    ADDVN    3   3   0  ; 1
0019 => ITERC    7   2   3
0020    ITERL    7 => 0017
0021    RET1     2   2

-- BYTECODE -- util.lua:81-109
0001    ISNEP    1   0
0002    JMP      2 => 0004
0003    KSHORT   1   0
0004 => UGET     2   0      ; type
0005    MOV      3   0
0006    CALL     2   2   2
0007    ISNES    2   0      ; "string"
0008    JMP      3 => 0015
0009    KSTR     3   1      ; """
0010    MOV      4   0
0011    KSTR     5   2      ; ""\n"
0012    CAT      3   3   5
0013    RET1     3   2
0014    JMP      3 => 0082
0015 => ISNES    2   3      ; "table"
0016    JMP      3 => 0076
0017    UGET     3   1      ; seen
0018    TGETV    3   3   0
0019    ISF          3
0020    JMP      4 => 0028
0021    KSTR     3   4      ; "recursion("
0022    GGET     4   5      ; "tostring"
0023    MOV      5   0
0024    CALL     4   2   2
0025    KSTR     5   6      ; ")...\n"
0026    CAT      3   3   5
0027    RET1     3   2
0028 => UGET     3   1      ; seen
0029    KPRI     4   2
0030    TSETV    4   3   0
0031    ADDVN    1   1   0  ; 1
0032    KPRI     3   0
0033    TNEW     4   0
0034    KSHORT   5   1
0035    GGET     6   7      ; "pairs"
0036    MOV      7   0
0037    CALL     6   4   2
0038    ISNEXT   9 => 0056
0039 => KSTR    11   8      ; " "
0040    MOV     12  11
0041    TGETS   11  11   9  ; "rep"
0042    MULVN   13   1   1  ; 4
0043    CALL    11   2   3
0044    KSTR    12  10      ; "["
0045    GGET    13   5      ; "tostring"
0046    MOV     14   9
0047    CALL    13   2   2
0048    KSTR    14  11      ; "] = "
0049    UGET    15   2      ; _dump
0050    MOV     16  10
0051    MOV     17   1
0052    CALL    15   2   3
0053    CAT     11  11  15
0054    TSETV   11   4   5
0055    ADDVN    5   5   0  ; 1
0056 => ITERN    9   3   3
0057    ITERL    9 => 0039
0058    MOV      3   4
0059    UGET     4   1      ; seen
0060    KPRI     5   1
0061    TSETV    5   4   0
0062    KSTR     4  12      ; "{\n"
0063    UGET     5   3      ; concat
0064    MOV      6   3
0065    CALL     5   2   2
0066    KSTR     6   8      ; " "
0067    MOV      7   6
0068    TGETS    6   6   9  ; "rep"
0069    SUBVN    8   1   0  ; 1
0070    MULVN    8   8   1  ; 4
0071    CALL     6   2   3
0072    KSTR     7  13      ; "}\n"
0073    CAT      4   4   7
0074    RET1     4   2
0075    JMP      3 => 0082
0076 => GGET     3   5      ; "tostring"
0077    MOV      4   0
0078    CALL     3   2   2
0079    KSTR     4  14      ; "\n"
0080    CAT      3   3   4
0081    RET1     3   2
0082 => RET0     0   1

-- BYTECODE -- util.lua:78-111
0001    TNEW     1   0
0002    KPRI     2   0
0003    FNEW     2   0      ; util.lua:81
0004    MOV      3   2
0005    MOV      4   0
0006    UCLO     0 => 0007
0007 => CALLT    3   2

-- BYTECODE -- util.lua:127-129
0001    TGETB    2   0   1
0002    TGETB    3   1   1
0003    ISLT     2   3
0004    JMP      2 => 0007
0005    KPRI     2   1
0006    JMP      3 => 0008
0007 => KPRI     2   2
0008 => RET1     2   2

-- BYTECODE -- util.lua:113-147
0001    KPRI     3   0
0002    TNEW     4   0
0003    KSHORT   5   1
0004    GGET     6   0      ; "pairs"
0005    MOV      7   0
0006    CALL     6   4   2
0007    ISNEXT   9 => 0013
0008 => TNEW    11   3
0009    TSETB    9  11   1
0010    TSETB   10  11   2
0011    TSETV   11   4   5
0012    ADDVN    5   5   0  ; 1
0013 => ITERN    9   3   3
0014    ITERL    9 => 0008
0015    MOV      3   4
0016    GGET     4   1      ; "table"
0017    TGETS    4   4   2  ; "sort"
0018    MOV      5   3
0019    FNEW     6   3      ; util.lua:127
0020    CALL     4   1   3
0021    KPRI     4   0
0022    TNEW     5   0
0023    KSHORT   6   1
0024    KSHORT   7   1
0025    LEN      8   3
0026    KSHORT   9   1
0027    FORI     7 => 0072
0028 => TGETV   11   3  10
0029    UGET    12   0      ; unpack
0030    MOV     13  11
0031    CALL    12   3   2
0032    UGET    14   1      ; pos_to_line
0033    MOV     15   1
0034    MOV     16  13
0035    CALL    14   2   3
0036    UGET    15   2      ; get_line
0037    MOV     16   2
0038    MOV     17  12
0039    CALL    15   2   3
0040    UGET    16   3      ; get_closest_line
0041    MOV     17   1
0042    MOV     18  14
0043    CALL    16   2   3
0044    GGET    17   4      ; "tostring"
0045    MOV     18  13
0046    CALL    17   2   2
0047    KSTR    18   5      ; "\t "
0048    GGET    19   4      ; "tostring"
0049    MOV     20  12
0050    CALL    19   2   2
0051    KSTR    20   6      ; ":[ "
0052    GGET    21   4      ; "tostring"
0053    UGET    22   4      ; trim
0054    MOV     23  15
0055    CALL    22   0   2
0056    CALLM   21   2   0
0057    KSTR    22   7      ; " ] >> "
0058    GGET    23   4      ; "tostring"
0059    MOV     24  14
0060    CALL    23   2   2
0061    KSTR    24   6      ; ":[ "
0062    GGET    25   4      ; "tostring"
0063    UGET    26   4      ; trim
0064    MOV     27  16
0065    CALL    26   0   2
0066    CALLM   25   2   0
0067    KSTR    26   8      ; " ]"
0068    CAT     17  17  26
0069    TSETV   17   5   6
0070    ADDVN    6   6   0  ; 1
0071    FORL     7 => 0028
0072 => MOV      4   5
0073    UGET     5   5      ; concat
0074    MOV      6   4
0075    KSTR     7   9      ; "\n"
0076    UCLO     0 => 0077
0077 => CALLT    5   3

-- BYTECODE -- util.lua:159-161
0001    UGET     0   0      ; env
0002    RET1     0   2

-- BYTECODE -- util.lua:148-164
0001    KPRI     2   0
0002    KSHORT   3   1
0003 => LOOP     4 => 0017
0004    GGET     4   0      ; "debug"
0005    TGETS    4   4   1  ; "getupvalue"
0006    MOV      5   0
0007    MOV      6   3
0008    CALL     4   2   3
0009    MOV      2   4
0010    ISF          2
0011    JMP      4 => 0017
0012    ISNES    2   2      ; "_ENV"
0013    JMP      4 => 0015
0014    JMP      4 => 0017
0015 => ADDVN    3   3   0  ; 1
0016    JMP      4 => 0003
0017 => ISF          2
0018    JMP      4 => 0026
0019    GGET     4   0      ; "debug"
0020    TGETS    4   4   3  ; "upvaluejoin"
0021    MOV      5   0
0022    MOV      6   3
0023    FNEW     7   4      ; util.lua:159
0024    KSHORT   8   1
0025    CALL     4   1   5
0026 => UCLO     0 => 0027
0027 => RET1     0   2

-- BYTECODE -- util.lua:165-178
0001    KSHORT   1   1
0002 => LOOP     2 => 0016
0003    GGET     2   0      ; "debug"
0004    TGETS    2   2   1  ; "getupvalue"
0005    MOV      3   0
0006    MOV      4   1
0007    CALL     2   3   3
0008    IST          2
0009    JMP      4 => 0011
0010    JMP      2 => 0016
0011 => ISNES    2   2      ; "_ENV"
0012    JMP      4 => 0014
0013    RET1     3   2
0014 => ADDVN    1   1   0  ; 1
0015    JMP      2 => 0002
0016 => KPRI     2   0
0017    RET1     2   2

-- BYTECODE -- util.lua:180-190
0001    GGET     0   0      ; "select"
0002    KSTR     1   1      ; "#"
0003    VARG     2   0   0
0004    CALLM    0   2   1
0005    GGET     1   0      ; "select"
0006    MOV      2   0
0007    VARG     3   0   0
0008    CALLM    1   2   1
0009    UGET     2   0      ; type
0010    MOV      3   1
0011    CALL     2   2   2
0012    ISNES    2   2      ; "table"
0013    JMP      2 => 0024
0014    MOV      2   1
0015    UGET     3   1      ; unpack
0016    TNEW     4   3
0017    VARG     5   0   0
0018    TSETM    5   0      ; 1
0019    KPRI     5   0
0020    SUBVN    6   0   1  ; 1
0021    CALL     3   0   4
0022    RETM     2   1
0023    JMP      2 => 0027
0024 => TNEW     2   0
0025    VARG     3   0   0
0026    RETM     2   1
0027 => RET0     0   1

-- BYTECODE -- util.lua:194-196
0001    GGET     2   0      ; "error"
0002    KSTR     3   1      ; "Attempted to import non-existent `"
0003    GGET     4   2      ; "tostring"
0004    MOV      5   1
0005    CALL     4   2   2
0006    KSTR     5   3      ; "` from "
0007    GGET     6   2      ; "tostring"
0008    UGET     7   0      ; name
0009    CALL     6   2   2
0010    CAT      3   3   6
0011    CALLT    2   2

-- BYTECODE -- util.lua:192-198
0001    GGET     2   0      ; "setmetatable"
0002    MOV      3   1
0003    TDUP     4   2
0004    FNEW     5   1      ; util.lua:194
0005    TSETS    5   4   3  ; "__index"
0006    UCLO     0 => 0007
0007 => CALLT    2   3

-- BYTECODE -- util.lua:0-214
0001    KPRI     0   0
0002    GGET     1   0      ; "table"
0003    TGETS    0   1   1  ; "concat"
0004    GGET     1   2      ; "unpack"
0005    IST          1
0006    JMP      2 => 0009
0007    GGET     1   0      ; "table"
0008    TGETS    1   1   2  ; "unpack"
0009 => GGET     2   3      ; "type"
0010    TDUP     3   5
0011    FNEW     4   4      ; util.lua:6
0012    TSETS    4   3   6  ; "is_object"
0013    FNEW     4   7      ; util.lua:9
0014    TSETS    4   3   8  ; "is_a"
0015    FNEW     4   9      ; util.lua:22
0016    TSETS    4   3   3  ; "type"
0017    KPRI     4   0
0018    FNEW     4  10      ; util.lua:34
0019    KPRI     5   0
0020    FNEW     5  11      ; util.lua:42
0021    KPRI     6   0
0022    FNEW     6  12      ; util.lua:46
0023    KPRI     7   0
0024    FNEW     7  13      ; util.lua:55
0025    KPRI     8   0
0026    FNEW     8  14      ; util.lua:64
0027    KPRI     9   0
0028    FNEW     9  15      ; util.lua:78
0029    KPRI    10   0
0030    FNEW    10  16      ; util.lua:113
0031    GGET    11  17      ; "setfenv"
0032    IST         11
0033    JMP     12 => 0035
0034    FNEW    11  18      ; util.lua:148
0035 => GGET    12  19      ; "getfenv"
0036    IST         12
0037    JMP     13 => 0039
0038    FNEW    12  20      ; util.lua:165
0039 => KPRI    13   0
0040    FNEW    13  21      ; util.lua:180
0041    KPRI    14   0
0042    FNEW    14  22      ; util.lua:192
0043    TDUP    15  23
0044    TSETS    3  15  24  ; "moon"
0045    TSETS    4  15  25  ; "pos_to_line"
0046    TSETS    7  15  26  ; "get_closest_line"
0047    TSETS    6  15  27  ; "get_line"
0048    TSETS    5  15  28  ; "trim"
0049    TSETS    8  15  29  ; "split"
0050    TSETS    9  15  30  ; "dump"
0051    TSETS   10  15  31  ; "debug_posmap"
0052    TSETS   12  15  19  ; "getfenv"
0053    TSETS   11  15  17  ; "setfenv"
0054    TSETS   13  15  32  ; "get_options"
0055    TSETS    1  15   2  ; "unpack"
0056    TSETS   14  15  33  ; "safe_module"
0057    UCLO     0 => 0058
0058 => RET1    15   2

-----------------------
-- BYTECODE -- class.lua:19-91
0001    ISNEP    1   0
0002    JMP      4 => 0004
0003    KPRI     1   2
0004 => TDUP     4   0
0005    TSETB    0   4   2
0006    TDUP     5   1
0007    TSETB    5   4   3
0008    IST          3
0009    JMP      5 => 0011
0010    RET1     4   2
0011 => TNEW     5   3
0012    UGET     6   0      ; unpack
0013    MOV      7   3
0014    KSHORT   8   3
0015    CALL     6   0   3
0016    TSETM    6   0      ; 1
0017    TGETB    6   5   1
0018    ISNEP    6   0
0019    JMP      7 => 0021
0020    RET1     4   2
0021 => MOV      7   4
0022    TGETB    8   6   1
0023    ISNES    8   2      ; "call"
0024    JMP      9 => 0065
0025    ISF          1
0026    JMP      9 => 0031
0027    UGET     9   1      ; insert
0028    MOV     10   7
0029    TDUP    11   3
0030    CALL     9   1   3
0031 => MOV     10   2
0032    TGETS    9   2   4  ; "get"
0033    KSTR    11   5      ; "current_method"
0034    CALL     9   2   3
0035    GGET    10   6      ; "assert"
0036    MOV     11   9
0037    KSTR    12   7      ; "missing calling name"
0038    CALL    10   1   3
0039    TDUP    10   8
0040    TDUP    11   9
0041    UGET    12   0      ; unpack
0042    TGETB   13   6   2
0043    CALL    12   0   2
0044    TSETM   12   1      ; 2
0045    TSETB   11  10   2
0046    TSETB   10   5   1
0047    UGET    10   2      ; ntype
0048    MOV     11   9
0049    CALL    10   2   2
0050    ISNES   10  10      ; "key_literal"
0051    JMP     10 => 0059
0052    UGET    10   1      ; insert
0053    MOV     11   7
0054    TDUP    12  11
0055    TGETB   13   9   2
0056    TSETB   13  12   2
0057    CALL    10   1   3
0058    JMP     10 => 0085
0059 => UGET    10   1      ; insert
0060    MOV     11   7
0061    TDUP    12  12
0062    TSETB    9  12   2
0063    CALL    10   1   3
0064    JMP      9 => 0085
0065 => ISNES    8  13      ; "colon"
0066    JMP      9 => 0085
0067    TGETB    9   5   2
0068    ISF          9
0069    JMP     10 => 0085
0070    TGETB   10   9   1
0071    ISNES   10   2      ; "call"
0072    JMP     10 => 0085
0073    TDUP    10  14
0074    TGETB   11   6   2
0075    TSETB   11  10   2
0076    TSETB   10   5   1
0077    TDUP    10  15
0078    TDUP    11  16
0079    UGET    12   0      ; unpack
0080    TGETB   13   9   2
0081    CALL    12   0   2
0082    TSETM   12   1      ; 2
0083    TSETB   11  10   2
0084    TSETB   10   5   2
0085 => KSHORT   9   1
0086    LEN     10   5
0087    KSHORT  11   1
0088    FORI     9 => 0095
0089 => TGETV   13   5  12
0090    UGET    14   1      ; insert
0091    MOV     15   7
0092    MOV     16  13
0093    CALL    14   1   3
0094    FORL     9 => 0089
0095 => RET1     7   2

-- BYTECODE -- class.lua:97-101
0001    MOV      2   0
0002    TGETS    1   0   0  ; "get"
0003    KSTR     3   1      ; "current_method"
0004    CALL     1   2   3
0005    USETV    0   1      ; prev_method
0006    MOV      2   0
0007    TGETS    1   0   2  ; "set"
0008    KSTR     3   1      ; "current_method"
0009    UGET     4   1      ; key
0010    CALL     1   1   4
0011    MOV      2   0
0012    TGETS    1   0   2  ; "set"
0013    KSTR     3   3      ; "super"
0014    UGET     4   2      ; t
0015    CALLT    1   4

-- BYTECODE -- class.lua:103-105
0001    MOV      2   0
0002    TGETS    1   0   0  ; "set"
0003    KSTR     3   1      ; "current_method"
0004    UGET     4   0      ; prev_method
0005    CALLT    1   4

-- BYTECODE -- class.lua:93-107
0001    KPRI     3   0
0002    TDUP     4   0
0003    UGET     5   0      ; Run
0004    FNEW     6   1      ; class.lua:97
0005    CALL     5   2   2
0006    TSETB    5   4   2
0007    TSETB    0   4   3
0008    UGET     5   0      ; Run
0009    FNEW     6   2      ; class.lua:103
0010    CALL     5   0   2
0011    TSETM    5   0      ; 4
0012    UCLO     0 => 0013
0013 => RET1     4   2

-- BYTECODE -- class.lua:118-120
0001    UGET     0   0      ; transform_super
0002    UGET     1   1      ; cls_name
0003    KPRI     2   2
0004    VARG     3   0   0
0005    CALLMT   0   2

-- BYTECODE -- class.lua:122-124
0001    UGET     0   0      ; transform_super
0002    UGET     1   1      ; cls_name
0003    KPRI     2   1
0004    VARG     3   0   0
0005    CALLMT   0   2

-- BYTECODE -- class.lua:395-399
0001    UGET     1   0      ; name
0002    ISF          1
0003    JMP      2 => 0008
0004    MOV      2   0
0005    TGETS    1   0   0  ; "put_name"
0006    UGET     3   0      ; name
0007    CALLT    1   3
0008 => RET0     0   1

-- BYTECODE -- class.lua:434-441
0001    UGET     0   0      ; statements
0002    LEN      0   0
0003    KSHORT   1   0
0004    ISGE     1   0
0005    JMP      0 => 0021
0006    TNEW     0   3
0007    UGET     1   1      ; build
0008    TGETS    1   1   0  ; "assign_one"
0009    UGET     2   2      ; LocalName
0010    KSTR     3   1      ; "self"
0011    CALL     2   2   2
0012    UGET     3   3      ; cls_name
0013    CALL     1   2   3
0014    TSETB    1   0   1
0015    UGET     1   1      ; build
0016    TGETS    1   1   2  ; "group"
0017    UGET     2   0      ; statements
0018    CALL     1   0   2
0019    TSETM    1   0      ; 2
0020    RET1     0   2
0021 => RET0     0   1

-- BYTECODE -- class.lua:457-463
0001    UGET     0   0      ; name
0002    ISF          0
0003    JMP      1 => 0012
0004    TNEW     0   3
0005    UGET     1   1      ; build
0006    TGETS    1   1   0  ; "assign_one"
0007    UGET     2   0      ; name
0008    UGET     3   2      ; cls_name
0009    CALL     1   0   3
0010    TSETM    1   0      ; 1
0011    RET1     0   2
0012 => RET0     0   1

-- BYTECODE -- class.lua:464-468
0001    UGET     0   0      ; ret
0002    ISF          0
0003    JMP      1 => 0007
0004    UGET     0   0      ; ret
0005    UGET     1   1      ; cls_name
0006    CALLT    0   2
0007 => RET0     0   1

-- BYTECODE -- class.lua:471-481
0001    UGET     0   0      ; ntype
0002    UGET     1   1      ; name
0003    CALL     0   2   2
0004    ISNES    0   0      ; "value"
0005    JMP      0 => 0017
0006    TNEW     0   3
0007    UGET     1   2      ; build
0008    TGETS    1   1   1  ; "declare"
0009    TDUP     2   2
0010    TNEW     3   3
0011    UGET     4   1      ; name
0012    TSETB    4   3   1
0013    TSETS    3   2   3  ; "names"
0014    CALL     1   0   2
0015    TSETM    1   0      ; 1
0016    RET1     0   2
0017 => RET0     0   1

-- BYTECODE -- class.lua:108-486
0001    UGET     4   0      ; unpack
0002    MOV      5   1
0003    KSHORT   6   2
0004    CALL     4   4   3
0005    ISNES    5   0      ; ""
0006    JMP      7 => 0008
0007    KPRI     5   0
0008 => UGET     7   1      ; NameProxy
0009    KSTR     8   1      ; "parent"
0010    CALL     7   2   2
0011    UGET     8   1      ; NameProxy
0012    KSTR     9   2      ; "base"
0013    CALL     8   2   2
0014    UGET     9   1      ; NameProxy
0015    KSTR    10   3      ; "self"
0016    CALL     9   2   2
0017    UGET    10   1      ; NameProxy
0018    KSTR    11   4      ; "class"
0019    CALL    10   2   2
0020    KPRI    11   0
0021    FNEW    11   5      ; class.lua:118
0022    KPRI    12   0
0023    FNEW    12   6      ; class.lua:122
0024    TNEW    13   0
0025    TNEW    14   0
0026    KSHORT  15   1
0027    LEN     16   6
0028    KSHORT  17   1
0029    FORI    15 => 0078
0030 => TGETV   19   6  18
0031    TGETB   20  19   1
0032    ISNES   20   7      ; "stm"
0033    JMP     21 => 0039
0034    UGET    21   3      ; insert
0035    MOV     22  13
0036    TGETB   23  19   2
0037    CALL    21   1   3
0038    JMP     21 => 0077
0039 => ISNES   20   8      ; "props"
0040    JMP     21 => 0077
0041    KSHORT  21   2
0042    LEN     22  19
0043    KSHORT  23   1
0044    FORI    21 => 0077
0045 => TGETV   25  19  24
0046    UGET    26   4      ; ntype
0047    TGETB   27  25   1
0048    CALL    26   2   2
0049    ISNES   26   3      ; "self"
0050    JMP     26 => 0072
0051    KNIL    26  27
0052    TGETB   28  25   1
0053    TGETB   27  25   2
0054    MOV     26  28
0055    UGET    28   5      ; super_scope
0056    MOV     29  27
0057    MOV     30  12
0058    TDUP    31   9
0059    TGETB   32  26   2
0060    TSETB   32  31   2
0061    CALL    28   2   4
0062    MOV     27  28
0063    UGET    28   3      ; insert
0064    MOV     29  13
0065    UGET    30   6      ; build
0066    TGETS   30  30  10  ; "assign_one"
0067    MOV     31  26
0068    MOV     32  27
0069    CALL    30   0   3
0070    CALLM   28   1   1
0071    JMP     26 => 0076
0072 => UGET    26   3      ; insert
0073    MOV     27  14
0074    MOV     28  25
0075    CALL    26   1   3
0076 => FORL    21 => 0045
0077 => FORL    15 => 0030
0078 => KPRI    15   0
0079    TNEW    16   0
0080    KSHORT  17   1
0081    KSHORT  18   1
0082    LEN     19  14
0083    KSHORT  20   1
0084    FORI    18 => 0121
0085 => KPRI    22   1
0086    LOOP    23 => 0117
0087    TGETV   23  14  21
0088    TGETB   24  23   1
0089    KPRI    25   0
0090    TGETB   26  24   1
0091    ISNES   26  11      ; "key_literal"
0092    JMP     26 => 0101
0093    TGETB   26  24   2
0094    UGET    27   7      ; CONSTRUCTOR_NAME
0095    ISNEV   26  27
0096    JMP     26 => 0101
0097    TGETB   15  23   2
0098    KPRI    22   2
0099    JMP     23 => 0117
0100    JMP     26 => 0114
0101 => KPRI    26   0
0102    TGETB   27  23   1
0103    TGETB   26  23   2
0104    MOV     24  27
0105    TNEW    27   3
0106    TSETB   24  27   1
0107    UGET    28   5      ; super_scope
0108    MOV     29  26
0109    MOV     30  11
0110    MOV     31  24
0111    CALL    28   0   4
0112    TSETM   28   0      ; 2
0113    MOV     25  27
0114 => TSETV   25  16  17
0115    ADDVN   17  17   1  ; 1
0116    KPRI    22   2
0117 => IST         22
0118    JMP     23 => 0120
0119    JMP     18 => 0121
0120 => FORL    18 => 0085
0121 => MOV     14  16
0122    IST         15
0123    JMP     16 => 0151
0124    ISF          5
0125    JMP     16 => 0147
0126    UGET    16   6      ; build
0127    TGETS   16  16  12  ; "fndef"
0128    TDUP    17  14
0129    TNEW    18   3
0130    TDUP    19  13
0131    TSETB   19  18   1
0132    TSETS   18  17  15  ; "args"
0133    TNEW    18   3
0134    UGET    19   6      ; build
0135    TGETS   19  19  16  ; "chain"
0136    TDUP    20  17
0137    TDUP    21  18
0138    TDUP    22  19
0139    TSETB   22  21   2
0140    TSETB   21  20   1
0141    CALL    19   0   2
0142    TSETM   19   2      ; 1
0143    TSETS   18  17  20  ; "body"
0144    CALL    16   2   2
0145    MOV     15  16
0146    JMP     16 => 0151
0147 => UGET    16   6      ; build
0148    TGETS   16  16  12  ; "fndef"
0149    CALL    16   2   1
0150    MOV     15  16
0151 => ISTC    16   4
0152    JMP     16 => 0157
0153    ISFC    16   3
0154    JMP     16 => 0157
0155    TGETB   16   3   2
0156    TGETB   16  16   1
0157 => UGET    17   4      ; ntype
0158    MOV     18  16
0159    CALL    17   2   2
0160    ISNES   17  16      ; "chain"
0161    JMP     18 => 0180
0162    LEN     18  16
0163    TGETV   18  16  18
0164    UGET    19   4      ; ntype
0165    MOV     20  18
0166    CALL    19   2   2
0167    ISNES   19  21      ; "dot"
0168    JMP     20 => 0174
0169    TDUP    20  22
0170    TGETB   21  18   2
0171    TSETB   21  20   3
0172    MOV     16  20
0173    JMP     20 => 0210
0174 => ISNES   19  23      ; "index"
0175    JMP     20 => 0178
0176    TGETB   16  18   2
0177    JMP     20 => 0210
0178 => KSTR    16  24      ; "nil"
0179    JMP     18 => 0210
0180 => ISNES   17  24      ; "nil"
0181    JMP     18 => 0184
0182    KSTR    16  24      ; "nil"
0183    JMP     18 => 0210
0184 => GGET    18  25      ; "type"
0185    MOV     19  16
0186    CALL    18   2   2
0187    KPRI    19   0
0188    ISNES   18  26      ; "string"
0189    JMP     20 => 0192
0190    MOV     19  16
0191    JMP     20 => 0207
0192 => ISNES   18  27      ; "table"
0193    JMP     20 => 0199
0194    TGETB   20  16   1
0195    ISNES   20  28      ; "ref"
0196    JMP     20 => 0199
0197    TGETB   19  16   2
0198    JMP     20 => 0207
0199 => GGET    20  29      ; "error"
0200    KSTR    21  30      ; "don't know how to extract name from "
0201    GGET    22  31      ; "tostring"
0202    MOV     23  18
0203    CALL    22   2   2
0204    CAT     21  21  22
0205    CALL    20   2   2
0206    MOV     19  20
0207 => TDUP    20  32
0208    TSETB   19  20   3
0209    MOV     16  20
0210 => UGET    18   6      ; build
0211    TGETS   18  18  27  ; "table"
0212    TNEW    19   5
0213    TDUP    20  33
0214    UGET    21   5      ; super_scope
0215    MOV     22  15
0216    MOV     23  12
0217    TDUP    24  34
0218    CALL    21   0   4
0219    TSETM   21   0      ; 2
0220    TSETB   20  19   1
0221    TDUP    20  35
0222    TSETB    8  20   2
0223    TSETB   20  19   2
0224    TDUP    20  36
0225    TSETB   16  20   2
0226    TSETB   20  19   3
0227    ISF          5
0228    JMP     20 => 0233
0229    TDUP    20  37
0230    TSETB    7  20   2
0231    IST         20
0232    JMP     21 => 0234
0233 => KPRI    20   0
0234 => TSETB   20  19   4
0235    CALL    18   2   2
0236    KPRI    19   0
0237    ISF          5
0238    JMP     20 => 0329
0239    UGET    20   6      ; build
0240    TGETS   20  20  38  ; "if"
0241    TDUP    21  41
0242    TDUP    22  39
0243    TDUP    23  40
0244    TSETB   23  22   2
0245    TSETS   22  21  42  ; "cond"
0246    TNEW    22   3
0247    UGET    23   6      ; build
0248    TGETS   23  23  10  ; "assign_one"
0249    UGET    24   8      ; LocalName
0250    KSTR    25   1      ; "parent"
0251    CALL    24   2   2
0252    UGET    25   6      ; build
0253    TGETS   25  25  16  ; "chain"
0254    TDUP    26  43
0255    TDUP    27  44
0256    TNEW    28   3
0257    TDUP    29  45
0258    TSETB   29  28   1
0259    TDUP    29  46
0260    TSETB   29  28   2
0261    TSETB   28  27   2
0262    TSETB   27  26   1
0263    CALL    25   0   2
0264    CALLM   23   2   1
0265    TSETB   23  22   1
0266    UGET    23   6      ; build
0267    TGETS   23  23  38  ; "if"
0268    TDUP    24  47
0269    UGET    25   8      ; LocalName
0270    KSTR    26   1      ; "parent"
0271    CALL    25   2   2
0272    TSETS   25  24  42  ; "cond"
0273    TNEW    25   3
0274    UGET    26   6      ; build
0275    TGETS   26  26  16  ; "chain"
0276    TDUP    27  48
0277    UGET    28   8      ; LocalName
0278    KSTR    29   1      ; "parent"
0279    CALL    28   2   2
0280    TSETS   28  27   2  ; "base"
0281    TDUP    28  49
0282    TSETB   28  27   1
0283    CALL    26   0   2
0284    TSETM   26   2      ; 1
0285    TSETS   25  24  50  ; "then"
0286    CALL    23   0   2
0287    TSETM   23   0      ; 2
0288    TSETS   22  21  50  ; "then"
0289    CALL    20   2   2
0290    UGET    21   3      ; insert
0291    MOV     22  20
0292    TDUP    23  51
0293    TDUP    24  52
0294    TSETB   24  23   2
0295    CALL    21   1   3
0296    UGET    21   6      ; build
0297    TGETS   21  21  12  ; "fndef"
0298    TDUP    22  55
0299    TNEW    23   3
0300    TDUP    24  53
0301    TSETB   24  23   1
0302    TDUP    24  54
0303    TSETB   24  23   2
0304    TSETS   23  22  15  ; "args"
0305    TNEW    23   3
0306    UGET    24   6      ; build
0307    TGETS   24  24  10  ; "assign_one"
0308    UGET    25   8      ; LocalName
0309    KSTR    26  56      ; "val"
0310    CALL    25   2   2
0311    UGET    26   6      ; build
0312    TGETS   26  26  16  ; "chain"
0313    TDUP    27  57
0314    TDUP    28  58
0315    TNEW    29   3
0316    TSETB    8  29   1
0317    TDUP    30  59
0318    TSETB   30  29   2
0319    TSETB   29  28   2
0320    TSETB   28  27   1
0321    CALL    26   0   2
0322    CALLM   24   2   1
0323    TSETB   24  23   1
0324    TSETB   20  23   2
0325    TSETS   23  22  20  ; "body"
0326    CALL    21   2   2
0327    MOV     19  21
0328    JMP     20 => 0330
0329 => MOV     19   8
0330 => UGET    20   6      ; build
0331    TGETS   20  20  27  ; "table"
0332    TNEW    21   3
0333    TDUP    22  60
0334    TSETB   19  22   2
0335    TSETB   22  21   1
0336    TDUP    22  61
0337    UGET    23   6      ; build
0338    TGETS   23  23  12  ; "fndef"
0339    TDUP    24  64
0340    TNEW    25   3
0341    TDUP    26  62
0342    TSETB   26  25   1
0343    TDUP    26  63
0344    TSETB   26  25   2
0345    TSETS   25  24  15  ; "args"
0346    TNEW    25   4
0347    UGET    26   6      ; build
0348    TGETS   26  26  10  ; "assign_one"
0349    MOV     27   9
0350    UGET    28   6      ; build
0351    TGETS   28  28  16  ; "chain"
0352    TDUP    29  65
0353    TDUP    30  66
0354    TDUP    31  67
0355    TSETB    8  31   2
0356    TSETB   31  30   2
0357    TSETB   30  29   1
0358    CALL    28   0   2
0359    CALLM   26   2   1
0360    TSETB   26  25   1
0361    UGET    26   6      ; build
0362    TGETS   26  26  16  ; "chain"
0363    TDUP    27  68
0364    TDUP    28  69
0365    TDUP    29  70
0366    TSETB    9  29   1
0367    TSETB   29  28   2
0368    TSETB   28  27   1
0369    CALL    26   2   2
0370    TSETB   26  25   2
0371    TSETB    9  25   3
0372    TSETS   25  24  20  ; "body"
0373    CALL    23   0   2
0374    TSETM   23   0      ; 2
0375    TSETB   22  21   2
0376    CALL    20   2   2
0377    UGET    21   6      ; build
0378    TGETS   21  21  16  ; "chain"
0379    TDUP    22  71
0380    TDUP    23  72
0381    TNEW    24   3
0382    TSETB   18  24   1
0383    TSETB   20  24   2
0384    TSETB   24  23   2
0385    TSETB   23  22   1
0386    CALL    21   2   2
0387    MOV     18  21
0388    KPRI    21   0
0389    TNEW    22  14
0390    UGET    23   9      ; Run
0391    FNEW    24  73      ; class.lua:395
0392    CALL    23   2   2
0393    TSETB   23  22   1
0394    TDUP    23  74
0395    TNEW    24   3
0396    TSETB   10  24   1
0397    TSETB   24  23   2
0398    TSETB   23  22   2
0399    TDUP    23  75
0400    TSETB   23  22   3
0401    ISF          5
0402    JMP     23 => 0410
0403    UGET    23   6      ; build
0404    TGETS   23  23  10  ; "assign_one"
0405    MOV     24   7
0406    MOV     25   5
0407    CALL    23   2   3
0408    IST         23
0409    JMP     24 => 0411
0410 => UGET    23  10      ; NOOP
0411 => TSETB   23  22   4
0412    UGET    23   6      ; build
0413    TGETS   23  23  10  ; "assign_one"
0414    MOV     24   8
0415    TDUP    25  76
0416    TSETB   14  25   2
0417    CALL    23   2   3
0418    TSETB   23  22   5
0419    UGET    23   6      ; build
0420    TGETS   23  23  10  ; "assign_one"
0421    MOV     25   8
0422    TGETS   24   8  16  ; "chain"
0423    KSTR    26  77      ; "__index"
0424    CALL    24   2   3
0425    MOV     25   8
0426    CALL    23   2   3
0427    TSETB   23  22   6
0428    ISF          5
0429    JMP     23 => 0449
0430    UGET    23   6      ; build
0431    TGETS   23  23  16  ; "chain"
0432    TDUP    24  78
0433    TDUP    25  79
0434    TNEW    26   3
0435    TSETB    8  26   1
0436    UGET    27   6      ; build
0437    TGETS   27  27  16  ; "chain"
0438    TDUP    28  80
0439    TSETS    7  28   2  ; "base"
0440    TDUP    29  81
0441    TSETB   29  28   1
0442    CALL    27   0   2
0443    TSETM   27   0      ; 2
0444    TSETB   26  25   2
0445    TSETB   25  24   1
0446    CALL    23   2   2
0447    IST         23
0448    JMP     24 => 0450
0449 => UGET    23  10      ; NOOP
0450 => TSETB   23  22   7
0451    UGET    23   6      ; build
0452    TGETS   23  23  10  ; "assign_one"
0453    MOV     24  10
0454    MOV     25  18
0455    CALL    23   2   3
0456    TSETB   23  22   8
0457    UGET    23   6      ; build
0458    TGETS   23  23  10  ; "assign_one"
0459    MOV     25   8
0460    TGETS   24   8  16  ; "chain"
0461    KSTR    26  82      ; "__class"
0462    CALL    24   2   3
0463    MOV     25  10
0464    CALL    23   2   3
0465    TSETB   23  22   9
0466    UGET    23   6      ; build
0467    TGETS   23  23  83  ; "group"
0468    FNEW    24  84      ; class.lua:434
0469    CALL    24   0   1
0470    CALLM   23   2   0
0471    TSETB   23  22  10
0472    ISF          5
0473    JMP     23 => 0499
0474    UGET    23   6      ; build
0475    TGETS   23  23  38  ; "if"
0476    TDUP    24  87
0477    TDUP    25  85
0478    MOV     27   7
0479    TGETS   26   7  16  ; "chain"
0480    KSTR    28  86      ; "__inherited"
0481    CALL    26   0   3
0482    TSETM   26   0      ; 2
0483    TSETS   25  24  42  ; "cond"
0484    TNEW    25   3
0485    MOV     27   7
0486    TGETS   26   7  16  ; "chain"
0487    KSTR    28  86      ; "__inherited"
0488    TDUP    29  88
0489    TNEW    30   3
0490    TSETB    7  30   1
0491    TSETB   10  30   2
0492    TSETB   30  29   2
0493    CALL    26   0   4
0494    TSETM   26   2      ; 1
0495    TSETS   25  24  50  ; "then"
0496    CALL    23   2   2
0497    IST         23
0498    JMP     24 => 0500
0499 => UGET    23  10      ; NOOP
0500 => TSETB   23  22  11
0501    UGET    23   6      ; build
0502    TGETS   23  23  83  ; "group"
0503    FNEW    24  89      ; class.lua:457
0504    CALL    24   0   1
0505    CALLM   23   2   0
0506    TSETB   23  22  12
0507    FNEW    23  90      ; class.lua:464
0508    CALL    23   0   1
0509    TSETM   23   3      ; 13
0510    UGET    23   6      ; build
0511    TGETS   23  23  83  ; "group"
0512    TNEW    24   3
0513    UGET    25   6      ; build
0514    TGETS   25  25  83  ; "group"
0515    FNEW    26  91      ; class.lua:471
0516    CALL    26   0   1
0517    CALLM   25   2   0
0518    TSETB   25  24   1
0519    UGET    25   6      ; build
0520    TGETS   25  25  92  ; "do"
0521    MOV     26  22
0522    CALL    25   0   2
0523    TSETM   25   0      ; 2
0524    CALL    23   2   2
0525    MOV     21  23
0526    UCLO     0 => 0527
0527 => RET1    21   2

-- BYTECODE -- class.lua:0-487
0001    KNIL     0   1
0002    GGET     2   0      ; "require"
0003    KSTR     3   1      ; "moonscript.transform.names"
0004    CALL     2   2   2
0005    TGETS    3   2   2  ; "NameProxy"
0006    TGETS    1   2   3  ; "LocalName"
0007    MOV      0   3
0008    KPRI     2   0
0009    GGET     3   0      ; "require"
0010    KSTR     4   4      ; "moonscript.transform.statements"
0011    CALL     3   2   2
0012    TGETS    2   3   5  ; "Run"
0013    KSTR     3   6      ; "new"
0014    KPRI     4   0
0015    GGET     5   7      ; "table"
0016    TGETS    4   5   8  ; "insert"
0017    KNIL     5   7
0018    GGET     8   0      ; "require"
0019    KSTR     9   9      ; "moonscript.types"
0020    CALL     8   2   2
0021    TGETS    9   8  10  ; "build"
0022    TGETS   10   8  11  ; "ntype"
0023    TGETS    7   8  12  ; "NOOP"
0024    MOV      6  10
0025    MOV      5   9
0026    KPRI     8   0
0027    GGET     9   0      ; "require"
0028    KSTR    10  13      ; "moonscript.util"
0029    CALL     9   2   2
0030    TGETS    8   9  14  ; "unpack"
0031    KPRI     9   0
0032    FNEW     9  15      ; class.lua:19
0033    KPRI    10   0
0034    FNEW    10  16      ; class.lua:93
0035    FNEW    11  17      ; class.lua:108
0036    UCLO     0 => 0037
0037 => RET1    11   2

-----------------------
-- BYTECODE -- destructure.lua:15-32
0001    TNEW     0   0
0002    KSHORT   1   1
0003    TNEW     2   3
0004    VARG     3   0   0
0005    TSETM    3   0      ; 1
0006    KSHORT   3   1
0007    LEN      4   2
0008    KSHORT   5   1
0009    FORI     3 => 0020
0010 => TGETV    7   2   6
0011    KSHORT   8   1
0012    LEN      9   7
0013    KSHORT  10   1
0014    FORI     8 => 0019
0015 => TGETV   12   7  11
0016    TSETV   12   0   1
0017    ADDVN    1   1   1  ; 1
0018    FORL     8 => 0015
0019 => FORL     3 => 0010
0020 => RET1     0   2

-- BYTECODE -- destructure.lua:34-42
0001    KSHORT   1   1
0002    LEN      2   0
0003    KSHORT   3   1
0004    FORI     1 => 0014
0005 => TGETV    5   0   4
0006    UGET     6   0      ; ntype
0007    MOV      7   5
0008    CALL     6   2   2
0009    ISNES    6   0      ; "table"
0010    JMP      6 => 0013
0011    KPRI     6   2
0012    RET1     6   2
0013 => FORL     1 => 0005
0014 => KPRI     1   1
0015    RET1     1   2

-- BYTECODE -- destructure.lua:44-103
0001    ISNEP    1   0
0002    JMP      3 => 0004
0003    TNEW     1   0
0004 => ISNEP    2   0
0005    JMP      3 => 0007
0006    TNEW     2   0
0007 => KSHORT   3   1
0008    TGETB    4   0   2
0009    KSHORT   5   1
0010    LEN      6   4
0011    KSHORT   7   1
0012    FORI     5 => 0094
0013 => TGETV    9   4   8
0014    KNIL    10  11
0015    LEN     12   9
0016    ISNEN   12   0      ; 1
0017    JMP     12 => 0027
0018    TDUP    12   0
0019    TDUP    13   1
0020    TSETB    3  13   2
0021    TSETB   13  12   2
0022    ADDVN    3   3   0  ; 1
0023    TGETB   13   9   1
0024    MOV     11  12
0025    MOV     10  13
0026    JMP     12 => 0052
0027 => TGETB   12   9   1
0028    KPRI    13   0
0029    UGET    14   0      ; ntype
0030    MOV     15  12
0031    CALL    14   2   2
0032    ISNES   14   2      ; "key_literal"
0033    JMP     14 => 0046
0034    TGETB   14  12   2
0035    UGET    15   0      ; ntype
0036    MOV     16  14
0037    CALL    15   2   2
0038    ISNES   15   3      ; "colon"
0039    JMP     15 => 0042
0040    MOV     13  14
0041    JMP     15 => 0049
0042 => TDUP    15   4
0043    TSETB   14  15   2
0044    MOV     13  15
0045    JMP     14 => 0049
0046 => TDUP    14   5
0047    TSETB   12  14   2
0048    MOV     13  14
0049 => TGETB   14   9   2
0050    MOV     11  13
0051    MOV     10  14
0052 => UGET    12   1      ; join
0053    MOV     13   2
0054    TNEW    14   3
0055    TSETB   11  14   1
0056    CALL    12   2   3
0057    MOV     11  12
0058    UGET    12   0      ; ntype
0059    MOV     13  10
0060    CALL    12   2   2
0061    ISEQS   12   6      ; "value"
0062    JMP     13 => 0069
0063    ISEQS   12   7      ; "ref"
0064    JMP     13 => 0069
0065    ISEQS   12   8      ; "chain"
0066    JMP     13 => 0069
0067    ISNES   12   9      ; "self"
0068    JMP     13 => 0076
0069 => UGET    13   2      ; insert
0070    MOV     14   1
0071    TNEW    15   3
0072    TSETB   10  15   1
0073    TSETB   11  15   2
0074    CALL    13   1   3
0075    JMP     13 => 0093
0076 => ISNES   12  10      ; "table"
0077    JMP     13 => 0084
0078    UGET    13   3      ; extract_assign_names
0079    MOV     14  10
0080    MOV     15   1
0081    MOV     16  11
0082    CALL    13   1   4
0083    JMP     13 => 0093
0084 => UGET    13   4      ; user_error
0085    KSTR    14  11      ; "Can't destructure value of type: "
0086    GGET    15  12      ; "tostring"
0087    UGET    16   0      ; ntype
0088    MOV     17  10
0089    CALL    16   0   2
0090    CALLM   15   2   0
0091    CAT     14  14  15
0092    CALL    13   1   2
0093 => FORL     5 => 0013
0094 => RET1     1   2

-- BYTECODE -- destructure.lua:105-149
0001    UGET     3   0      ; extract_assign_names
0002    MOV      4   1
0003    CALL     3   2   2
0004    TNEW     4   0
0005    TNEW     5   0
0006    TDUP     6   0
0007    TSETB    4   6   2
0008    TSETB    5   6   3
0009    KPRI     7   0
0010    MOV      9   0
0011    TGETS    8   0   1  ; "is_local"
0012    MOV     10   2
0013    CALL     8   2   3
0014    IST          8
0015    JMP      9 => 0019
0016    LEN      8   3
0017    ISNEN    8   0      ; 1
0018    JMP      8 => 0021
0019 => MOV      7   2
0020    JMP      8 => 0040
0021 => UGET     8   1      ; NameProxy
0022    KSTR     9   2      ; "obj"
0023    CALL     8   2   2
0024    MOV      7   8
0025    UGET     8   2      ; build
0026    TGETS    8   8   3  ; "do"
0027    TNEW     9   3
0028    UGET    10   2      ; build
0029    TGETS   10  10   4  ; "assign_one"
0030    MOV     11   7
0031    MOV     12   2
0032    CALL    10   2   3
0033    TSETB   10   9   1
0034    TDUP    10   5
0035    TSETB    4  10   2
0036    TSETB    5  10   3
0037    TSETB   10   9   2
0038    CALL     8   2   2
0039    MOV      6   8
0040 => KSHORT   8   1
0041    LEN      9   3
0042    KSHORT  10   1
0043    FORI     8 => 0067
0044 => TGETV   12   3  11
0045    UGET    13   3      ; insert
0046    MOV     14   4
0047    TGETB   15  12   1
0048    CALL    13   1   3
0049    KPRI    13   0
0050    ISF          7
0051    JMP     14 => 0061
0052    UGET    14   1      ; NameProxy
0053    TGETS   14  14   6  ; "chain"
0054    MOV     15   7
0055    UGET    16   4      ; unpack
0056    TGETB   17  12   2
0057    CALL    16   0   2
0058    CALLM   14   2   1
0059    MOV     13  14
0060    JMP     14 => 0062
0061 => KSTR    13   7      ; "nil"
0062 => UGET    14   3      ; insert
0063    MOV     15   5
0064    MOV     16  13
0065    CALL    14   1   3
0066    FORL     8 => 0044
0067 => UGET     8   2      ; build
0068    TGETS    8   8   8  ; "group"
0069    TNEW     9   3
0070    TDUP    10   9
0071    TSETB    4  10   2
0072    TSETB   10   9   1
0073    TSETB    6   9   2
0074    CALLT    8   2

-- BYTECODE -- destructure.lua:163-171
0001    TNEW     0   0
0002    KSHORT   1   1
0003    UGET     2   0      ; start
0004    UGET     3   1      ; stop
0005    KSHORT   4   1
0006    FORI     2 => 0012
0007 => UGET     6   2      ; names
0008    TGETV    6   6   5
0009    TSETV    6   0   1
0010    ADDVN    1   1   0  ; 1
0011    FORL     2 => 0007
0012 => RET1     0   2

-- BYTECODE -- destructure.lua:172-180
0001    TNEW     0   0
0002    KSHORT   1   1
0003    UGET     2   0      ; start
0004    UGET     3   1      ; stop
0005    KSHORT   4   1
0006    FORI     2 => 0012
0007 => UGET     6   2      ; values
0008    TGETV    6   6   5
0009    TSETV    6   0   1
0010    ADDVN    1   1   0  ; 1
0011    FORL     2 => 0007
0012 => RET1     0   2

-- BYTECODE -- destructure.lua:151-227
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    TNEW     4   0
0006    LEN      5   2
0007    LEN      6   3
0008    KSHORT   7   1
0009    GGET     8   0      ; "ipairs"
0010    MOV      9   2
0011    CALL     8   4   2
0012    JMP     11 => 0041
0013 => UGET    13   1      ; ntype
0014    MOV     14  12
0015    CALL    13   2   2
0016    ISNES   13   1      ; "table"
0017    JMP     13 => 0041
0018    ISGE     7  11
0019    JMP     13 => 0032
0020    SUBVN   13  11   0  ; 1
0021    UGET    14   2      ; insert
0022    MOV     15   4
0023    TDUP    16   2
0024    FNEW    17   3      ; destructure.lua:163
0025    CALL    17   2   1
0026    TSETB   17  16   2
0027    FNEW    17   4      ; destructure.lua:172
0028    CALL    17   0   1
0029    TSETM   17   1      ; 3
0030    CALL    14   1   3
0031    UCLO    13 => 0032
0032 => UGET    13   2      ; insert
0033    MOV     14   4
0034    UGET    15   3      ; build_assign
0035    MOV     16   0
0036    MOV     17  12
0037    TGETV   18   3  11
0038    CALL    15   0   4
0039    CALLM   13   1   1
0040    ADDVN    7  11   0  ; 1
0041 => ITERC   11   3   3
0042    ITERL   11 => 0013
0043    ISLE     7   5
0044    JMP      8 => 0047
0045    ISGT     7   6
0046    JMP      8 => 0085
0047 => KPRI     8   0
0048    ISGE     5   7
0049    JMP      9 => 0052
0050    TDUP     8   5
0051    JMP      9 => 0063
0052 => TNEW     9   0
0053    KSHORT  10   1
0054    MOV     11   7
0055    MOV     12   5
0056    KSHORT  13   1
0057    FORI    11 => 0062
0058 => TGETV   15   2  14
0059    TSETV   15   9  10
0060    ADDVN   10  10   0  ; 1
0061    FORL    11 => 0058
0062 => MOV      8   9
0063 => KPRI     9   0
0064    ISGE     6   7
0065    JMP     10 => 0068
0066    TDUP     9   6
0067    JMP     10 => 0079
0068 => TNEW    10   0
0069    KSHORT  11   1
0070    MOV     12   7
0071    MOV     13   6
0072    KSHORT  14   1
0073    FORI    12 => 0078
0074 => TGETV   16   3  15
0075    TSETV   16  10  11
0076    ADDVN   11  11   0  ; 1
0077    FORL    12 => 0074
0078 => MOV      9  10
0079 => UGET    10   2      ; insert
0080    MOV     11   4
0081    TDUP    12   7
0082    TSETB    8  12   2
0083    TSETB    9  12   3
0084    CALL    10   1   3
0085 => UGET     8   4      ; build
0086    TGETS    8   8   8  ; "group"
0087    MOV      9   4
0088    UCLO     0 => 0089
0089 => CALLT    8   2

-- BYTECODE -- destructure.lua:0-234
0001    KNIL     0   2
0002    GGET     3   0      ; "require"
0003    KSTR     4   1      ; "moonscript.types"
0004    CALL     3   2   2
0005    TGETS    4   3   2  ; "ntype"
0006    TGETS    5   3   3  ; "mtype"
0007    TGETS    2   3   4  ; "build"
0008    MOV      1   5
0009    MOV      0   4
0010    KPRI     3   0
0011    GGET     4   0      ; "require"
0012    KSTR     5   5      ; "moonscript.transform.names"
0013    CALL     4   2   2
0014    TGETS    3   4   6  ; "NameProxy"
0015    KPRI     4   0
0016    GGET     5   7      ; "table"
0017    TGETS    4   5   8  ; "insert"
0018    KPRI     5   0
0019    GGET     6   0      ; "require"
0020    KSTR     7   9      ; "moonscript.util"
0021    CALL     6   2   2
0022    TGETS    5   6  10  ; "unpack"
0023    KPRI     6   0
0024    GGET     7   0      ; "require"
0025    KSTR     8  11      ; "moonscript.errors"
0026    CALL     7   2   2
0027    TGETS    6   7  12  ; "user_error"
0028    KPRI     7   0
0029    FNEW     7  13      ; destructure.lua:15
0030    KPRI     8   0
0031    FNEW     8  14      ; destructure.lua:34
0032    KPRI     9   0
0033    FNEW     9  15      ; destructure.lua:44
0034    KPRI    10   0
0035    FNEW    10  16      ; destructure.lua:105
0036    KPRI    11   0
0037    FNEW    11  17      ; destructure.lua:151
0038    TDUP    12  18
0039    TSETS    8  12  19  ; "has_destructure"
0040    TSETS   11  12  20  ; "split_assign"
0041    TSETS   10  12  21  ; "build_assign"
0042    TSETS    9  12  22  ; "extract_assign_names"
0043    UCLO     0 => 0044
0044 => RET1    12   2

-----------------------
-- BYTECODE -- comprehension.lua:4-46
0001    MOV      2   0
0002    LEN      3   1
0003    KSHORT   4   1
0004    KSHORT   5  -1
0005    FORI     3 => 0060
0006 => TGETV    7   1   6
0007    TGETB    8   7   1
0008    MOV      9   8
0009    ISNES    9   0      ; "for"
0010    JMP     10 => 0023
0011    KNIL    10  12
0012    TGETB   13   7   1
0013    TGETB   14   7   2
0014    TGETB   12   7   3
0015    MOV     11  14
0016    MOV     10  13
0017    TDUP    13   1
0018    TSETB   11  13   2
0019    TSETB   12  13   3
0020    TSETB    2  13   4
0021    MOV      2  13
0022    JMP     10 => 0056
0023 => ISNES    9   2      ; "foreach"
0024    JMP     10 => 0039
0025    KNIL    10  12
0026    TGETB   13   7   1
0027    TGETB   14   7   2
0028    TGETB   12   7   3
0029    MOV     11  14
0030    MOV     10  13
0031    TDUP    13   3
0032    TSETB   11  13   2
0033    TNEW    14   3
0034    TSETB   12  14   1
0035    TSETB   14  13   3
0036    TSETB    2  13   4
0037    MOV      2  13
0038    JMP     10 => 0056
0039 => ISNES    9   4      ; "when"
0040    JMP     10 => 0050
0041    KNIL    10  11
0042    TGETB   12   7   1
0043    TGETB   11   7   2
0044    MOV     10  12
0045    TDUP    12   5
0046    TSETB   11  12   2
0047    TSETB    2  12   3
0048    MOV      2  12
0049    JMP     10 => 0056
0050 => GGET    10   6      ; "error"
0051    KSTR    11   7      ; "Unknown comprehension clause: "
0052    MOV     12   8
0053    CAT     11  11  12
0054    CALL    10   2   2
0055    MOV      2  10
0056 => TNEW    10   3
0057    TSETB    2  10   1
0058    MOV      2  10
0059    FORL     3 => 0006
0060 => TGETB    3   2   1
0061    RET1     3   2

-- BYTECODE -- comprehension.lua:48-50
0001    UGET     1   0      ; is_value
0002    TGETB    2   0   2
0003    CALLT    1   2

-- BYTECODE -- comprehension.lua:0-55
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.types"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "is_value"
0006    KPRI     1   0
0007    FNEW     1   3      ; comprehension.lua:4
0008    KPRI     2   0
0009    FNEW     2   4      ; comprehension.lua:48
0010    TDUP     3   5
0011    TSETS    1   3   6  ; "construct_comprehension"
0012    TSETS    2   3   7  ; "comprehension_has_value"
0013    UCLO     0 => 0014
0014 => RET1     3   2

-----------------------
-- BYTECODE -- names.lua:9-11
0001    TGETS    1   0   0  ; "name"
0002    RET1     1   2

-- BYTECODE -- names.lua:15-18
0001    TSETS    1   0   0  ; "name"
0002    KSTR     2   1      ; "temp_name"
0003    TSETB    2   0   1
0004    RET0     0   1

-- BYTECODE -- names.lua:23-27
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- names.lua:36-44
0001    ISNEP    2   0
0002    JMP      3 => 0004
0003    KPRI     2   2
0004 => TGETS    3   0   0  ; "name"
0005    IST          3
0006    JMP      3 => 0013
0007    MOV      4   1
0008    TGETS    3   1   1  ; "free_name"
0009    TGETS    5   0   2  ; "prefix"
0010    MOV      6   2
0011    CALL     3   2   4
0012    TSETS    3   0   0  ; "name"
0013 => TGETS    3   0   0  ; "name"
0014    RET1     3   2

-- BYTECODE -- names.lua:45-61
0001    TDUP     1   0
0002    TSETS    0   1   1  ; "base"
0003    VARG     2   0   1
0004    TSETM    2   0      ; 1
0005    GGET     2   2      ; "ipairs"
0006    MOV      3   1
0007    CALL     2   4   2
0008    JMP      5 => 0019
0009 => GGET     7   3      ; "type"
0010    MOV      8   6
0011    CALL     7   2   2
0012    ISNES    7   4      ; "string"
0013    JMP      7 => 0018
0014    TDUP     7   5
0015    TSETB    6   7   2
0016    TSETV    7   1   5
0017    JMP      7 => 0019
0018 => TSETV    6   1   5
0019 => ITERC    5   3   3
0020    ITERL    5 => 0009
0021    UGET     2   0      ; build
0022    TGETS    2   2   6  ; "chain"
0023    MOV      3   1
0024    CALLT    2   2

-- BYTECODE -- names.lua:62-76
0001    GGET     2   0      ; "type"
0002    MOV      3   1
0003    CALL     2   2   2
0004    ISNES    2   1      ; "string"
0005    JMP      2 => 0009
0006    TDUP     2   2
0007    TSETB    1   2   2
0008    MOV      1   2
0009 => UGET     2   0      ; build
0010    TGETS    2   2   3  ; "chain"
0011    TDUP     3   4
0012    TSETS    0   3   5  ; "base"
0013    TDUP     4   6
0014    TSETB    1   4   2
0015    TSETB    4   3   1
0016    CALLT    2   2

-- BYTECODE -- names.lua:77-83
0001    TGETS    1   0   0  ; "name"
0002    ISF          1
0003    JMP      2 => 0010
0004    KSTR     1   1      ; "name<%s>"
0005    MOV      2   1
0006    TGETS    1   1   2  ; "format"
0007    TGETS    3   0   0  ; "name"
0008    CALLT    1   3
0009    JMP      1 => 0015
0010 => KSTR     1   3      ; "name<prefix(%s)>"
0011    MOV      2   1
0012    TGETS    1   1   2  ; "format"
0013    TGETS    3   0   4  ; "prefix"
0014    CALLT    1   3
0015 => RET0     0   1

-- BYTECODE -- names.lua:87-90
0001    TSETS    1   0   0  ; "prefix"
0002    KSTR     2   1      ; "temp_name"
0003    TSETB    2   0   1
0004    RET0     0   1

-- BYTECODE -- names.lua:95-99
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- names.lua:105-113
0001    GGET     1   0      ; "type"
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISEQS    1   1      ; "table"
0005    JMP      1 => 0008
0006    KPRI     1   1
0007    RET1     1   2
0008 => TGETS    1   0   2  ; "__class"
0009    UGET     2   0      ; LocalName
0010    ISEQV    2   1
0011    JMP      2 => 0015
0012    UGET     2   1      ; NameProxy
0013    ISNEV    2   1
0014    JMP      2 => 0017
0015 => KPRI     2   2
0016    RET1     2   2
0017 => RET0     0   1

-- BYTECODE -- names.lua:0-119
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.types"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "build"
0006    KPRI     1   0
0007    GGET     2   0      ; "require"
0008    KSTR     3   3      ; "moonscript.util"
0009    CALL     2   2   2
0010    TGETS    1   2   4  ; "unpack"
0011    KNIL     2   3
0012    TDUP     4   6
0013    FNEW     5   5      ; names.lua:9
0014    TSETS    5   4   7  ; "get_name"
0015    TSETS    4   4   8  ; "__index"
0016    GGET     5   9      ; "setmetatable"
0017    TDUP     6  11
0018    FNEW     7  10      ; names.lua:15
0019    TSETS    7   6  12  ; "__init"
0020    TSETS    4   6  13  ; "__base"
0021    TDUP     7  14
0022    TSETS    4   7   8  ; "__index"
0023    FNEW     8  15      ; names.lua:23
0024    TSETS    8   7  16  ; "__call"
0025    CALL     5   2   3
0026    MOV      3   5
0027    TSETS    3   4  17  ; "__class"
0028    MOV      2   3
0029    UCLO     3 => 0030
0030 => KNIL     3   4
0031    TDUP     5  19
0032    FNEW     6  18      ; names.lua:36
0033    TSETS    6   5   7  ; "get_name"
0034    FNEW     6  20      ; names.lua:45
0035    TSETS    6   5  21  ; "chain"
0036    FNEW     6  22      ; names.lua:62
0037    TSETS    6   5  23  ; "index"
0038    FNEW     6  24      ; names.lua:77
0039    TSETS    6   5  25  ; "__tostring"
0040    TSETS    5   5   8  ; "__index"
0041    GGET     6   9      ; "setmetatable"
0042    TDUP     7  27
0043    FNEW     8  26      ; names.lua:87
0044    TSETS    8   7  12  ; "__init"
0045    TSETS    5   7  13  ; "__base"
0046    TDUP     8  28
0047    TSETS    5   8   8  ; "__index"
0048    FNEW     9  29      ; names.lua:95
0049    TSETS    9   8  16  ; "__call"
0050    CALL     6   2   3
0051    MOV      4   6
0052    TSETS    4   5  17  ; "__class"
0053    MOV      3   4
0054    UCLO     4 => 0055
0055 => KPRI     4   0
0056    FNEW     4  30      ; names.lua:105
0057    TDUP     5  31
0058    TSETS    3   5  32  ; "NameProxy"
0059    TSETS    2   5  33  ; "LocalName"
0060    TSETS    4   5  34  ; "is_name_proxy"
0061    UCLO     0 => 0062
0062 => RET1     5   2

-----------------------
-- BYTECODE -- transformer.lua:7-18
0001    TGETS    3   0   0  ; "seen_nodes"
0002    TGETV    3   3   2
0003    ISF          3
0004    JMP      4 => 0006
0005    RET1     2   2
0006 => TGETS    3   0   0  ; "seen_nodes"
0007    KPRI     4   2
0008    TSETV    4   3   2
0009    TGETS    3   0   1  ; "transformers"
0010    UGET     4   0      ; ntype
0011    MOV      5   2
0012    CALL     4   2   2
0013    TGETV    3   3   4
0014    ISF          3
0015    JMP      4 => 0026
0016    MOV      4   3
0017    MOV      5   1
0018    MOV      6   2
0019    VARG     7   0   3
0020    CALLM    4   2   2
0021    IST          4
0022    JMP      5 => 0024
0023    MOV      4   2
0024 => RET1     4   2
0025    JMP      4 => 0027
0026 => RET1     2   2
0027 => RET0     0   1

-- BYTECODE -- transformer.lua:19-38
0001    TGETS    3   0   0  ; "seen_nodes"
0002    TGETV    3   3   2
0003    ISF          3
0004    JMP      4 => 0006
0005    RET1     2   2
0006 => TGETS    3   0   0  ; "seen_nodes"
0007    KPRI     4   2
0008    TSETV    4   3   2
0009 => LOOP     3 => 0033
0010    TGETS    3   0   1  ; "transformers"
0011    UGET     4   0      ; ntype
0012    MOV      5   2
0013    CALL     4   2   2
0014    TGETV    3   3   4
0015    KPRI     4   0
0016    ISF          3
0017    JMP      5 => 0027
0018    MOV      5   3
0019    MOV      6   1
0020    MOV      7   2
0021    VARG     8   0   3
0022    CALLM    5   2   2
0023    ISTC     4   5
0024    JMP      6 => 0026
0025    MOV      4   2
0026 => JMP      5 => 0028
0027 => MOV      4   2
0028 => ISNEV    4   2
0029    JMP      5 => 0031
0030    RET1     2   2
0031 => MOV      2   4
0032    JMP      3 => 0009
0033 => RET1     2   2

-- BYTECODE -- transformer.lua:40-42
0001    UGET     0   0      ; self
0002    MOV      1   0
0003    TGETS    0   0   0  ; "transform"
0004    UGET     2   1      ; scope
0005    VARG     3   0   0
0006    CALLMT   0   2

-- BYTECODE -- transformer.lua:39-43
0001    FNEW     2   0      ; transformer.lua:40
0002    UCLO     0 => 0003
0003 => RET1     2   2

-- BYTECODE -- transformer.lua:44-46
0001    MOV      2   0
0002    TGETS    1   0   0  ; "transform"
0003    VARG     3   0   1
0004    CALLMT   1   1

-- BYTECODE -- transformer.lua:47-49
0001    TGETS    2   0   0  ; "transformers"
0002    UGET     3   0      ; ntype
0003    MOV      4   1
0004    CALL     3   2   2
0005    TGETV    2   2   3
0006    ISNEP    2   0
0007    JMP      2 => 0010
0008    KPRI     2   1
0009    JMP      3 => 0011
0010 => KPRI     2   2
0011 => RET1     2   2

-- BYTECODE -- transformer.lua:53-58
0001    TSETS    1   0   0  ; "transformers"
0002    GGET     2   2      ; "setmetatable"
0003    TNEW     3   0
0004    TDUP     4   3
0005    CALL     2   2   3
0006    TSETS    2   0   1  ; "seen_nodes"
0007    RET0     0   1

-- BYTECODE -- transformer.lua:63-67
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- transformer.lua:0-75
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.types"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "ntype"
0006    KNIL     1   2
0007    TDUP     3   4
0008    FNEW     4   3      ; transformer.lua:7
0009    TSETS    4   3   5  ; "transform_once"
0010    FNEW     4   6      ; transformer.lua:19
0011    TSETS    4   3   7  ; "transform"
0012    FNEW     4   8      ; transformer.lua:39
0013    TSETS    4   3   9  ; "bind"
0014    FNEW     4  10      ; transformer.lua:44
0015    TSETS    4   3  11  ; "__call"
0016    FNEW     4  12      ; transformer.lua:47
0017    TSETS    4   3  13  ; "can_transform"
0018    TSETS    3   3  14  ; "__index"
0019    GGET     4  15      ; "setmetatable"
0020    TDUP     5  17
0021    FNEW     6  16      ; transformer.lua:53
0022    TSETS    6   5  18  ; "__init"
0023    TSETS    3   5  19  ; "__base"
0024    TDUP     6  20
0025    TSETS    3   6  14  ; "__index"
0026    FNEW     7  21      ; transformer.lua:63
0027    TSETS    7   6  11  ; "__call"
0028    CALL     4   2   3
0029    MOV      2   4
0030    TSETS    2   3  22  ; "__class"
0031    MOV      1   2
0032    UCLO     2 => 0033
0033 => TDUP     2  23
0034    TSETS    1   2  24  ; "Transformer"
0035    UCLO     0 => 0036
0036 => RET1     2   2

-----------------------
-- BYTECODE -- value.lua:32-34
0001    UGET     2   0      ; build
0002    TGETS    2   2   0  ; "block_exp"
0003    TGETB    3   1   2
0004    CALLT    2   2

-- BYTECODE -- value.lua:35-37
0001    TGETS    2   0   0  ; "transform"
0002    TGETS    2   2   1  ; "statement"
0003    MOV      3   1
0004    CALLT    2   2

-- BYTECODE -- value.lua:38-42
0001    UGET     2   0      ; build
0002    TGETS    2   2   0  ; "block_exp"
0003    TNEW     3   3
0004    TSETB    1   3   1
0005    CALLT    2   2

-- BYTECODE -- value.lua:46-64
0001    GGET     1   0      ; "type"
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISEQS    1   1      ; "string"
0005    JMP      1 => 0008
0006    ISNEP    0   0
0007    JMP      1 => 0017
0008 => TDUP     1   2
0009    UGET     2   0      ; delim
0010    TSETB    2   1   2
0011    ISTC     2   0
0012    JMP      2 => 0014
0013    KSTR     2   3      ; ""
0014 => TSETB    2   1   3
0015    RET1     1   2
0016    JMP      1 => 0027
0017 => UGET     1   1      ; build
0018    TGETS    1   1   4  ; "chain"
0019    TDUP     2   5
0020    TDUP     3   6
0021    TNEW     4   3
0022    TGETB    5   0   2
0023    TSETB    5   4   1
0024    TSETB    4   3   2
0025    TSETB    3   2   1
0026    CALLT    1   2
0027 => RET0     0   1

-- BYTECODE -- value.lua:43-81
0001    TGETB    2   1   2
0002    KPRI     3   0
0003    FNEW     3   0      ; value.lua:46
0004    LEN      4   1
0005    KSHORT   5   3
0006    ISGT     4   5
0007    JMP      4 => 0020
0008    GGET     4   1      ; "type"
0009    TGETB    5   1   3
0010    CALL     4   2   2
0011    ISNES    4   2      ; "string"
0012    JMP      4 => 0016
0013    UCLO     0 => 0014
0014 => RET1     1   2
0015    JMP      4 => 0020
0016 => MOV      4   3
0017    TGETB    5   1   3
0018    UCLO     0 => 0019
0019 => CALLT    4   2
0020 => TDUP     4   3
0021    MOV      5   3
0022    TGETB    6   1   3
0023    CALL     5   0   2
0024    TSETM    5   0      ; 2
0025    KSHORT   5   4
0026    LEN      6   1
0027    KSHORT   7   1
0028    FORI     5 => 0040
0029 => UGET     9   1      ; insert
0030    MOV     10   4
0031    KSTR    11   4      ; ".."
0032    CALL     9   1   3
0033    UGET     9   1      ; insert
0034    MOV     10   4
0035    MOV     11   3
0036    TGETV   12   1   8
0037    CALL    11   0   2
0038    CALLM    9   1   1
0039    FORL     5 => 0029
0040 => UCLO     0 => 0041
0041 => RET1     4   2

-- BYTECODE -- value.lua:84-88
0001    UGET     1   0      ; a
0002    MOV      2   1
0003    TGETS    1   1   0  ; "mutate_body"
0004    TNEW     3   3
0005    TSETB    0   3   1
0006    CALLT    1   3

-- BYTECODE -- value.lua:82-90
0001    UGET     2   0      ; Accumulator
0002    CALL     2   2   1
0003    TGETS    3   0   0  ; "transform"
0004    TGETS    3   3   1  ; "statement"
0005    MOV      4   1
0006    FNEW     5   2      ; value.lua:84
0007    CALL     3   2   3
0008    MOV      1   3
0009    MOV      4   2
0010    TGETS    3   2   3  ; "wrap"
0011    MOV      5   1
0012    UCLO     0 => 0013
0013 => CALLT    3   3

-- BYTECODE -- value.lua:91-134
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    UGET     4   0      ; unpack
0006    MOV      5   2
0007    CALL     4   3   2
0008    UGET     6   1      ; NameProxy
0009    KSTR     7   0      ; "tbl"
0010    CALL     6   2   2
0011    KPRI     7   0
0012    ISF          5
0013    JMP      8 => 0031
0014    UGET     8   2      ; build
0015    TGETS    8   8   1  ; "chain"
0016    TDUP     9   2
0017    TSETS    6   9   3  ; "base"
0018    TDUP    10   4
0019    TSETB    4  10   2
0020    TSETB   10   9   1
0021    CALL     8   2   2
0022    TNEW     9   3
0023    UGET    10   2      ; build
0024    TGETS   10  10   5  ; "assign_one"
0025    MOV     11   8
0026    MOV     12   5
0027    CALL    10   0   3
0028    TSETM   10   0      ; 1
0029    MOV      7   9
0030    JMP      8 => 0065
0031 => UGET     8   1      ; NameProxy
0032    KSTR     9   6      ; "key"
0033    CALL     8   2   2
0034    UGET     9   1      ; NameProxy
0035    KSTR    10   7      ; "val"
0036    CALL     9   2   2
0037    UGET    10   2      ; build
0038    TGETS   10  10   1  ; "chain"
0039    TDUP    11   8
0040    TSETS    6  11   3  ; "base"
0041    TDUP    12   9
0042    TSETB    8  12   2
0043    TSETB   12  11   1
0044    CALL    10   2   2
0045    TNEW    11   3
0046    UGET    12   2      ; build
0047    TGETS   12  12  10  ; "assign"
0048    TDUP    13  11
0049    TNEW    14   3
0050    TSETB    8  14   1
0051    TSETB    9  14   2
0052    TSETS   14  13  12  ; "names"
0053    TNEW    14   3
0054    TSETB    4  14   1
0055    TSETS   14  13  13  ; "values"
0056    CALL    12   2   2
0057    TSETB   12  11   1
0058    UGET    12   2      ; build
0059    TGETS   12  12   5  ; "assign_one"
0060    MOV     13  10
0061    MOV     14   9
0062    CALL    12   0   3
0063    TSETM   12   1      ; 2
0064    MOV      7  11
0065 => UGET     8   2      ; build
0066    TGETS    8   8  14  ; "block_exp"
0067    TNEW     9   4
0068    UGET    10   2      ; build
0069    TGETS   10  10   5  ; "assign_one"
0070    MOV     11   6
0071    UGET    12   2      ; build
0072    TGETS   12  12  15  ; "table"
0073    CALL    12   0   1
0074    CALLM   10   2   1
0075    TSETB   10   9   1
0076    UGET    10   3      ; construct_comprehension
0077    MOV     11   7
0078    MOV     12   3
0079    CALL    10   2   3
0080    TSETB   10   9   2
0081    TSETB    6   9   3
0082    CALLT    8   2

-- BYTECODE -- value.lua:140-140
0001    RET0     0   1

-- BYTECODE -- value.lua:139-141
0001    MOV      2   0
0002    TGETS    1   0   0  ; "listen"
0003    KSTR     3   1      ; "varargs"
0004    FNEW     4   2      ; value.lua:140
0005    UCLO     0 => 0006
0006 => CALLT    1   4

-- BYTECODE -- value.lua:135-145
0001    UGET     2   0      ; smart_node
0002    MOV      3   1
0003    CALL     2   1   2
0004    UGET     2   1      ; transform_last_stm
0005    TGETS    3   1   0  ; "body"
0006    UGET     4   2      ; implicitly_return
0007    MOV      5   0
0008    CALL     4   0   2
0009    CALLM    2   2   1
0010    TSETS    2   1   0  ; "body"
0011    TNEW     2   3
0012    UGET     3   3      ; Run
0013    FNEW     4   1      ; value.lua:139
0014    CALL     3   2   2
0015    TSETB    3   2   1
0016    UGET     3   4      ; unpack
0017    TGETS    4   1   0  ; "body"
0018    CALL     3   0   2
0019    TSETM    3   0      ; 2
0020    TSETS    2   1   0  ; "body"
0021    UCLO     0 => 0022
0022 => RET1     1   2

-- BYTECODE -- value.lua:146-150
0001    UGET     2   0      ; build
0002    TGETS    2   2   0  ; "block_exp"
0003    TNEW     3   3
0004    TSETB    1   3   1
0005    CALLT    2   2

-- BYTECODE -- value.lua:151-155
0001    UGET     2   0      ; build
0002    TGETS    2   2   0  ; "block_exp"
0003    TNEW     3   3
0004    TSETB    1   3   1
0005    CALLT    2   2

-- BYTECODE -- value.lua:156-160
0001    UGET     2   0      ; build
0002    TGETS    2   2   0  ; "block_exp"
0003    TNEW     3   3
0004    TSETB    1   3   1
0005    CALLT    2   2

-- BYTECODE -- value.lua:161-165
0001    UGET     2   0      ; build
0002    TGETS    2   2   0  ; "block_exp"
0003    TNEW     3   3
0004    TSETB    1   3   1
0005    CALLT    2   2

-- BYTECODE -- value.lua:166-235
0001    KSHORT   2   2
0002    LEN      3   1
0003    KSHORT   4   1
0004    FORI     2 => 0023
0005 => TGETV    6   1   5
0006    UGET     7   0      ; ntype
0007    MOV      8   6
0008    CALL     7   2   2
0009    ISNES    7   0      ; "dot"
0010    JMP      7 => 0022
0011    UGET     7   1      ; lua_keywords
0012    TGETB    8   6   2
0013    TGETV    7   7   8
0014    ISF          7
0015    JMP      8 => 0022
0016    TDUP     7   1
0017    TDUP     8   2
0018    TGETB    9   6   2
0019    TSETB    9   8   3
0020    TSETB    8   7   2
0021    TSETV    7   1   5
0022 => FORL     2 => 0005
0023 => UGET     2   0      ; ntype
0024    TGETB    3   1   2
0025    CALL     2   2   2
0026    ISNES    2   3      ; "string"
0027    JMP      2 => 0032
0028    TDUP     2   4
0029    TGETB    3   1   2
0030    TSETB    3   2   2
0031    TSETB    2   1   2
0032 => UGET     2   2      ; chain_is_stub
0033    MOV      3   1
0034    CALL     2   2   2
0035    ISF          2
0036    JMP      3 => 0121
0037    UGET     2   3      ; NameProxy
0038    KSTR     3   5      ; "base"
0039    CALL     2   2   2
0040    UGET     3   3      ; NameProxy
0041    KSTR     4   6      ; "fn"
0042    CALL     3   2   2
0043    GGET     4   7      ; "table"
0044    TGETS    4   4   8  ; "remove"
0045    MOV      5   1
0046    CALL     4   2   2
0047    UGET     5   0      ; ntype
0048    TGETB    6   1   2
0049    CALL     5   2   2
0050    ISNES    5   9      ; "ref"
0051    JMP      5 => 0056
0052    TGETB    5   1   2
0053    TGETB    5   5   2
0054    ISEQS    5  10      ; "super"
0055    JMP      5 => 0058
0056 => KPRI     5   1
0057    JMP      6 => 0059
0058 => KPRI     5   2
0059 => UGET     6   4      ; build
0060    TGETS    6   6  11  ; "block_exp"
0061    TNEW     7   4
0062    UGET     8   4      ; build
0063    TGETS    8   8  12  ; "assign"
0064    TDUP     9  13
0065    TNEW    10   3
0066    TSETB    2  10   1
0067    TSETS   10   9  14  ; "names"
0068    TNEW    10   3
0069    TSETB    1  10   1
0070    TSETS   10   9  15  ; "values"
0071    CALL     8   2   2
0072    TSETB    8   7   1
0073    UGET     8   4      ; build
0074    TGETS    8   8  12  ; "assign"
0075    TDUP     9  16
0076    TNEW    10   3
0077    TSETB    3  10   1
0078    TSETS   10   9  14  ; "names"
0079    TNEW    10   3
0080    UGET    11   4      ; build
0081    TGETS   11  11  17  ; "chain"
0082    TDUP    12  18
0083    TSETS    2  12   5  ; "base"
0084    TDUP    13  19
0085    TGETB   14   4   2
0086    TSETB   14  13   2
0087    TSETB   13  12   1
0088    CALL    11   0   2
0089    TSETM   11   0      ; 1
0090    TSETS   10   9  15  ; "values"
0091    CALL     8   2   2
0092    TSETB    8   7   2
0093    UGET     8   4      ; build
0094    TGETS    8   8  20  ; "fndef"
0095    TDUP     9  22
0096    TNEW    10   3
0097    TDUP    11  21
0098    TSETB   11  10   1
0099    TSETS   10   9  23  ; "args"
0100    TNEW    10   3
0101    UGET    11   4      ; build
0102    TGETS   11  11  17  ; "chain"
0103    TDUP    12  24
0104    TSETS    3  12   5  ; "base"
0105    TDUP    13  25
0106    TDUP    14  27
0107    ISF          5
0108    JMP     15 => 0111
0109    KSTR    15  26      ; "self"
0110    JMP     16 => 0112
0111 => MOV     15   2
0112 => TSETB   15  14   1
0113    TSETB   14  13   2
0114    TSETB   13  12   1
0115    CALL    11   0   2
0116    TSETM   11   0      ; 1
0117    TSETS   10   9  28  ; "body"
0118    CALL     8   0   2
0119    TSETM    8   1      ; 3
0120    CALLT    6   2
0121 => RET0     0   1

-- BYTECODE -- value.lua:243-249
0001    UGET     0   0      ; insert
0002    UGET     1   1      ; arg_list
0003    KSTR     2   0      ; "..."
0004    CALL     0   1   3
0005    UGET     0   0      ; insert
0006    UGET     1   2      ; fn
0007    TGETS    1   1   1  ; "args"
0008    TDUP     2   2
0009    CALL     0   1   3
0010    UGET     0   3      ; self
0011    MOV      1   0
0012    TGETS    0   0   3  ; "unlisten"
0013    KSTR     2   4      ; "varargs"
0014    CALLT    0   3

-- BYTECODE -- value.lua:242-250
0001    MOV      2   0
0002    TGETS    1   0   0  ; "listen"
0003    KSTR     3   1      ; "varargs"
0004    FNEW     4   2      ; value.lua:243
0005    UCLO     0 => 0006
0006 => CALLT    1   4

-- BYTECODE -- value.lua:236-264
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   2   3
0005    KPRI     3   0
0006    TNEW     4   0
0007    UGET     5   1      ; smart_node
0008    UGET     6   2      ; build
0009    TGETS    6   6   0  ; "fndef"
0010    TDUP     7   2
0011    TNEW     8   3
0012    UGET     9   3      ; Run
0013    FNEW    10   1      ; value.lua:242
0014    CALL     9   2   2
0015    TSETB    9   8   1
0016    UGET     9   0      ; unpack
0017    MOV     10   2
0018    CALL     9   0   2
0019    TSETM    9   0      ; 2
0020    TSETS    8   7   3  ; "body"
0021    CALL     6   0   2
0022    CALLM    5   2   0
0023    MOV      3   5
0024    UGET     5   2      ; build
0025    TGETS    5   5   4  ; "chain"
0026    TDUP     6   6
0027    TDUP     7   5
0028    TSETB    3   7   2
0029    TSETS    7   6   7  ; "base"
0030    TDUP     7   8
0031    TSETB    4   7   2
0032    TSETB    7   6   1
0033    UCLO     0 => 0034
0034 => CALLT    5   2

-- BYTECODE -- value.lua:0-266
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.transform.transformer"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "Transformer"
0006    KNIL     1   3
0007    GGET     4   0      ; "require"
0008    KSTR     5   3      ; "moonscript.types"
0009    CALL     4   2   2
0010    TGETS    5   4   4  ; "build"
0011    TGETS    6   4   5  ; "ntype"
0012    TGETS    3   4   6  ; "smart_node"
0013    MOV      2   6
0014    MOV      1   5
0015    KPRI     4   0
0016    GGET     5   0      ; "require"
0017    KSTR     6   7      ; "moonscript.transform.names"
0018    CALL     5   2   2
0019    TGETS    4   5   8  ; "NameProxy"
0020    KNIL     5   6
0021    GGET     7   0      ; "require"
0022    KSTR     8   9      ; "moonscript.transform.accumulator"
0023    CALL     7   2   2
0024    TGETS    8   7  10  ; "Accumulator"
0025    TGETS    6   7  11  ; "default_accumulator"
0026    MOV      5   8
0027    KPRI     7   0
0028    GGET     8   0      ; "require"
0029    KSTR     9  12      ; "moonscript.data"
0030    CALL     8   2   2
0031    TGETS    7   8  13  ; "lua_keywords"
0032    KNIL     8  11
0033    GGET    12   0      ; "require"
0034    KSTR    13  14      ; "moonscript.transform.statements"
0035    CALL    12   2   2
0036    TGETS   13  12  15  ; "Run"
0037    TGETS   14  12  16  ; "transform_last_stm"
0038    TGETS   15  12  17  ; "implicitly_return"
0039    TGETS   11  12  18  ; "chain_is_stub"
0040    MOV     10  15
0041    MOV      9  14
0042    MOV      8  13
0043    KPRI    12   0
0044    GGET    13   0      ; "require"
0045    KSTR    14  19      ; "moonscript.transform.comprehension"
0046    CALL    13   2   2
0047    TGETS   12  13  20  ; "construct_comprehension"
0048    KPRI    13   0
0049    GGET    14  21      ; "table"
0050    TGETS   13  14  22  ; "insert"
0051    KPRI    14   0
0052    GGET    15   0      ; "require"
0053    KSTR    16  23      ; "moonscript.util"
0054    CALL    15   2   2
0055    TGETS   14  15  24  ; "unpack"
0056    MOV     15   0
0057    TDUP    16  25
0058    TSETS    6  16  26  ; "for"
0059    TSETS    6  16  27  ; "while"
0060    TSETS    6  16  28  ; "foreach"
0061    FNEW    17  29      ; value.lua:32
0062    TSETS   17  16  30  ; "do"
0063    FNEW    17  31      ; value.lua:35
0064    TSETS   17  16  32  ; "decorated"
0065    FNEW    17  33      ; value.lua:38
0066    TSETS   17  16  34  ; "class"
0067    FNEW    17  35      ; value.lua:43
0068    TSETS   17  16  36  ; "string"
0069    FNEW    17  37      ; value.lua:82
0070    TSETS   17  16  38  ; "comprehension"
0071    FNEW    17  39      ; value.lua:91
0072    TSETS   17  16  40  ; "tblcomprehension"
0073    FNEW    17  41      ; value.lua:135
0074    TSETS   17  16  42  ; "fndef"
0075    FNEW    17  43      ; value.lua:146
0076    TSETS   17  16  44  ; "if"
0077    FNEW    17  45      ; value.lua:151
0078    TSETS   17  16  46  ; "unless"
0079    FNEW    17  47      ; value.lua:156
0080    TSETS   17  16  48  ; "with"
0081    FNEW    17  49      ; value.lua:161
0082    TSETS   17  16  50  ; "switch"
0083    FNEW    17  51      ; value.lua:166
0084    TSETS   17  16  52  ; "chain"
0085    FNEW    17  53      ; value.lua:236
0086    TSETS   17  16  54  ; "block_exp"
0087    UCLO     0 => 0088
0088 => CALLT   15   2

-----------------------
-- BYTECODE -- statement.lua:28-34
0001    UGET     0   0      ; continue_name
0002    IST          0
0003    JMP      0 => 0013
0004    UGET     0   1      ; NameProxy
0005    KSTR     1   0      ; "continue"
0006    CALL     0   2   2
0007    USETV    0   0      ; continue_name
0008    UGET     0   2      ; self
0009    MOV      1   0
0010    TGETS    0   0   1  ; "put_name"
0011    UGET     2   0      ; continue_name
0012    CALL     0   1   3
0013 => UGET     0   0      ; continue_name
0014    RET1     0   2

-- BYTECODE -- statement.lua:27-35
0001    MOV      2   0
0002    TGETS    1   0   0  ; "listen"
0003    KSTR     3   1      ; "continue"
0004    FNEW     4   2      ; statement.lua:28
0005    UCLO     0 => 0006
0006 => CALLT    1   4

-- BYTECODE -- statement.lua:44-92
0001    UGET     1   0      ; enclose_lines
0002    ISF          1
0003    JMP      2 => 0009
0004    TDUP     1   0
0005    TNEW     2   3
0006    TSETB    0   2   1
0007    TSETB    2   1   2
0008    MOV      0   1
0009 => TNEW     1   4
0010    TDUP     2   1
0011    TNEW     3   3
0012    UGET     4   1      ; continue_name
0013    TSETB    4   3   1
0014    TSETB    3   2   2
0015    TDUP     3   2
0016    TSETB    3   2   3
0017    TSETB    2   1   1
0018    TDUP     2   3
0019    TNEW     3   3
0020    TSETB    0   3   1
0021    TDUP     4   4
0022    TNEW     5   3
0023    UGET     6   1      ; continue_name
0024    TSETB    6   5   1
0025    TSETB    5   4   2
0026    TDUP     5   5
0027    TSETB    5   4   3
0028    TSETB    4   3   2
0029    TSETB    3   2   3
0030    TSETB    2   1   2
0031    TDUP     2   6
0032    TDUP     3   7
0033    UGET     4   1      ; continue_name
0034    TSETB    4   3   2
0035    TSETB    3   2   2
0036    TNEW     3   3
0037    TDUP     4   8
0038    TSETB    4   3   1
0039    TSETB    3   2   3
0040    TSETB    2   1   3
0041    RET1     1   2

-- BYTECODE -- statement.lua:37-93
0001    UGET     1   0      ; continue_name
0002    IST          1
0003    JMP      1 => 0005
0004    UCLO     0 => 0026
0005 => UGET     1   1      ; last_stm
0006    UGET     2   2      ; body
0007    CALL     1   2   2
0008    UGET     2   3      ; types
0009    TGETS    2   2   0  ; "terminating"
0010    ISFC     3   1
0011    JMP      3 => 0015
0012    UGET     3   4      ; ntype
0013    MOV      4   1
0014    CALL     3   2   2
0015 => TGETV    2   2   3
0016    MOV      4   0
0017    TGETS    3   0   1  ; "put_name"
0018    UGET     5   0      ; continue_name
0019    KPRI     6   0
0020    CALL     3   1   4
0021    MOV      4   0
0022    TGETS    3   0   2  ; "splice"
0023    FNEW     5   3      ; statement.lua:44
0024    UCLO     0 => 0025
0025 => CALLT    3   3
0026 => RET0     0   1

-- BYTECODE -- statement.lua:24-95
0001    KPRI     1   0
0002    TNEW     2   4
0003    UGET     3   0      ; Run
0004    FNEW     4   0      ; statement.lua:27
0005    CALL     3   2   2
0006    TSETB    3   2   1
0007    UGET     3   2      ; build
0008    TGETS    3   3   1  ; "group"
0009    MOV      4   0
0010    CALL     3   2   2
0011    TSETB    3   2   2
0012    UGET     3   0      ; Run
0013    FNEW     4   2      ; statement.lua:37
0014    CALL     3   0   2
0015    TSETM    3   0      ; 3
0016    UCLO     0 => 0017
0017 => RET1     2   2

-- BYTECODE -- statement.lua:97-138
0001    ISNEP    1   0
0002    JMP      4 => 0004
0003    TGETS    1   0   0  ; "current_stms"
0004 => ISNEP    2   0
0005    JMP      4 => 0008
0006    TGETS    4   0   1  ; "current_stm_i"
0007    ADDVN    2   4   0  ; 1
0008 => ISNEP    3   0
0009    JMP      4 => 0011
0010    TNEW     3   0
0011 => MOV      4   2
0012    LEN      5   1
0013    KSHORT   6   1
0014    FORI     4 => 0073
0015 => KPRI     8   1
0016    LOOP     9 => 0069
0017    TGETV    9   1   7
0018    ISNEP    9   0
0019    JMP     10 => 0022
0020    KPRI     8   2
0021    JMP      9 => 0069
0022 => TGETS   10   0   2  ; "transform"
0023    TGETS   10  10   3  ; "statement"
0024    MOV     11   9
0025    CALL    10   2   2
0026    MOV      9  10
0027    TSETV    9   1   7
0028    TGETB   10   9   1
0029    ISEQS   10   4      ; "assign"
0030    JMP     11 => 0033
0031    ISNES   10   5      ; "declare"
0032    JMP     11 => 0060
0033 => TGETB   11   9   2
0034    KSHORT  12   1
0035    LEN     13  11
0036    KSHORT  14   1
0037    FORI    12 => 0059
0038 => TGETV   16  11  15
0039    UGET    17   0      ; ntype
0040    MOV     18  16
0041    CALL    17   2   2
0042    ISNES   17   6      ; "ref"
0043    JMP     17 => 0049
0044    UGET    17   1      ; insert
0045    MOV     18   3
0046    MOV     19  16
0047    CALL    17   1   3
0048    JMP     17 => 0058
0049 => GGET    17   7      ; "type"
0050    MOV     18  16
0051    CALL    17   2   2
0052    ISNES   17   8      ; "string"
0053    JMP     17 => 0058
0054    UGET    17   1      ; insert
0055    MOV     18   3
0056    MOV     19  16
0057    CALL    17   1   3
0058 => FORL    12 => 0038
0059 => JMP     11 => 0068
0060 => ISNES   10   9      ; "group"
0061    JMP     11 => 0068
0062    UGET    11   2      ; extract_declarations
0063    MOV     12   0
0064    TGETB   13   9   2
0065    KSHORT  14   1
0066    MOV     15   3
0067    CALL    11   1   5
0068 => KPRI     8   2
0069 => IST          8
0070    JMP      9 => 0072
0071    JMP      4 => 0073
0072 => FORL     4 => 0015
0073 => RET1     3   2

-- BYTECODE -- statement.lua:140-162
0001    KSHORT   1   4
0002    LEN      2   0
0003    KSHORT   3   1
0004    FORI     1 => 0042
0005 => TGETV    5   0   4
0006    UGET     6   0      ; ntype
0007    MOV      7   5
0008    CALL     6   2   2
0009    ISNES    6   0      ; "elseif"
0010    JMP      6 => 0041
0011    UGET     6   0      ; ntype
0012    TGETB    7   5   2
0013    CALL     6   2   2
0014    ISNES    6   1      ; "assign"
0015    JMP      6 => 0041
0016    TNEW     6   3
0017    UGET     7   1      ; unpack
0018    MOV      8   0
0019    KSHORT   9   1
0020    SUBVN   10   4   0  ; 1
0021    CALL     7   0   4
0022    TSETM    7   1      ; 1
0023    UGET     7   2      ; insert
0024    MOV      8   6
0025    TDUP     9   2
0026    TNEW    10   3
0027    TDUP    11   3
0028    TGETB   12   5   2
0029    TSETB   12  11   2
0030    TGETB   12   5   3
0031    TSETB   12  11   3
0032    UGET    12   1      ; unpack
0033    MOV     13   0
0034    ADDVN   14   4   0  ; 1
0035    CALL    12   0   3
0036    TSETM   12   2      ; 4
0037    TSETB   11  10   1
0038    TSETB   10   9   2
0039    CALL     7   1   3
0040    RET1     6   2
0041 => FORL     1 => 0005
0042 => RET1     0   2

-- BYTECODE -- statement.lua:164-168
0001    KNIL     2   4
0002    TGETB    5   1   1
0003    TGETB    6   1   2
0004    TGETB    4   1   3
0005    MOV      3   6
0006    MOV      2   5
0007    MOV      5   4
0008    MOV      6   3
0009    CALLT    5   2

-- BYTECODE -- statement.lua:169-171
0001    UGET     2   0      ; transform_last_stm
0002    MOV      3   1
0003    UGET     4   1      ; implicitly_return
0004    MOV      5   0
0005    CALL     4   0   2
0006    CALLMT   2   1

-- BYTECODE -- statement.lua:186-191
0001    TDUP     1   0
0002    TSETB    0   1   2
0003    RET1     1   2

-- BYTECODE -- statement.lua:172-196
0001    TGETB    2   1   2
0002    UGET     3   0      ; ntype
0003    MOV      4   2
0004    CALL     3   2   2
0005    ISNES    3   0      ; "explist"
0006    JMP      4 => 0015
0007    LEN      4   2
0008    ISNEN    4   0      ; 2
0009    JMP      4 => 0015
0010    TGETB    2   2   2
0011    UGET     4   0      ; ntype
0012    MOV      5   2
0013    CALL     4   2   2
0014    MOV      3   4
0015 => UGET     4   1      ; types
0016    TGETS    4   4   1  ; "cascading"
0017    TGETV    4   4   3
0018    ISF          4
0019    JMP      5 => 0025
0020    UGET     4   2      ; implicitly_return
0021    MOV      5   0
0022    CALL     4   2   2
0023    MOV      5   2
0024    UCLO     0 => 0056
0025 => ISEQS    3   2      ; "chain"
0026    JMP      4 => 0031
0027    ISEQS    3   3      ; "comprehension"
0028    JMP      4 => 0031
0029    ISNES    3   4      ; "tblcomprehension"
0030    JMP      4 => 0053
0031 => GGET     4   5      ; "require"
0032    KSTR     5   6      ; "moonscript.transform.value"
0033    CALL     4   2   2
0034    MOV      6   4
0035    TGETS    5   4   7  ; "transform_once"
0036    MOV      7   0
0037    MOV      8   2
0038    CALL     5   2   4
0039    MOV      2   5
0040    UGET     5   0      ; ntype
0041    MOV      6   2
0042    CALL     5   2   2
0043    ISNES    5   8      ; "block_exp"
0044    JMP      5 => 0053
0045    UGET     5   3      ; build
0046    TGETS    5   5   9  ; "group"
0047    UGET     6   4      ; transform_last_stm
0048    TGETB    7   2   2
0049    FNEW     8  10      ; statement.lua:186
0050    CALL     6   0   3
0051    UCLO     0 => 0052
0052 => CALLMT   5   0
0053 => TSETB    2   1   2
0054    UCLO     0 => 0055
0055 => RET1     1   2
0056 => CALLT    4   2

-- BYTECODE -- statement.lua:197-233
0001    UGET     2   0      ; extract_declarations
0002    MOV      3   0
0003    CALL     2   2   2
0004    TGETB    3   1   2
0005    ISNES    3   0      ; "^"
0006    JMP      3 => 0042
0007    TNEW     3   0
0008    KSHORT   4   1
0009    KSHORT   5   1
0010    LEN      6   2
0011    KSHORT   7   1
0012    FORI     5 => 0041
0013 => KPRI     9   1
0014    LOOP    10 => 0037
0015    TGETV   10   2   8
0016    KPRI    11   0
0017    UGET    12   1      ; ntype
0018    MOV     13  10
0019    CALL    12   2   2
0020    ISNES   12   1      ; "ref"
0021    JMP     12 => 0024
0022    TGETB   11  10   2
0023    JMP     12 => 0025
0024 => MOV     11  10
0025 => MOV     13  11
0026    TGETS   12  11   2  ; "match"
0027    KSTR    14   3      ; "^%u"
0028    CALL    12   2   3
0029    IST         12
0030    JMP     12 => 0033
0031    KPRI     9   2
0032    JMP     10 => 0037
0033 => MOV     12  10
0034    TSETV   12   3   4
0035    ADDVN    4   4   0  ; 1
0036    KPRI     9   2
0037 => IST          9
0038    JMP     10 => 0040
0039    JMP      5 => 0041
0040 => FORL     5 => 0013
0041 => MOV      2   3
0042 => TDUP     3   4
0043    TSETB    2   3   2
0044    RET1     3   2

-- BYTECODE -- statement.lua:281-293
0001    UGET     1   0      ; is_value
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISF          1
0005    JMP      2 => 0014
0006    TDUP     1   0
0007    UGET     2   1      ; names
0008    TSETB    2   1   2
0009    TNEW     2   3
0010    TSETB    0   2   1
0011    TSETB    2   1   3
0012    RET1     1   2
0013    JMP      1 => 0015
0014 => RET1     0   2
0015 => RET0     0   1

-- BYTECODE -- statement.lua:234-308
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    LEN      4   3
0006    LEN      5   3
0007    ISNEN    5   0      ; 1
0008    JMP      6 => 0081
0009    ISNEN    4   0      ; 1
0010    JMP      6 => 0081
0011    TGETB    6   3   1
0012    TGETB    7   2   1
0013    UGET     8   1      ; ntype
0014    MOV      9   6
0015    CALL     8   2   2
0016    ISNES    8   0      ; "chain"
0017    JMP      9 => 0031
0018    GGET     9   1      ; "require"
0019    KSTR    10   2      ; "moonscript.transform.value"
0020    CALL     9   2   2
0021    MOV     11   9
0022    TGETS   10   9   3  ; "transform_once"
0023    MOV     12   0
0024    MOV     13   6
0025    CALL    10   2   4
0026    MOV      6  10
0027    UGET    10   1      ; ntype
0028    MOV     11   6
0029    CALL    10   2   2
0030    MOV      8  10
0031 => UGET     9   1      ; ntype
0032    MOV     10   6
0033    CALL     9   2   2
0034    ISNES    9   4      ; "block_exp"
0035    JMP     10 => 0057
0036    TGETB   10   6   2
0037    LEN     11  10
0038    UGET    12   2      ; build
0039    TGETS   12  12   5  ; "assign_one"
0040    MOV     13   7
0041    TGETV   14  10  11
0042    CALL    12   2   3
0043    TSETV   12  10  11
0044    UGET    12   2      ; build
0045    TGETS   12  12   6  ; "group"
0046    TNEW    13   3
0047    TDUP    14   7
0048    TNEW    15   3
0049    TSETB    7  15   1
0050    TSETB   15  14   2
0051    TSETB   14  13   1
0052    TDUP    14   8
0053    TSETB   10  14   2
0054    TSETB   14  13   2
0055    UCLO     0 => 0137
0056    JMP     10 => 0081
0057 => ISEQS    9   9      ; "comprehension"
0058    JMP     10 => 0067
0059    ISEQS    9  10      ; "tblcomprehension"
0060    JMP     10 => 0067
0061    ISEQS    9  11      ; "foreach"
0062    JMP     10 => 0067
0063    ISEQS    9  12      ; "for"
0064    JMP     10 => 0067
0065    ISNES    9  13      ; "while"
0066    JMP     10 => 0080
0067 => GGET    10   1      ; "require"
0068    KSTR    11   2      ; "moonscript.transform.value"
0069    CALL    10   2   2
0070    UGET    11   2      ; build
0071    TGETS   11  11   5  ; "assign_one"
0072    MOV     12   7
0073    MOV     14  10
0074    TGETS   13  10   3  ; "transform_once"
0075    MOV     15   0
0076    MOV     16   6
0077    CALL    13   0   4
0078    UCLO     0 => 0138
0079    JMP     10 => 0081
0080 => TSETB    6   3   1
0081 => KPRI     6   0
0082    ISNEN    4   0      ; 1
0083    JMP      7 => 0121
0084    TGETB    7   3   1
0085    UGET     8   1      ; ntype
0086    MOV      9   7
0087    CALL     8   2   2
0088    ISNES    8  14      ; "decorated"
0089    JMP      9 => 0099
0090    TGETS    9   0  15  ; "transform"
0091    TGETS    9   9  16  ; "statement"
0092    MOV     10   7
0093    CALL     9   2   2
0094    MOV      7   9
0095    UGET     9   1      ; ntype
0096    MOV     10   7
0097    CALL     9   2   2
0098    MOV      8   9
0099 => UGET     9   3      ; types
0100    TGETS    9   9  17  ; "cascading"
0101    TGETV    9   9   8
0102    ISF          9
0103    JMP     10 => 0121
0104    KPRI     9   0
0105    FNEW     9  18      ; statement.lua:281
0106    UGET    10   2      ; build
0107    TGETS   10  10   6  ; "group"
0108    TNEW    11   3
0109    TDUP    12  19
0110    TSETB    2  12   2
0111    TSETB   12  11   1
0112    TGETS   12   0  15  ; "transform"
0113    TGETS   12  12  16  ; "statement"
0114    MOV     13   7
0115    MOV     14   9
0116    MOV     15   1
0117    CALL    12   0   4
0118    TSETM   12   1      ; 2
0119    CALL    10   2   2
0120    MOV      6  10
0121 => ISTC     1   6
0122    JMP      7 => 0123
0123 => UGET     7   5      ; destructure
0124    TGETS    7   7  20  ; "has_destructure"
0125    MOV      8   2
0126    CALL     7   2   2
0127    ISF          7
0128    JMP      8 => 0135
0129    UGET     7   5      ; destructure
0130    TGETS    7   7  21  ; "split_assign"
0131    MOV      8   0
0132    MOV      9   1
0133    UCLO     0 => 0134
0134 => CALLT    7   3
0135 => UCLO     0 => 0136
0136 => RET1     1   2
0137 => CALLT   12   2
0138 => CALLMT  11   1

-- BYTECODE -- statement.lua:309-320
0001    MOV      3   0
0002    TGETS    2   0   0  ; "send"
0003    KSTR     4   1      ; "continue"
0004    CALL     2   2   3
0005    IST          2
0006    JMP      3 => 0010
0007    GGET     3   2      ; "error"
0008    KSTR     4   3      ; "continue must be inside of a loop"
0009    CALL     3   1   2
0010 => UGET     3   0      ; build
0011    TGETS    3   3   4  ; "group"
0012    TNEW     4   3
0013    UGET     5   0      ; build
0014    TGETS    5   5   5  ; "assign_one"
0015    MOV      6   2
0016    KSTR     7   6      ; "true"
0017    CALL     5   2   3
0018    TSETB    5   4   1
0019    TDUP     5   7
0020    TSETB    5   4   2
0021    CALLT    3   2

-- BYTECODE -- statement.lua:321-349
0001    LEN      2   1
0002    KSHORT   3   2
0003    ISGE     3   2
0004    JMP      2 => 0041
0005    TGETB    2   1   2
0006    ISNES    2   0      ; "class"
0007    JMP      2 => 0023
0008    UGET     2   0      ; smart_node
0009    TGETB    3   1   3
0010    CALL     2   2   2
0011    UGET     3   1      ; build
0012    TGETS    3   3   1  ; "group"
0013    TNEW     4   3
0014    TDUP     5   2
0015    TNEW     6   3
0016    TGETS    7   2   3  ; "name"
0017    TSETB    7   6   1
0018    TSETB    6   5   2
0019    TSETB    5   4   1
0020    TSETB    2   4   2
0021    CALLT    3   2
0022    JMP      2 => 0043
0023 => UGET     2   1      ; build
0024    TGETS    2   2   1  ; "group"
0025    TNEW     3   3
0026    TDUP     4   4
0027    TGETB    5   1   2
0028    TSETB    5   4   2
0029    TSETB    4   3   1
0030    UGET     4   1      ; build
0031    TGETS    4   4   5  ; "assign"
0032    TDUP     5   6
0033    TGETB    6   1   2
0034    TSETS    6   5   7  ; "names"
0035    TGETB    6   1   3
0036    TSETS    6   5   8  ; "values"
0037    CALL     4   0   2
0038    TSETM    4   0      ; 2
0039    CALLT    2   2
0040    JMP      2 => 0043
0041 => KPRI     2   0
0042    RET1     2   2
0043 => RET0     0   1

-- BYTECODE -- statement.lua:350-368
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   4   3
0005    MOV      6   3
0006    TGETS    5   3   0  ; "match"
0007    KSTR     7   1      ; "^(.+)=$"
0008    CALL     5   2   3
0009    IST          5
0010    JMP      6 => 0016
0011    GGET     6   2      ; "error"
0012    KSTR     7   3      ; "Unknown op: "
0013    MOV      8   3
0014    CAT      7   7   8
0015    CALL     6   1   2
0016 => UGET     6   1      ; value_is_singular
0017    MOV      7   4
0018    CALL     6   2   2
0019    IST          6
0020    JMP      6 => 0024
0021    TDUP     6   4
0022    TSETB    4   6   2
0023    MOV      4   6
0024 => UGET     6   2      ; build
0025    TGETS    6   6   5  ; "assign_one"
0026    MOV      7   2
0027    TDUP     8   6
0028    TSETB    2   8   2
0029    TSETB    5   8   3
0030    TSETB    4   8   4
0031    CALLT    6   3

-- BYTECODE -- statement.lua:369-409
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    KPRI     4   0
0006    TNEW     5   0
0007    KSHORT   6   1
0008    KSHORT   7   1
0009    LEN      8   2
0010    KSHORT   9   1
0011    FORI     7 => 0030
0012 => TGETV   11   2  10
0013    KPRI    12   0
0014    UGET    13   1      ; ntype
0015    MOV     14  11
0016    CALL    13   2   2
0017    ISNES   13   0      ; "colon"
0018    JMP     13 => 0021
0019    TGETB   12  11   2
0020    JMP     13 => 0022
0021 => MOV     12  11
0022 => TNEW    13   3
0023    TDUP    14   1
0024    TSETB   11  14   2
0025    TSETB   14  13   1
0026    TSETB   12  13   2
0027    TSETV   13   5   6
0028    ADDVN    6   6   0  ; 1
0029    FORL     7 => 0012
0030 => MOV      4   5
0031    TDUP     5   2
0032    TSETB    4   5   2
0033    TDUP     6   3
0034    TNEW     7   3
0035    TSETB    5   7   1
0036    TSETB    7   6   2
0037    TNEW     7   3
0038    TSETB    3   7   1
0039    TSETB    7   6   3
0040    KSHORT   7  -1
0041    TGETV    7   1   7
0042    KSHORT   8  -1
0043    TSETV    7   6   8
0044    RET1     6   2

-- BYTECODE -- statement.lua:412-416
0001    TNEW     1   3
0002    TSETB    0   1   1
0003    RET1     1   2

-- BYTECODE -- statement.lua:410-418
0001    UGET     3   0      ; unpack
0002    MOV      4   1
0003    KSHORT   5   2
0004    CALL     3   3   3
0005    IST          2
0006    JMP      5 => 0008
0007    FNEW     2   0      ; statement.lua:412
0008 => UGET     5   1      ; construct_comprehension
0009    MOV      6   2
0010    MOV      7   3
0011    CALL     6   2   2
0012    MOV      7   4
0013    UCLO     0 => 0014
0014 => CALLT    5   3

-- BYTECODE -- statement.lua:419-424
0001    ISF          2
0002    JMP      3 => 0008
0003    UGET     3   0      ; transform_last_stm
0004    TGETB    4   1   2
0005    MOV      5   2
0006    CALL     3   2   3
0007    TSETB    3   1   2
0008 => RET1     1   2

-- BYTECODE -- statement.lua:467-479
0001    TNEW     0   0
0002    KSHORT   1   1
0003    UGET     2   0      ; stm
0004    TGETB    2   2   2
0005    KSHORT   3   1
0006    LEN      4   2
0007    KSHORT   5   1
0008    FORI     3 => 0018
0009 => TGETV    7   2   6
0010    UGET     8   1      ; ntype
0011    MOV      9   7
0012    CALL     8   2   2
0013    ISNES    8   0      ; "ref"
0014    JMP      8 => 0017
0015    TSETV    7   0   1
0016    ADDVN    1   1   0  ; 1
0017 => FORL     3 => 0009
0018 => RET1     0   2

-- BYTECODE -- statement.lua:425-485
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    KPRI     4   0
0006    TGETB    5   3   1
0007    ISNES    5   0      ; "if"
0008    JMP      6 => 0028
0009    UGET     6   0      ; unpack
0010    MOV      7   3
0011    KSHORT   8   2
0012    CALL     6   3   3
0013    ISF          7
0014    JMP      8 => 0020
0015    TDUP     8   1
0016    TNEW     9   3
0017    TSETB    7   9   1
0018    TSETB    9   8   2
0019    MOV      7   8
0020 => TDUP     8   2
0021    TSETB    6   8   2
0022    TNEW     9   3
0023    TSETB    2   9   1
0024    TSETB    9   8   3
0025    TSETB    7   8   4
0026    MOV      4   8
0027    JMP      6 => 0052
0028 => ISNES    5   3      ; "unless"
0029    JMP      6 => 0038
0030    TDUP     6   4
0031    TGETB    7   3   2
0032    TSETB    7   6   2
0033    TNEW     7   3
0034    TSETB    2   7   1
0035    TSETB    7   6   3
0036    MOV      4   6
0037    JMP      6 => 0052
0038 => ISNES    5   5      ; "comprehension"
0039    JMP      6 => 0046
0040    TDUP     6   6
0041    TSETB    2   6   2
0042    TGETB    7   3   2
0043    TSETB    7   6   3
0044    MOV      4   6
0045    JMP      6 => 0052
0046 => GGET     6   7      ; "error"
0047    KSTR     7   8      ; "Unknown decorator "
0048    TGETB    8   3   1
0049    CAT      7   7   8
0050    CALL     6   2   2
0051    MOV      4   6
0052 => UGET     6   1      ; ntype
0053    MOV      7   2
0054    CALL     6   2   2
0055    ISNES    6   9      ; "assign"
0056    JMP      6 => 0071
0057    UGET     6   2      ; build
0058    TGETS    6   6  10  ; "group"
0059    TNEW     7   3
0060    UGET     8   2      ; build
0061    TGETS    8   8  11  ; "declare"
0062    TDUP     9  13
0063    FNEW    10  12      ; statement.lua:467
0064    CALL    10   2   1
0065    TSETS   10   9  14  ; "names"
0066    CALL     8   2   2
0067    TSETB    8   7   1
0068    TSETB    4   7   2
0069    CALL     6   2   2
0070    MOV      4   6
0071 => UCLO     0 => 0072
0072 => RET1     4   2

-- BYTECODE -- statement.lua:486-516
0001    TGETB    2   1   2
0002    UGET     3   0      ; ntype
0003    MOV      4   2
0004    CALL     3   2   2
0005    ISNES    3   0      ; "assign"
0006    JMP      3 => 0034
0007    UGET     3   1      ; destructure
0008    TGETS    3   3   1  ; "has_destructure"
0009    TGETB    4   2   2
0010    CALL     3   2   2
0011    ISF          3
0012    JMP      4 => 0016
0013    GGET     3   2      ; "error"
0014    KSTR     4   3      ; "destructure not allowed in unless assign"~
0015    CALL     3   1   2
0016 => UGET     3   2      ; build
0017    TGETS    3   3   4  ; "do"
0018    TNEW     4   3
0019    TSETB    2   4   1
0020    TDUP     5   5
0021    TDUP     6   6
0022    TGETB    7   2   2
0023    TGETB    7   7   1
0024    TSETB    7   6   2
0025    TSETB    6   5   2
0026    UGET     6   3      ; unpack
0027    MOV      7   1
0028    KSHORT   8   3
0029    CALL     6   0   3
0030    TSETM    6   0      ; 3
0031    TSETB    5   4   2
0032    CALLT    3   2
0033    JMP      3 => 0046
0034 => TDUP     3   7
0035    TDUP     4   8
0036    TDUP     5   9
0037    TSETB    2   5   2
0038    TSETB    5   4   2
0039    TSETB    4   3   2
0040    UGET     4   3      ; unpack
0041    MOV      5   1
0042    KSHORT   6   3
0043    CALL     4   0   3
0044    TSETM    4   0      ; 3
0045    RET1     3   2
0046 => RET0     0   1

-- BYTECODE -- statement.lua:517-558
0001    UGET     3   0      ; ntype
0002    TGETB    4   1   2
0003    CALL     3   2   2
0004    ISNES    3   0      ; "assign"
0005    JMP      3 => 0070
0006    UGET     3   1      ; unpack
0007    MOV      4   1
0008    KSHORT   5   2
0009    CALL     3   3   3
0010    UGET     5   2      ; destructure
0011    TGETS    5   5   1  ; "has_destructure"
0012    TGETB    6   3   2
0013    CALL     5   2   2
0014    ISF          5
0015    JMP      6 => 0055
0016    UGET     5   3      ; NameProxy
0017    KSTR     6   2      ; "des"
0018    CALL     5   2   2
0019    TNEW     6   3
0020    UGET     7   2      ; destructure
0021    TGETS    7   7   3  ; "build_assign"
0022    MOV      8   0
0023    TGETB    9   3   2
0024    TGETB    9   9   1
0025    MOV     10   5
0026    CALL     7   2   4
0027    TSETB    7   6   1
0028    UGET     7   4      ; build
0029    TGETS    7   7   4  ; "group"
0030    TGETB    8   1   3
0031    CALL     7   0   2
0032    TSETM    7   0      ; 2
0033    MOV      4   6
0034    UGET     6   4      ; build
0035    TGETS    6   6   5  ; "do"
0036    TNEW     7   3
0037    UGET     8   4      ; build
0038    TGETS    8   8   6  ; "assign_one"
0039    MOV      9   5
0040    TGETB   10   3   3
0041    TGETB   10  10   1
0042    CALL     8   2   3
0043    TSETB    8   7   1
0044    TDUP     8   7
0045    TSETB    5   8   2
0046    TSETB    4   8   3
0047    UGET     9   1      ; unpack
0048    MOV     10   1
0049    KSHORT  11   4
0050    CALL     9   0   3
0051    TSETM    9   1      ; 4
0052    TSETB    8   7   2
0053    CALLT    6   2
0054    JMP      5 => 0070
0055 => TGETB    5   3   2
0056    TGETB    5   5   1
0057    UGET     6   4      ; build
0058    TGETS    6   6   5  ; "do"
0059    TNEW     7   3
0060    TSETB    3   7   1
0061    TDUP     8   8
0062    TSETB    5   8   2
0063    UGET     9   1      ; unpack
0064    MOV     10   1
0065    KSHORT  11   3
0066    CALL     9   0   3
0067    TSETM    9   2      ; 3
0068    TSETB    8   7   2
0069    CALLT    6   2
0070 => UGET     3   5      ; expand_elseif_assign
0071    MOV      4   1
0072    CALL     3   2   2
0073    MOV      1   3
0074    ISF          2
0075    JMP      3 => 0097
0076    UGET     3   6      ; smart_node
0077    MOV      4   1
0078    CALL     3   1   2
0079    UGET     3   7      ; transform_last_stm
0080    TGETS    4   1   9  ; "then"
0081    MOV      5   2
0082    CALL     3   2   3
0083    TSETS    3   1   9  ; "then"
0084    KSHORT   3   4
0085    LEN      4   1
0086    KSHORT   5   1
0087    FORI     3 => 0097
0088 => TGETV    7   1   6
0089    TGETV    8   1   6
0090    LEN      8   8
0091    UGET     9   7      ; transform_last_stm
0092    TGETV   10   7   8
0093    MOV     11   2
0094    CALL     9   2   3
0095    TSETV    9   7   8
0096    FORL     3 => 0088
0097 => RET1     1   2

-- BYTECODE -- statement.lua:597-599
0001    MOV      2   0
0002    TGETS    1   0   0  ; "set"
0003    KSTR     3   1      ; "scope_var"
0004    UGET     4   0      ; scope_name
0005    CALLT    1   4

-- BYTECODE -- statement.lua:559-606
0001    UGET     3   0      ; unpack
0002    MOV      4   1
0003    KSHORT   5   2
0004    CALL     3   3   3
0005    KPRI     5   2
0006    KNIL     6   7
0007    UGET     8   1      ; last_stm
0008    MOV      9   4
0009    CALL     8   2   2
0010    ISF          8
0011    JMP      9 => 0021
0012    UGET     9   2      ; types
0013    TGETS    9   9   0  ; "terminating"
0014    UGET    10   3      ; ntype
0015    MOV     11   8
0016    CALL    10   2   2
0017    TGETV    9   9  10
0018    ISF          9
0019    JMP     10 => 0021
0020    KPRI     2   1
0021 => UGET     8   3      ; ntype
0022    MOV      9   3
0023    CALL     8   2   2
0024    ISNES    8   1      ; "assign"
0025    JMP      8 => 0052
0026    UGET     8   0      ; unpack
0027    MOV      9   3
0028    KSHORT  10   2
0029    CALL     8   3   3
0030    TGETB   10   8   1
0031    UGET    11   3      ; ntype
0032    MOV     12  10
0033    CALL    11   2   2
0034    ISNES   11   2      ; "ref"
0035    JMP     11 => 0041
0036    MOV      6  10
0037    MOV      7   3
0038    TGETB    3   9   1
0039    KPRI     5   1
0040    JMP     11 => 0060
0041 => UGET    11   4      ; NameProxy
0042    KSTR    12   3      ; "with"
0043    CALL    11   2   2
0044    MOV      6  11
0045    TGETB    3   9   1
0046    TSETB    6   9   1
0047    TDUP    11   4
0048    TSETB    8  11   2
0049    TSETB    9  11   3
0050    MOV      7  11
0051    JMP      8 => 0060
0052 => MOV      9   0
0053    TGETS    8   0   5  ; "is_local"
0054    MOV     10   3
0055    CALL     8   2   3
0056    ISF          8
0057    JMP      9 => 0060
0058    MOV      6   3
0059    KPRI     5   1
0060 => IST          6
0061    JMP      8 => 0066
0062    UGET     8   4      ; NameProxy
0063    KSTR     9   3      ; "with"
0064    CALL     8   2   2
0065    MOV      6   8
0066 => UGET     8   5      ; build
0067    TGETS    8   8   6  ; "do"
0068    TNEW     9   5
0069    ISF          5
0070    JMP     10 => 0078
0071    UGET    10   5      ; build
0072    TGETS   10  10   7  ; "assign_one"
0073    MOV     11   6
0074    MOV     12   3
0075    CALL    10   2   3
0076    IST         10
0077    JMP     11 => 0079
0078 => UGET    10   6      ; NOOP
0079 => TSETB   10   9   1
0080    ISTC    10   7
0081    JMP     10 => 0083
0082    UGET    10   6      ; NOOP
0083 => TSETB   10   9   2
0084    UGET    10   7      ; Run
0085    FNEW    11   8      ; statement.lua:597
0086    CALL    10   2   2
0087    TSETB   10   9   3
0088    UGET    10   0      ; unpack
0089    MOV     11   4
0090    CALL    10   0   2
0091    TSETM   10   0      ; 4
0092    CALL     8   2   2
0093    ISF          2
0094    JMP      9 => 0102
0095    GGET     9   9      ; "table"
0096    TGETS    9   9  10  ; "insert"
0097    TGETB   10   8   2
0098    MOV     11   2
0099    MOV     12   6
0100    CALL    11   0   2
0101    CALLM    9   1   1
0102 => UCLO     0 => 0103
0103 => RET1     8   2

-- BYTECODE -- statement.lua:607-711
0001    UGET     3   0      ; smart_node
0002    MOV      4   1
0003    CALL     3   1   2
0004    UGET     3   1      ; unpack
0005    TGETS    4   1   0  ; "iter"
0006    CALL     3   2   2
0007    TNEW     4   0
0008    TNEW     5   0
0009    KSHORT   6   1
0010    GGET     7   1      ; "ipairs"
0011    TGETS    8   1   2  ; "names"
0012    CALL     7   4   2
0013    JMP     10 => 0035
0014 => UGET    12   2      ; ntype
0015    MOV     13  11
0016    CALL    12   2   2
0017    ISNES   12   3      ; "table"
0018    JMP     12 => 0033
0019    UGET    12   3      ; NameProxy
0020    KSTR    13   4      ; "des"
0021    CALL    12   2   2
0022    UGET    13   4      ; insert
0023    MOV     14   4
0024    UGET    15   5      ; destructure
0025    TGETS   15  15   5  ; "build_assign"
0026    MOV     16   0
0027    MOV     17  11
0028    MOV     18  12
0029    CALL    15   0   4
0030    CALLM   13   1   1
0031    TSETV   12   5   6
0032    JMP     12 => 0034
0033 => TSETV   11   5   6
0034 => ADDVN    6   6   0  ; 1
0035 => ITERC   10   3   3
0036    ITERL   10 => 0014
0037    TSETS    5   1   2  ; "names"
0038    GGET     5   6      ; "next"
0039    MOV      6   4
0040    CALL     5   2   2
0041    ISF          5
0042    JMP      6 => 0051
0043    UGET     5   4      ; insert
0044    MOV      6   4
0045    UGET     7   6      ; build
0046    TGETS    7   7   7  ; "group"
0047    TGETS    8   1   8  ; "body"
0048    CALL     7   0   2
0049    CALLM    5   1   1
0050    TSETS    4   1   8  ; "body"
0051 => UGET     5   2      ; ntype
0052    MOV      6   3
0053    CALL     5   2   2
0054    ISNES    5   9      ; "unpack"
0055    JMP      5 => 0199
0056    TGETB    5   3   2
0057    UGET     6   3      ; NameProxy
0058    KSTR     7  10      ; "index"
0059    CALL     6   2   2
0060    MOV      8   0
0061    TGETS    7   0  11  ; "is_local"
0062    MOV      9   5
0063    CALL     7   2   3
0064    ISF          7
0065    JMP      8 => 0068
0066    ISTC     7   5
0067    JMP      7 => 0071
0068 => UGET     7   3      ; NameProxy
0069    KSTR     8  12      ; "list"
0070    CALL     7   2   2
0071 => KNIL     8   9
0072    UGET    10   7      ; is_slice
0073    MOV     11   5
0074    CALL    10   2   2
0075    ISF         10
0076    JMP     11 => 0124
0077    LEN     10   5
0078    TGETV   10   5  10
0079    GGET    11   3      ; "table"
0080    TGETS   11  11  13  ; "remove"
0081    MOV     12   5
0082    CALL    11   1   2
0083    GGET    11   3      ; "table"
0084    TGETS   11  11  13  ; "remove"
0085    MOV     12  10
0086    KSHORT  13   1
0087    CALL    11   1   3
0088    MOV     12   0
0089    TGETS   11   0  11  ; "is_local"
0090    MOV     13   5
0091    CALL    11   2   3
0092    ISF         11
0093    JMP     12 => 0095
0094    MOV      7   5
0095 => TGETB   11  10   2
0096    ISF         11
0097    JMP     12 => 0119
0098    TGETB   11  10   2
0099    ISEQS   11  14      ; ""
0100    JMP     11 => 0119
0101    UGET    11   3      ; NameProxy
0102    KSTR    12  15      ; "max"
0103    CALL    11   2   2
0104    UGET    12   6      ; build
0105    TGETS   12  12  16  ; "assign_one"
0106    MOV     13  11
0107    TGETB   14  10   2
0108    CALL    12   2   3
0109    MOV      8  12
0110    TDUP    12  17
0111    TSETB   11  12   2
0112    TDUP    13  18
0113    TSETB    7  13   2
0114    TSETB   13  12   6
0115    TSETB   11  12   8
0116    TSETB   11  12  10
0117    TSETB   12  10   2
0118    JMP     11 => 0122
0119 => TDUP    11  19
0120    TSETB    7  11   2
0121    TSETB   11  10   2
0122 => MOV      9  10
0123    JMP     10 => 0129
0124 => TDUP    10  20
0125    TDUP    11  21
0126    TSETB    7  11   2
0127    TSETB   11  10   2
0128    MOV      9  10
0129 => KPRI    10   0
0130    TNEW    11   0
0131    KSHORT  12   1
0132    TGETS   13   1   2  ; "names"
0133    KSHORT  14   1
0134    LEN     15  13
0135    KSHORT  16   1
0136    FORI    14 => 0154
0137 => TGETV   18  13  17
0138    UGET    19   8      ; is_name_proxy
0139    MOV     20  18
0140    CALL    19   2   2
0141    ISF         19
0142    JMP     20 => 0145
0143    ISTC    19  18
0144    JMP     19 => 0151
0145 => UGET    19   9      ; LocalName
0146    MOV     20  18
0147    CALL    19   2   2
0148    IST         19
0149    JMP     20 => 0151
0150    MOV     19  18
0151 => TSETV   19  11  12
0152    ADDVN   12  12   0  ; 1
0153    FORL    14 => 0137
0154 => MOV     10  11
0155    UGET    11   6      ; build
0156    TGETS   11  11   7  ; "group"
0157    TNEW    12   4
0158    ISEQV    7   5
0159    JMP     13 => 0167
0160    UGET    13   6      ; build
0161    TGETS   13  13  16  ; "assign_one"
0162    MOV     14   7
0163    MOV     15   5
0164    CALL    13   2   3
0165    IST         13
0166    JMP     14 => 0168
0167 => UGET    13  10      ; NOOP
0168 => TSETB   13  12   1
0169    ISTC    13   8
0170    JMP     13 => 0172
0171    UGET    13  10      ; NOOP
0172 => TSETB   13  12   2
0173    UGET    13   6      ; build
0174    TGETS   13  13  22  ; "for"
0175    TDUP    14  23
0176    TSETS    6  14  24  ; "name"
0177    TSETS    9  14  25  ; "bounds"
0178    TNEW    15   3
0179    TDUP    16  26
0180    TSETB   10  16   2
0181    TNEW    17   3
0182    UGET    18   3      ; NameProxy
0183    TGETS   18  18  10  ; "index"
0184    MOV     19   7
0185    MOV     20   6
0186    CALL    18   0   3
0187    TSETM   18   1      ; 1
0188    TSETB   17  16   3
0189    TSETB   16  15   1
0190    UGET    16   6      ; build
0191    TGETS   16  16   7  ; "group"
0192    TGETS   17   1   8  ; "body"
0193    CALL    16   0   2
0194    TSETM   16   2      ; 2
0195    TSETS   15  14   8  ; "body"
0196    CALL    13   0   2
0197    TSETM   13   3      ; 3
0198    CALLT   11   2
0199 => UGET     5  11      ; with_continue_listener
0200    TGETS    6   1   8  ; "body"
0201    CALL     5   2   2
0202    TSETS    5   1   8  ; "body"
0203    RET0     0   1

-- BYTECODE -- statement.lua:712-715
0001    UGET     2   0      ; smart_node
0002    MOV      3   1
0003    CALL     2   1   2
0004    UGET     2   1      ; with_continue_listener
0005    TGETS    3   1   0  ; "body"
0006    CALL     2   2   2
0007    TSETS    2   1   0  ; "body"
0008    RET0     0   1

-- BYTECODE -- statement.lua:716-719
0001    UGET     2   0      ; smart_node
0002    MOV      3   1
0003    CALL     2   1   2
0004    UGET     2   1      ; with_continue_listener
0005    TGETS    3   1   0  ; "body"
0006    CALL     2   2   2
0007    TSETS    2   1   0  ; "body"
0008    RET0     0   1

-- BYTECODE -- statement.lua:724-758
0001    UGET     1   0      ; unpack
0002    MOV      2   0
0003    CALL     1   4   2
0004    TNEW     4   0
0005    UGET     5   1      ; insert
0006    MOV      6   4
0007    ISNES    1   0      ; "case"
0008    JMP      7 => 0011
0009    KSTR     7   1      ; "elseif"
0010    JMP      8 => 0012
0011 => KSTR     7   2      ; "else"
0012 => CALL     5   1   3
0013    ISEQS    1   2      ; "else"
0014    JMP      5 => 0053
0015    TNEW     5   0
0016    GGET     6   3      ; "ipairs"
0017    MOV      7   2
0018    CALL     6   4   2
0019    JMP      9 => 0046
0020 => ISNEN    9   0      ; 1
0021    JMP     11 => 0027
0022    UGET    11   1      ; insert
0023    MOV     12   5
0024    KSTR    13   4      ; "exp"
0025    CALL    11   1   3
0026    JMP     11 => 0031
0027 => UGET    11   1      ; insert
0028    MOV     12   5
0029    KSTR    13   5      ; "or"
0030    CALL    11   1   3
0031 => UGET    11   2      ; value_is_singular
0032    MOV     12  10
0033    CALL    11   2   2
0034    IST         11
0035    JMP     11 => 0039
0036    TDUP    11   6
0037    TSETB   10  11   2
0038    MOV     10  11
0039 => UGET    11   1      ; insert
0040    MOV     12   5
0041    TDUP    13   7
0042    TSETB   10  13   2
0043    UGET    14   3      ; exp_name
0044    TSETB   14  13   4
0045    CALL    11   1   3
0046 => ITERC    9   3   3
0047    ITERL    9 => 0020
0048    UGET     6   1      ; insert
0049    MOV      7   4
0050    MOV      8   5
0051    CALL     6   1   3
0052    JMP      5 => 0054
0053 => MOV      3   2
0054 => UGET     5   4      ; ret
0055    ISF          5
0056    JMP      6 => 0062
0057    UGET     5   5      ; transform_last_stm
0058    MOV      6   3
0059    UGET     7   4      ; ret
0060    CALL     5   2   3
0061    MOV      3   5
0062 => UGET     5   1      ; insert
0063    MOV      6   4
0064    MOV      7   3
0065    CALL     5   1   3
0066    RET1     4   2

-- BYTECODE -- statement.lua:720-778
0001    UGET     3   0      ; unpack
0002    MOV      4   1
0003    KSHORT   5   2
0004    CALL     3   3   3
0005    UGET     5   1      ; NameProxy
0006    KSTR     6   0      ; "exp"
0007    CALL     5   2   2
0008    KPRI     6   0
0009    FNEW     6   1      ; statement.lua:724
0010    KPRI     7   2
0011    TDUP     8   2
0012    KSHORT   9   1
0013    LEN     10   4
0014    KSHORT  11   1
0015    FORI     9 => 0037
0016 => TGETV   13   4  12
0017    MOV     14   6
0018    MOV     15  13
0019    CALL    14   2   2
0020    ISF          7
0021    JMP     15 => 0032
0022    KPRI     7   1
0023    UGET    15   2      ; insert
0024    MOV     16   8
0025    TGETB   17  14   2
0026    CALL    15   1   3
0027    UGET    15   2      ; insert
0028    MOV     16   8
0029    TGETB   17  14   3
0030    CALL    15   1   3
0031    JMP     15 => 0036
0032 => UGET    15   2      ; insert
0033    MOV     16   8
0034    MOV     17  14
0035    CALL    15   1   3
0036 => FORL     9 => 0016
0037 => UGET     9   5      ; build
0038    TGETS    9   9   3  ; "group"
0039    TNEW    10   3
0040    UGET    11   5      ; build
0041    TGETS   11  11   4  ; "assign_one"
0042    MOV     12   5
0043    MOV     13   3
0044    CALL    11   2   3
0045    TSETB   11  10   1
0046    TSETB    8  10   2
0047    UCLO     0 => 0048
0048 => CALLT    9   2

-- BYTECODE -- statement.lua:0-781
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.transform.transformer"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "Transformer"
0006    KNIL     1   3
0007    GGET     4   0      ; "require"
0008    KSTR     5   3      ; "moonscript.transform.names"
0009    CALL     4   2   2
0010    TGETS    5   4   4  ; "NameProxy"
0011    TGETS    6   4   5  ; "LocalName"
0012    TGETS    3   4   6  ; "is_name_proxy"
0013    MOV      2   6
0014    MOV      1   5
0015    KNIL     4   7
0016    GGET     8   0      ; "require"
0017    KSTR     9   7      ; "moonscript.transform.statements"
0018    CALL     8   2   2
0019    TGETS    9   8   8  ; "Run"
0020    TGETS   10   8   9  ; "transform_last_stm"
0021    TGETS   11   8  10  ; "implicitly_return"
0022    TGETS    7   8  11  ; "last_stm"
0023    MOV      6  11
0024    MOV      5  10
0025    MOV      4   9
0026    GGET     8   0      ; "require"
0027    KSTR     9  12      ; "moonscript.types"
0028    CALL     8   2   2
0029    KNIL     9  15
0030    TGETS   16   8  13  ; "build"
0031    TGETS   17   8  14  ; "ntype"
0032    TGETS   18   8  15  ; "is_value"
0033    TGETS   19   8  16  ; "smart_node"
0034    TGETS   20   8  17  ; "value_is_singular"
0035    TGETS   21   8  18  ; "is_slice"
0036    TGETS   15   8  19  ; "NOOP"
0037    MOV     14  21
0038    MOV     13  20
0039    MOV     12  19
0040    MOV     11  18
0041    MOV     10  17
0042    MOV      9  16
0043    KPRI    16   0
0044    GGET    17  20      ; "table"
0045    TGETS   16  17  21  ; "insert"
0046    GGET    17   0      ; "require"
0047    KSTR    18  22      ; "moonscript.transform.destructure"
0048    CALL    17   2   2
0049    KPRI    18   0
0050    GGET    19   0      ; "require"
0051    KSTR    20  23      ; "moonscript.transform.comprehension"
0052    CALL    19   2   2
0053    TGETS   18  19  24  ; "construct_comprehension"
0054    KPRI    19   0
0055    GGET    20   0      ; "require"
0056    KSTR    21  25      ; "moonscript.util"
0057    CALL    20   2   2
0058    TGETS   19  20  26  ; "unpack"
0059    KPRI    20   0
0060    FNEW    20  27      ; statement.lua:24
0061    KPRI    21   0
0062    FNEW    21  28      ; statement.lua:97
0063    KPRI    22   0
0064    FNEW    22  29      ; statement.lua:140
0065    MOV     23   0
0066    TDUP    24  31
0067    FNEW    25  30      ; statement.lua:164
0068    TSETS   25  24  32  ; "transform"
0069    FNEW    25  33      ; statement.lua:169
0070    TSETS   25  24  34  ; "root_stms"
0071    FNEW    25  35      ; statement.lua:172
0072    TSETS   25  24  36  ; "return"
0073    FNEW    25  37      ; statement.lua:197
0074    TSETS   25  24  38  ; "declare_glob"
0075    FNEW    25  39      ; statement.lua:234
0076    TSETS   25  24  40  ; "assign"
0077    FNEW    25  41      ; statement.lua:309
0078    TSETS   25  24  42  ; "continue"
0079    FNEW    25  43      ; statement.lua:321
0080    TSETS   25  24  44  ; "export"
0081    FNEW    25  45      ; statement.lua:350
0082    TSETS   25  24  46  ; "update"
0083    FNEW    25  47      ; statement.lua:369
0084    TSETS   25  24  48  ; "import"
0085    FNEW    25  49      ; statement.lua:410
0086    TSETS   25  24  50  ; "comprehension"
0087    FNEW    25  51      ; statement.lua:419
0088    TSETS   25  24  52  ; "do"
0089    FNEW    25  53      ; statement.lua:425
0090    TSETS   25  24  54  ; "decorated"
0091    FNEW    25  55      ; statement.lua:486
0092    TSETS   25  24  56  ; "unless"
0093    FNEW    25  57      ; statement.lua:517
0094    TSETS   25  24  58  ; "if"
0095    FNEW    25  59      ; statement.lua:559
0096    TSETS   25  24  60  ; "with"
0097    FNEW    25  61      ; statement.lua:607
0098    TSETS   25  24  62  ; "foreach"
0099    FNEW    25  63      ; statement.lua:712
0100    TSETS   25  24  64  ; "while"
0101    FNEW    25  65      ; statement.lua:716
0102    TSETS   25  24  66  ; "for"
0103    FNEW    25  67      ; statement.lua:720
0104    TSETS   25  24  68  ; "switch"
0105    GGET    25   0      ; "require"
0106    KSTR    26  69      ; "moonscript.transform.class"
0107    CALL    25   2   2
0108    TSETS   25  24  70  ; "class"
0109    UCLO     0 => 0110
0110 => CALLT   23   2

-----------------------
-- BYTECODE -- accumulator.lua:9-18
0001    LEN      1   0
0002    ISEQN    1   0      ; 1
0003    JMP      1 => 0006
0004    KPRI     1   1
0005    RET1     1   2
0006 => UGET     1   0      ; ntype
0007    MOV      2   0
0008    CALL     1   2   2
0009    ISNES    1   0      ; "group"
0010    JMP      1 => 0015
0011    UGET     1   1      ; is_singular
0012    TGETB    2   0   2
0013    CALLT    1   2
0014    JMP      1 => 0017
0015 => TGETB    1   0   1
0016    RET1     1   2
0017 => RET0     0   1

-- BYTECODE -- accumulator.lua:30-34
0001    TGETS    2   0   0  ; "body_idx"
0002    UGET     3   0      ; ntype
0003    MOV      4   1
0004    CALL     3   2   2
0005    TGETV    2   2   3
0006    MOV      4   0
0007    TGETS    3   0   1  ; "mutate_body"
0008    TGETV    5   1   2
0009    CALL     3   2   3
0010    TSETV    3   1   2
0011    MOV      4   0
0012    TGETS    3   0   2  ; "wrap"
0013    MOV      5   1
0014    CALLT    3   3

-- BYTECODE -- accumulator.lua:35-45
0001    ISNEP    2   0
0002    JMP      3 => 0004
0003    KSTR     2   0      ; "block_exp"
0004 => UGET     3   0      ; build
0005    TGETV    3   3   2
0006    TNEW     4   5
0007    UGET     5   0      ; build
0008    TGETS    5   5   1  ; "assign_one"
0009    TGETS    6   0   2  ; "accum_name"
0010    UGET     7   0      ; build
0011    TGETS    7   7   3  ; "table"
0012    CALL     7   0   1
0013    CALLM    5   2   1
0014    TSETB    5   4   1
0015    UGET     5   0      ; build
0016    TGETS    5   5   1  ; "assign_one"
0017    TGETS    6   0   4  ; "len_name"
0018    KSHORT   7   1
0019    CALL     5   2   3
0020    TSETB    5   4   2
0021    TSETB    1   4   3
0022    ISNES    2   0      ; "block_exp"
0023    JMP      5 => 0027
0024    TGETS    5   0   2  ; "accum_name"
0025    IST          5
0026    JMP      6 => 0028
0027 => UGET     5   1      ; NOOP
0028 => TSETB    5   4   4
0029    CALLT    3   2

-- BYTECODE -- accumulator.lua:53-67
0001    UGET     1   0      ; types
0002    TGETS    1   1   0  ; "is_value"
0003    MOV      2   0
0004    CALL     1   2   2
0005    ISF          1
0006    JMP      2 => 0014
0007    UGET     1   1      ; build
0008    TGETS    1   1   1  ; "assign_one"
0009    UGET     2   2      ; self
0010    TGETS    2   2   2  ; "value_name"
0011    MOV      3   0
0012    CALLT    1   3
0013    JMP      1 => 0026
0014 => UGET     1   1      ; build
0015    TGETS    1   1   3  ; "group"
0016    TNEW     2   3
0017    TDUP     3   4
0018    TNEW     4   3
0019    UGET     5   2      ; self
0020    TGETS    5   5   2  ; "value_name"
0021    TSETB    5   4   1
0022    TSETB    4   3   2
0023    TSETB    3   2   1
0024    TSETB    0   2   2
0025    CALLT    1   2
0026 => RET0     0   1

-- BYTECODE -- accumulator.lua:46-81
0001    UGET     2   0      ; is_singular
0002    MOV      3   1
0003    CALL     2   2   2
0004    KPRI     3   0
0005    ISF          2
0006    JMP      4 => 0016
0007    UGET     4   1      ; types
0008    TGETS    4   4   0  ; "is_value"
0009    MOV      5   2
0010    CALL     4   2   2
0011    ISF          4
0012    JMP      5 => 0016
0013    TNEW     1   0
0014    MOV      3   2
0015    JMP      4 => 0022
0016 => UGET     4   2      ; transform_last_stm
0017    MOV      5   1
0018    FNEW     6   1      ; accumulator.lua:53
0019    CALL     4   2   3
0020    MOV      1   4
0021    TGETS    3   0   2  ; "value_name"
0022 => TNEW     4   3
0023    UGET     5   3      ; build
0024    TGETS    5   5   3  ; "assign_one"
0025    UGET     6   4      ; NameProxy
0026    TGETS    6   6   4  ; "index"
0027    TGETS    7   0   5  ; "accum_name"
0028    TGETS    8   0   6  ; "len_name"
0029    CALL     6   2   3
0030    MOV      7   3
0031    CALL     5   2   3
0032    TSETB    5   4   1
0033    TDUP     5   7
0034    TGETS    6   0   6  ; "len_name"
0035    TSETB    6   5   2
0036    TSETB    5   4   2
0037    UGET     5   5      ; insert
0038    MOV      6   1
0039    UGET     7   3      ; build
0040    TGETS    7   7   8  ; "group"
0041    MOV      8   4
0042    CALL     7   0   2
0043    CALLM    5   1   1
0044    UCLO     0 => 0045
0045 => RET1     1   2

-- BYTECODE -- accumulator.lua:85-89
0001    UGET     2   0      ; NameProxy
0002    KSTR     3   1      ; "accum"
0003    CALL     2   2   2
0004    TSETS    2   0   0  ; "accum_name"
0005    UGET     2   0      ; NameProxy
0006    KSTR     3   3      ; "value"
0007    CALL     2   2   2
0008    TSETS    2   0   2  ; "value_name"
0009    UGET     2   0      ; NameProxy
0010    KSTR     3   5      ; "len"
0011    CALL     2   2   2
0012    TSETS    2   0   4  ; "len_name"
0013    RET0     0   1

-- BYTECODE -- accumulator.lua:94-98
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- accumulator.lua:104-106
0001    UGET     2   0      ; Accumulator
0002    CALL     2   2   1
0003    MOV      3   2
0004    TGETS    2   2   0  ; "convert"
0005    MOV      4   1
0006    CALLT    2   3

-- BYTECODE -- accumulator.lua:0-111
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "moonscript.types"
0003    CALL     0   2   2
0004    KNIL     1   3
0005    TGETS    4   0   2  ; "build"
0006    TGETS    5   0   3  ; "ntype"
0007    TGETS    3   0   4  ; "NOOP"
0008    MOV      2   5
0009    MOV      1   4
0010    KPRI     4   0
0011    GGET     5   0      ; "require"
0012    KSTR     6   5      ; "moonscript.transform.names"
0013    CALL     5   2   2
0014    TGETS    4   5   6  ; "NameProxy"
0015    KPRI     5   0
0016    GGET     6   7      ; "table"
0017    TGETS    5   6   8  ; "insert"
0018    KPRI     6   0
0019    FNEW     6   9      ; accumulator.lua:9
0020    KPRI     7   0
0021    GGET     8   0      ; "require"
0022    KSTR     9  10      ; "moonscript.transform.statements"
0023    CALL     8   2   2
0024    TGETS    7   8  11  ; "transform_last_stm"
0025    KNIL     8   9
0026    TDUP    10  13
0027    TDUP    11  12
0028    TSETS   11  10  14  ; "body_idx"
0029    FNEW    11  15      ; accumulator.lua:30
0030    TSETS   11  10  16  ; "convert"
0031    FNEW    11  17      ; accumulator.lua:35
0032    TSETS   11  10  18  ; "wrap"
0033    FNEW    11  19      ; accumulator.lua:46
0034    TSETS   11  10  20  ; "mutate_body"
0035    TSETS   10  10  21  ; "__index"
0036    GGET    11  22      ; "setmetatable"
0037    TDUP    12  24
0038    FNEW    13  23      ; accumulator.lua:85
0039    TSETS   13  12  25  ; "__init"
0040    TSETS   10  12  26  ; "__base"
0041    TDUP    13  27
0042    TSETS   10  13  21  ; "__index"
0043    FNEW    14  28      ; accumulator.lua:94
0044    TSETS   14  13  29  ; "__call"
0045    CALL    11   2   3
0046    MOV      9  11
0047    TSETS    9  10  30  ; "__class"
0048    MOV      8   9
0049    UCLO     9 => 0050
0050 => KPRI     9   0
0051    FNEW     9  31      ; accumulator.lua:104
0052    TDUP    10  32
0053    TSETS    8  10  33  ; "Accumulator"
0054    TSETS    9  10  34  ; "default_accumulator"
0055    UCLO     0 => 0056
0056 => RET1    10   2

-----------------------
-- BYTECODE -- statements.lua:10-12
0001    TGETS    2   0   0  ; "fn"
0002    MOV      3   1
0003    CALLT    2   2

-- BYTECODE -- statements.lua:16-19
0001    TSETS    1   0   0  ; "fn"
0002    KSTR     2   1      ; "run"
0003    TSETB    2   0   1
0004    RET0     0   1

-- BYTECODE -- statements.lua:24-28
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    UGET     3   0      ; _base_0
0004    CALL     1   2   3
0005    TGETS    2   0   1  ; "__init"
0006    MOV      3   1
0007    VARG     4   0   1
0008    CALLM    2   1   1
0009    RET1     1   2

-- BYTECODE -- statements.lua:34-47
0001    KSHORT   1   0
0002    LEN      2   0
0003    KSHORT   3   1
0004    KSHORT   4  -1
0005    FORI     2 => 0026
0006 => TGETV    6   0   5
0007    ISF          6
0008    JMP      7 => 0025
0009    UGET     7   0      ; mtype
0010    MOV      8   6
0011    CALL     7   2   2
0012    UGET     8   1      ; Run
0013    ISEQV    7   8
0014    JMP      7 => 0025
0015    UGET     7   2      ; ntype
0016    MOV      8   6
0017    CALL     7   2   2
0018    ISNES    7   0      ; "group"
0019    JMP      7 => 0023
0020    UGET     7   3      ; last_stm
0021    TGETB    8   6   2
0022    CALLT    7   2
0023 => MOV      1   5
0024    JMP      2 => 0026
0025 => FORL     2 => 0006
0026 => TGETV    2   0   1
0027    MOV      3   1
0028    MOV      4   0
0029    RET      2   4

-- BYTECODE -- statements.lua:54-70
0001    TNEW     0   0
0002    KSHORT   1   1
0003    GGET     2   0      ; "ipairs"
0004    UGET     3   0      ; stms
0005    CALL     2   4   2
0006    JMP      5 => 0018
0007 => UGET     7   1      ; last_idx
0008    ISNEV    5   7
0009    JMP      7 => 0016
0010    TDUP     7   1
0011    TSETB    6   7   2
0012    UGET     8   2      ; fn
0013    TSETB    8   7   3
0014    TSETV    7   0   1
0015    JMP      7 => 0017
0016 => TSETV    6   0   1
0017 => ADDVN    1   1   0  ; 1
0018 => ITERC    5   3   3
0019    ITERL    5 => 0007
0020    RET1     0   2

-- BYTECODE -- statements.lua:49-71
0001    UGET     2   0      ; last_stm
0002    MOV      3   0
0003    CALL     2   4   2
0004    ISEQV    4   0
0005    JMP      5 => 0009
0006    GGET     5   0      ; "error"
0007    KSTR     6   1      ; "cannot transform last node in group"
0008    CALL     5   1   2
0009 => FNEW     5   2      ; statements.lua:54
0010    UCLO     0 => 0011
0011 => CALLT    5   1

-- BYTECODE -- statements.lua:73-76
0001    LEN      1   0
0002    TGETV    1   0   1
0003    ISFC     2   1
0004    JMP      2 => 0013
0005    UGET     2   0      ; ntype
0006    MOV      3   1
0007    CALL     2   2   2
0008    ISEQS    2   0      ; "colon"
0009    JMP      2 => 0012
0010    KPRI     2   1
0011    JMP      3 => 0013
0012 => KPRI     2   2
0013 => RET1     2   2

-- BYTECODE -- statements.lua:81-106
0001    UGET     1   0      ; ntype
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISNES    1   0      ; "decorated"
0005    JMP      2 => 0016
0006    UGET     2   1      ; scope
0007    TGETS    2   2   1  ; "transform"
0008    TGETS    2   2   2  ; "statement"
0009    MOV      3   0
0010    CALL     2   2   2
0011    MOV      0   2
0012    UGET     2   0      ; ntype
0013    MOV      3   0
0014    CALL     2   2   2
0015    MOV      1   2
0016 => UGET     2   2      ; types
0017    TGETS    2   2   3  ; "cascading"
0018    TGETV    2   2   1
0019    ISF          2
0020    JMP      3 => 0029
0021    USETP    3   1      ; is_top
0022    UGET     2   1      ; scope
0023    TGETS    2   2   1  ; "transform"
0024    TGETS    2   2   2  ; "statement"
0025    MOV      3   0
0026    UGET     4   4      ; fn
0027    CALLT    2   3
0028    JMP      2 => 0064
0029 => UGET     2   2      ; types
0030    TGETS    2   2   4  ; "manual_return"
0031    TGETV    2   2   1
0032    IST          2
0033    JMP      3 => 0039
0034    UGET     2   5      ; is_value
0035    MOV      3   0
0036    CALL     2   2   2
0037    IST          2
0038    JMP      2 => 0052
0039 => UGET     2   3      ; is_top
0040    ISF          2
0041    JMP      3 => 0050
0042    ISNES    1   5      ; "return"
0043    JMP      2 => 0050
0044    TGETB    2   0   2
0045    ISNES    2   6      ; ""
0046    JMP      2 => 0050
0047    UGET     2   6      ; NOOP
0048    RET1     2   2
0049    JMP      2 => 0064
0050 => RET1     0   2
0051    JMP      2 => 0064
0052 => ISNES    1   7      ; "comprehension"
0053    JMP      2 => 0061
0054    UGET     2   7      ; comprehension_has_value
0055    MOV      3   0
0056    CALL     2   2   2
0057    IST          2
0058    JMP      2 => 0061
0059    RET1     0   2
0060    JMP      2 => 0064
0061 => TDUP     2   8
0062    TSETB    0   2   2
0063    RET1     2   2
0064 => RET0     0   1

-- BYTECODE -- statements.lua:78-108
0001    KPRI     1   2
0002    KPRI     2   0
0003    FNEW     2   0      ; statements.lua:81
0004    UCLO     0 => 0005
0005 => RET1     2   2

-- BYTECODE -- statements.lua:0-116
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "moonscript.types"
0003    CALL     0   2   2
0004    KNIL     1   4
0005    TGETS    5   0   2  ; "ntype"
0006    TGETS    6   0   3  ; "mtype"
0007    TGETS    7   0   4  ; "is_value"
0008    TGETS    4   0   5  ; "NOOP"
0009    MOV      3   7
0010    MOV      2   6
0011    MOV      1   5
0012    KPRI     5   0
0013    GGET     6   0      ; "require"
0014    KSTR     7   6      ; "moonscript.transform.comprehension"
0015    CALL     6   2   2
0016    TGETS    5   6   7  ; "comprehension_has_value"
0017    KNIL     6   7
0018    TDUP     8   9
0019    FNEW     9   8      ; statements.lua:10
0020    TSETS    9   8  10  ; "call"
0021    TSETS    8   8  11  ; "__index"
0022    GGET     9  12      ; "setmetatable"
0023    TDUP    10  14
0024    FNEW    11  13      ; statements.lua:16
0025    TSETS   11  10  15  ; "__init"
0026    TSETS    8  10  16  ; "__base"
0027    TDUP    11  17
0028    TSETS    8  11  11  ; "__index"
0029    FNEW    12  18      ; statements.lua:24
0030    TSETS   12  11  19  ; "__call"
0031    CALL     9   2   3
0032    MOV      7   9
0033    TSETS    7   8  20  ; "__class"
0034    MOV      6   7
0035    UCLO     7 => 0036
0036 => KPRI     7   0
0037    FNEW     7  21      ; statements.lua:34
0038    KPRI     8   0
0039    FNEW     8  22      ; statements.lua:49
0040    KPRI     9   0
0041    FNEW     9  23      ; statements.lua:73
0042    KPRI    10   0
0043    FNEW    10  24      ; statements.lua:78
0044    TDUP    11  25
0045    TSETS    6  11  26  ; "Run"
0046    TSETS    7  11  27  ; "last_stm"
0047    TSETS    8  11  28  ; "transform_last_stm"
0048    TSETS    9  11  29  ; "chain_is_stub"
0049    TSETS   10  11  30  ; "implicitly_return"
0050    UCLO     0 => 0051
0051 => RET1    11   2

-----------------------
-- BYTECODE -- parse.lua:24-29
0001    TDUP     1   0
0002    TSETB    0   1   2
0003    RET1     1   2

-- BYTECODE -- parse.lua:42-45
0001    UGET     3   0      ; state
0002    TSETS    1   3   0  ; "last_pos"
0003    UGET     3   1      ; _indent
0004    MOV      4   3
0005    TGETS    3   3   1  ; "top"
0006    CALL     3   2   2
0007    ISEQV    3   2
0008    JMP      3 => 0011
0009    KPRI     3   1
0010    JMP      4 => 0012
0011 => KPRI     3   2
0012 => RET1     3   2

-- BYTECODE -- parse.lua:47-53
0001    UGET     3   0      ; _indent
0002    MOV      4   3
0003    TGETS    3   3   0  ; "top"
0004    CALL     3   2   2
0005    ISEQN    3   0      ; -1
0006    JMP      4 => 0016
0007    ISGE     3   2
0008    JMP      4 => 0016
0009    UGET     4   0      ; _indent
0010    MOV      5   4
0011    TGETS    4   4   1  ; "push"
0012    MOV      6   2
0013    CALL     4   1   3
0014    KPRI     4   2
0015    RET1     4   2
0016 => RET0     0   1

-- BYTECODE -- parse.lua:55-58
0001    UGET     3   0      ; _indent
0002    MOV      4   3
0003    TGETS    3   3   0  ; "push"
0004    MOV      5   2
0005    CALL     3   1   3
0006    KPRI     3   2
0007    RET1     3   2

-- BYTECODE -- parse.lua:60-63
0001    GGET     0   0      ; "assert"
0002    UGET     1   0      ; _indent
0003    MOV      2   1
0004    TGETS    1   1   1  ; "pop"
0005    CALL     1   2   2
0006    KSTR     2   2      ; "unexpected outdent"
0007    CALL     0   1   3
0008    KPRI     0   2
0009    RET1     0   2

-- BYTECODE -- parse.lua:65-71
0001    UGET     3   0      ; _do_stack
0002    MOV      4   3
0003    TGETS    3   3   0  ; "top"
0004    CALL     3   2   2
0005    ISEQP    3   0
0006    JMP      4 => 0009
0007    ISF          3
0008    JMP      4 => 0012
0009 => KPRI     4   2
0010    MOV      5   2
0011    RET      4   3
0012 => KPRI     4   1
0013    RET1     4   2

-- BYTECODE -- parse.lua:73-76
0001    UGET     0   0      ; _do_stack
0002    MOV      1   0
0003    TGETS    0   0   0  ; "push"
0004    KPRI     2   1
0005    CALL     0   1   3
0006    KPRI     0   2
0007    RET1     0   2

-- BYTECODE -- parse.lua:78-81
0001    GGET     0   0      ; "assert"
0002    UGET     1   0      ; _do_stack
0003    MOV      2   1
0004    TGETS    1   1   1  ; "pop"
0005    CALL     1   2   2
0006    ISNEP    1   0
0007    JMP      1 => 0010
0008    KPRI     1   1
0009    JMP      2 => 0011
0010 => KPRI     1   2
0011 => KSTR     2   2      ; "unexpected do pop"
0012    CALL     0   1   3
0013    KPRI     0   2
0014    RET1     0   2

-- BYTECODE -- parse.lua:86-89
0001    UGET     1   0      ; keywords
0002    KPRI     2   2
0003    TSETV    2   1   0
0004    UGET     1   1      ; Space
0005    MULVV    1   1   0
0006    UGET     2   2      ; AlphaNum
0007    UNM      2   2
0008    MULVV    1   1   2
0009    RET1     1   2

-- BYTECODE -- parse.lua:91-98
0001    UGET     1   0      ; Space
0002    UGET     2   1      ; C
0003    MOV      3   0
0004    CALL     2   2   2
0005    MULVV    1   1   2
0006    MOV      3   0
0007    TGETS    2   0   0  ; "match"
0008    KSTR     4   1      ; "^%w*$"
0009    CALL     2   2   3
0010    ISF          2
0011    JMP      3 => 0018
0012    UGET     2   2      ; keywords
0013    KPRI     3   2
0014    TSETV    3   2   0
0015    UGET     2   3      ; AlphaNum
0016    UNM      2   2
0017    MULVV    1   1   2
0018 => RET1     1   2

-- BYTECODE -- parse.lua:99-104
0001    UGET     3   0      ; keywords
0002    TGETV    3   3   2
0003    ISF          3
0004    JMP      4 => 0007
0005    KPRI     3   1
0006    RET1     3   2
0007 => KPRI     3   2
0008    RET1     3   2

-- BYTECODE -- parse.lua:35-204
0001    UGET     1   0      ; Stack
0002    KSHORT   2   0
0003    CALL     1   2   2
0004    UGET     2   0      ; Stack
0005    KSHORT   3   0
0006    CALL     2   2   2
0007    TDUP     3   0
0008    KPRI     4   0
0009    FNEW     4   1      ; parse.lua:42
0010    KPRI     5   0
0011    FNEW     5   2      ; parse.lua:47
0012    KPRI     6   0
0013    FNEW     6   3      ; parse.lua:55
0014    KPRI     7   0
0015    FNEW     7   4      ; parse.lua:60
0016    KPRI     8   0
0017    FNEW     8   5      ; parse.lua:65
0018    KPRI     9   0
0019    FNEW     9   6      ; parse.lua:73
0020    KPRI    10   0
0021    FNEW    10   7      ; parse.lua:78
0022    UGET    11   1      ; Cmt
0023    KSTR    12   8      ; ""
0024    MOV     13   9
0025    CALL    11   2   3
0026    UGET    12   1      ; Cmt
0027    KSTR    13   8      ; ""
0028    MOV     14  10
0029    CALL    12   2   3
0030    TNEW    13   0
0031    KPRI    14   0
0032    FNEW    14   9      ; parse.lua:86
0033    KPRI    15   0
0034    FNEW    15  10      ; parse.lua:91
0035    UGET    16   1      ; Cmt
0036    UGET    17   5      ; SpaceName
0037    FNEW    18  11      ; parse.lua:99
0038    CALL    16   2   3
0039    UGET    17   6      ; trim
0040    DIVVV   16  16  17
0041    UGET    17   2      ; Space
0042    KSTR    18  12      ; "@"
0043    MULVV   17  17  18
0044    KSTR    18  12      ; "@"
0045    UGET    19   7      ; _Name
0046    UGET    20   8      ; mark
0047    KSTR    21  13      ; "self_class"
0048    CALL    20   2   2
0049    DIVVV   19  19  20
0050    UGET    20   9      ; Cc
0051    KSTR    21  14      ; "self.__class"
0052    CALL    20   2   2
0053    ADDVV   19  19  20
0054    MULVV   18  18  19
0055    UGET    19   7      ; _Name
0056    UGET    20   8      ; mark
0057    KSTR    21  15      ; "self"
0058    CALL    20   2   2
0059    DIVVV   19  19  20
0060    ADDVV   18  18  19
0061    UGET    19   9      ; Cc
0062    KSTR    20  15      ; "self"
0063    CALL    19   2   2
0064    ADDVV   18  18  19
0065    MULVV   17  17  18
0066    UGET    18   2      ; Space
0067    UGET    19   7      ; _Name
0068    MULVV   18  18  19
0069    UGET    19   8      ; mark
0070    KSTR    20  16      ; "key_literal"
0071    CALL    19   2   2
0072    DIVVV   18  18  19
0073    ADDVV   18  17  18
0074    UGET    19   2      ; Space
0075    UGET    20  10      ; P
0076    KSTR    21  17      ; "..."
0077    CALL    20   2   2
0078    MULVV   19  19  20
0079    UGET    20   6      ; trim
0080    DIVVV   19  19  20
0081    UGET    20  10      ; P
0082    TDUP    21  20
0083    ISTC    22   0
0084    JMP     22 => 0086
0085    GGET    22  18      ; "File"
0086 => TSETB   22  21   1
0087    UGET    22  11      ; Shebang
0088    KSHORT  23  -1
0089    POW     22  22  23
0090    GGET    23  19      ; "Block"
0091    UGET    24  12      ; Ct
0092    KSTR    25   8      ; ""
0093    CALL    24   2   2
0094    ADDVV   23  23  24
0095    MULVV   22  22  23
0096    TSETS   22  21  18  ; "File"
0097    UGET    22  12      ; Ct
0098    GGET    23  21      ; "Line"
0099    UGET    24  13      ; Break
0100    KSHORT  25   1
0101    POW     24  24  25
0102    GGET    25  21      ; "Line"
0103    MULVV   24  24  25
0104    KSHORT  25   0
0105    POW     24  24  25
0106    MULVV   23  23  24
0107    CALL    22   2   2
0108    TSETS   22  21  19  ; "Block"
0109    UGET    22   1      ; Cmt
0110    UGET    23  14      ; Indent
0111    MOV     24   4
0112    CALL    22   2   3
0113    TSETS   22  21  22  ; "CheckIndent"
0114    GGET    22  22      ; "CheckIndent"
0115    GGET    23  23      ; "Statement"
0116    MULVV   22  22  23
0117    UGET    23   2      ; Space
0118    UGET    24  15      ; L
0119    UGET    25  16      ; Stop
0120    CALL    24   2   2
0121    MULVV   23  23  24
0122    ADDVV   22  22  23
0123    TSETS   22  21  21  ; "Line"
0124    UGET    22  17      ; pos
0125    GGET    23  24      ; "Import"
0126    GGET    24  25      ; "While"
0127    ADDVV   23  23  24
0128    GGET    24  26      ; "With"
0129    ADDVV   23  23  24
0130    GGET    24  27      ; "For"
0131    ADDVV   23  23  24
0132    GGET    24  28      ; "ForEach"
0133    ADDVV   23  23  24
0134    GGET    24  29      ; "Switch"
0135    ADDVV   23  23  24
0136    GGET    24  30      ; "Return"
0137    ADDVV   23  23  24
0138    GGET    24  31      ; "Local"
0139    ADDVV   23  23  24
0140    GGET    24  32      ; "Export"
0141    ADDVV   23  23  24
0142    GGET    24  33      ; "BreakLoop"
0143    ADDVV   23  23  24
0144    UGET    24  12      ; Ct
0145    GGET    25  34      ; "ExpList"
0146    CALL    24   2   2
0147    GGET    25  35      ; "Update"
0148    GGET    26  36      ; "Assign"
0149    ADDVV   25  25  26
0150    KSHORT  26  -1
0151    POW     25  25  26
0152    MULVV   24  24  25
0153    UGET    25  18      ; format_assign
0154    DIVVV   24  24  25
0155    ADDVV   23  23  24
0156    CALL    22   2   2
0157    UGET    23   2      ; Space
0158    MULVV   22  22  23
0159    MOV     23  14
0160    KSTR    24  37      ; "if"
0161    CALL    23   2   2
0162    GGET    24  38      ; "Exp"
0163    MULVV   23  23  24
0164    MOV     24  14
0165    KSTR    25  39      ; "else"
0166    CALL    24   2   2
0167    GGET    25  38      ; "Exp"
0168    MULVV   24  24  25
0169    KSHORT  25  -1
0170    POW     24  24  25
0171    MULVV   23  23  24
0172    UGET    24   2      ; Space
0173    MULVV   23  23  24
0174    UGET    24   8      ; mark
0175    KSTR    25  37      ; "if"
0176    CALL    24   2   2
0177    DIVVV   23  23  24
0178    MOV     24  14
0179    KSTR    25  40      ; "unless"
0180    CALL    24   2   2
0181    GGET    25  38      ; "Exp"
0182    MULVV   24  24  25
0183    UGET    25   8      ; mark
0184    KSTR    26  40      ; "unless"
0185    CALL    25   2   2
0186    DIVVV   24  24  25
0187    ADDVV   23  23  24
0188    GGET    24  41      ; "CompInner"
0189    UGET    25   8      ; mark
0190    KSTR    26  42      ; "comprehension"
0191    CALL    25   2   2
0192    DIVVV   24  24  25
0193    ADDVV   23  23  24
0194    UGET    24   2      ; Space
0195    MULVV   23  23  24
0196    KSHORT  24  -1
0197    POW     23  23  24
0198    MULVV   22  22  23
0199    UGET    23  19      ; wrap_decorator
0200    DIVVV   22  22  23
0201    TSETS   22  21  23  ; "Statement"
0202    UGET    22   2      ; Space
0203    KSHORT  23  -1
0204    POW     22  22  23
0205    UGET    23  13      ; Break
0206    MULVV   22  22  23
0207    UGET    23  20      ; EmptyLine
0208    KSHORT  24   0
0209    POW     23  23  24
0210    MULVV   22  22  23
0211    GGET    23  43      ; "InBlock"
0212    MULVV   22  22  23
0213    UGET    23  12      ; Ct
0214    GGET    24  23      ; "Statement"
0215    CALL    23   2   2
0216    ADDVV   22  22  23
0217    TSETS   22  21  44  ; "Body"
0218    UGET    22  15      ; L
0219    UGET    23   1      ; Cmt
0220    UGET    24  14      ; Indent
0221    MOV     25   5
0222    CALL    23   0   3
0223    CALLM   22   2   0
0224    TSETS   22  21  45  ; "Advance"
0225    UGET    22   1      ; Cmt
0226    UGET    23  14      ; Indent
0227    MOV     24   6
0228    CALL    22   2   3
0229    TSETS   22  21  46  ; "PushIndent"
0230    UGET    22   1      ; Cmt
0231    UGET    23   9      ; Cc
0232    KSHORT  24  -1
0233    CALL    23   2   2
0234    MOV     24   6
0235    CALL    22   2   3
0236    TSETS   22  21  47  ; "PreventIndent"
0237    UGET    22   1      ; Cmt
0238    KSTR    23   8      ; ""
0239    MOV     24   7
0240    CALL    22   2   3
0241    TSETS   22  21  48  ; "PopIndent"
0242    GGET    22  45      ; "Advance"
0243    GGET    23  19      ; "Block"
0244    MULVV   22  22  23
0245    GGET    23  48      ; "PopIndent"
0246    MULVV   22  22  23
0247    TSETS   22  21  43  ; "InBlock"
0248    MOV     22  14
0249    KSTR    23  49      ; "local"
0250    CALL    22   2   2
0251    MOV     23  15
0252    KSTR    24  50      ; "*"
0253    CALL    23   2   2
0254    MOV     24  15
0255    KSTR    25  51      ; "^"
0256    CALL    24   2   2
0257    ADDVV   23  23  24
0258    UGET    24   8      ; mark
0259    KSTR    25  52      ; "declare_glob"
0260    CALL    24   2   2
0261    DIVVV   23  23  24
0262    UGET    24  12      ; Ct
0263    GGET    25  53      ; "NameList"
0264    CALL    24   2   2
0265    UGET    25   8      ; mark
0266    KSTR    26  54      ; "declare_with_shadows"
0267    CALL    25   2   2
0268    DIVVV   24  24  25
0269    ADDVV   23  23  24
0270    MULVV   22  22  23
0271    TSETS   22  21  31  ; "Local"
0272    MOV     22  14
0273    KSTR    23  55      ; "import"
0274    CALL    22   2   2
0275    UGET    23  12      ; Ct
0276    GGET    24  56      ; "ImportNameList"
0277    CALL    23   2   2
0278    MULVV   22  22  23
0279    UGET    23  21      ; SpaceBreak
0280    KSHORT  24   0
0281    POW     23  23  24
0282    MULVV   22  22  23
0283    MOV     23  14
0284    KSTR    24  57      ; "from"
0285    CALL    23   2   2
0286    MULVV   22  22  23
0287    GGET    23  38      ; "Exp"
0288    MULVV   22  22  23
0289    UGET    23   8      ; mark
0290    KSTR    24  55      ; "import"
0291    CALL    23   2   2
0292    DIVVV   22  22  23
0293    TSETS   22  21  24  ; "Import"
0294    UGET    22  22      ; sym
0295    KSTR    23  58      ; "\"
0296    CALL    22   2   2
0297    UGET    23  12      ; Ct
0298    UGET    24   9      ; Cc
0299    KSTR    25  59      ; "colon"
0300    CALL    24   2   2
0301    MULVV   24  24  16
0302    CALL    23   2   2
0303    MULVV   22  22  23
0304    ADDVV   22  22  16
0305    TSETS   22  21  60  ; "ImportName"
0306    UGET    22  21      ; SpaceBreak
0307    KSHORT  23   0
0308    POW     22  22  23
0309    GGET    23  60      ; "ImportName"
0310    MULVV   22  22  23
0311    UGET    23  21      ; SpaceBreak
0312    KSHORT  24   1
0313    POW     23  23  24
0314    UGET    24  22      ; sym
0315    KSTR    25  61      ; ","
0316    CALL    24   2   2
0317    UGET    25  21      ; SpaceBreak
0318    KSHORT  26   0
0319    POW     25  25  26
0320    MULVV   24  24  25
0321    ADDVV   23  23  24
0322    GGET    24  60      ; "ImportName"
0323    MULVV   23  23  24
0324    KSHORT  24   0
0325    POW     23  23  24
0326    MULVV   22  22  23
0327    TSETS   22  21  56  ; "ImportNameList"
0328    UGET    22  12      ; Ct
0329    MOV     23  14
0330    KSTR    24  62      ; "break"
0331    CALL    23   2   2
0332    UGET    24   6      ; trim
0333    DIVVV   23  23  24
0334    CALL    22   2   2
0335    UGET    23  12      ; Ct
0336    MOV     24  14
0337    KSTR    25  63      ; "continue"
0338    CALL    24   2   2
0339    UGET    25   6      ; trim
0340    DIVVV   24  24  25
0341    CALL    23   2   2
0342    ADDVV   22  22  23
0343    TSETS   22  21  33  ; "BreakLoop"
0344    MOV     22  14
0345    KSTR    23  64      ; "return"
0346    CALL    22   2   2
0347    GGET    23  65      ; "ExpListLow"
0348    UGET    24   8      ; mark
0349    KSTR    25  66      ; "explist"
0350    CALL    24   2   2
0351    DIVVV   23  23  24
0352    UGET    24   4      ; C
0353    KSTR    25   8      ; ""
0354    CALL    24   2   2
0355    ADDVV   23  23  24
0356    MULVV   22  22  23
0357    UGET    23   8      ; mark
0358    KSTR    24  64      ; "return"
0359    CALL    23   2   2
0360    DIVVV   22  22  23
0361    TSETS   22  21  30  ; "Return"
0362    UGET    22  12      ; Ct
0363    GGET    23  34      ; "ExpList"
0364    CALL    22   2   2
0365    GGET    23  36      ; "Assign"
0366    KSHORT  24  -1
0367    POW     23  23  24
0368    MULVV   22  22  23
0369    UGET    23  18      ; format_assign
0370    DIVVV   22  22  23
0371    TSETS   22  21  67  ; "WithExp"
0372    MOV     22  14
0373    KSTR    23  68      ; "with"
0374    CALL    22   2   2
0375    MULVV   22  22  11
0376    UGET    23  23      ; ensure
0377    GGET    24  67      ; "WithExp"
0378    MOV     25  12
0379    CALL    23   2   3
0380    MULVV   22  22  23
0381    MOV     23  14
0382    KSTR    24  69      ; "do"
0383    CALL    23   2   2
0384    KSHORT  24  -1
0385    POW     23  23  24
0386    MULVV   22  22  23
0387    GGET    23  44      ; "Body"
0388    MULVV   22  22  23
0389    UGET    23   8      ; mark
0390    KSTR    24  68      ; "with"
0391    CALL    23   2   2
0392    DIVVV   22  22  23
0393    TSETS   22  21  26  ; "With"
0394    MOV     22  14
0395    KSTR    23  70      ; "switch"
0396    CALL    22   2   2
0397    MULVV   22  22  11
0398    UGET    23  23      ; ensure
0399    GGET    24  38      ; "Exp"
0400    MOV     25  12
0401    CALL    23   2   3
0402    MULVV   22  22  23
0403    MOV     23  14
0404    KSTR    24  69      ; "do"
0405    CALL    23   2   2
0406    KSHORT  24  -1
0407    POW     23  23  24
0408    MULVV   22  22  23
0409    UGET    23   2      ; Space
0410    KSHORT  24  -1
0411    POW     23  23  24
0412    MULVV   22  22  23
0413    UGET    23  13      ; Break
0414    MULVV   22  22  23
0415    GGET    23  71      ; "SwitchBlock"
0416    MULVV   22  22  23
0417    UGET    23   8      ; mark
0418    KSTR    24  70      ; "switch"
0419    CALL    23   2   2
0420    DIVVV   22  22  23
0421    TSETS   22  21  29  ; "Switch"
0422    UGET    22  20      ; EmptyLine
0423    KSHORT  23   0
0424    POW     22  22  23
0425    GGET    23  45      ; "Advance"
0426    MULVV   22  22  23
0427    UGET    23  12      ; Ct
0428    GGET    24  72      ; "SwitchCase"
0429    UGET    25  13      ; Break
0430    KSHORT  26   1
0431    POW     25  25  26
0432    GGET    26  72      ; "SwitchCase"
0433    MULVV   25  25  26
0434    KSHORT  26   0
0435    POW     25  25  26
0436    MULVV   24  24  25
0437    UGET    25  13      ; Break
0438    KSHORT  26   1
0439    POW     25  25  26
0440    GGET    26  73      ; "SwitchElse"
0441    MULVV   25  25  26
0442    KSHORT  26  -1
0443    POW     25  25  26
0444    MULVV   24  24  25
0445    CALL    23   2   2
0446    MULVV   22  22  23
0447    GGET    23  48      ; "PopIndent"
0448    MULVV   22  22  23
0449    TSETS   22  21  71  ; "SwitchBlock"
0450    MOV     22  14
0451    KSTR    23  74      ; "when"
0452    CALL    22   2   2
0453    UGET    23  12      ; Ct
0454    GGET    24  34      ; "ExpList"
0455    CALL    23   2   2
0456    MULVV   22  22  23
0457    MOV     23  14
0458    KSTR    24  75      ; "then"
0459    CALL    23   2   2
0460    KSHORT  24  -1
0461    POW     23  23  24
0462    MULVV   22  22  23
0463    GGET    23  44      ; "Body"
0464    MULVV   22  22  23
0465    UGET    23   8      ; mark
0466    KSTR    24  76      ; "case"
0467    CALL    23   2   2
0468    DIVVV   22  22  23
0469    TSETS   22  21  72  ; "SwitchCase"
0470    MOV     22  14
0471    KSTR    23  39      ; "else"
0472    CALL    22   2   2
0473    GGET    23  44      ; "Body"
0474    MULVV   22  22  23
0475    UGET    23   8      ; mark
0476    KSTR    24  39      ; "else"
0477    CALL    23   2   2
0478    DIVVV   22  22  23
0479    TSETS   22  21  73  ; "SwitchElse"
0480    GGET    22  38      ; "Exp"
0481    GGET    23  36      ; "Assign"
0482    KSHORT  24  -1
0483    POW     23  23  24
0484    MULVV   22  22  23
0485    UGET    23  24      ; format_single_assign
0486    DIVVV   22  22  23
0487    TSETS   22  21  77  ; "IfCond"
0488    UGET    22  13      ; Break
0489    UGET    23  20      ; EmptyLine
0490    KSHORT  24   0
0491    POW     23  23  24
0492    MULVV   22  22  23
0493    GGET    23  22      ; "CheckIndent"
0494    MULVV   22  22  23
0495    KSHORT  23  -1
0496    POW     22  22  23
0497    MOV     23  14
0498    KSTR    24  39      ; "else"
0499    CALL    23   2   2
0500    MULVV   22  22  23
0501    GGET    23  44      ; "Body"
0502    MULVV   22  22  23
0503    UGET    23   8      ; mark
0504    KSTR    24  39      ; "else"
0505    CALL    23   2   2
0506    DIVVV   22  22  23
0507    TSETS   22  21  78  ; "IfElse"
0508    UGET    22  13      ; Break
0509    UGET    23  20      ; EmptyLine
0510    KSHORT  24   0
0511    POW     23  23  24
0512    MULVV   22  22  23
0513    GGET    23  22      ; "CheckIndent"
0514    MULVV   22  22  23
0515    KSHORT  23  -1
0516    POW     22  22  23
0517    MOV     23  14
0518    KSTR    24  79      ; "elseif"
0519    CALL    23   2   2
0520    MULVV   22  22  23
0521    UGET    23  17      ; pos
0522    GGET    24  77      ; "IfCond"
0523    CALL    23   2   2
0524    MULVV   22  22  23
0525    MOV     23  14
0526    KSTR    24  75      ; "then"
0527    CALL    23   2   2
0528    KSHORT  24  -1
0529    POW     23  23  24
0530    MULVV   22  22  23
0531    GGET    23  44      ; "Body"
0532    MULVV   22  22  23
0533    UGET    23   8      ; mark
0534    KSTR    24  79      ; "elseif"
0535    CALL    23   2   2
0536    DIVVV   22  22  23
0537    TSETS   22  21  80  ; "IfElseIf"
0538    MOV     22  14
0539    KSTR    23  37      ; "if"
0540    CALL    22   2   2
0541    GGET    23  77      ; "IfCond"
0542    MULVV   22  22  23
0543    MOV     23  14
0544    KSTR    24  75      ; "then"
0545    CALL    23   2   2
0546    KSHORT  24  -1
0547    POW     23  23  24
0548    MULVV   22  22  23
0549    GGET    23  44      ; "Body"
0550    MULVV   22  22  23
0551    GGET    23  80      ; "IfElseIf"
0552    KSHORT  24   0
0553    POW     23  23  24
0554    MULVV   22  22  23
0555    GGET    23  78      ; "IfElse"
0556    KSHORT  24  -1
0557    POW     23  23  24
0558    MULVV   22  22  23
0559    UGET    23   8      ; mark
0560    KSTR    24  37      ; "if"
0561    CALL    23   2   2
0562    DIVVV   22  22  23
0563    TSETS   22  21  81  ; "If"
0564    MOV     22  14
0565    KSTR    23  40      ; "unless"
0566    CALL    22   2   2
0567    GGET    23  77      ; "IfCond"
0568    MULVV   22  22  23
0569    MOV     23  14
0570    KSTR    24  75      ; "then"
0571    CALL    23   2   2
0572    KSHORT  24  -1
0573    POW     23  23  24
0574    MULVV   22  22  23
0575    GGET    23  44      ; "Body"
0576    MULVV   22  22  23
0577    GGET    23  80      ; "IfElseIf"
0578    KSHORT  24   0
0579    POW     23  23  24
0580    MULVV   22  22  23
0581    GGET    23  78      ; "IfElse"
0582    KSHORT  24  -1
0583    POW     23  23  24
0584    MULVV   22  22  23
0585    UGET    23   8      ; mark
0586    KSTR    24  40      ; "unless"
0587    CALL    23   2   2
0588    DIVVV   22  22  23
0589    TSETS   22  21  82  ; "Unless"
0590    MOV     22  14
0591    KSTR    23  83      ; "while"
0592    CALL    22   2   2
0593    MULVV   22  22  11
0594    UGET    23  23      ; ensure
0595    GGET    24  38      ; "Exp"
0596    MOV     25  12
0597    CALL    23   2   3
0598    MULVV   22  22  23
0599    MOV     23  14
0600    KSTR    24  69      ; "do"
0601    CALL    23   2   2
0602    KSHORT  24  -1
0603    POW     23  23  24
0604    MULVV   22  22  23
0605    GGET    23  44      ; "Body"
0606    MULVV   22  22  23
0607    UGET    23   8      ; mark
0608    KSTR    24  83      ; "while"
0609    CALL    23   2   2
0610    DIVVV   22  22  23
0611    TSETS   22  21  25  ; "While"
0612    MOV     22  14
0613    KSTR    23  84      ; "for"
0614    CALL    22   2   2
0615    MULVV   22  22  11
0616    UGET    23  23      ; ensure
0617    UGET    24  22      ; sym
0618    KSTR    25  85      ; "="
0619    CALL    24   2   2
0620    MULVV   24  16  24
0621    UGET    25  12      ; Ct
0622    GGET    26  38      ; "Exp"
0623    UGET    27  22      ; sym
0624    KSTR    28  61      ; ","
0625    CALL    27   2   2
0626    MULVV   26  26  27
0627    GGET    27  38      ; "Exp"
0628    MULVV   26  26  27
0629    UGET    27  22      ; sym
0630    KSTR    28  61      ; ","
0631    CALL    27   2   2
0632    GGET    28  38      ; "Exp"
0633    MULVV   27  27  28
0634    KSHORT  28  -1
0635    POW     27  27  28
0636    MULVV   26  26  27
0637    CALL    25   2   2
0638    MULVV   24  24  25
0639    MOV     25  12
0640    CALL    23   2   3
0641    MULVV   22  22  23
0642    MOV     23  14
0643    KSTR    24  69      ; "do"
0644    CALL    23   2   2
0645    KSHORT  24  -1
0646    POW     23  23  24
0647    MULVV   22  22  23
0648    GGET    23  44      ; "Body"
0649    MULVV   22  22  23
0650    UGET    23   8      ; mark
0651    KSTR    24  84      ; "for"
0652    CALL    23   2   2
0653    DIVVV   22  22  23
0654    TSETS   22  21  27  ; "For"
0655    MOV     22  14
0656    KSTR    23  84      ; "for"
0657    CALL    22   2   2
0658    UGET    23  12      ; Ct
0659    GGET    24  86      ; "AssignableNameList"
0660    CALL    23   2   2
0661    MULVV   22  22  23
0662    MOV     23  14
0663    KSTR    24  87      ; "in"
0664    CALL    23   2   2
0665    MULVV   22  22  23
0666    MULVV   22  22  11
0667    UGET    23  23      ; ensure
0668    UGET    24  12      ; Ct
0669    UGET    25  22      ; sym
0670    KSTR    26  50      ; "*"
0671    CALL    25   2   2
0672    GGET    26  38      ; "Exp"
0673    MULVV   25  25  26
0674    UGET    26   8      ; mark
0675    KSTR    27  88      ; "unpack"
0676    CALL    26   2   2
0677    DIVVV   25  25  26
0678    GGET    26  34      ; "ExpList"
0679    ADDVV   25  25  26
0680    CALL    24   2   2
0681    MOV     25  12
0682    CALL    23   2   3
0683    MULVV   22  22  23
0684    MOV     23  14
0685    KSTR    24  69      ; "do"
0686    CALL    23   2   2
0687    KSHORT  24  -1
0688    POW     23  23  24
0689    MULVV   22  22  23
0690    GGET    23  44      ; "Body"
0691    MULVV   22  22  23
0692    UGET    23   8      ; mark
0693    KSTR    24  89      ; "foreach"
0694    CALL    23   2   2
0695    DIVVV   22  22  23
0696    TSETS   22  21  28  ; "ForEach"
0697    MOV     22  14
0698    KSTR    23  69      ; "do"
0699    CALL    22   2   2
0700    GGET    23  44      ; "Body"
0701    MULVV   22  22  23
0702    UGET    23   8      ; mark
0703    KSTR    24  69      ; "do"
0704    CALL    23   2   2
0705    DIVVV   22  22  23
0706    TSETS   22  21  90  ; "Do"
0707    UGET    22  22      ; sym
0708    KSTR    23  91      ; "["
0709    CALL    22   2   2
0710    GGET    23  38      ; "Exp"
0711    MULVV   22  22  23
0712    GGET    23  41      ; "CompInner"
0713    MULVV   22  22  23
0714    UGET    23  22      ; sym
0715    KSTR    24  92      ; "]"
0716    CALL    23   2   2
0717    MULVV   22  22  23
0718    UGET    23   8      ; mark
0719    KSTR    24  42      ; "comprehension"
0720    CALL    23   2   2
0721    DIVVV   22  22  23
0722    TSETS   22  21  93  ; "Comprehension"
0723    UGET    22  22      ; sym
0724    KSTR    23  94      ; "{"
0725    CALL    22   2   2
0726    UGET    23  12      ; Ct
0727    GGET    24  38      ; "Exp"
0728    UGET    25  22      ; sym
0729    KSTR    26  61      ; ","
0730    CALL    25   2   2
0731    GGET    26  38      ; "Exp"
0732    MULVV   25  25  26
0733    KSHORT  26  -1
0734    POW     25  25  26
0735    MULVV   24  24  25
0736    CALL    23   2   2
0737    MULVV   22  22  23
0738    GGET    23  41      ; "CompInner"
0739    MULVV   22  22  23
0740    UGET    23  22      ; sym
0741    KSTR    24  95      ; "}"
0742    CALL    23   2   2
0743    MULVV   22  22  23
0744    UGET    23   8      ; mark
0745    KSTR    24  96      ; "tblcomprehension"
0746    CALL    23   2   2
0747    DIVVV   22  22  23
0748    TSETS   22  21  97  ; "TblComprehension"
0749    UGET    22  12      ; Ct
0750    GGET    23  98      ; "CompForEach"
0751    GGET    24  99      ; "CompFor"
0752    ADDVV   23  23  24
0753    GGET    24 100      ; "CompClause"
0754    KSHORT  25   0
0755    POW     24  24  25
0756    MULVV   23  23  24
0757    CALL    22   2   2
0758    TSETS   22  21  41  ; "CompInner"
0759    MOV     22  14
0760    KSTR    23  84      ; "for"
0761    CALL    22   2   2
0762    UGET    23  12      ; Ct
0763    GGET    24  86      ; "AssignableNameList"
0764    CALL    23   2   2
0765    MULVV   22  22  23
0766    MOV     23  14
0767    KSTR    24  87      ; "in"
0768    CALL    23   2   2
0769    MULVV   22  22  23
0770    UGET    23  22      ; sym
0771    KSTR    24  50      ; "*"
0772    CALL    23   2   2
0773    GGET    24  38      ; "Exp"
0774    MULVV   23  23  24
0775    UGET    24   8      ; mark
0776    KSTR    25  88      ; "unpack"
0777    CALL    24   2   2
0778    DIVVV   23  23  24
0779    GGET    24  38      ; "Exp"
0780    ADDVV   23  23  24
0781    MULVV   22  22  23
0782    UGET    23   8      ; mark
0783    KSTR    24  89      ; "foreach"
0784    CALL    23   2   2
0785    DIVVV   22  22  23
0786    TSETS   22  21  98  ; "CompForEach"
0787    MOV     22  14
0788    KSTR    23  84      ; "for"
0789    MULVV   23  23  16
0790    UGET    24  22      ; sym
0791    KSTR    25  85      ; "="
0792    CALL    24   2   2
0793    MULVV   23  23  24
0794    UGET    24  12      ; Ct
0795    GGET    25  38      ; "Exp"
0796    UGET    26  22      ; sym
0797    KSTR    27  61      ; ","
0798    CALL    26   2   2
0799    MULVV   25  25  26
0800    GGET    26  38      ; "Exp"
0801    MULVV   25  25  26
0802    UGET    26  22      ; sym
0803    KSTR    27  61      ; ","
0804    CALL    26   2   2
0805    GGET    27  38      ; "Exp"
0806    MULVV   26  26  27
0807    KSHORT  27  -1
0808    POW     26  26  27
0809    MULVV   25  25  26
0810    CALL    24   2   2
0811    MULVV   23  23  24
0812    UGET    24   8      ; mark
0813    KSTR    25  84      ; "for"
0814    CALL    24   2   2
0815    DIVVV   23  23  24
0816    CALL    22   2   2
0817    TSETS   22  21  99  ; "CompFor"
0818    GGET    22  99      ; "CompFor"
0819    GGET    23  98      ; "CompForEach"
0820    ADDVV   22  22  23
0821    MOV     23  14
0822    KSTR    24  74      ; "when"
0823    CALL    23   2   2
0824    GGET    24  38      ; "Exp"
0825    MULVV   23  23  24
0826    UGET    24   8      ; mark
0827    KSTR    25  74      ; "when"
0828    CALL    24   2   2
0829    DIVVV   23  23  24
0830    ADDVV   22  22  23
0831    TSETS   22  21 100  ; "CompClause"
0832    UGET    22  22      ; sym
0833    KSTR    23  85      ; "="
0834    CALL    22   2   2
0835    UGET    23  12      ; Ct
0836    GGET    24  26      ; "With"
0837    GGET    25  81      ; "If"
0838    ADDVV   24  24  25
0839    GGET    25  29      ; "Switch"
0840    ADDVV   24  24  25
0841    CALL    23   2   2
0842    UGET    24  12      ; Ct
0843    GGET    25 101      ; "TableBlock"
0844    GGET    26  65      ; "ExpListLow"
0845    ADDVV   25  25  26
0846    CALL    24   2   2
0847    ADDVV   23  23  24
0848    MULVV   22  22  23
0849    UGET    23   8      ; mark
0850    KSTR    24 102      ; "assign"
0851    CALL    23   2   2
0852    DIVVV   22  22  23
0853    TSETS   22  21  36  ; "Assign"
0854    UGET    22  22      ; sym
0855    KSTR    23 103      ; "..="
0856    CALL    22   2   2
0857    UGET    23  22      ; sym
0858    KSTR    24 104      ; "+="
0859    CALL    23   2   2
0860    ADDVV   22  22  23
0861    UGET    23  22      ; sym
0862    KSTR    24 105      ; "-="
0863    CALL    23   2   2
0864    ADDVV   22  22  23
0865    UGET    23  22      ; sym
0866    KSTR    24 106      ; "*="
0867    CALL    23   2   2
0868    ADDVV   22  22  23
0869    UGET    23  22      ; sym
0870    KSTR    24 107      ; "/="
0871    CALL    23   2   2
0872    ADDVV   22  22  23
0873    UGET    23  22      ; sym
0874    KSTR    24 108      ; "%="
0875    CALL    23   2   2
0876    ADDVV   22  22  23
0877    UGET    23  22      ; sym
0878    KSTR    24 109      ; "or="
0879    CALL    23   2   2
0880    ADDVV   22  22  23
0881    UGET    23  22      ; sym
0882    KSTR    24 110      ; "and="
0883    CALL    23   2   2
0884    ADDVV   22  22  23
0885    UGET    23  22      ; sym
0886    KSTR    24 111      ; "&="
0887    CALL    23   2   2
0888    ADDVV   22  22  23
0889    UGET    23  22      ; sym
0890    KSTR    24 112      ; "|="
0891    CALL    23   2   2
0892    ADDVV   22  22  23
0893    UGET    23  22      ; sym
0894    KSTR    24 113      ; ">>="
0895    CALL    23   2   2
0896    ADDVV   22  22  23
0897    UGET    23  22      ; sym
0898    KSTR    24 114      ; "<<="
0899    CALL    23   2   2
0900    ADDVV   22  22  23
0901    UGET    23   6      ; trim
0902    DIVVV   22  22  23
0903    GGET    23  38      ; "Exp"
0904    MULVV   22  22  23
0905    UGET    23   8      ; mark
0906    KSTR    24 115      ; "update"
0907    CALL    23   2   2
0908    DIVVV   22  22  23
0909    TSETS   22  21  35  ; "Update"
0910    UGET    22   2      ; Space
0911    UGET    23   4      ; C
0912    UGET    24  25      ; S
0913    KSTR    25 116      ; "+-*/%^><|&"
0914    CALL    24   0   2
0915    CALLM   23   2   0
0916    MULVV   22  22  23
0917    TSETS   22  21 117  ; "CharOperators"
0918    MOV     22  15
0919    KSTR    23 118      ; "or"
0920    CALL    22   2   2
0921    MOV     23  15
0922    KSTR    24 119      ; "and"
0923    CALL    23   2   2
0924    ADDVV   22  22  23
0925    MOV     23  15
0926    KSTR    24 120      ; "<="
0927    CALL    23   2   2
0928    ADDVV   22  22  23
0929    MOV     23  15
0930    KSTR    24 121      ; ">="
0931    CALL    23   2   2
0932    ADDVV   22  22  23
0933    MOV     23  15
0934    KSTR    24 122      ; "~="
0935    CALL    23   2   2
0936    ADDVV   22  22  23
0937    MOV     23  15
0938    KSTR    24 123      ; "!="
0939    CALL    23   2   2
0940    ADDVV   22  22  23
0941    MOV     23  15
0942    KSTR    24 124      ; "=="
0943    CALL    23   2   2
0944    ADDVV   22  22  23
0945    MOV     23  15
0946    KSTR    24 125      ; ".."
0947    CALL    23   2   2
0948    ADDVV   22  22  23
0949    MOV     23  15
0950    KSTR    24 126      ; "<<"
0951    CALL    23   2   2
0952    ADDVV   22  22  23
0953    MOV     23  15
0954    KSTR    24 127      ; ">>"
0955    CALL    23   2   2
0956    ADDVV   22  22  23
0957    MOV     23  15
0958    KSTR    24 128      ; "//"
0959    CALL    23   2   2
0960    ADDVV   22  22  23
0961    TSETS   22  21 129  ; "WordOperators"
0962    GGET    22 129      ; "WordOperators"
0963    GGET    23 117      ; "CharOperators"
0964    ADDVV   22  22  23
0965    UGET    23  21      ; SpaceBreak
0966    KSHORT  24   0
0967    POW     23  23  24
0968    MULVV   22  22  23
0969    TSETS   22  21 130  ; "BinaryOperator"
0970    UGET    22   1      ; Cmt
0971    GGET    23 131      ; "Chain"
0972    UGET    24  26      ; check_assignable
0973    CALL    22   2   3
0974    ADDVV   22  22  16
0975    ADDVV   22  22  17
0976    TSETS   22  21 132  ; "Assignable"
0977    UGET    22  12      ; Ct
0978    GGET    23 133      ; "Value"
0979    GGET    24 130      ; "BinaryOperator"
0980    GGET    25 133      ; "Value"
0981    MULVV   24  24  25
0982    KSHORT  25   0
0983    POW     24  24  25
0984    MULVV   23  23  24
0985    CALL    22   2   2
0986    UGET    23  27      ; flatten_or_mark
0987    KSTR    24 134      ; "exp"
0988    CALL    23   2   2
0989    DIVVV   22  22  23
0990    TSETS   22  21  38  ; "Exp"
0991    GGET    22  81      ; "If"
0992    GGET    23  82      ; "Unless"
0993    ADDVV   22  22  23
0994    GGET    23  29      ; "Switch"
0995    ADDVV   22  22  23
0996    GGET    23  26      ; "With"
0997    ADDVV   22  22  23
0998    GGET    23 135      ; "ClassDecl"
0999    ADDVV   22  22  23
1000    GGET    23  28      ; "ForEach"
1001    ADDVV   22  22  23
1002    GGET    23  27      ; "For"
1003    ADDVV   22  22  23
1004    GGET    23  25      ; "While"
1005    ADDVV   22  22  23
1006    UGET    23   1      ; Cmt
1007    GGET    24  90      ; "Do"
1008    MOV     25   8
1009    CALL    23   2   3
1010    ADDVV   22  22  23
1011    UGET    23  22      ; sym
1012    KSTR    24 136      ; "-"
1013    CALL    23   2   2
1014    UGET    24  28      ; SomeSpace
1015    UNM     24  24
1016    MULVV   23  23  24
1017    GGET    24  38      ; "Exp"
1018    MULVV   23  23  24
1019    UGET    24   8      ; mark
1020    KSTR    25 137      ; "minus"
1021    CALL    24   2   2
1022    DIVVV   23  23  24
1023    ADDVV   22  22  23
1024    UGET    23  22      ; sym
1025    KSTR    24 138      ; "#"
1026    CALL    23   2   2
1027    GGET    24  38      ; "Exp"
1028    MULVV   23  23  24
1029    UGET    24   8      ; mark
1030    KSTR    25 139      ; "length"
1031    CALL    24   2   2
1032    DIVVV   23  23  24
1033    ADDVV   22  22  23
1034    UGET    23  22      ; sym
1035    KSTR    24 140      ; "~"
1036    CALL    23   2   2
1037    GGET    24  38      ; "Exp"
1038    MULVV   23  23  24
1039    UGET    24   8      ; mark
1040    KSTR    25 141      ; "bitnot"
1041    CALL    24   2   2
1042    DIVVV   23  23  24
1043    ADDVV   22  22  23
1044    MOV     23  14
1045    KSTR    24 142      ; "not"
1046    CALL    23   2   2
1047    GGET    24  38      ; "Exp"
1048    MULVV   23  23  24
1049    UGET    24   8      ; mark
1050    KSTR    25 142      ; "not"
1051    CALL    24   2   2
1052    DIVVV   23  23  24
1053    ADDVV   22  22  23
1054    GGET    23  97      ; "TblComprehension"
1055    ADDVV   22  22  23
1056    GGET    23 143      ; "TableLit"
1057    ADDVV   22  22  23
1058    GGET    23  93      ; "Comprehension"
1059    ADDVV   22  22  23
1060    GGET    23 144      ; "FunLit"
1061    ADDVV   22  22  23
1062    UGET    23  29      ; Num
1063    ADDVV   22  22  23
1064    TSETS   22  21 145  ; "SimpleValue"
1065    GGET    22 131      ; "Chain"
1066    GGET    23 146      ; "Callable"
1067    ADDVV   22  22  23
1068    UGET    23  12      ; Ct
1069    GGET    24 147      ; "InvokeArgs"
1070    KSHORT  25  -1
1071    POW     24  24  25
1072    CALL    23   2   2
1073    MULVV   22  22  23
1074    UGET    23  30      ; join_chain
1075    DIVVV   22  22  23
1076    TSETS   22  21 148  ; "ChainValue"
1077    UGET    22  17      ; pos
1078    GGET    23 145      ; "SimpleValue"
1079    UGET    24  12      ; Ct
1080    GGET    25 149      ; "KeyValueList"
1081    CALL    24   2   2
1082    UGET    25   8      ; mark
1083    KSTR    26 150      ; "table"
1084    CALL    25   2   2
1085    DIVVV   24  24  25
1086    ADDVV   23  23  24
1087    GGET    24 148      ; "ChainValue"
1088    ADDVV   23  23  24
1089    GGET    24 151      ; "String"
1090    ADDVV   23  23  24
1091    CALL    22   2   2
1092    TSETS   22  21 133  ; "Value"
1093    GGET    22  38      ; "Exp"
1094    TSETS   22  21 152  ; "SliceValue"
1095    UGET    22   2      ; Space
1096    GGET    23 153      ; "DoubleString"
1097    MULVV   22  22  23
1098    UGET    23   2      ; Space
1099    GGET    24 154      ; "SingleString"
1100    MULVV   23  23  24
1101    ADDVV   22  22  23
1102    GGET    23 155      ; "LuaString"
1103    ADDVV   22  22  23
1104    TSETS   22  21 151  ; "String"
1105    UGET    22  31      ; simple_string
1106    KSTR    23 156      ; "'"
1107    CALL    22   2   2
1108    TSETS   22  21 154  ; "SingleString"
1109    UGET    22  31      ; simple_string
1110    KSTR    23 157      ; """
1111    KPRI    24   2
1112    CALL    22   2   3
1113    TSETS   22  21 153  ; "DoubleString"
1114    UGET    22  32      ; Cg
1115    GGET    23 158      ; "LuaStringOpen"
1116    KSTR    24 159      ; "string_open"
1117    CALL    22   2   3
1118    UGET    23  33      ; Cb
1119    KSTR    24 159      ; "string_open"
1120    CALL    23   2   2
1121    MULVV   22  22  23
1122    UGET    23  13      ; Break
1123    KSHORT  24  -1
1124    POW     23  23  24
1125    MULVV   22  22  23
1126    UGET    23   4      ; C
1127    UGET    24   1      ; Cmt
1128    UGET    25   4      ; C
1129    GGET    26 160      ; "LuaStringClose"
1130    CALL    25   2   2
1131    UGET    26  33      ; Cb
1132    KSTR    27 159      ; "string_open"
1133    CALL    26   2   2
1134    MULVV   25  25  26
1135    UGET    26  34      ; check_lua_string
1136    CALL    24   2   3
1137    SUBNV   24  24   0  ; 1
1138    KSHORT  25   0
1139    POW     24  24  25
1140    CALL    23   2   2
1141    MULVV   22  22  23
1142    GGET    23 160      ; "LuaStringClose"
1143    MULVV   22  22  23
1144    UGET    23   8      ; mark
1145    KSTR    24 161      ; "string"
1146    CALL    23   2   2
1147    DIVVV   22  22  23
1148    TSETS   22  21 155  ; "LuaString"
1149    UGET    22  22      ; sym
1150    KSTR    23  91      ; "["
1151    CALL    22   2   2
1152    UGET    23  10      ; P
1153    KSTR    24  85      ; "="
1154    CALL    23   2   2
1155    KSHORT  24   0
1156    POW     23  23  24
1157    MULVV   22  22  23
1158    KSTR    23  91      ; "["
1159    MULVV   22  22  23
1160    UGET    23   6      ; trim
1161    DIVVV   22  22  23
1162    TSETS   22  21 158  ; "LuaStringOpen"
1163    KSTR    22  92      ; "]"
1164    UGET    23  10      ; P
1165    KSTR    24  85      ; "="
1166    CALL    23   2   2
1167    KSHORT  24   0
1168    POW     23  23  24
1169    MULVV   22  22  23
1170    KSTR    23  92      ; "]"
1171    MULVV   22  22  23
1172    TSETS   22  21 160  ; "LuaStringClose"
1173    UGET    22  17      ; pos
1174    UGET    23   8      ; mark
1175    KSTR    24 162      ; "ref"
1176    CALL    23   2   2
1177    DIVVV   23  16  23
1178    CALL    22   2   2
1179    ADDVV   22  22  17
1180    ADDVV   22  22  19
1181    GGET    23 163      ; "Parens"
1182    UGET    24   8      ; mark
1183    KSTR    25 164      ; "parens"
1184    CALL    24   2   2
1185    DIVVV   23  23  24
1186    ADDVV   22  22  23
1187    TSETS   22  21 146  ; "Callable"
1188    UGET    22  22      ; sym
1189    KSTR    23 165      ; "("
1190    CALL    22   2   2
1191    UGET    23  21      ; SpaceBreak
1192    KSHORT  24   0
1193    POW     23  23  24
1194    MULVV   22  22  23
1195    GGET    23  38      ; "Exp"
1196    MULVV   22  22  23
1197    UGET    23  21      ; SpaceBreak
1198    KSHORT  24   0
1199    POW     23  23  24
1200    MULVV   22  22  23
1201    UGET    23  22      ; sym
1202    KSTR    24 166      ; ")"
1203    CALL    23   2   2
1204    MULVV   22  22  23
1205    TSETS   22  21 163  ; "Parens"
1206    UGET    22  35      ; symx
1207    KSTR    23 165      ; "("
1208    CALL    22   2   2
1209    UGET    23  21      ; SpaceBreak
1210    KSHORT  24   0
1211    POW     23  23  24
1212    MULVV   22  22  23
1213    UGET    23  12      ; Ct
1214    GGET    24 167      ; "FnArgsExpList"
1215    KSHORT  25  -1
1216    POW     24  24  25
1217    CALL    23   2   2
1218    MULVV   22  22  23
1219    UGET    23  21      ; SpaceBreak
1220    KSHORT  24   0
1221    POW     23  23  24
1222    MULVV   22  22  23
1223    UGET    23  22      ; sym
1224    KSTR    24 166      ; ")"
1225    CALL    23   2   2
1226    MULVV   22  22  23
1227    UGET    23  22      ; sym
1228    KSTR    24 168      ; "!"
1229    CALL    23   2   2
1230    UGET    24  10      ; P
1231    KSTR    25  85      ; "="
1232    CALL    24   2   2
1233    UNM     24  24
1234    MULVV   23  23  24
1235    UGET    24  12      ; Ct
1236    KSTR    25   8      ; ""
1237    CALL    24   2   2
1238    MULVV   23  23  24
1239    ADDVV   22  22  23
1240    TSETS   22  21 169  ; "FnArgs"
1241    GGET    22  38      ; "Exp"
1242    UGET    23  13      ; Break
1243    UGET    24  22      ; sym
1244    KSTR    25  61      ; ","
1245    CALL    24   2   2
1246    ADDVV   23  23  24
1247    UGET    24  36      ; White
1248    MULVV   23  23  24
1249    GGET    24  38      ; "Exp"
1250    MULVV   23  23  24
1251    KSHORT  24   0
1252    POW     23  23  24
1253    MULVV   22  22  23
1254    TSETS   22  21 167  ; "FnArgsExpList"
1255    GGET    22 146      ; "Callable"
1256    GGET    23 151      ; "String"
1257    ADDVV   22  22  23
1258    UGET    23  25      ; S
1259    KSTR    24 170      ; ".\"
1260    CALL    23   2   2
1261    UNM     23  23
1262    ADDVV   22  22  23
1263    GGET    23 171      ; "ChainItems"
1264    MULVV   22  22  23
1265    UGET    23   8      ; mark
1266    KSTR    24 172      ; "chain"
1267    CALL    23   2   2
1268    DIVVV   22  22  23
1269    UGET    23   2      ; Space
1270    GGET    24 173      ; "DotChainItem"
1271    GGET    25 171      ; "ChainItems"
1272    KSHORT  26  -1
1273    POW     25  25  26
1274    MULVV   24  24  25
1275    GGET    25 174      ; "ColonChain"
1276    ADDVV   24  24  25
1277    MULVV   23  23  24
1278    UGET    24   8      ; mark
1279    KSTR    25 172      ; "chain"
1280    CALL    24   2   2
1281    DIVVV   23  23  24
1282    ADDVV   22  22  23
1283    TSETS   22  21 131  ; "Chain"
1284    GGET    22 175      ; "ChainItem"
1285    KSHORT  23   1
1286    POW     22  22  23
1287    GGET    23 174      ; "ColonChain"
1288    KSHORT  24  -1
1289    POW     23  23  24
1290    MULVV   22  22  23
1291    GGET    23 174      ; "ColonChain"
1292    ADDVV   22  22  23
1293    TSETS   22  21 171  ; "ChainItems"
1294    GGET    22 176      ; "Invoke"
1295    GGET    23 173      ; "DotChainItem"
1296    ADDVV   22  22  23
1297    GGET    23 177      ; "Slice"
1298    ADDVV   22  22  23
1299    UGET    23  35      ; symx
1300    KSTR    24  91      ; "["
1301    CALL    23   2   2
1302    GGET    24  38      ; "Exp"
1303    MULVV   23  23  24
1304    UGET    24   8      ; mark
1305    KSTR    25 178      ; "index"
1306    CALL    24   2   2
1307    DIVVV   23  23  24
1308    UGET    24  22      ; sym
1309    KSTR    25  92      ; "]"
1310    CALL    24   2   2
1311    MULVV   23  23  24
1312    ADDVV   22  22  23
1313    TSETS   22  21 175  ; "ChainItem"
1314    UGET    22  35      ; symx
1315    KSTR    23 179      ; "."
1316    CALL    22   2   2
1317    UGET    23   7      ; _Name
1318    MULVV   22  22  23
1319    UGET    23   8      ; mark
1320    KSTR    24 180      ; "dot"
1321    CALL    23   2   2
1322    DIVVV   22  22  23
1323    TSETS   22  21 173  ; "DotChainItem"
1324    UGET    22  35      ; symx
1325    KSTR    23  58      ; "\"
1326    CALL    22   2   2
1327    UGET    23   7      ; _Name
1328    MULVV   22  22  23
1329    UGET    23   8      ; mark
1330    KSTR    24  59      ; "colon"
1331    CALL    23   2   2
1332    DIVVV   22  22  23
1333    TSETS   22  21 181  ; "ColonChainItem"
1334    GGET    22 181      ; "ColonChainItem"
1335    GGET    23 176      ; "Invoke"
1336    GGET    24 171      ; "ChainItems"
1337    KSHORT  25  -1
1338    POW     24  24  25
1339    MULVV   23  23  24
1340    KSHORT  24  -1
1341    POW     23  23  24
1342    MULVV   22  22  23
1343    TSETS   22  21 174  ; "ColonChain"
1344    UGET    22  35      ; symx
1345    KSTR    23  91      ; "["
1346    CALL    22   2   2
1347    GGET    23 152      ; "SliceValue"
1348    UGET    24   9      ; Cc
1349    KSHORT  25   1
1350    CALL    24   2   2
1351    ADDVV   23  23  24
1352    MULVV   22  22  23
1353    UGET    23  22      ; sym
1354    KSTR    24  61      ; ","
1355    CALL    23   2   2
1356    MULVV   22  22  23
1357    GGET    23 152      ; "SliceValue"
1358    UGET    24   9      ; Cc
1359    KSTR    25   8      ; ""
1360    CALL    24   2   2
1361    ADDVV   23  23  24
1362    MULVV   22  22  23
1363    UGET    23  22      ; sym
1364    KSTR    24  61      ; ","
1365    CALL    23   2   2
1366    GGET    24 152      ; "SliceValue"
1367    MULVV   23  23  24
1368    KSHORT  24  -1
1369    POW     23  23  24
1370    MULVV   22  22  23
1371    UGET    23  22      ; sym
1372    KSTR    24  92      ; "]"
1373    CALL    23   2   2
1374    MULVV   22  22  23
1375    UGET    23   8      ; mark
1376    KSTR    24 182      ; "slice"
1377    CALL    23   2   2
1378    DIVVV   22  22  23
1379    TSETS   22  21 177  ; "Slice"
1380    GGET    22 169      ; "FnArgs"
1381    UGET    23   8      ; mark
1382    KSTR    24 183      ; "call"
1383    CALL    23   2   2
1384    DIVVV   22  22  23
1385    GGET    23 154      ; "SingleString"
1386    UGET    24  37      ; wrap_func_arg
1387    DIVVV   23  23  24
1388    ADDVV   22  22  23
1389    GGET    23 153      ; "DoubleString"
1390    UGET    24  37      ; wrap_func_arg
1391    DIVVV   23  23  24
1392    ADDVV   22  22  23
1393    UGET    23  15      ; L
1394    UGET    24  10      ; P
1395    KSTR    25  91      ; "["
1396    CALL    24   0   2
1397    CALLM   23   2   0
1398    GGET    24 155      ; "LuaString"
1399    MULVV   23  23  24
1400    UGET    24  37      ; wrap_func_arg
1401    DIVVV   23  23  24
1402    ADDVV   22  22  23
1403    TSETS   22  21 176  ; "Invoke"
1404    GGET    22 184      ; "KeyValue"
1405    UGET    23  12      ; Ct
1406    GGET    24  38      ; "Exp"
1407    CALL    23   2   2
1408    ADDVV   22  22  23
1409    TSETS   22  21 185  ; "TableValue"
1410    UGET    22  22      ; sym
1411    KSTR    23  94      ; "{"
1412    CALL    22   2   2
1413    UGET    23  12      ; Ct
1414    GGET    24 186      ; "TableValueList"
1415    KSHORT  25  -1
1416    POW     24  24  25
1417    UGET    25  22      ; sym
1418    KSTR    26  61      ; ","
1419    CALL    25   2   2
1420    KSHORT  26  -1
1421    POW     25  25  26
1422    MULVV   24  24  25
1423    UGET    25  21      ; SpaceBreak
1424    GGET    26 187      ; "TableLitLine"
1425    MULVV   25  25  26
1426    UGET    26  22      ; sym
1427    KSTR    27  61      ; ","
1428    CALL    26   2   2
1429    KSHORT  27  -1
1430    POW     26  26  27
1431    UGET    27  21      ; SpaceBreak
1432    MULVV   26  26  27
1433    GGET    27 187      ; "TableLitLine"
1434    MULVV   26  26  27
1435    KSHORT  27   0
1436    POW     26  26  27
1437    MULVV   25  25  26
1438    UGET    26  22      ; sym
1439    KSTR    27  61      ; ","
1440    CALL    26   2   2
1441    KSHORT  27  -1
1442    POW     26  26  27
1443    MULVV   25  25  26
1444    KSHORT  26  -1
1445    POW     25  25  26
1446    MULVV   24  24  25
1447    CALL    23   2   2
1448    MULVV   22  22  23
1449    UGET    23  36      ; White
1450    MULVV   22  22  23
1451    UGET    23  22      ; sym
1452    KSTR    24  95      ; "}"
1453    CALL    23   2   2
1454    MULVV   22  22  23
1455    UGET    23   8      ; mark
1456    KSTR    24 150      ; "table"
1457    CALL    23   2   2
1458    DIVVV   22  22  23
1459    TSETS   22  21 143  ; "TableLit"
1460    GGET    22 185      ; "TableValue"
1461    UGET    23  22      ; sym
1462    KSTR    24  61      ; ","
1463    CALL    23   2   2
1464    GGET    24 185      ; "TableValue"
1465    MULVV   23  23  24
1466    KSHORT  24   0
1467    POW     23  23  24
1468    MULVV   22  22  23
1469    TSETS   22  21 186  ; "TableValueList"
1470    GGET    22  46      ; "PushIndent"
1471    GGET    23 186      ; "TableValueList"
1472    GGET    24  48      ; "PopIndent"
1473    MULVV   23  23  24
1474    GGET    24  48      ; "PopIndent"
1475    UGET    25  38      ; Cut
1476    MULVV   24  24  25
1477    ADDVV   23  23  24
1478    MULVV   22  22  23
1479    UGET    23   2      ; Space
1480    ADDVV   22  22  23
1481    TSETS   22  21 187  ; "TableLitLine"
1482    UGET    22  12      ; Ct
1483    GGET    23 188      ; "KeyValueLine"
1484    UGET    24  21      ; SpaceBreak
1485    KSHORT  25   1
1486    POW     24  24  25
1487    GGET    25 188      ; "KeyValueLine"
1488    MULVV   24  24  25
1489    KSHORT  25   0
1490    POW     24  24  25
1491    MULVV   23  23  24
1492    CALL    22   2   2
1493    TSETS   22  21 189  ; "TableBlockInner"
1494    UGET    22  21      ; SpaceBreak
1495    KSHORT  23   1
1496    POW     22  22  23
1497    GGET    23  45      ; "Advance"
1498    MULVV   22  22  23
1499    UGET    23  23      ; ensure
1500    GGET    24 189      ; "TableBlockInner"
1501    GGET    25  48      ; "PopIndent"
1502    CALL    23   2   3
1503    MULVV   22  22  23
1504    UGET    23   8      ; mark
1505    KSTR    24 150      ; "table"
1506    CALL    23   2   2
1507    DIVVV   22  22  23
1508    TSETS   22  21 101  ; "TableBlock"
1509    MOV     22  14
1510    KSTR    23 190      ; "class"
1511    CALL    22   2   2
1512    UGET    23  10      ; P
1513    KSTR    24 191      ; ":"
1514    CALL    23   2   2
1515    UNM     23  23
1516    MULVV   22  22  23
1517    GGET    23 132      ; "Assignable"
1518    UGET    24   9      ; Cc
1519    KPRI    25   0
1520    CALL    24   2   2
1521    ADDVV   23  23  24
1522    MULVV   22  22  23
1523    MOV     23  14
1524    KSTR    24 192      ; "extends"
1525    CALL    23   2   2
1526    GGET    24  47      ; "PreventIndent"
1527    MULVV   23  23  24
1528    UGET    24  23      ; ensure
1529    GGET    25  38      ; "Exp"
1530    GGET    26  48      ; "PopIndent"
1531    CALL    24   2   3
1532    MULVV   23  23  24
1533    UGET    24   4      ; C
1534    KSTR    25   8      ; ""
1535    CALL    24   2   2
1536    ADDVV   23  23  24
1537    KSHORT  24  -1
1538    POW     23  23  24
1539    MULVV   22  22  23
1540    GGET    23 193      ; "ClassBlock"
1541    UGET    24  12      ; Ct
1542    KSTR    25   8      ; ""
1543    CALL    24   2   2
1544    ADDVV   23  23  24
1545    MULVV   22  22  23
1546    UGET    23   8      ; mark
1547    KSTR    24 190      ; "class"
1548    CALL    23   2   2
1549    DIVVV   22  22  23
1550    TSETS   22  21 135  ; "ClassDecl"
1551    UGET    22  21      ; SpaceBreak
1552    KSHORT  23   1
1553    POW     22  22  23
1554    GGET    23  45      ; "Advance"
1555    MULVV   22  22  23
1556    UGET    23  12      ; Ct
1557    GGET    24 194      ; "ClassLine"
1558    UGET    25  21      ; SpaceBreak
1559    KSHORT  26   1
1560    POW     25  25  26
1561    GGET    26 194      ; "ClassLine"
1562    MULVV   25  25  26
1563    KSHORT  26   0
1564    POW     25  25  26
1565    MULVV   24  24  25
1566    CALL    23   2   2
1567    MULVV   22  22  23
1568    GGET    23  48      ; "PopIndent"
1569    MULVV   22  22  23
1570    TSETS   22  21 193  ; "ClassBlock"
1571    GGET    22  22      ; "CheckIndent"
1572    GGET    23 149      ; "KeyValueList"
1573    UGET    24   8      ; mark
1574    KSTR    25 195      ; "props"
1575    CALL    24   2   2
1576    DIVVV   23  23  24
1577    GGET    24  23      ; "Statement"
1578    UGET    25   8      ; mark
1579    KSTR    26 196      ; "stm"
1580    CALL    25   2   2
1581    DIVVV   24  24  25
1582    ADDVV   23  23  24
1583    GGET    24  38      ; "Exp"
1584    UGET    25   8      ; mark
1585    KSTR    26 196      ; "stm"
1586    CALL    25   2   2
1587    DIVVV   24  24  25
1588    ADDVV   23  23  24
1589    UGET    24  22      ; sym
1590    KSTR    25  61      ; ","
1591    CALL    24   2   2
1592    KSHORT  25  -1
1593    POW     24  24  25
1594    MULVV   23  23  24
1595    MULVV   22  22  23
1596    TSETS   22  21 194  ; "ClassLine"
1597    MOV     22  14
1598    KSTR    23 197      ; "export"
1599    CALL    22   2   2
1600    UGET    23   9      ; Cc
1601    KSTR    24 190      ; "class"
1602    CALL    23   2   2
1603    GGET    24 135      ; "ClassDecl"
1604    MULVV   23  23  24
1605    MOV     24  15
1606    KSTR    25  50      ; "*"
1607    CALL    24   2   2
1608    ADDVV   23  23  24
1609    MOV     24  15
1610    KSTR    25  51      ; "^"
1611    CALL    24   2   2
1612    ADDVV   23  23  24
1613    UGET    24  12      ; Ct
1614    GGET    25  53      ; "NameList"
1615    CALL    24   2   2
1616    UGET    25  22      ; sym
1617    KSTR    26  85      ; "="
1618    CALL    25   2   2
1619    UGET    26  12      ; Ct
1620    GGET    27  65      ; "ExpListLow"
1621    CALL    26   2   2
1622    MULVV   25  25  26
1623    KSHORT  26  -1
1624    POW     25  25  26
1625    MULVV   24  24  25
1626    ADDVV   23  23  24
1627    MULVV   22  22  23
1628    UGET    23   8      ; mark
1629    KSTR    24 197      ; "export"
1630    CALL    23   2   2
1631    DIVVV   22  22  23
1632    TSETS   22  21  32  ; "Export"
1633    UGET    22  22      ; sym
1634    KSTR    23 191      ; ":"
1635    CALL    22   2   2
1636    UGET    23  28      ; SomeSpace
1637    UNM     23  23
1638    MULVV   22  22  23
1639    MULVV   22  22  16
1640    UGET    23  39      ; lpeg
1641    TGETS   23  23 198  ; "Cp"
1642    CALL    23   2   1
1643    MULVV   22  22  23
1644    UGET    23  40      ; self_assign
1645    DIVVV   22  22  23
1646    UGET    23  12      ; Ct
1647    UGET    24  22      ; sym
1648    KSTR    25  91      ; "["
1649    CALL    24   2   2
1650    GGET    25  38      ; "Exp"
1651    MULVV   24  24  25
1652    UGET    25  22      ; sym
1653    KSTR    26  92      ; "]"
1654    CALL    25   2   2
1655    MULVV   24  24  25
1656    ADDVV   24  18  24
1657    UGET    25   2      ; Space
1658    GGET    26 153      ; "DoubleString"
1659    MULVV   25  25  26
1660    ADDVV   24  24  25
1661    UGET    25   2      ; Space
1662    GGET    26 154      ; "SingleString"
1663    MULVV   25  25  26
1664    ADDVV   24  24  25
1665    UGET    25  35      ; symx
1666    KSTR    26 191      ; ":"
1667    CALL    25   2   2
1668    MULVV   24  24  25
1669    GGET    25  38      ; "Exp"
1670    GGET    26 101      ; "TableBlock"
1671    ADDVV   25  25  26
1672    UGET    26  21      ; SpaceBreak
1673    KSHORT  27   1
1674    POW     26  26  27
1675    GGET    27  38      ; "Exp"
1676    MULVV   26  26  27
1677    ADDVV   25  25  26
1678    MULVV   24  24  25
1679    CALL    23   2   2
1680    ADDVV   22  22  23
1681    TSETS   22  21 184  ; "KeyValue"
1682    GGET    22 184      ; "KeyValue"
1683    UGET    23  22      ; sym
1684    KSTR    24  61      ; ","
1685    CALL    23   2   2
1686    GGET    24 184      ; "KeyValue"
1687    MULVV   23  23  24
1688    KSHORT  24   0
1689    POW     23  23  24
1690    MULVV   22  22  23
1691    TSETS   22  21 149  ; "KeyValueList"
1692    GGET    22  22      ; "CheckIndent"
1693    GGET    23 149      ; "KeyValueList"
1694    MULVV   22  22  23
1695    UGET    23  22      ; sym
1696    KSTR    24  61      ; ","
1697    CALL    23   2   2
1698    KSHORT  24  -1
1699    POW     23  23  24
1700    MULVV   22  22  23
1701    TSETS   22  21 188  ; "KeyValueLine"
1702    UGET    22  22      ; sym
1703    KSTR    23 165      ; "("
1704    CALL    22   2   2
1705    UGET    23  36      ; White
1706    MULVV   22  22  23
1707    UGET    23  12      ; Ct
1708    GGET    24 199      ; "FnArgDefList"
1709    KSHORT  25  -1
1710    POW     24  24  25
1711    CALL    23   2   2
1712    MULVV   22  22  23
1713    MOV     23  14
1714    KSTR    24 200      ; "using"
1715    CALL    23   2   2
1716    UGET    24  12      ; Ct
1717    GGET    25  53      ; "NameList"
1718    UGET    26   2      ; Space
1719    KSTR    27 201      ; "nil"
1720    MULVV   26  26  27
1721    ADDVV   25  25  26
1722    CALL    24   2   2
1723    MULVV   23  23  24
1724    UGET    24  12      ; Ct
1725    KSTR    25   8      ; ""
1726    CALL    24   2   2
1727    ADDVV   23  23  24
1728    MULVV   22  22  23
1729    UGET    23  36      ; White
1730    MULVV   22  22  23
1731    UGET    23  22      ; sym
1732    KSTR    24 166      ; ")"
1733    CALL    23   2   2
1734    MULVV   22  22  23
1735    UGET    23  12      ; Ct
1736    KSTR    24   8      ; ""
1737    CALL    23   2   2
1738    UGET    24  12      ; Ct
1739    KSTR    25   8      ; ""
1740    CALL    24   2   2
1741    MULVV   23  23  24
1742    ADDVV   22  22  23
1743    TSETS   22  21 202  ; "FnArgsDef"
1744    GGET    22 203      ; "FnArgDef"
1745    UGET    23  22      ; sym
1746    KSTR    24  61      ; ","
1747    CALL    23   2   2
1748    UGET    24  13      ; Break
1749    ADDVV   23  23  24
1750    UGET    24  36      ; White
1751    MULVV   23  23  24
1752    GGET    24 203      ; "FnArgDef"
1753    MULVV   23  23  24
1754    KSHORT  24   0
1755    POW     23  23  24
1756    MULVV   22  22  23
1757    UGET    23  22      ; sym
1758    KSTR    24  61      ; ","
1759    CALL    23   2   2
1760    UGET    24  13      ; Break
1761    ADDVV   23  23  24
1762    UGET    24  36      ; White
1763    MULVV   23  23  24
1764    UGET    24  12      ; Ct
1765    MOV     25  19
1766    CALL    24   2   2
1767    MULVV   23  23  24
1768    KSHORT  24   0
1769    POW     23  23  24
1770    MULVV   22  22  23
1771    UGET    23  12      ; Ct
1772    MOV     24  19
1773    CALL    23   2   2
1774    ADDVV   22  22  23
1775    TSETS   22  21 199  ; "FnArgDefList"
1776    UGET    22  12      ; Ct
1777    ADDVV   23  16  17
1778    UGET    24  22      ; sym
1779    KSTR    25  85      ; "="
1780    CALL    24   2   2
1781    GGET    25  38      ; "Exp"
1782    MULVV   24  24  25
1783    KSHORT  25  -1
1784    POW     24  24  25
1785    MULVV   23  23  24
1786    CALL    22   2   2
1787    TSETS   22  21 203  ; "FnArgDef"
1788    GGET    22 202      ; "FnArgsDef"
1789    UGET    23  22      ; sym
1790    KSTR    24 204      ; "->"
1791    CALL    23   2   2
1792    UGET    24   9      ; Cc
1793    KSTR    25 205      ; "slim"
1794    CALL    24   2   2
1795    MULVV   23  23  24
1796    UGET    24  22      ; sym
1797    KSTR    25 206      ; "=>"
1798    CALL    24   2   2
1799    UGET    25   9      ; Cc
1800    KSTR    26 207      ; "fat"
1801    CALL    25   2   2
1802    MULVV   24  24  25
1803    ADDVV   23  23  24
1804    MULVV   22  22  23
1805    GGET    23  44      ; "Body"
1806    UGET    24  12      ; Ct
1807    KSTR    25   8      ; ""
1808    CALL    24   2   2
1809    ADDVV   23  23  24
1810    MULVV   22  22  23
1811    UGET    23   8      ; mark
1812    KSTR    24 208      ; "fndef"
1813    CALL    23   2   2
1814    DIVVV   22  22  23
1815    TSETS   22  21 144  ; "FunLit"
1816    UGET    22  22      ; sym
1817    KSTR    23  61      ; ","
1818    CALL    22   2   2
1819    MULVV   22  22  16
1820    KSHORT  23   0
1821    POW     22  22  23
1822    MULVV   22  16  22
1823    TSETS   22  21  53  ; "NameList"
1824    GGET    22 143      ; "TableLit"
1825    ADDVV   22  16  22
1826    TSETS   22  21 209  ; "NameOrDestructure"
1827    GGET    22 209      ; "NameOrDestructure"
1828    UGET    23  22      ; sym
1829    KSTR    24  61      ; ","
1830    CALL    23   2   2
1831    GGET    24 209      ; "NameOrDestructure"
1832    MULVV   23  23  24
1833    KSHORT  24   0
1834    POW     23  23  24
1835    MULVV   22  22  23
1836    TSETS   22  21  86  ; "AssignableNameList"
1837    GGET    22  38      ; "Exp"
1838    UGET    23  22      ; sym
1839    KSTR    24  61      ; ","
1840    CALL    23   2   2
1841    GGET    24  38      ; "Exp"
1842    MULVV   23  23  24
1843    KSHORT  24   0
1844    POW     23  23  24
1845    MULVV   22  22  23
1846    TSETS   22  21  34  ; "ExpList"
1847    GGET    22  38      ; "Exp"
1848    UGET    23  22      ; sym
1849    KSTR    24  61      ; ","
1850    CALL    23   2   2
1851    UGET    24  22      ; sym
1852    KSTR    25 210      ; ";"
1853    CALL    24   2   2
1854    ADDVV   23  23  24
1855    GGET    24  38      ; "Exp"
1856    MULVV   23  23  24
1857    KSHORT  24   0
1858    POW     23  23  24
1859    MULVV   22  22  23
1860    TSETS   22  21  65  ; "ExpListLow"
1861    UGET    22  10      ; P
1862    KSTR    23 136      ; "-"
1863    CALL    22   2   2
1864    UNM     22  22
1865    GGET    23  34      ; "ExpList"
1866    UGET    24  22      ; sym
1867    KSTR    25  61      ; ","
1868    CALL    24   2   2
1869    GGET    25 101      ; "TableBlock"
1870    UGET    26  21      ; SpaceBreak
1871    GGET    27  45      ; "Advance"
1872    MULVV   26  26  27
1873    GGET    27 211      ; "ArgBlock"
1874    MULVV   26  26  27
1875    GGET    27 101      ; "TableBlock"
1876    KSHORT  28  -1
1877    POW     27  27  28
1878    MULVV   26  26  27
1879    ADDVV   25  25  26
1880    MULVV   24  24  25
1881    GGET    25 101      ; "TableBlock"
1882    ADDVV   24  24  25
1883    KSHORT  25  -1
1884    POW     24  24  25
1885    MULVV   23  23  24
1886    GGET    24 101      ; "TableBlock"
1887    ADDVV   23  23  24
1888    MULVV   22  22  23
1889    TSETS   22  21 147  ; "InvokeArgs"
1890    GGET    22 212      ; "ArgLine"
1891    UGET    23  22      ; sym
1892    KSTR    24  61      ; ","
1893    CALL    23   2   2
1894    UGET    24  21      ; SpaceBreak
1895    MULVV   23  23  24
1896    GGET    24 212      ; "ArgLine"
1897    MULVV   23  23  24
1898    KSHORT  24   0
1899    POW     23  23  24
1900    MULVV   22  22  23
1901    GGET    23  48      ; "PopIndent"
1902    MULVV   22  22  23
1903    TSETS   22  21 211  ; "ArgBlock"
1904    GGET    22  22      ; "CheckIndent"
1905    GGET    23  34      ; "ExpList"
1906    MULVV   22  22  23
1907    TSETS   22  21 212  ; "ArgLine"
1908    CALL    20   2   2
1909    MOV     21  20
1910    MOV     22   3
1911    UCLO     0 => 1912
1912 => RET     21   3

-- BYTECODE -- parse.lua:212-214
0001    UGET     0   1      ; file_grammar
0002    MOV      1   0
0003    TGETS    0   0   0  ; "match"
0004    UGET     2   2      ; str
0005    CALL     0   2   3
0006    USETV    0   0      ; tree
0007    RET0     0   1

-- BYTECODE -- parse.lua:214-216
0001    GGET     1   0      ; "debug"
0002    TGETS    1   1   1  ; "traceback"
0003    MOV      2   0
0004    KSHORT   3   2
0005    CALLT    1   3

-- BYTECODE -- parse.lua:210-236
0001    KPRI     2   0
0002    GGET     3   0      ; "xpcall"
0003    FNEW     4   1      ; parse.lua:212
0004    FNEW     5   2      ; parse.lua:214
0005    CALL     3   3   3
0006    GGET     5   3      ; "type"
0007    MOV      6   4
0008    CALL     5   2   2
0009    ISNES    5   4      ; "string"
0010    JMP      5 => 0015
0011    KPRI     5   0
0012    MOV      6   4
0013    UCLO     0 => 0014
0014 => RET      5   3
0015 => IST          2
0016    JMP      5 => 0060
0017    KPRI     5   0
0018    UGET     6   1      ; state
0019    TGETS    6   6   5  ; "last_pos"
0020    ISF          4
0021    JMP      7 => 0035
0022    KPRI     7   0
0023    UGET     8   2      ; unpack
0024    MOV      9   4
0025    CALL     8   3   2
0026    MOV      5   9
0027    MOV      7   8
0028    ISF          5
0029    JMP      8 => 0033
0030    KSTR     8   6      ; " "
0031    MOV      9   5
0032    CAT      5   8   9
0033 => KSHORT   8  -1
0034    TGETV    6   7   8
0035 => UGET     7   3      ; pos_to_line
0036    MOV      8   1
0037    MOV      9   6
0038    CALL     7   2   3
0039    UGET     8   4      ; get_line
0040    MOV      9   1
0041    MOV     10   7
0042    CALL     8   2   3
0043    IST          8
0044    JMP      9 => 0046
0045    KSTR     8   7      ; ""
0046 => KPRI     9   0
0047    UGET    10   5      ; err_msg
0048    MOV     11  10
0049    TGETS   10  10   8  ; "format"
0050    ISTC    12   5
0051    JMP     12 => 0053
0052    KSTR    12   7      ; ""
0053 => MOV     13   7
0054    UGET    14   6      ; trim
0055    MOV     15   8
0056    CALL    14   0   2
0057    CALLM   10   0   3
0058    UCLO     0 => 0059
0059 => RETM     9   1
0060 => UCLO     0 => 0061
0061 => RET1     2   2

-- BYTECODE -- parse.lua:206-238
0001    UGET     0   0      ; build_grammar
0002    CALL     0   3   1
0003    UGET     2   1      ; White
0004    MULVV    2   2   0
0005    UGET     3   1      ; White
0006    MULVV    2   2   3
0007    MULVN    2   2   0  ; -1
0008    TDUP     3   1
0009    FNEW     4   0      ; parse.lua:210
0010    TSETS    4   3   2  ; "match"
0011    UCLO     0 => 0012
0012 => RET1     3   2

-- BYTECODE -- parse.lua:242-244
0001    UGET     1   0      ; file_parser
0002    CALL     1   2   1
0003    MOV      2   1
0004    TGETS    1   1   0  ; "match"
0005    MOV      3   0
0006    CALLT    1   3

-- BYTECODE -- parse.lua:0-246
0001    KPRI     0   1
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "lpeg"
0004    CALL     1   2   2
0005    TGETS    2   1   2  ; "setmaxstack"
0006    KSHORT   3 10000
0007    CALL     2   1   2
0008    KSTR     2   3      ; "Failed to parse:%s\n [%d] >>    %s"
0009    KPRI     3   0
0010    GGET     4   0      ; "require"
0011    KSTR     5   4      ; "moonscript.data"
0012    CALL     4   2   2
0013    TGETS    3   4   5  ; "Stack"
0014    KNIL     4   6
0015    GGET     7   0      ; "require"
0016    KSTR     8   6      ; "moonscript.util"
0017    CALL     7   2   2
0018    TGETS    8   7   7  ; "trim"
0019    TGETS    9   7   8  ; "pos_to_line"
0020    TGETS    6   7   9  ; "get_line"
0021    MOV      5   9
0022    MOV      4   8
0023    KPRI     7   0
0024    GGET     8   0      ; "require"
0025    KSTR     9   6      ; "moonscript.util"
0026    CALL     8   2   2
0027    TGETS    7   8  10  ; "unpack"
0028    KPRI     8   0
0029    GGET     9   0      ; "require"
0030    KSTR    10  11      ; "moonscript.parse.env"
0031    CALL     9   2   2
0032    TGETS    8   9  12  ; "wrap_env"
0033    KNIL     9  18
0034    TGETS   19   1  13  ; "R"
0035    TGETS   20   1  14  ; "S"
0036    TGETS   21   1  15  ; "V"
0037    TGETS   22   1  16  ; "P"
0038    TGETS   23   1  17  ; "C"
0039    TGETS   24   1  18  ; "Ct"
0040    TGETS   25   1  19  ; "Cmt"
0041    TGETS   26   1  20  ; "Cg"
0042    TGETS   27   1  21  ; "Cb"
0043    TGETS   18   1  22  ; "Cc"
0044    MOV     17  27
0045    MOV     16  26
0046    MOV     15  25
0047    MOV     14  24
0048    MOV     13  23
0049    MOV     12  22
0050    MOV     11  21
0051    MOV     10  20
0052    MOV      9  19
0053    KNIL    19  31
0054    GGET    32   0      ; "require"
0055    KSTR    33  23      ; "moonscript.parse.literals"
0056    CALL    32   2   2
0057    TGETS   33  32  24  ; "White"
0058    TGETS   34  32  25  ; "Break"
0059    TGETS   35  32  26  ; "Stop"
0060    TGETS   36  32  27  ; "Comment"
0061    TGETS   37  32  28  ; "Space"
0062    TGETS   38  32  29  ; "SomeSpace"
0063    TGETS   39  32  30  ; "SpaceBreak"
0064    TGETS   40  32  31  ; "EmptyLine"
0065    TGETS   41  32  32  ; "AlphaNum"
0066    TGETS   42  32  33  ; "Num"
0067    TGETS   43  32  34  ; "Shebang"
0068    TGETS   44  32  35  ; "L"
0069    TGETS   31  32  36  ; "Name"
0070    MOV     30  44
0071    MOV     29  43
0072    MOV     28  42
0073    MOV     27  41
0074    MOV     26  40
0075    MOV     25  39
0076    MOV     24  38
0077    MOV     23  37
0078    MOV     22  36
0079    MOV     21  35
0080    MOV     20  34
0081    MOV     19  33
0082    MULVV   32  23  31
0083    FNEW    33  37      ; parse.lua:24
0084    DIVVV   33  28  33
0085    MULVV   28  23  33
0086    KNIL    33  52
0087    GGET    53   0      ; "require"
0088    KSTR    54  38      ; "moonscript.parse.util"
0089    CALL    53   2   2
0090    TGETS   54  53  39  ; "Indent"
0091    TGETS   55  53  40  ; "Cut"
0092    TGETS   56  53  41  ; "ensure"
0093    TGETS   57  53  42  ; "extract_line"
0094    TGETS   58  53  43  ; "mark"
0095    TGETS   59  53  44  ; "pos"
0096    TGETS   60  53  45  ; "flatten_or_mark"
0097    TGETS   61  53  46  ; "is_assignable"
0098    TGETS   62  53  47  ; "check_assignable"
0099    TGETS   63  53  48  ; "format_assign"
0100    TGETS   64  53  49  ; "format_single_assign"
0101    TGETS   65  53  50  ; "sym"
0102    TGETS   66  53  51  ; "symx"
0103    TGETS   67  53  52  ; "simple_string"
0104    TGETS   68  53  53  ; "wrap_func_arg"
0105    TGETS   69  53  54  ; "join_chain"
0106    TGETS   70  53  55  ; "wrap_decorator"
0107    TGETS   71  53  56  ; "check_lua_string"
0108    TGETS   72  53  57  ; "self_assign"
0109    TGETS   52  53  58  ; "got"
0110    MOV     51  72
0111    MOV     50  71
0112    MOV     49  70
0113    MOV     48  69
0114    MOV     47  68
0115    MOV     46  67
0116    MOV     45  66
0117    MOV     44  65
0118    MOV     43  64
0119    MOV     42  63
0120    MOV     41  62
0121    MOV     40  61
0122    MOV     39  60
0123    MOV     38  59
0124    MOV     37  58
0125    MOV     36  57
0126    MOV     35  56
0127    MOV     34  55
0128    MOV     33  54
0129    MOV     53   8
0130    MOV     54   0
0131    FNEW    55  59      ; parse.lua:35
0132    CALL    53   2   3
0133    KPRI    54   0
0134    FNEW    54  60      ; parse.lua:206
0135    TDUP    55  61
0136    TSETS   36  55  42  ; "extract_line"
0137    TSETS   53  55  62  ; "build_grammar"
0138    FNEW    56  63      ; parse.lua:242
0139    TSETS   56  55  64  ; "string"
0140    UCLO     0 => 0141
0141 => RET1    55   2

-----------------------
-- BYTECODE -- init.lua:11-13
0001    GGET     0   0      ; "print"
0002    UGET     1   0      ; dump
0003    VARG     2   0   0
0004    CALLM    1   0   0
0005    CALLMT   0   0

-- BYTECODE -- init.lua:14-16
0001    UGET     1   0      ; lua
0002    TGETS    1   1   0  ; "type"
0003    MOV      2   0
0004    CALL     1   2   2
0005    ISNES    1   1      ; "table"
0006    JMP      1 => 0009
0007    TGETS    1   0   2  ; "__class"
0008    JMP      2 => 0012
0009 => KPRI     1   1
0010    JMP      2 => 0012
0011    KPRI     1   2
0012 => RET1     1   2

-- BYTECODE -- init.lua:17-26
0001    UGET     1   0      ; lua
0002    TGETS    1   1   0  ; "type"
0003    MOV      2   0
0004    CALL     1   2   2
0005    ISNES    1   1      ; "table"
0006    JMP      2 => 0011
0007    TGETS    2   0   2  ; "__class"
0008    ISF          2
0009    JMP      3 => 0011
0010    RET1     2   2
0011 => RET1     1   2

-- BYTECODE -- init.lua:28-48
0001    TNEW     3   0
0002    KSHORT   4   1
0003 => LOOP     5 => 0016
0004    UGET     5   0      ; lua
0005    TGETS    5   5   0  ; "debug"
0006    TGETS    5   5   1  ; "getupvalue"
0007    MOV      6   0
0008    MOV      7   4
0009    CALL     5   2   3
0010    ISNEP    5   0
0011    JMP      6 => 0013
0012    JMP      5 => 0016
0013 => TSETV    4   3   5
0014    ADDVN    4   4   0  ; 1
0015    JMP      5 => 0003
0016 => TGETV    5   3   1
0017    IST          5
0018    JMP      5 => 0026
0019    GGET     5   2      ; "error"
0020    KSTR     6   3      ; "Failed to find upvalue: "
0021    GGET     7   4      ; "tostring"
0022    MOV      8   1
0023    CALL     7   2   2
0024    CAT      6   6   7
0025    CALL     5   1   2
0026 => IST          2
0027    JMP      5 => 0036
0028    UGET     5   0      ; lua
0029    TGETS    5   5   0  ; "debug"
0030    TGETS    5   5   1  ; "getupvalue"
0031    MOV      6   0
0032    TGETV    7   3   1
0033    CALL     5   3   3
0034    RET1     6   2
0035    JMP      5 => 0043
0036 => UGET     5   0      ; lua
0037    TGETS    5   5   0  ; "debug"
0038    TGETS    5   5   5  ; "setupvalue"
0039    MOV      6   0
0040    TGETV    7   3   1
0041    MOV      8   2
0042    CALLT    5   4
0043 => RET0     0   1

-- BYTECODE -- init.lua:55-62
0001    UGET     2   0      ; scope
0002    TGETV    2   2   1
0003    ISEQP    2   0
0004    JMP      3 => 0007
0005    RET1     2   2
0006    JMP      3 => 0010
0007 => UGET     3   1      ; old_env
0008    TGETV    3   3   1
0009    RET1     3   2
0010 => RET0     0   1

-- BYTECODE -- init.lua:52-66
0001    UGET     2   0      ; getfenv
0002    MOV      3   0
0003    CALL     2   2   2
0004    GGET     3   0      ; "setmetatable"
0005    TNEW     4   0
0006    TDUP     5   2
0007    FNEW     6   1      ; init.lua:55
0008    TSETS    6   5   3  ; "__index"
0009    CALL     3   2   3
0010    UGET     4   1      ; setfenv
0011    MOV      5   0
0012    MOV      6   3
0013    CALL     4   1   3
0014    MOV      4   0
0015    VARG     5   0   2
0016    UCLO     0 => 0017
0017 => CALLMT   4   0

-- BYTECODE -- init.lua:73-75
0001    UGET     0   0      ; val
0002    UGET     1   1      ; obj
0003    VARG     2   0   0
0004    CALLMT   0   1

-- BYTECODE -- init.lua:69-81
0001    UGET     2   0      ; obj
0002    TGETV    2   2   1
0003    ISF          2
0004    JMP      3 => 0017
0005    UGET     3   1      ; lua
0006    TGETS    3   3   0  ; "type"
0007    MOV      4   2
0008    CALL     3   2   2
0009    ISNES    3   1      ; "function"
0010    JMP      3 => 0017
0011    KPRI     3   0
0012    FNEW     3   2      ; init.lua:73
0013    TSETV    3   0   1
0014    UCLO     0 => 0015
0015 => RET1     3   2
0016    JMP      3 => 0019
0017 => UCLO     0 => 0018
0018 => RET1     2   2
0019 => UCLO     0 => 0020
0020 => RET0     0   1

-- BYTECODE -- init.lua:67-83
0001    GGET     1   0      ; "setmetatable"
0002    TNEW     2   0
0003    TDUP     3   2
0004    FNEW     4   1      ; init.lua:69
0005    TSETS    4   3   3  ; "__index"
0006    UCLO     0 => 0007
0007 => CALLT    1   3

-- BYTECODE -- init.lua:90-94
0001    UGET     2   0      ; fn
0002    MOV      3   0
0003    MOV      4   1
0004    CALL     2   2   3
0005    GGET     3   0      ; "rawset"
0006    MOV      4   0
0007    MOV      5   1
0008    MOV      6   2
0009    CALL     3   1   4
0010    RET1     2   2

-- BYTECODE -- init.lua:84-96
0001    IST          1
0002    JMP      2 => 0005
0003    MOV      1   0
0004    TNEW     0   0
0005 => GGET     2   0      ; "setmetatable"
0006    MOV      3   0
0007    TDUP     4   2
0008    FNEW     5   1      ; init.lua:90
0009    TSETS    5   4   3  ; "__index"
0010    UCLO     0 => 0011
0011 => CALLT    2   3

-- BYTECODE -- init.lua:97-112
0001    TNEW     0   3
0002    VARG     1   0   0
0003    TSETM    1   0      ; 1
0004    LEN      1   0
0005    KSHORT   2   2
0006    ISGE     1   2
0007    JMP      1 => 0009
0008    RET0     0   1
0009 => KSHORT   1   1
0010    LEN      2   0
0011    SUBVN    2   2   1  ; 1
0012    KSHORT   3   1
0013    FORI     1 => 0023
0014 => TGETV    5   0   4
0015    ADDVN    6   4   1  ; 1
0016    TGETV    6   0   6
0017    GGET     7   0      ; "setmetatable"
0018    MOV      8   5
0019    TDUP     9   1
0020    TSETS    6   9   2  ; "__index"
0021    CALL     7   1   3
0022    FORL     1 => 0014
0023 => TGETB    1   0   1
0024    RET1     1   2

-- BYTECODE -- init.lua:113-119
0001    TNEW     1   0
0002    GGET     2   0      ; "pairs"
0003    MOV      3   0
0004    CALL     2   4   2
0005    ISNEXT   5 => 0007
0006 => TSETV    6   1   5
0007 => ITERN    5   3   3
0008    ITERL    5 => 0006
0009    RET1     1   2

-- BYTECODE -- init.lua:120-127
0001    GGET     2   0      ; "pairs"
0002    TGETS    3   1   1  ; "__base"
0003    CALL     2   4   2
0004    ISNEXT   5 => 0012
0005 => MOV      8   5
0006    TGETS    7   5   2  ; "match"
0007    KSTR     9   3      ; "^__"
0008    CALL     7   2   3
0009    IST          7
0010    JMP      7 => 0012
0011    TSETV    6   0   5
0012 => ITERN    5   3   3
0013    ITERL    5 => 0005
0014    TGETS    2   1   4  ; "__init"
0015    MOV      3   0
0016    VARG     4   0   2
0017    CALLMT   2   1

-- BYTECODE -- init.lua:131-133
0001    UGET     1   0      ; object
0002    UGET     2   1      ; name
0003    TGETV    1   1   2
0004    UGET     2   0      ; object
0005    VARG     3   0   1
0006    CALLMT   1   1

-- BYTECODE -- init.lua:128-135
0001    KSHORT   3   1
0002    LEN      4   2
0003    KSHORT   5   1
0004    FORI     3 => 0010
0005 => TGETV    7   2   6
0006    FNEW     8   0      ; init.lua:131
0007    TSETV    8   0   7
0008    UCLO     7 => 0009
0009 => FORL     3 => 0005
0010 => UCLO     0 => 0011
0011 => RET0     0   1

-- BYTECODE -- init.lua:136-147
0001    ISF          2
0002    JMP      3 => 0012
0003    KSHORT   3   1
0004    LEN      4   2
0005    KSHORT   5   1
0006    FORI     3 => 0011
0007 => TGETV    7   2   6
0008    TGETV    8   1   7
0009    TSETV    8   0   7
0010    FORL     3 => 0007
0011 => JMP      3 => 0019
0012 => GGET     3   0      ; "pairs"
0013    MOV      4   1
0014    CALL     3   4   2
0015    ISNEXT   6 => 0017
0016 => TSETV    7   0   6
0017 => ITERN    6   3   3
0018    ITERL    6 => 0016
0019 => RET0     0   1

-- BYTECODE -- init.lua:148-159
0001    LEN      2   0
0002    KSHORT   3   1
0003    ISGE     3   2
0004    JMP      3 => 0021
0005    MOV      3   1
0006    TGETB    4   0   1
0007    TGETB    5   0   2
0008    CALL     3   2   3
0009    KSHORT   4   3
0010    MOV      5   2
0011    KSHORT   6   1
0012    FORI     4 => 0019
0013 => MOV      8   1
0014    MOV      9   3
0015    TGETV   10   0   7
0016    CALL     8   2   3
0017    MOV      3   8
0018    FORL     4 => 0013
0019 => RET1     3   2
0020    JMP      3 => 0023
0021 => TGETB    3   0   1
0022    RET1     3   2
0023 => RET0     0   1

-- BYTECODE -- init.lua:0-176
0001    TDUP     0   0
0002    GGET     1   1      ; "debug"
0003    TSETS    1   0   1  ; "debug"
0004    GGET     1   2      ; "type"
0005    TSETS    1   0   2  ; "type"
0006    KNIL     1   3
0007    GGET     4   3      ; "require"
0008    KSTR     5   4      ; "moonscript.util"
0009    CALL     4   2   2
0010    TGETS    5   4   5  ; "getfenv"
0011    TGETS    6   4   6  ; "setfenv"
0012    TGETS    3   4   7  ; "dump"
0013    MOV      2   6
0014    MOV      1   5
0015    KNIL     4  16
0016    FNEW     4   8      ; init.lua:11
0017    FNEW     5   9      ; init.lua:14
0018    FNEW     6  10      ; init.lua:17
0019    GGET    17  11      ; "setmetatable"
0020    TDUP    18  13
0021    FNEW    19  12      ; init.lua:28
0022    TSETS   19  18  14  ; "upvalue"
0023    TDUP    19  15
0024    TGETS   20   0   1  ; "debug"
0025    TSETS   20  19  16  ; "__index"
0026    CALL    17   2   3
0027    MOV      7  17
0028    FNEW     8  17      ; init.lua:52
0029    FNEW     9  18      ; init.lua:67
0030    FNEW    10  19      ; init.lua:84
0031    FNEW    11  20      ; init.lua:97
0032    FNEW    12  21      ; init.lua:113
0033    FNEW    13  22      ; init.lua:120
0034    FNEW    14  23      ; init.lua:128
0035    FNEW    15  24      ; init.lua:136
0036    FNEW    16  25      ; init.lua:148
0037    TDUP    17  26
0038    TSETS    3  17   7  ; "dump"
0039    TSETS    4  17  27  ; "p"
0040    TSETS    5  17  28  ; "is_object"
0041    TSETS    6  17   2  ; "type"
0042    TSETS    7  17   1  ; "debug"
0043    TSETS    8  17  29  ; "run_with_scope"
0044    TSETS    9  17  30  ; "bind_methods"
0045    TSETS   10  17  31  ; "defaultbl"
0046    TSETS   11  17  32  ; "extend"
0047    TSETS   12  17  33  ; "copy"
0048    TSETS   13  17  34  ; "mixin"
0049    TSETS   14  17  35  ; "mixin_object"
0050    TSETS   15  17  36  ; "mixin_table"
0051    TSETS   16  17  37  ; "fold"
0052    UCLO     0 => 0053
0053 => RET1    17   2

-----------------------
-- BYTECODE -- all.lua:0-6
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "moon"
0003    CALL     0   2   2
0004    GGET     1   2      ; "pairs"
0005    MOV      2   0
0006    CALL     1   4   2
0007    ISNEXT   4 => 0010
0008 => GGET     6   3      ; "_G"
0009    TSETV    5   6   4
0010 => ITERN    4   3   3
0011    ITERL    4 => 0008
0012    RET1     0   2

