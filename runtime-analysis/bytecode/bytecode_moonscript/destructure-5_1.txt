
main <./moonscript/transform/destructure.lua:0,0> (59 instructions, 236 bytes at 0x7ff1e8c068d0)
0+ params, 13 slots, 0 upvalues, 13 locals, 17 constants, 5 functions
	1	[3]	GETGLOBAL	3 -1	; require
	2	[3]	LOADK    	4 -2	; "moonscript.types"
	3	[3]	CALL     	3 2 2
	4	[4]	GETTABLE 	4 3 -3	; "ntype"
	5	[4]	GETTABLE 	5 3 -4	; "mtype"
	6	[4]	GETTABLE 	2 3 -5	; "build"
	7	[4]	MOVE     	1 5
	8	[4]	MOVE     	0 4
	9	[6]	LOADNIL  	3 3
	10	[7]	GETGLOBAL	4 -1	; require
	11	[7]	LOADK    	5 -6	; "moonscript.transform.names"
	12	[7]	CALL     	4 2 2
	13	[7]	GETTABLE 	3 4 -7	; "NameProxy"
	14	[8]	LOADNIL  	4 4
	15	[9]	GETGLOBAL	5 -8	; table
	16	[9]	GETTABLE 	4 5 -9	; "insert"
	17	[10]	LOADNIL  	5 5
	18	[11]	GETGLOBAL	6 -1	; require
	19	[11]	LOADK    	7 -10	; "moonscript.util"
	20	[11]	CALL     	6 2 2
	21	[11]	GETTABLE 	5 6 -11	; "unpack"
	22	[12]	LOADNIL  	6 6
	23	[13]	GETGLOBAL	7 -1	; require
	24	[13]	LOADK    	8 -12	; "moonscript.errors"
	25	[13]	CALL     	7 2 2
	26	[13]	GETTABLE 	6 7 -13	; "user_error"
	27	[14]	LOADNIL  	7 7
	28	[32]	CLOSURE  	7 0	; 0x7ff1e8c06b60
	29	[33]	LOADNIL  	8 8
	30	[42]	CLOSURE  	8 1	; 0x7ff1e8c065f0
	31	[42]	MOVE     	0 0
	32	[43]	LOADNIL  	9 9
	33	[103]	CLOSURE  	9 2	; 0x7ff1e8c07730
	34	[103]	MOVE     	0 0
	35	[103]	MOVE     	0 7
	36	[103]	MOVE     	0 4
	37	[103]	MOVE     	0 9
	38	[103]	MOVE     	0 6
	39	[104]	LOADNIL  	10 10
	40	[149]	CLOSURE  	10 3	; 0x7ff1e8c07080
	41	[149]	MOVE     	0 9
	42	[149]	MOVE     	0 3
	43	[149]	MOVE     	0 2
	44	[149]	MOVE     	0 4
	45	[149]	MOVE     	0 5
	46	[150]	LOADNIL  	11 11
	47	[227]	CLOSURE  	11 4	; 0x7ff1e8c086c0
	48	[227]	MOVE     	0 5
	49	[227]	MOVE     	0 0
	50	[227]	MOVE     	0 4
	51	[227]	MOVE     	0 10
	52	[227]	MOVE     	0 2
	53	[228]	NEWTABLE 	12 0 4
	54	[229]	SETTABLE 	12 -14 8	; "has_destructure" -
	55	[230]	SETTABLE 	12 -15 11	; "split_assign" -
	56	[231]	SETTABLE 	12 -16 10	; "build_assign" -
	57	[232]	SETTABLE 	12 -17 9	; "extract_assign_names" -
	58	[233]	RETURN   	12 2
	59	[233]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:15,32> (21 instructions, 84 bytes at 0x7ff1e8c06b60)
0+ params, 14 slots, 0 upvalues, 14 locals, 1 constant, 0 functions
	1	[17]	NEWTABLE 	1 0 0
	2	[18]	LOADK    	2 -1	; 1
	3	[19]	NEWTABLE 	3 0 0
	4	[19]	VARARG   	4 0
	5	[21]	SETLIST  	3 0 1	; 1
	6	[22]	LOADK    	4 -1	; 1
	7	[22]	LEN      	5 3
	8	[22]	LOADK    	6 -1	; 1
	9	[22]	FORPREP  	4 9	; to 19
	10	[23]	GETTABLE 	8 3 7
	11	[24]	LOADK    	9 -1	; 1
	12	[24]	LEN      	10 8
	13	[24]	LOADK    	11 -1	; 1
	14	[24]	FORPREP  	9 3	; to 18
	15	[25]	GETTABLE 	13 8 12
	16	[26]	SETTABLE 	1 2 13
	17	[27]	ADD      	2 2 -1	; - 1
	18	[24]	FORLOOP  	9 -4	; to 15
	19	[22]	FORLOOP  	4 -10	; to 10
	20	[30]	RETURN   	1 2
	21	[32]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:34,42> (16 instructions, 64 bytes at 0x7ff1e8c065f0)
1 param, 8 slots, 1 upvalue, 6 locals, 2 constants, 0 functions
	1	[35]	LOADK    	1 -1	; 1
	2	[35]	LEN      	2 0
	3	[35]	LOADK    	3 -1	; 1
	4	[35]	FORPREP  	1 8	; to 13
	5	[36]	GETTABLE 	5 0 4
	6	[37]	GETUPVAL 	6 0	; ntype
	7	[37]	MOVE     	7 5
	8	[37]	CALL     	6 2 2
	9	[37]	EQ       	0 6 -2	; - "table"
	10	[37]	JMP      	2	; to 13
	11	[38]	LOADBOOL 	6 1 0
	12	[38]	RETURN   	6 2
	13	[35]	FORLOOP  	1 -9	; to 5
	14	[41]	LOADBOOL 	1 0 0
	15	[41]	RETURN   	1 2
	16	[42]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:44,103> (106 instructions, 424 bytes at 0x7ff1e8c07730)
3 params, 18 slots, 5 upvalues, 17 locals, 15 constants, 0 functions
	1	[45]	EQ       	0 1 -1	; - nil
	2	[45]	JMP      	2	; to 5
	3	[46]	NEWTABLE 	3 0 0
	4	[46]	MOVE     	1 3
	5	[48]	EQ       	0 2 -1	; - nil
	6	[48]	JMP      	2	; to 9
	7	[49]	NEWTABLE 	3 0 0
	8	[49]	MOVE     	2 3
	9	[51]	LOADK    	3 -2	; 1
	10	[52]	GETTABLE 	4 0 -3	; 2
	11	[53]	LOADK    	5 -2	; 1
	12	[53]	LEN      	6 4
	13	[53]	LOADK    	7 -2	; 1
	14	[53]	FORPREP  	5 89	; to 104
	15	[54]	GETTABLE 	9 4 8
	16	[55]	LOADNIL  	10 11
	17	[56]	LEN      	12 9
	18	[56]	EQ       	0 12 -2	; - 1
	19	[56]	JMP      	12	; to 32
	20	[57]	NEWTABLE 	12 2 0
	21	[58]	LOADK    	13 -4	; "index"
	22	[58]	NEWTABLE 	14 2 0
	23	[60]	LOADK    	15 -5	; "number"
	24	[62]	MOVE     	16 3
	25	[62]	SETLIST  	14 2 1	; 1
	26	[63]	SETLIST  	12 2 1	; 1
	27	[64]	ADD      	3 3 -2	; - 1
	28	[65]	GETTABLE 	13 9 -2	; 1
	29	[65]	MOVE     	11 12
	30	[65]	MOVE     	10 13
	31	[65]	JMP      	29	; to 61
	32	[67]	GETTABLE 	12 9 -2	; 1
	33	[68]	LOADNIL  	13 13
	34	[69]	GETUPVAL 	14 0	; ntype
	35	[69]	MOVE     	15 12
	36	[69]	CALL     	14 2 2
	37	[69]	EQ       	0 14 -6	; - "key_literal"
	38	[69]	JMP      	14	; to 53
	39	[70]	GETTABLE 	14 12 -3	; 2
	40	[71]	GETUPVAL 	15 0	; ntype
	41	[71]	MOVE     	16 14
	42	[71]	CALL     	15 2 2
	43	[71]	EQ       	0 15 -7	; - "colon"
	44	[71]	JMP      	2	; to 47
	45	[72]	MOVE     	13 14
	46	[72]	JMP      	11	; to 58
	47	[74]	NEWTABLE 	15 2 0
	48	[75]	LOADK    	16 -8	; "dot"
	49	[77]	MOVE     	17 14
	50	[77]	SETLIST  	15 2 1	; 1
	51	[77]	MOVE     	13 15
	52	[78]	JMP      	5	; to 58
	53	[80]	NEWTABLE 	14 2 0
	54	[81]	LOADK    	15 -4	; "index"
	55	[83]	MOVE     	16 12
	56	[83]	SETLIST  	14 2 1	; 1
	57	[83]	MOVE     	13 14
	58	[85]	GETTABLE 	14 9 -3	; 2
	59	[85]	MOVE     	11 13
	60	[85]	MOVE     	10 14
	61	[87]	GETUPVAL 	12 1	; join
	62	[87]	MOVE     	13 2
	63	[87]	NEWTABLE 	14 1 0
	64	[89]	MOVE     	15 11
	65	[89]	SETLIST  	14 1 1	; 1
	66	[87]	CALL     	12 3 2
	67	[89]	MOVE     	11 12
	68	[90]	GETUPVAL 	12 0	; ntype
	69	[90]	MOVE     	13 10
	70	[90]	CALL     	12 2 2
	71	[91]	EQ       	1 -9 12	; "value" -
	72	[91]	JMP      	6	; to 79
	73	[91]	EQ       	1 -10 12	; "ref" -
	74	[91]	JMP      	4	; to 79
	75	[91]	EQ       	1 -11 12	; "chain" -
	76	[91]	JMP      	2	; to 79
	77	[91]	EQ       	0 -12 12	; "self" -
	78	[91]	JMP      	8	; to 87
	79	[92]	GETUPVAL 	13 2	; insert
	80	[92]	MOVE     	14 1
	81	[92]	NEWTABLE 	15 2 0
	82	[93]	MOVE     	16 10
	83	[95]	MOVE     	17 11
	84	[95]	SETLIST  	15 2 1	; 1
	85	[92]	CALL     	13 3 1
	86	[95]	JMP      	17	; to 104
	87	[96]	EQ       	0 -13 12	; "table" -
	88	[96]	JMP      	6	; to 95
	89	[97]	GETUPVAL 	13 3	; extract_assign_names
	90	[97]	MOVE     	14 10
	91	[97]	MOVE     	15 1
	92	[97]	MOVE     	16 11
	93	[97]	CALL     	13 4 1
	94	[97]	JMP      	9	; to 104
	95	[99]	GETUPVAL 	13 4	; user_error
	96	[99]	LOADK    	14 -14	; "Can't destructure value of type: "
	97	[99]	GETGLOBAL	15 -15	; tostring
	98	[99]	GETUPVAL 	16 0	; ntype
	99	[99]	MOVE     	17 10
	100	[99]	CALL     	16 2 0
	101	[99]	CALL     	15 0 2
	102	[99]	CONCAT   	14 14 15
	103	[99]	CALL     	13 2 1
	104	[53]	FORLOOP  	5 -90	; to 15
	105	[102]	RETURN   	1 2
	106	[103]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:105,149> (80 instructions, 320 bytes at 0x7ff1e8c07080)
3 params, 18 slots, 5 upvalues, 14 locals, 11 constants, 0 functions
	1	[106]	GETUPVAL 	3 0	; extract_assign_names
	2	[106]	MOVE     	4 1
	3	[106]	CALL     	3 2 2
	4	[107]	NEWTABLE 	4 0 0
	5	[108]	NEWTABLE 	5 0 0
	6	[109]	NEWTABLE 	6 3 0
	7	[110]	LOADK    	7 -1	; "assign"
	8	[111]	MOVE     	8 4
	9	[113]	MOVE     	9 5
	10	[113]	SETLIST  	6 3 1	; 1
	11	[114]	LOADNIL  	7 7
	12	[115]	SELF     	8 0 -2	; "is_local"
	13	[115]	MOVE     	10 2
	14	[115]	CALL     	8 3 2
	15	[115]	TEST     	8 0 1
	16	[115]	JMP      	3	; to 20
	17	[115]	LEN      	8 3
	18	[115]	EQ       	0 8 -3	; - 1
	19	[115]	JMP      	2	; to 22
	20	[116]	MOVE     	7 2
	21	[116]	JMP      	20	; to 42
	22	[119]	GETUPVAL 	8 1	; NameProxy
	23	[119]	LOADK    	9 -4	; "obj"
	24	[119]	CALL     	8 2 2
	25	[119]	MOVE     	7 8
	26	[120]	GETUPVAL 	8 2	; build
	27	[120]	GETTABLE 	8 8 -5	; "do"
	28	[120]	NEWTABLE 	9 2 0
	29	[121]	GETUPVAL 	10 2	; build
	30	[121]	GETTABLE 	10 10 -6	; "assign_one"
	31	[121]	MOVE     	11 7
	32	[121]	MOVE     	12 2
	33	[121]	CALL     	10 3 2
	34	[121]	NEWTABLE 	11 3 0
	35	[123]	LOADK    	12 -1	; "assign"
	36	[124]	MOVE     	13 4
	37	[126]	MOVE     	14 5
	38	[126]	SETLIST  	11 3 1	; 1
	39	[127]	SETLIST  	9 2 1	; 1
	40	[120]	CALL     	8 2 2
	41	[127]	MOVE     	6 8
	42	[131]	LOADK    	8 -3	; 1
	43	[131]	LEN      	9 3
	44	[131]	LOADK    	10 -3	; 1
	45	[131]	FORPREP  	8 22	; to 68
	46	[132]	GETTABLE 	12 3 11
	47	[133]	GETUPVAL 	13 3	; insert
	48	[133]	MOVE     	14 4
	49	[133]	GETTABLE 	15 12 -3	; 1
	50	[133]	CALL     	13 3 1
	51	[134]	LOADNIL  	13 13
	52	[135]	TEST     	7 0 0
	53	[135]	JMP      	9	; to 63
	54	[136]	GETUPVAL 	14 1	; NameProxy
	55	[136]	GETTABLE 	14 14 -7	; "chain"
	56	[136]	MOVE     	15 7
	57	[136]	GETUPVAL 	16 4	; unpack
	58	[136]	GETTABLE 	17 12 -8	; 2
	59	[136]	CALL     	16 2 0
	60	[136]	CALL     	14 0 2
	61	[136]	MOVE     	13 14
	62	[136]	JMP      	1	; to 64
	63	[138]	LOADK    	13 -9	; "nil"
	64	[140]	GETUPVAL 	14 3	; insert
	65	[140]	MOVE     	15 5
	66	[140]	MOVE     	16 13
	67	[140]	CALL     	14 3 1
	68	[131]	FORLOOP  	8 -23	; to 46
	69	[142]	GETUPVAL 	8 2	; build
	70	[142]	GETTABLE 	8 8 -10	; "group"
	71	[142]	NEWTABLE 	9 2 0
	72	[142]	NEWTABLE 	10 2 0
	73	[144]	LOADK    	11 -11	; "declare"
	74	[146]	MOVE     	12 4
	75	[146]	SETLIST  	10 2 1	; 1
	76	[148]	MOVE     	11 6
	77	[148]	SETLIST  	9 2 1	; 1
	78	[142]	TAILCALL 	8 2 0
	79	[148]	RETURN   	8 0
	80	[149]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:151,227> (104 instructions, 416 bytes at 0x7ff1e8c086c0)
2 params, 20 slots, 5 upvalues, 28 locals, 8 constants, 2 functions
	1	[152]	GETUPVAL 	2 0	; unpack
	2	[152]	MOVE     	3 1
	3	[152]	LOADK    	4 -1	; 2
	4	[152]	CALL     	2 3 3
	5	[153]	NEWTABLE 	4 0 0
	6	[154]	LEN      	5 2
	7	[155]	LEN      	6 3
	8	[156]	LOADK    	7 -2	; 1
	9	[157]	GETGLOBAL	8 -3	; ipairs
	10	[157]	MOVE     	9 2
	11	[157]	CALL     	8 2 4
	12	[157]	JMP      	34	; to 47
	13	[158]	GETUPVAL 	13 1	; ntype
	14	[158]	MOVE     	14 12
	15	[158]	CALL     	13 2 2
	16	[158]	EQ       	0 13 -4	; - "table"
	17	[158]	JMP      	29	; to 47
	18	[159]	LT       	0 7 11
	19	[159]	JMP      	18	; to 38
	20	[160]	SUB      	13 11 -2	; - 1
	21	[161]	GETUPVAL 	14 2	; insert
	22	[161]	MOVE     	15 4
	23	[161]	NEWTABLE 	16 2 0
	24	[162]	LOADK    	17 -5	; "assign"
	25	[171]	CLOSURE  	18 0	; 0x7ff1e8c08cc0
	26	[171]	MOVE     	0 7
	27	[171]	MOVE     	0 13
	28	[171]	MOVE     	0 2
	29	[171]	CALL     	18 1 2
	30	[180]	CLOSURE  	19 1	; 0x7ff1e8c09090
	31	[180]	MOVE     	0 7
	32	[180]	MOVE     	0 13
	33	[180]	MOVE     	0 3
	34	[180]	CALL     	19 1 0
	35	[181]	SETLIST  	16 0 1	; 1
	36	[161]	CALL     	14 3 1
	37	[181]	CLOSE    	13
	38	[183]	GETUPVAL 	13 2	; insert
	39	[183]	MOVE     	14 4
	40	[183]	GETUPVAL 	15 3	; build_assign
	41	[183]	MOVE     	16 0
	42	[183]	MOVE     	17 12
	43	[183]	GETTABLE 	18 3 11
	44	[183]	CALL     	15 4 0
	45	[183]	CALL     	13 0 1
	46	[184]	ADD      	7 11 -2	; - 1
	47	[157]	TFORLOOP 	8 2
	48	[185]	JMP      	-36	; to 13
	49	[187]	LE       	1 7 5
	50	[187]	JMP      	2	; to 53
	51	[187]	LE       	0 7 6
	52	[187]	JMP      	46	; to 99
	53	[188]	LOADNIL  	8 8
	54	[189]	LT       	0 5 7
	55	[189]	JMP      	5	; to 61
	56	[190]	NEWTABLE 	9 1 0
	57	[192]	LOADK    	10 -6	; "_"
	58	[192]	SETLIST  	9 1 1	; 1
	59	[192]	MOVE     	8 9
	60	[192]	JMP      	11	; to 72
	61	[195]	NEWTABLE 	9 0 0
	62	[196]	LOADK    	10 -2	; 1
	63	[197]	MOVE     	11 7
	64	[197]	MOVE     	12 5
	65	[197]	LOADK    	13 -2	; 1
	66	[197]	FORPREP  	11 3	; to 70
	67	[198]	GETTABLE 	15 2 14
	68	[198]	SETTABLE 	9 10 15
	69	[199]	ADD      	10 10 -2	; - 1
	70	[197]	FORLOOP  	11 -4	; to 67
	71	[201]	MOVE     	8 9
	72	[204]	LOADNIL  	9 9
	73	[205]	LT       	0 6 7
	74	[205]	JMP      	5	; to 80
	75	[206]	NEWTABLE 	10 1 0
	76	[208]	LOADK    	11 -7	; "nil"
	77	[208]	SETLIST  	10 1 1	; 1
	78	[208]	MOVE     	9 10
	79	[208]	JMP      	11	; to 91
	80	[211]	NEWTABLE 	10 0 0
	81	[212]	LOADK    	11 -2	; 1
	82	[213]	MOVE     	12 7
	83	[213]	MOVE     	13 6
	84	[213]	LOADK    	14 -2	; 1
	85	[213]	FORPREP  	12 3	; to 89
	86	[214]	GETTABLE 	16 3 15
	87	[214]	SETTABLE 	10 11 16
	88	[215]	ADD      	11 11 -2	; - 1
	89	[213]	FORLOOP  	12 -4	; to 86
	90	[217]	MOVE     	9 10
	91	[220]	GETUPVAL 	10 2	; insert
	92	[220]	MOVE     	11 4
	93	[220]	NEWTABLE 	12 3 0
	94	[221]	LOADK    	13 -5	; "assign"
	95	[222]	MOVE     	14 8
	96	[224]	MOVE     	15 9
	97	[224]	SETLIST  	12 3 1	; 1
	98	[220]	CALL     	10 3 1
	99	[226]	GETUPVAL 	8 4	; build
	100	[226]	GETTABLE 	8 8 -8	; "group"
	101	[226]	MOVE     	9 4
	102	[226]	TAILCALL 	8 2 0
	103	[226]	RETURN   	8 0
	104	[227]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:163,171> (13 instructions, 52 bytes at 0x7ff1e8c08cc0)
0 params, 7 slots, 3 upvalues, 6 locals, 1 constant, 0 functions
	1	[164]	NEWTABLE 	0 0 0
	2	[165]	LOADK    	1 -1	; 1
	3	[166]	GETUPVAL 	2 0	; start
	4	[166]	GETUPVAL 	3 1	; stop
	5	[166]	LOADK    	4 -1	; 1
	6	[166]	FORPREP  	2 4	; to 11
	7	[167]	GETUPVAL 	6 2	; names
	8	[167]	GETTABLE 	6 6 5
	9	[167]	SETTABLE 	0 1 6
	10	[168]	ADD      	1 1 -1	; - 1
	11	[166]	FORLOOP  	2 -5	; to 7
	12	[170]	RETURN   	0 2
	13	[171]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:172,180> (13 instructions, 52 bytes at 0x7ff1e8c09090)
0 params, 7 slots, 3 upvalues, 6 locals, 1 constant, 0 functions
	1	[173]	NEWTABLE 	0 0 0
	2	[174]	LOADK    	1 -1	; 1
	3	[175]	GETUPVAL 	2 0	; start
	4	[175]	GETUPVAL 	3 1	; stop
	5	[175]	LOADK    	4 -1	; 1
	6	[175]	FORPREP  	2 4	; to 11
	7	[176]	GETUPVAL 	6 2	; values
	8	[176]	GETTABLE 	6 6 5
	9	[176]	SETTABLE 	0 1 6
	10	[177]	ADD      	1 1 -1	; - 1
	11	[175]	FORLOOP  	2 -5	; to 7
	12	[179]	RETURN   	0 2
	13	[180]	RETURN   	0 1
