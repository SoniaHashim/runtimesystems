moonscript, accessed from https://luarocks.org/modules/leafo/moonscript
-----------------------

main <./moonscript/line_tables.lua:0,0> (3 instructions, 12 bytes at 0x7f84b2c068c0)
0+ params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[1]	NEWTABLE 	0 0 0
	2	[1]	RETURN   	0 2
	3	[1]	RETURN   	0 1
-----------------------

main <./moonscript/cmd/watchers.lua:0,0> (116 instructions, 464 bytes at 0x7fa46a4068c0)
0+ params, 12 slots, 0 upvalues, 14 locals, 21 constants, 16 functions
	1	[33]	CLOSURE  	0 0	; 0x7fa46a406b10
	2	[34]	LOADNIL  	1 1
	3	[37]	CLOSURE  	1 1	; 0x7fa46a4071f0
	4	[38]	LOADNIL  	2 3
	5	[41]	NEWTABLE 	4 0 2
	6	[42]	SETTABLE 	4 -1 -2	; "start_msg" "Starting watch loop (Ctrl-C to exit)"
	7	[45]	CLOSURE  	5 2	; 0x7fa46a407850
	8	[45]	SETTABLE 	4 -3 5	; "print_start" -
	9	[47]	SETTABLE 	4 -4 4	; "__index" -
	10	[48]	GETGLOBAL	5 -5	; setmetatable
	11	[48]	NEWTABLE 	6 0 3
	12	[51]	CLOSURE  	7 3	; 0x7fa46a4082e0
	13	[51]	SETTABLE 	6 -6 7	; "__init" -
	14	[52]	SETTABLE 	6 -7 4	; "__base" -
	15	[53]	SETTABLE 	6 -8 -9	; "__name" "Watcher"
	16	[54]	NEWTABLE 	7 0 2
	17	[55]	SETTABLE 	7 -4 4	; "__index" -
	18	[60]	CLOSURE  	8 4	; 0x7fa46a407ba0
	19	[60]	MOVE     	0 4
	20	[60]	SETTABLE 	7 -10 8	; "__call" -
	21	[48]	CALL     	5 3 2
	22	[61]	MOVE     	3 5
	23	[62]	SETTABLE 	4 -11 3	; "__class" -
	24	[63]	MOVE     	2 3
	25	[63]	CLOSE    	3
	26	[65]	LOADNIL  	3 4
	27	[68]	MOVE     	5 2
	28	[69]	NEWTABLE 	6 0 2
	29	[93]	CLOSURE  	7 5	; 0x7fa46a406a30
	30	[93]	MOVE     	0 0
	31	[93]	SETTABLE 	6 -12 7	; "get_dirs" -
	32	[133]	CLOSURE  	7 6	; 0x7fa46a408ea0
	33	[133]	MOVE     	0 1
	34	[133]	SETTABLE 	6 -13 7	; "each_update" -
	35	[135]	SETTABLE 	6 -4 6	; "__index" -
	36	[136]	GETGLOBAL	7 -5	; setmetatable
	37	[136]	MOVE     	8 6
	38	[136]	GETTABLE 	9 5 -7	; "__base"
	39	[136]	CALL     	7 3 1
	40	[137]	GETGLOBAL	7 -5	; setmetatable
	41	[137]	NEWTABLE 	8 0 4
	42	[140]	CLOSURE  	9 7	; 0x7fa46a406740
	43	[140]	MOVE     	0 4
	44	[140]	SETTABLE 	8 -6 9	; "__init" -
	45	[141]	SETTABLE 	8 -7 6	; "__base" -
	46	[142]	SETTABLE 	8 -8 -14	; "__name" "InotifyWacher"
	47	[143]	SETTABLE 	8 -15 5	; "__parent" -
	48	[144]	NEWTABLE 	9 0 2
	49	[155]	CLOSURE  	10 8	; 0x7fa46a408480
	50	[155]	MOVE     	0 6
	51	[155]	SETTABLE 	9 -4 10	; "__index" -
	52	[160]	CLOSURE  	10 9	; 0x7fa46a4095e0
	53	[160]	MOVE     	0 6
	54	[160]	SETTABLE 	9 -10 10	; "__call" -
	55	[137]	CALL     	7 3 2
	56	[161]	MOVE     	4 7
	57	[162]	SETTABLE 	6 -11 4	; "__class" -
	58	[163]	MOVE     	7 4
	59	[168]	CLOSURE  	8 10	; 0x7fa46a409cc0
	60	[168]	SETTABLE 	7 -16 8	; "available" -
	61	[169]	GETTABLE 	8 5 -17	; "__inherited"
	62	[169]	TEST     	8 0 0
	63	[169]	JMP      	4	; to 68
	64	[170]	GETTABLE 	8 5 -17	; "__inherited"
	65	[170]	MOVE     	9 5
	66	[170]	MOVE     	10 4
	67	[170]	CALL     	8 3 1
	68	[172]	MOVE     	3 4
	69	[172]	CLOSE    	4
	70	[174]	LOADNIL  	4 5
	71	[177]	MOVE     	6 2
	72	[178]	NEWTABLE 	7 0 3
	73	[179]	SETTABLE 	7 -18 -19	; "polling_rate" 1
	74	[190]	CLOSURE  	8 11	; 0x7fa46a4094c0
	75	[190]	SETTABLE 	7 -20 8	; "get_sleep_func" -
	76	[230]	CLOSURE  	8 12	; 0x7fa46a40b0b0
	77	[230]	MOVE     	0 1
	78	[230]	SETTABLE 	7 -13 8	; "each_update" -
	79	[232]	SETTABLE 	7 -4 7	; "__index" -
	80	[233]	GETGLOBAL	8 -5	; setmetatable
	81	[233]	MOVE     	9 7
	82	[233]	GETTABLE 	10 6 -7	; "__base"
	83	[233]	CALL     	8 3 1
	84	[234]	GETGLOBAL	8 -5	; setmetatable
	85	[234]	NEWTABLE 	9 0 4
	86	[237]	CLOSURE  	10 13	; 0x7fa46a40b130
	87	[237]	MOVE     	0 5
	88	[237]	SETTABLE 	9 -6 10	; "__init" -
	89	[238]	SETTABLE 	9 -7 7	; "__base" -
	90	[239]	SETTABLE 	9 -8 -21	; "__name" "SleepWatcher"
	91	[240]	SETTABLE 	9 -15 6	; "__parent" -
	92	[241]	NEWTABLE 	10 0 2
	93	[252]	CLOSURE  	11 14	; 0x7fa46a40b500
	94	[252]	MOVE     	0 7
	95	[252]	SETTABLE 	10 -4 11	; "__index" -
	96	[257]	CLOSURE  	11 15	; 0x7fa46a4096e0
	97	[257]	MOVE     	0 7
	98	[257]	SETTABLE 	10 -10 11	; "__call" -
	99	[234]	CALL     	8 3 2
	100	[258]	MOVE     	5 8
	101	[259]	SETTABLE 	7 -11 5	; "__class" -
	102	[260]	GETTABLE 	8 6 -17	; "__inherited"
	103	[260]	TEST     	8 0 0
	104	[260]	JMP      	4	; to 109
	105	[261]	GETTABLE 	8 6 -17	; "__inherited"
	106	[261]	MOVE     	9 6
	107	[261]	MOVE     	10 5
	108	[261]	CALL     	8 3 1
	109	[263]	MOVE     	4 5
	110	[263]	CLOSE    	5
	111	[265]	NEWTABLE 	5 0 3
	112	[266]	SETTABLE 	5 -9 2	; "Watcher" -
	113	[267]	SETTABLE 	5 -21 4	; "SleepWatcher" -
	114	[268]	SETTABLE 	5 -14 3	; "InotifyWacher" -
	115	[269]	RETURN   	5 2
	116	[269]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:2,33> (8 instructions, 32 bytes at 0x7fa46a406b10)
2 params, 4 slots, 0 upvalues, 3 locals, 0 constants, 1 function
	1	[3]	NEWTABLE 	2 0 0
	2	[32]	CLOSURE  	3 0	; 0x7fa46a406e40
	3	[32]	MOVE     	0 0
	4	[32]	MOVE     	0 1
	5	[32]	MOVE     	0 2
	6	[32]	TAILCALL 	3 1 0
	7	[32]	RETURN   	3 0
	8	[33]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:4,32> (38 instructions, 152 bytes at 0x7fa46a406e40)
0 params, 11 slots, 3 upvalues, 10 locals, 2 constants, 0 functions
	1	[5]	NEWTABLE 	0 0 0
	2	[6]	LOADK    	1 -1	; 1
	3	[7]	LOADK    	2 -1	; 1
	4	[7]	GETUPVAL 	3 0	; list
	5	[7]	LEN      	3 3
	6	[7]	LOADK    	4 -1	; 1
	7	[7]	FORPREP  	2 28	; to 36
	8	[8]	LOADBOOL 	6 0 0
	9	[10]	GETUPVAL 	7 0	; list
	10	[10]	GETTABLE 	7 7 5
	11	[11]	LOADNIL  	8 8
	12	[12]	GETUPVAL 	9 1	; key_fn
	13	[12]	TEST     	9 0 0
	14	[12]	JMP      	5	; to 20
	15	[13]	GETUPVAL 	9 1	; key_fn
	16	[13]	MOVE     	10 7
	17	[13]	CALL     	9 2 2
	18	[13]	MOVE     	8 9
	19	[13]	JMP      	1	; to 21
	20	[15]	MOVE     	8 7
	21	[17]	GETUPVAL 	9 2	; seen
	22	[17]	GETTABLE 	9 9 8
	23	[17]	TEST     	9 0 0
	24	[17]	JMP      	2	; to 27
	25	[18]	LOADBOOL 	6 1 0
	26	[19]	JMP      	6	; to 33
	27	[21]	GETUPVAL 	9 2	; seen
	28	[21]	SETTABLE 	9 8 -2	; - true
	29	[22]	MOVE     	9 7
	30	[23]	SETTABLE 	0 1 9
	31	[24]	ADD      	1 1 -1	; - 1
	32	[25]	LOADBOOL 	6 1 0
	33	[27]	TEST     	6 0 1
	34	[27]	JMP      	1	; to 36
	35	[28]	JMP      	1	; to 37
	36	[7]	FORLOOP  	2 -29	; to 8
	37	[31]	RETURN   	0 2
	38	[32]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:35,37> (18 instructions, 72 bytes at 0x7fa46a4071f0)
2 params, 7 slots, 0 upvalues, 2 locals, 5 constants, 0 functions
	1	[36]	GETGLOBAL	2 -1	; tostring
	2	[36]	MOVE     	3 0
	3	[36]	CALL     	2 2 2
	4	[36]	LOADK    	3 -2	; " "
	5	[36]	GETGLOBAL	4 -1	; tostring
	6	[36]	MOVE     	5 1
	7	[36]	CALL     	4 2 2
	8	[36]	GETGLOBAL	5 -1	; tostring
	9	[36]	EQ       	0 0 -3	; - 1
	10	[36]	JMP      	3	; to 14
	11	[36]	LOADK    	6 -4	; ""
	12	[36]	TEST     	6 0 1
	13	[36]	JMP      	1	; to 15
	14	[36]	LOADK    	6 -5	; "s"
	15	[36]	CALL     	5 2 2
	16	[36]	CONCAT   	2 2 5
	17	[36]	RETURN   	2 2
	18	[37]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:43,45> (19 instructions, 76 bytes at 0x7fa46a407850)
3 params, 11 slots, 0 upvalues, 3 locals, 8 constants, 0 functions
	1	[44]	GETGLOBAL	3 -1	; io
	2	[44]	GETTABLE 	3 3 -2	; "stderr"
	3	[44]	SELF     	3 3 -3	; "write"
	4	[44]	GETGLOBAL	5 -4	; tostring
	5	[44]	GETTABLE 	6 0 -5	; "start_msg"
	6	[44]	CALL     	5 2 2
	7	[44]	LOADK    	6 -6	; " with "
	8	[44]	GETGLOBAL	7 -4	; tostring
	9	[44]	MOVE     	8 1
	10	[44]	CALL     	7 2 2
	11	[44]	LOADK    	8 -7	; " ["
	12	[44]	GETGLOBAL	9 -4	; tostring
	13	[44]	MOVE     	10 2
	14	[44]	CALL     	9 2 2
	15	[44]	LOADK    	10 -8	; "]\n"
	16	[44]	CONCAT   	5 5 10
	17	[44]	TAILCALL 	3 3 0
	18	[44]	RETURN   	3 0
	19	[45]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:49,51> (2 instructions, 8 bytes at 0x7fa46a4082e0)
2 params, 2 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[50]	SETTABLE 	0 -1 1	; "file_list" -
	2	[51]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:56,60> (10 instructions, 40 bytes at 0x7fa46a407ba0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[57]	GETGLOBAL	2 -1	; setmetatable
	2	[57]	NEWTABLE 	3 0 0
	3	[57]	GETUPVAL 	4 0	; _base_0
	4	[57]	CALL     	2 3 2
	5	[58]	GETTABLE 	3 0 -2	; "__init"
	6	[58]	MOVE     	4 2
	7	[58]	VARARG   	5 0
	8	[58]	CALL     	3 0 1
	9	[59]	RETURN   	2 2
	10	[60]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:70,93> (31 instructions, 124 bytes at 0x7fa46a406a30)
1 param, 14 slots, 1 upvalue, 14 locals, 7 constants, 0 functions
	1	[72]	GETGLOBAL	2 -1	; require
	2	[72]	LOADK    	3 -2	; "moonscript.cmd.moonc"
	3	[72]	CALL     	2 2 2
	4	[72]	GETTABLE 	1 2 -3	; "parse_dir"
	5	[73]	LOADNIL  	2 2
	6	[75]	NEWTABLE 	3 0 0
	7	[76]	LOADK    	4 -4	; 1
	8	[77]	GETTABLE 	5 0 -5	; "file_list"
	9	[78]	LOADK    	6 -4	; 1
	10	[78]	LEN      	7 5
	11	[78]	LOADK    	8 -4	; 1
	12	[78]	FORPREP  	6 12	; to 25
	13	[79]	GETTABLE 	10 5 9
	14	[80]	LOADNIL  	11 11
	15	[81]	GETTABLE 	11 10 -4	; 1
	16	[82]	MOVE     	12 1
	17	[82]	MOVE     	13 11
	18	[82]	CALL     	12 2 2
	19	[83]	EQ       	0 12 -6	; - ""
	20	[83]	JMP      	1	; to 22
	21	[84]	LOADK    	12 -7	; "./"
	22	[86]	MOVE     	13 12
	23	[87]	SETTABLE 	3 4 13
	24	[88]	ADD      	4 4 -4	; - 1
	25	[78]	FORLOOP  	6 -13	; to 13
	26	[90]	MOVE     	2 3
	27	[92]	GETUPVAL 	3 0	; remove_dupes
	28	[92]	MOVE     	4 2
	29	[92]	TAILCALL 	3 2 0
	30	[92]	RETURN   	3 0
	31	[93]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:94,133> (8 instructions, 32 bytes at 0x7fa46a408ea0)
1 param, 3 slots, 1 upvalue, 1 local, 2 constants, 1 function
	1	[95]	GETGLOBAL	1 -1	; coroutine
	2	[95]	GETTABLE 	1 1 -2	; "wrap"
	3	[132]	CLOSURE  	2 0	; 0x7fa46a409240
	4	[132]	MOVE     	0 0
	5	[132]	GETUPVAL 	0 0	; plural
	6	[95]	TAILCALL 	1 2 0
	7	[132]	RETURN   	1 0
	8	[133]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:95,132> (66 instructions, 264 bytes at 0x7fa46a409240)
0 params, 15 slots, 2 upvalues, 19 locals, 18 constants, 0 functions
	1	[96]	GETUPVAL 	0 0	; self
	2	[96]	SELF     	0 0 -1	; "get_dirs"
	3	[96]	CALL     	0 2 2
	4	[97]	GETUPVAL 	1 0	; self
	5	[97]	SELF     	1 1 -2	; "print_start"
	6	[97]	LOADK    	3 -3	; "inotify"
	7	[97]	GETUPVAL 	4 1	; plural
	8	[97]	LEN      	5 0
	9	[97]	LOADK    	6 -4	; "dir"
	10	[97]	CALL     	4 3 0
	11	[97]	CALL     	1 0 1
	12	[98]	NEWTABLE 	1 0 0
	13	[99]	GETGLOBAL	2 -5	; require
	14	[99]	LOADK    	3 -3	; "inotify"
	15	[99]	CALL     	2 2 2
	16	[100]	GETTABLE 	3 2 -6	; "init"
	17	[100]	CALL     	3 1 2
	18	[101]	LOADK    	4 -7	; 1
	19	[101]	LEN      	5 0
	20	[101]	LOADK    	6 -7	; 1
	21	[101]	FORPREP  	4 7	; to 29
	22	[102]	GETTABLE 	8 0 7
	23	[103]	SELF     	9 3 -8	; "addwatch"
	24	[103]	MOVE     	11 8
	25	[103]	GETTABLE 	12 2 -9	; "IN_CLOSE_WRITE"
	26	[103]	GETTABLE 	13 2 -10	; "IN_MOVED_TO"
	27	[103]	CALL     	9 5 2
	28	[104]	SETTABLE 	1 9 8
	29	[101]	FORLOOP  	4 -8	; to 22
	30	[107]	SELF     	4 3 -11	; "read"
	31	[107]	CALL     	4 2 2
	32	[108]	TEST     	4 0 1
	33	[108]	JMP      	1	; to 35
	34	[109]	JMP      	31	; to 66
	35	[111]	LOADK    	5 -7	; 1
	36	[111]	LEN      	6 4
	37	[111]	LOADK    	7 -7	; 1
	38	[111]	FORPREP  	5 25	; to 64
	39	[112]	LOADBOOL 	9 0 0
	40	[114]	GETTABLE 	10 4 8
	41	[115]	GETTABLE 	11 10 -12	; "name"
	42	[116]	SELF     	12 11 -13	; "match"
	43	[116]	LOADK    	14 -14	; "%.moon$"
	44	[116]	CALL     	12 3 2
	45	[116]	TEST     	12 0 1
	46	[116]	JMP      	2	; to 49
	47	[117]	LOADBOOL 	9 1 0
	48	[118]	JMP      	12	; to 61
	49	[120]	GETTABLE 	12 10 -15	; "wd"
	50	[120]	GETTABLE 	12 1 12
	51	[121]	EQ       	1 12 -16	; - "./"
	52	[121]	JMP      	3	; to 56
	53	[122]	MOVE     	13 12
	54	[122]	MOVE     	14 11
	55	[122]	CONCAT   	11 13 14
	56	[124]	GETGLOBAL	13 -17	; coroutine
	57	[124]	GETTABLE 	13 13 -18	; "yield"
	58	[124]	MOVE     	14 11
	59	[124]	CALL     	13 2 1
	60	[125]	LOADBOOL 	9 1 0
	61	[127]	TEST     	9 0 1
	62	[127]	JMP      	1	; to 64
	63	[128]	JMP      	-34	; to 30
	64	[111]	FORLOOP  	5 -26	; to 39
	65	[130]	JMP      	-36	; to 30
	66	[132]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:138,140> (8 instructions, 32 bytes at 0x7fa46a406740)
1+ param, 5 slots, 1 upvalue, 2 locals, 2 constants, 0 functions
	1	[139]	GETUPVAL 	2 0	; _class_0
	2	[139]	GETTABLE 	2 2 -1	; "__parent"
	3	[139]	GETTABLE 	2 2 -2	; "__init"
	4	[139]	MOVE     	3 0
	5	[139]	VARARG   	4 0
	6	[139]	TAILCALL 	2 0 0
	7	[139]	RETURN   	2 0
	8	[140]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:145,155> (17 instructions, 68 bytes at 0x7fa46a408480)
2 params, 6 slots, 1 upvalue, 4 locals, 3 constants, 0 functions
	1	[146]	GETGLOBAL	2 -1	; rawget
	2	[146]	GETUPVAL 	3 0	; _base_0
	3	[146]	MOVE     	4 1
	4	[146]	CALL     	2 3 2
	5	[147]	EQ       	0 2 -2	; - nil
	6	[147]	JMP      	9	; to 16
	7	[148]	GETGLOBAL	3 -1	; rawget
	8	[148]	MOVE     	4 0
	9	[148]	LOADK    	5 -3	; "__parent"
	10	[148]	CALL     	3 3 2
	11	[149]	TEST     	3 0 0
	12	[149]	JMP      	4	; to 17
	13	[150]	GETTABLE 	4 3 1
	14	[150]	RETURN   	4 2
	15	[151]	JMP      	1	; to 17
	16	[153]	RETURN   	2 2
	17	[155]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:156,160> (10 instructions, 40 bytes at 0x7fa46a4095e0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[157]	GETGLOBAL	2 -1	; setmetatable
	2	[157]	NEWTABLE 	3 0 0
	3	[157]	GETUPVAL 	4 0	; _base_0
	4	[157]	CALL     	2 3 2
	5	[158]	GETTABLE 	3 0 -2	; "__init"
	6	[158]	MOVE     	4 2
	7	[158]	VARARG   	5 0
	8	[158]	CALL     	3 0 1
	9	[159]	RETURN   	2 2
	10	[160]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:164,168> (5 instructions, 20 bytes at 0x7fa46a409cc0)
1 param, 3 slots, 0 upvalues, 1 local, 1 constant, 1 function
	1	[165]	GETGLOBAL	1 -1	; pcall
	2	[167]	CLOSURE  	2 0	; 0x7fa46a40a1c0
	3	[165]	TAILCALL 	1 2 0
	4	[167]	RETURN   	1 0
	5	[168]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:165,167> (5 instructions, 20 bytes at 0x7fa46a40a1c0)
0 params, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[166]	GETGLOBAL	0 -1	; require
	2	[166]	LOADK    	1 -2	; "inotify"
	3	[166]	TAILCALL 	0 2 0
	4	[166]	RETURN   	0 0
	5	[167]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:180,190> (17 instructions, 68 bytes at 0x7fa46a4094c0)
1 param, 4 slots, 0 upvalues, 2 locals, 6 constants, 1 function
	1	[182]	GETGLOBAL	2 -1	; pcall
	2	[184]	CLOSURE  	3 0	; 0x7fa46a408560
	3	[184]	MOVE     	0 1
	4	[182]	CALL     	2 2 1
	5	[185]	TEST     	1 0 1
	6	[185]	JMP      	4	; to 11
	7	[185]	GETGLOBAL	2 -2	; require
	8	[185]	LOADK    	3 -3	; "moonscript"
	9	[185]	CALL     	2 2 2
	10	[185]	GETTABLE 	1 2 -4	; "_sleep"
	11	[186]	TEST     	1 0 1
	12	[186]	JMP      	3	; to 16
	13	[187]	GETGLOBAL	2 -5	; error
	14	[187]	LOADK    	3 -6	; "Missing sleep function; install LuaSocket"
	15	[187]	CALL     	2 2 1
	16	[189]	RETURN   	1 2
	17	[190]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:182,184> (6 instructions, 24 bytes at 0x7fa46a408560)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[183]	GETGLOBAL	0 -1	; require
	2	[183]	LOADK    	1 -2	; "socket"
	3	[183]	CALL     	0 2 2
	4	[183]	GETTABLE 	0 0 -3	; "sleep"
	5	[183]	SETUPVAL 	0 0	; sleep
	6	[184]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:191,230> (8 instructions, 32 bytes at 0x7fa46a40b0b0)
1 param, 3 slots, 1 upvalue, 1 local, 2 constants, 1 function
	1	[192]	GETGLOBAL	1 -1	; coroutine
	2	[192]	GETTABLE 	1 1 -2	; "wrap"
	3	[229]	CLOSURE  	2 0	; 0x7fa46a40b310
	4	[229]	MOVE     	0 0
	5	[229]	GETUPVAL 	0 0	; plural
	6	[192]	TAILCALL 	1 2 0
	7	[229]	RETURN   	1 0
	8	[230]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:192,229> (65 instructions, 260 bytes at 0x7fa46a40b310)
0 params, 15 slots, 2 upvalues, 12 locals, 15 constants, 0 functions
	1	[193]	GETGLOBAL	0 -1	; require
	2	[193]	LOADK    	1 -2	; "lfs"
	3	[193]	CALL     	0 2 2
	4	[194]	GETUPVAL 	1 0	; self
	5	[194]	SELF     	1 1 -3	; "get_sleep_func"
	6	[194]	CALL     	1 2 2
	7	[195]	GETUPVAL 	2 0	; self
	8	[195]	SELF     	2 2 -4	; "print_start"
	9	[195]	LOADK    	4 -5	; "polling"
	10	[195]	GETUPVAL 	5 1	; plural
	11	[195]	GETUPVAL 	6 0	; self
	12	[195]	GETTABLE 	6 6 -6	; "file_list"
	13	[195]	LEN      	6 6
	14	[195]	LOADK    	7 -7	; "files"
	15	[195]	CALL     	5 3 0
	16	[195]	CALL     	2 0 1
	17	[196]	NEWTABLE 	2 0 0
	18	[198]	GETUPVAL 	3 0	; self
	19	[198]	GETTABLE 	3 3 -6	; "file_list"
	20	[199]	LOADK    	4 -8	; 1
	21	[199]	LEN      	5 3
	22	[199]	LOADK    	6 -8	; 1
	23	[199]	FORPREP  	4 35	; to 59
	24	[200]	LOADBOOL 	8 0 0
	25	[202]	GETTABLE 	9 3 7
	26	[203]	LOADNIL  	10 10
	27	[204]	GETTABLE 	10 9 -8	; 1
	28	[205]	GETTABLE 	11 0 -9	; "attributes"
	29	[205]	MOVE     	12 10
	30	[205]	LOADK    	13 -10	; "modification"
	31	[205]	CALL     	11 3 2
	32	[206]	GETGLOBAL	12 -11	; print
	33	[206]	MOVE     	13 10
	34	[206]	MOVE     	14 11
	35	[206]	CALL     	12 3 1
	36	[207]	TEST     	11 0 1
	37	[207]	JMP      	3	; to 41
	38	[208]	SETTABLE 	2 10 -12	; - nil
	39	[209]	LOADBOOL 	8 1 0
	40	[210]	JMP      	15	; to 56
	41	[212]	GETTABLE 	12 2 10
	42	[212]	TEST     	12 0 1
	43	[212]	JMP      	3	; to 47
	44	[213]	SETTABLE 	2 10 11
	45	[214]	LOADBOOL 	8 1 0
	46	[215]	JMP      	9	; to 56
	47	[217]	GETTABLE 	12 2 10
	48	[217]	LT       	0 12 11
	49	[217]	JMP      	5	; to 55
	50	[218]	SETTABLE 	2 10 11
	51	[219]	GETGLOBAL	12 -13	; coroutine
	52	[219]	GETTABLE 	12 12 -14	; "yield"
	53	[219]	MOVE     	13 10
	54	[219]	CALL     	12 2 1
	55	[221]	LOADBOOL 	8 1 0
	56	[223]	TEST     	8 0 1
	57	[223]	JMP      	1	; to 59
	58	[224]	JMP      	1	; to 60
	59	[199]	FORLOOP  	4 -36	; to 24
	60	[227]	MOVE     	4 1
	61	[227]	GETUPVAL 	5 0	; self
	62	[227]	GETTABLE 	5 5 -15	; "polling_rate"
	63	[227]	CALL     	4 2 1
	64	[227]	JMP      	-47	; to 18
	65	[229]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:235,237> (8 instructions, 32 bytes at 0x7fa46a40b130)
1+ param, 5 slots, 1 upvalue, 2 locals, 2 constants, 0 functions
	1	[236]	GETUPVAL 	2 0	; _class_0
	2	[236]	GETTABLE 	2 2 -1	; "__parent"
	3	[236]	GETTABLE 	2 2 -2	; "__init"
	4	[236]	MOVE     	3 0
	5	[236]	VARARG   	4 0
	6	[236]	TAILCALL 	2 0 0
	7	[236]	RETURN   	2 0
	8	[237]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:242,252> (17 instructions, 68 bytes at 0x7fa46a40b500)
2 params, 6 slots, 1 upvalue, 4 locals, 3 constants, 0 functions
	1	[243]	GETGLOBAL	2 -1	; rawget
	2	[243]	GETUPVAL 	3 0	; _base_0
	3	[243]	MOVE     	4 1
	4	[243]	CALL     	2 3 2
	5	[244]	EQ       	0 2 -2	; - nil
	6	[244]	JMP      	9	; to 16
	7	[245]	GETGLOBAL	3 -1	; rawget
	8	[245]	MOVE     	4 0
	9	[245]	LOADK    	5 -3	; "__parent"
	10	[245]	CALL     	3 3 2
	11	[246]	TEST     	3 0 0
	12	[246]	JMP      	4	; to 17
	13	[247]	GETTABLE 	4 3 1
	14	[247]	RETURN   	4 2
	15	[248]	JMP      	1	; to 17
	16	[250]	RETURN   	2 2
	17	[252]	RETURN   	0 1

function <./moonscript/cmd/watchers.lua:253,257> (10 instructions, 40 bytes at 0x7fa46a4096e0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[254]	GETGLOBAL	2 -1	; setmetatable
	2	[254]	NEWTABLE 	3 0 0
	3	[254]	GETUPVAL 	4 0	; _base_0
	4	[254]	CALL     	2 3 2
	5	[255]	GETTABLE 	3 0 -2	; "__init"
	6	[255]	MOVE     	4 2
	7	[255]	VARARG   	5 0
	8	[255]	CALL     	3 0 1
	9	[256]	RETURN   	2 2
	10	[257]	RETURN   	0 1
-----------------------

main <./moonscript/cmd/moonc.lua:0,0> (69 instructions, 276 bytes at 0x7fb6a94068c0)
0+ params, 20 slots, 0 upvalues, 17 locals, 21 constants, 12 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "lfs"
	3	[1]	CALL     	0 2 2
	4	[2]	LOADNIL  	1 1
	5	[3]	GETGLOBAL	2 -1	; require
	6	[3]	LOADK    	3 -3	; "moonscript.util"
	7	[3]	CALL     	2 2 2
	8	[3]	GETTABLE 	1 2 -4	; "split"
	9	[4]	LOADNIL  	2 15
	10	[5]	GETGLOBAL	16 -5	; package
	11	[5]	GETTABLE 	16 16 -6	; "config"
	12	[5]	SELF     	16 16 -7	; "sub"
	13	[5]	LOADK    	18 -8	; 1
	14	[5]	LOADK    	19 -8	; 1
	15	[5]	CALL     	16 4 2
	16	[5]	MOVE     	2 16
	17	[6]	EQ       	0 2 -9	; - "\\"
	18	[6]	JMP      	2	; to 21
	19	[7]	LOADK    	3 -10	; "\\/"
	20	[7]	JMP      	1	; to 22
	21	[9]	MOVE     	3 2
	22	[20]	CLOSURE  	4 0	; 0x7fb6a9406640
	23	[20]	MOVE     	0 1
	24	[20]	MOVE     	0 2
	25	[20]	MOVE     	0 0
	26	[23]	CLOSURE  	5 1	; 0x7fb6a94077a0
	27	[23]	MOVE     	0 3
	28	[23]	MOVE     	0 2
	29	[26]	CLOSURE  	6 2	; 0x7fb6a94073b0
	30	[26]	MOVE     	0 3
	31	[29]	CLOSURE  	7 3	; 0x7fb6a9407b20
	32	[29]	MOVE     	0 3
	33	[36]	CLOSURE  	8 4	; 0x7fb6a9407f80
	34	[39]	CLOSURE  	9 5	; 0x7fb6a94065c0
	35	[41]	LOADNIL  	16 16
	36	[56]	CLOSURE  	10 6	; 0x7fb6a9408920
	37	[56]	MOVE     	0 16
	38	[56]	CLOSE    	16
	39	[108]	CLOSURE  	11 7	; 0x7fb6a9408fe0
	40	[108]	MOVE     	0 10
	41	[108]	MOVE     	0 9
	42	[119]	CLOSURE  	12 8	; 0x7fb6a9408ef0
	43	[119]	MOVE     	0 4
	44	[119]	MOVE     	0 6
	45	[142]	CLOSURE  	13 9	; 0x7fb6a94097b0
	46	[142]	MOVE     	0 11
	47	[142]	MOVE     	0 12
	48	[150]	CLOSURE  	14 10	; 0x7fb6a9409aa0
	49	[150]	MOVE     	0 2
	50	[178]	CLOSURE  	15 11	; 0x7fb6a9409f80
	51	[178]	MOVE     	0 8
	52	[178]	MOVE     	0 5
	53	[178]	MOVE     	0 3
	54	[178]	MOVE     	0 14
	55	[178]	MOVE     	0 7
	56	[179]	NEWTABLE 	16 0 11
	57	[180]	SETTABLE 	16 -11 2	; "dirsep" -
	58	[181]	SETTABLE 	16 -12 4	; "mkdir" -
	59	[182]	SETTABLE 	16 -13 5	; "normalize_dir" -
	60	[183]	SETTABLE 	16 -14 6	; "parse_dir" -
	61	[184]	SETTABLE 	16 -15 7	; "parse_file" -
	62	[185]	SETTABLE 	16 -16 8	; "convert_path" -
	63	[186]	SETTABLE 	16 -17 10	; "gettime" -
	64	[187]	SETTABLE 	16 -18 9	; "format_time" -
	65	[188]	SETTABLE 	16 -19 15	; "path_to_target" -
	66	[189]	SETTABLE 	16 -20 11	; "compile_file_text" -
	67	[190]	SETTABLE 	16 -21 13	; "compile_and_write" -
	68	[191]	RETURN   	16 2
	69	[191]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:11,20> (37 instructions, 148 bytes at 0x7fb6a9406640)
1 param, 12 slots, 3 upvalues, 8 locals, 5 constants, 0 functions
	1	[12]	GETUPVAL 	1 0	; split
	2	[12]	MOVE     	2 0
	3	[12]	GETUPVAL 	3 1	; dirsep
	4	[12]	CALL     	1 3 2
	5	[13]	LOADNIL  	2 2
	6	[14]	LOADK    	3 -1	; 1
	7	[14]	LEN      	4 1
	8	[14]	LOADK    	5 -1	; 1
	9	[14]	FORPREP  	3 20	; to 30
	10	[15]	GETTABLE 	7 1 6
	11	[16]	TEST     	2 0 0
	12	[16]	JMP      	12	; to 25
	13	[16]	GETGLOBAL	8 -2	; tostring
	14	[16]	MOVE     	9 2
	15	[16]	CALL     	8 2 2
	16	[16]	GETGLOBAL	9 -2	; tostring
	17	[16]	GETUPVAL 	10 1	; dirsep
	18	[16]	CALL     	9 2 2
	19	[16]	GETGLOBAL	10 -2	; tostring
	20	[16]	MOVE     	11 7
	21	[16]	CALL     	10 2 2
	22	[16]	CONCAT   	8 8 10
	23	[16]	TESTSET  	2 8 1
	24	[16]	JMP      	1	; to 26
	25	[16]	MOVE     	2 7
	26	[17]	GETUPVAL 	8 2	; lfs
	27	[17]	GETTABLE 	8 8 -3	; "mkdir"
	28	[17]	MOVE     	9 2
	29	[17]	CALL     	8 2 1
	30	[14]	FORLOOP  	3 -21	; to 10
	31	[19]	GETUPVAL 	3 2	; lfs
	32	[19]	GETTABLE 	3 3 -4	; "attributes"
	33	[19]	MOVE     	4 0
	34	[19]	LOADK    	5 -5	; "mode"
	35	[19]	TAILCALL 	3 3 0
	36	[19]	RETURN   	3 0
	37	[20]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:21,23> (12 instructions, 48 bytes at 0x7fb6a94077a0)
1 param, 6 slots, 2 upvalues, 1 local, 4 constants, 0 functions
	1	[22]	SELF     	1 0 -1	; "match"
	2	[22]	LOADK    	3 -2	; "^(.-)["
	3	[22]	GETGLOBAL	4 -3	; tostring
	4	[22]	GETUPVAL 	5 0	; dirsep_chars
	5	[22]	CALL     	4 2 2
	6	[22]	LOADK    	5 -4	; "]*$"
	7	[22]	CONCAT   	3 3 5
	8	[22]	CALL     	1 3 2
	9	[22]	GETUPVAL 	2 1	; dirsep
	10	[22]	CONCAT   	1 1 2
	11	[22]	RETURN   	1 2
	12	[23]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:24,26> (10 instructions, 40 bytes at 0x7fb6a94073b0)
1 param, 6 slots, 1 upvalue, 1 local, 4 constants, 0 functions
	1	[25]	SELF     	1 0 -1	; "match"
	2	[25]	LOADK    	3 -2	; "^(.-)[^"
	3	[25]	GETGLOBAL	4 -3	; tostring
	4	[25]	GETUPVAL 	5 0	; dirsep_chars
	5	[25]	CALL     	4 2 2
	6	[25]	LOADK    	5 -4	; "]*$"
	7	[25]	CONCAT   	3 3 5
	8	[25]	CALL     	1 3 2
	9	[25]	RETURN   	1 2
	10	[26]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:27,29> (10 instructions, 40 bytes at 0x7fb6a9407b20)
1 param, 6 slots, 1 upvalue, 1 local, 4 constants, 0 functions
	1	[28]	SELF     	1 0 -1	; "match"
	2	[28]	LOADK    	3 -2	; "^.-([^"
	3	[28]	GETGLOBAL	4 -3	; tostring
	4	[28]	GETUPVAL 	5 0	; dirsep_chars
	5	[28]	CALL     	4 2 2
	6	[28]	LOADK    	5 -4	; "]*)$"
	7	[28]	CONCAT   	3 3 5
	8	[28]	CALL     	1 3 2
	9	[28]	RETURN   	1 2
	10	[29]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:30,36> (11 instructions, 44 bytes at 0x7fb6a9407f80)
1 param, 5 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[31]	SELF     	1 0 -1	; "gsub"
	2	[31]	LOADK    	3 -2	; "%.moon$"
	3	[31]	LOADK    	4 -3	; ".lua"
	4	[31]	CALL     	1 4 2
	5	[32]	EQ       	0 1 0
	6	[32]	JMP      	3	; to 10
	7	[33]	MOVE     	2 0
	8	[33]	LOADK    	3 -3	; ".lua"
	9	[33]	CONCAT   	1 2 3
	10	[35]	RETURN   	1 2
	11	[36]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:37,39> (6 instructions, 24 bytes at 0x7fb6a94065c0)
1 param, 4 slots, 0 upvalues, 1 local, 3 constants, 0 functions
	1	[38]	LOADK    	1 -1	; "%.3fms"
	2	[38]	SELF     	1 1 -2	; "format"
	3	[38]	MUL      	3 0 -3	; - 1000
	4	[38]	TAILCALL 	1 3 0
	5	[38]	RETURN   	1 0
	6	[39]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:42,56> (24 instructions, 96 bytes at 0x7fb6a9408920)
0 params, 2 slots, 1 upvalue, 0 locals, 4 constants, 1 function
	1	[43]	GETUPVAL 	0 0	; socket
	2	[43]	EQ       	0 0 -1	; - nil
	3	[43]	JMP      	9	; to 13
	4	[44]	GETGLOBAL	0 -2	; pcall
	5	[46]	CLOSURE  	1 0	; 0x7fb6a9406c30
	6	[46]	GETUPVAL 	0 0	; socket
	7	[44]	CALL     	0 2 1
	8	[47]	GETUPVAL 	0 0	; socket
	9	[47]	TEST     	0 0 1
	10	[47]	JMP      	2	; to 13
	11	[48]	LOADBOOL 	0 0 0
	12	[48]	SETUPVAL 	0 0	; socket
	13	[51]	GETUPVAL 	0 0	; socket
	14	[51]	TEST     	0 0 0
	15	[51]	JMP      	5	; to 21
	16	[52]	GETUPVAL 	0 0	; socket
	17	[52]	GETTABLE 	0 0 -3	; "gettime"
	18	[52]	TAILCALL 	0 1 0
	19	[52]	RETURN   	0 0
	20	[52]	JMP      	3	; to 24
	21	[54]	LOADNIL  	0 0
	22	[54]	LOADK    	1 -4	; "LuaSocket needed for benchmark"
	23	[54]	RETURN   	0 3
	24	[56]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:44,46> (5 instructions, 20 bytes at 0x7fb6a9406c30)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[45]	GETGLOBAL	0 -1	; require
	2	[45]	LOADK    	1 -2	; "socket"
	3	[45]	CALL     	0 2 2
	4	[45]	SETUPVAL 	0 0	; socket
	5	[46]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:58,108> (120 instructions, 480 bytes at 0x7fb6a9408fe0)
2 params, 19 slots, 2 upvalues, 13 locals, 27 constants, 0 functions
	1	[59]	EQ       	0 1 -1	; - nil
	2	[59]	JMP      	2	; to 5
	3	[60]	NEWTABLE 	2 0 0
	4	[60]	MOVE     	1 2
	5	[62]	GETGLOBAL	2 -2	; require
	6	[62]	LOADK    	3 -3	; "moonscript.parse"
	7	[62]	CALL     	2 2 2
	8	[63]	GETGLOBAL	3 -2	; require
	9	[63]	LOADK    	4 -4	; "moonscript.compile"
	10	[63]	CALL     	3 2 2
	11	[64]	LOADNIL  	4 4
	12	[65]	GETTABLE 	5 1 -5	; "benchmark"
	13	[65]	TEST     	5 0 0
	14	[65]	JMP      	5	; to 20
	15	[66]	GETGLOBAL	5 -6	; assert
	16	[66]	GETUPVAL 	6 0	; gettime
	17	[66]	CALL     	6 1 0
	18	[66]	CALL     	5 0 2
	19	[66]	MOVE     	4 5
	20	[68]	GETTABLE 	5 2 -7	; "string"
	21	[68]	MOVE     	6 0
	22	[68]	CALL     	5 2 3
	23	[69]	TEST     	5 0 1
	24	[69]	JMP      	3	; to 28
	25	[70]	LOADNIL  	7 7
	26	[70]	MOVE     	8 6
	27	[70]	RETURN   	7 3
	28	[72]	TEST     	4 0 0
	29	[72]	JMP      	3	; to 33
	30	[73]	GETUPVAL 	7 0	; gettime
	31	[73]	CALL     	7 1 2
	32	[73]	SUB      	4 7 4
	33	[75]	GETTABLE 	7 1 -8	; "show_parse_tree"
	34	[75]	TEST     	7 0 0
	35	[75]	JMP      	8	; to 44
	36	[76]	GETGLOBAL	7 -2	; require
	37	[76]	LOADK    	8 -9	; "moonscript.dump"
	38	[76]	CALL     	7 2 2
	39	[77]	GETTABLE 	8 7 -10	; "tree"
	40	[77]	MOVE     	9 5
	41	[77]	CALL     	8 2 1
	42	[78]	LOADBOOL 	8 1 0
	43	[78]	RETURN   	8 2
	44	[80]	LOADNIL  	7 7
	45	[81]	GETTABLE 	8 1 -5	; "benchmark"
	46	[81]	TEST     	8 0 0
	47	[81]	JMP      	3	; to 51
	48	[82]	GETUPVAL 	8 0	; gettime
	49	[82]	CALL     	8 1 2
	50	[82]	MOVE     	7 8
	51	[84]	GETTABLE 	8 3 -10	; "tree"
	52	[84]	MOVE     	9 5
	53	[84]	CALL     	8 2 4
	54	[85]	TEST     	8 0 1
	55	[85]	JMP      	7	; to 63
	56	[86]	LOADNIL  	11 11
	57	[86]	GETTABLE 	12 3 -11	; "format_error"
	58	[86]	MOVE     	13 9
	59	[86]	MOVE     	14 10
	60	[86]	MOVE     	15 0
	61	[86]	CALL     	12 4 0
	62	[86]	RETURN   	11 0
	63	[88]	TEST     	7 0 0
	64	[88]	JMP      	3	; to 68
	65	[89]	GETUPVAL 	11 0	; gettime
	66	[89]	CALL     	11 1 2
	67	[89]	SUB      	7 11 7
	68	[91]	GETTABLE 	11 1 -12	; "show_posmap"
	69	[91]	TEST     	11 0 0
	70	[91]	JMP      	20	; to 91
	71	[92]	LOADNIL  	11 11
	72	[93]	GETGLOBAL	12 -2	; require
	73	[93]	LOADK    	13 -13	; "moonscript.util"
	74	[93]	CALL     	12 2 2
	75	[93]	GETTABLE 	11 12 -14	; "debug_posmap"
	76	[94]	GETGLOBAL	12 -15	; print
	77	[94]	LOADK    	13 -16	; "Pos"
	78	[94]	LOADK    	14 -17	; "Lua"
	79	[94]	LOADK    	15 -18	; ">>"
	80	[94]	LOADK    	16 -19	; "Moon"
	81	[94]	CALL     	12 5 1
	82	[95]	GETGLOBAL	12 -15	; print
	83	[95]	MOVE     	13 11
	84	[95]	MOVE     	14 9
	85	[95]	MOVE     	15 0
	86	[95]	MOVE     	16 8
	87	[95]	CALL     	13 4 0
	88	[95]	CALL     	12 0 1
	89	[96]	LOADBOOL 	12 1 0
	90	[96]	RETURN   	12 2
	91	[98]	GETTABLE 	11 1 -5	; "benchmark"
	92	[98]	TEST     	11 0 0
	93	[98]	JMP      	25	; to 119
	94	[99]	GETGLOBAL	11 -15	; print
	95	[99]	GETGLOBAL	12 -20	; table
	96	[99]	GETTABLE 	12 12 -21	; "concat"
	97	[99]	NEWTABLE 	13 4 0
	98	[100]	GETTABLE 	14 1 -22	; "fname"
	99	[100]	TEST     	14 0 1
	100	[100]	JMP      	1	; to 102
	101	[100]	LOADK    	14 -23	; "stdin"
	102	[101]	LOADK    	15 -24	; "Parse time  \t"
	103	[101]	GETUPVAL 	16 1	; format_time
	104	[101]	MOVE     	17 4
	105	[101]	CALL     	16 2 2
	106	[101]	CONCAT   	15 15 16
	107	[102]	LOADK    	16 -25	; "Compile time\t"
	108	[102]	GETUPVAL 	17 1	; format_time
	109	[102]	MOVE     	18 7
	110	[102]	CALL     	17 2 2
	111	[102]	CONCAT   	16 16 17
	112	[104]	LOADK    	17 -26	; ""
	113	[104]	SETLIST  	13 4 1	; 1
	114	[104]	LOADK    	14 -27	; "\n"
	115	[99]	CALL     	12 3 0
	116	[99]	CALL     	11 0 1
	117	[105]	LOADBOOL 	11 1 0
	118	[105]	RETURN   	11 2
	119	[107]	RETURN   	8 2
	120	[108]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:109,119> (30 instructions, 120 bytes at 0x7fb6a9408ef0)
2 params, 8 slots, 2 upvalues, 4 locals, 8 constants, 0 functions
	1	[110]	GETUPVAL 	2 0	; mkdir
	2	[110]	GETUPVAL 	3 1	; parse_dir
	3	[110]	MOVE     	4 0
	4	[110]	CALL     	3 2 0
	5	[110]	CALL     	2 0 1
	6	[111]	GETGLOBAL	2 -1	; io
	7	[111]	GETTABLE 	2 2 -2	; "open"
	8	[111]	MOVE     	3 0
	9	[111]	LOADK    	4 -3	; "w"
	10	[111]	CALL     	2 3 3
	11	[112]	TEST     	2 0 1
	12	[112]	JMP      	3	; to 16
	13	[113]	LOADNIL  	4 4
	14	[113]	MOVE     	5 3
	15	[113]	RETURN   	4 3
	16	[115]	GETGLOBAL	4 -4	; assert
	17	[115]	SELF     	5 2 -5	; "write"
	18	[115]	MOVE     	7 1
	19	[115]	CALL     	5 3 0
	20	[115]	CALL     	4 0 1
	21	[116]	GETGLOBAL	4 -4	; assert
	22	[116]	SELF     	5 2 -5	; "write"
	23	[116]	LOADK    	7 -6	; "\n"
	24	[116]	CALL     	5 3 0
	25	[116]	CALL     	4 0 1
	26	[117]	SELF     	4 2 -7	; "close"
	27	[117]	CALL     	4 2 1
	28	[118]	LOADK    	4 -8	; "build"
	29	[118]	RETURN   	4 2
	30	[119]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:120,142> (47 instructions, 188 bytes at 0x7fb6a94097b0)
3 params, 10 slots, 2 upvalues, 7 locals, 10 constants, 0 functions
	1	[121]	EQ       	0 2 -1	; - nil
	2	[121]	JMP      	2	; to 5
	3	[122]	NEWTABLE 	3 0 0
	4	[122]	MOVE     	2 3
	5	[124]	GETGLOBAL	3 -2	; io
	6	[124]	GETTABLE 	3 3 -3	; "open"
	7	[124]	MOVE     	4 0
	8	[124]	CALL     	3 2 2
	9	[125]	TEST     	3 0 1
	10	[125]	JMP      	3	; to 14
	11	[126]	LOADNIL  	4 4
	12	[126]	LOADK    	5 -4	; "Can't find file"
	13	[126]	RETURN   	4 3
	14	[128]	GETGLOBAL	4 -5	; assert
	15	[128]	SELF     	5 3 -6	; "read"
	16	[128]	LOADK    	7 -7	; "*a"
	17	[128]	CALL     	5 3 0
	18	[128]	CALL     	4 0 2
	19	[129]	SELF     	5 3 -8	; "close"
	20	[129]	CALL     	5 2 1
	21	[130]	GETUPVAL 	5 0	; compile_file_text
	22	[130]	MOVE     	6 4
	23	[130]	MOVE     	7 2
	24	[130]	CALL     	5 3 3
	25	[131]	TEST     	5 0 1
	26	[131]	JMP      	3	; to 30
	27	[132]	LOADNIL  	7 7
	28	[132]	MOVE     	8 6
	29	[132]	RETURN   	7 3
	30	[134]	EQ       	0 5 -9	; - true
	31	[134]	JMP      	2	; to 34
	32	[135]	LOADBOOL 	7 1 0
	33	[135]	RETURN   	7 2
	34	[137]	GETTABLE 	7 2 -10	; "print"
	35	[137]	TEST     	7 0 0
	36	[137]	JMP      	5	; to 42
	37	[138]	GETGLOBAL	7 -10	; print
	38	[138]	MOVE     	8 5
	39	[138]	CALL     	7 2 1
	40	[139]	LOADBOOL 	7 1 0
	41	[139]	RETURN   	7 2
	42	[141]	GETUPVAL 	7 1	; write_file
	43	[141]	MOVE     	8 1
	44	[141]	MOVE     	9 5
	45	[141]	TAILCALL 	7 3 0
	46	[141]	RETURN   	7 0
	47	[142]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:143,150> (28 instructions, 112 bytes at 0x7fb6a9409aa0)
1 param, 6 slots, 1 upvalue, 2 locals, 6 constants, 0 functions
	1	[144]	SELF     	1 0 -1	; "sub"
	2	[144]	LOADK    	3 -2	; 1
	3	[144]	LOADK    	4 -2	; 1
	4	[144]	CALL     	1 4 2
	5	[145]	GETUPVAL 	2 0	; dirsep
	6	[145]	EQ       	0 2 -3	; - "\\"
	7	[145]	JMP      	14	; to 22
	8	[146]	EQ       	1 1 -4	; - "/"
	9	[146]	JMP      	9	; to 19
	10	[146]	EQ       	1 1 -3	; - "\\"
	11	[146]	JMP      	7	; to 19
	12	[146]	SELF     	2 0 -1	; "sub"
	13	[146]	LOADK    	4 -5	; 2
	14	[146]	LOADK    	5 -2	; 1
	15	[146]	CALL     	2 4 2
	16	[146]	EQ       	1 2 -6	; - ":"
	17	[146]	JMP      	1	; to 19
	18	[146]	LOADBOOL 	2 0 1
	19	[146]	LOADBOOL 	2 1 0
	20	[146]	RETURN   	2 2
	21	[146]	JMP      	6	; to 28
	22	[148]	GETUPVAL 	2 0	; dirsep
	23	[148]	EQ       	1 1 2
	24	[148]	JMP      	1	; to 26
	25	[148]	LOADBOOL 	2 0 1
	26	[148]	LOADBOOL 	2 1 0
	27	[148]	RETURN   	2 2
	28	[150]	RETURN   	0 1

function <./moonscript/cmd/moonc.lua:151,178> (60 instructions, 240 bytes at 0x7fb6a9409f80)
3 params, 11 slots, 5 upvalues, 7 locals, 9 constants, 0 functions
	1	[152]	EQ       	0 1 -1	; - nil
	2	[152]	JMP      	1	; to 4
	3	[153]	LOADNIL  	1 1
	4	[155]	EQ       	0 2 -1	; - nil
	5	[155]	JMP      	1	; to 7
	6	[156]	LOADNIL  	2 2
	7	[158]	GETUPVAL 	3 0	; convert_path
	8	[158]	MOVE     	4 0
	9	[158]	CALL     	3 2 2
	10	[159]	TEST     	1 0 0
	11	[159]	JMP      	4	; to 16
	12	[160]	GETUPVAL 	4 1	; normalize_dir
	13	[160]	MOVE     	5 1
	14	[160]	CALL     	4 2 2
	15	[160]	MOVE     	1 4
	16	[162]	TEST     	2 0 0
	17	[162]	JMP      	27	; to 45
	18	[162]	TEST     	1 0 0
	19	[162]	JMP      	25	; to 45
	20	[163]	SELF     	4 2 -2	; "match"
	21	[163]	LOADK    	6 -3	; "^(.-)[^"
	22	[163]	GETGLOBAL	7 -4	; tostring
	23	[163]	GETUPVAL 	8 2	; dirsep_chars
	24	[163]	CALL     	7 2 2
	25	[163]	LOADK    	8 -5	; "]*["
	26	[163]	GETGLOBAL	9 -4	; tostring
	27	[163]	GETUPVAL 	10 2	; dirsep_chars
	28	[163]	CALL     	9 2 2
	29	[163]	LOADK    	10 -6	; "]?$"
	30	[163]	CONCAT   	6 6 10
	31	[163]	CALL     	4 3 2
	32	[164]	TEST     	4 0 0
	33	[164]	JMP      	11	; to 45
	34	[165]	SELF     	5 3 -7	; "find"
	35	[165]	MOVE     	7 4
	36	[165]	LOADK    	8 -8	; 1
	37	[165]	LOADBOOL 	9 1 0
	38	[165]	CALL     	5 5 3
	39	[166]	EQ       	0 5 -8	; - 1
	40	[166]	JMP      	4	; to 45
	41	[167]	SELF     	7 3 -9	; "sub"
	42	[167]	ADD      	9 6 -8	; - 1
	43	[167]	CALL     	7 3 2
	44	[167]	MOVE     	3 7
	45	[171]	TEST     	1 0 0
	46	[171]	JMP      	12	; to 59
	47	[172]	GETUPVAL 	4 3	; is_abs_path
	48	[172]	MOVE     	5 3
	49	[172]	CALL     	4 2 2
	50	[172]	TEST     	4 0 0
	51	[172]	JMP      	4	; to 56
	52	[173]	GETUPVAL 	4 4	; parse_file
	53	[173]	MOVE     	5 3
	54	[173]	CALL     	4 2 2
	55	[173]	MOVE     	3 4
	56	[175]	MOVE     	4 1
	57	[175]	MOVE     	5 3
	58	[175]	CONCAT   	3 4 5
	59	[177]	RETURN   	3 2
	60	[178]	RETURN   	0 1
-----------------------

main <./moonscript/cmd/coverage.lua:0,0> (47 instructions, 188 bytes at 0x7fb72ec068c0)
0+ params, 11 slots, 0 upvalues, 7 locals, 14 constants, 12 functions
	1	[7]	CLOSURE  	0 0	; 0x7fb72ec06b00
	2	[8]	LOADNIL  	1 1
	3	[23]	CLOSURE  	1 1	; 0x7fb72ec06c30
	4	[24]	LOADNIL  	2 2
	5	[42]	CLOSURE  	2 2	; 0x7fb72ec071a0
	6	[43]	LOADNIL  	3 3
	7	[59]	CLOSURE  	3 3	; 0x7fb72ec06640
	8	[59]	MOVE     	0 2
	9	[59]	MOVE     	0 0
	10	[60]	LOADNIL  	4 5
	11	[63]	NEWTABLE 	6 0 6
	12	[66]	CLOSURE  	7 4	; 0x7fb72ec08050
	13	[66]	MOVE     	0 1
	14	[66]	SETTABLE 	6 -1 7	; "reset" -
	15	[75]	CLOSURE  	7 5	; 0x7fb72ec08590
	16	[75]	SETTABLE 	6 -2 7	; "start" -
	17	[78]	CLOSURE  	7 6	; 0x7fb72ec096e0
	18	[78]	SETTABLE 	6 -3 7	; "stop" -
	19	[81]	CLOSURE  	7 7	; 0x7fb72ec09a10
	20	[81]	SETTABLE 	6 -4 7	; "print_results" -
	21	[86]	CLOSURE  	7 8	; 0x7fb72ec073b0
	22	[86]	SETTABLE 	6 -5 7	; "process_line" -
	23	[122]	CLOSURE  	7 9	; 0x7fb72ec06f10
	24	[122]	MOVE     	0 1
	25	[122]	MOVE     	0 3
	26	[122]	SETTABLE 	6 -6 7	; "format_results" -
	27	[124]	SETTABLE 	6 -7 6	; "__index" -
	28	[125]	GETGLOBAL	7 -8	; setmetatable
	29	[125]	NEWTABLE 	8 0 3
	30	[128]	CLOSURE  	9 10	; 0x7fb72ec06e10
	31	[128]	SETTABLE 	8 -9 9	; "__init" -
	32	[129]	SETTABLE 	8 -10 6	; "__base" -
	33	[130]	SETTABLE 	8 -11 -12	; "__name" "CodeCoverage"
	34	[131]	NEWTABLE 	9 0 2
	35	[132]	SETTABLE 	9 -7 6	; "__index" -
	36	[137]	CLOSURE  	10 11	; 0x7fb72ec097f0
	37	[137]	MOVE     	0 6
	38	[137]	SETTABLE 	9 -13 10	; "__call" -
	39	[125]	CALL     	7 3 2
	40	[138]	MOVE     	5 7
	41	[139]	SETTABLE 	6 -14 5	; "__class" -
	42	[140]	MOVE     	4 5
	43	[140]	CLOSE    	5
	44	[142]	NEWTABLE 	5 0 1
	45	[143]	SETTABLE 	5 -12 4	; "CodeCoverage" -
	46	[144]	RETURN   	5 2
	47	[144]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:2,7> (12 instructions, 48 bytes at 0x7fb72ec06b00)
1 param, 5 slots, 0 upvalues, 1 local, 6 constants, 0 functions
	1	[3]	EQ       	0 0 -1	; - nil
	2	[3]	JMP      	1	; to 4
	3	[4]	LOADK    	0 -2	; ""
	4	[6]	GETGLOBAL	1 -3	; io
	5	[6]	GETTABLE 	1 1 -4	; "stderr"
	6	[6]	SELF     	1 1 -5	; "write"
	7	[6]	MOVE     	3 0
	8	[6]	LOADK    	4 -6	; "\n"
	9	[6]	CONCAT   	3 3 4
	10	[6]	TAILCALL 	1 3 0
	11	[6]	RETURN   	1 0
	12	[7]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:9,23> (8 instructions, 32 bytes at 0x7fb72ec06c30)
0 params, 4 slots, 0 upvalues, 0 locals, 2 constants, 1 function
	1	[10]	GETGLOBAL	0 -1	; setmetatable
	2	[10]	NEWTABLE 	1 0 0
	3	[10]	NEWTABLE 	2 0 1
	4	[21]	CLOSURE  	3 0	; 0x7fb72ec07260
	5	[21]	SETTABLE 	2 -2 3	; "__index" -
	6	[10]	TAILCALL 	0 3 0
	7	[22]	RETURN   	0 0
	8	[23]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:11,21> (9 instructions, 36 bytes at 0x7fb72ec07260)
2 params, 6 slots, 0 upvalues, 3 locals, 2 constants, 1 function
	1	[13]	GETGLOBAL	2 -1	; setmetatable
	2	[13]	NEWTABLE 	3 0 0
	3	[13]	NEWTABLE 	4 0 1
	4	[16]	CLOSURE  	5 0	; 0x7fb72ec07590
	5	[16]	SETTABLE 	4 -2 5	; "__index" -
	6	[13]	CALL     	2 3 2
	7	[18]	SETTABLE 	0 1 2
	8	[19]	RETURN   	2 2
	9	[21]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:14,16> (3 instructions, 12 bytes at 0x7fb72ec07590)
1 param, 2 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[15]	LOADK    	1 -1	; 0
	2	[15]	RETURN   	1 2
	3	[16]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:25,42> (22 instructions, 88 bytes at 0x7fb72ec071a0)
2 params, 12 slots, 0 upvalues, 10 locals, 6 constants, 0 functions
	1	[26]	NEWTABLE 	2 0 0
	2	[27]	LOADK    	3 -1	; 0
	3	[28]	LOADK    	4 -2	; 1
	4	[29]	SELF     	5 0 -3	; "gmatch"
	5	[29]	LOADK    	7 -4	; "."
	6	[29]	CALL     	5 3 4
	7	[29]	JMP      	11	; to 19
	8	[31]	GETGLOBAL	9 -5	; rawget
	9	[31]	MOVE     	10 1
	10	[31]	MOVE     	11 3
	11	[31]	CALL     	9 3 2
	12	[32]	TEST     	9 0 0
	13	[32]	JMP      	1	; to 15
	14	[33]	SETTABLE 	2 4 9
	15	[36]	EQ       	0 8 -6	; - "\n"
	16	[36]	JMP      	1	; to 18
	17	[37]	ADD      	4 4 -2	; - 1
	18	[39]	ADD      	3 3 -2	; - 1
	19	[29]	TFORLOOP 	5 1
	20	[39]	JMP      	-13	; to 8
	21	[41]	RETURN   	2 2
	22	[42]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:44,59> (66 instructions, 264 bytes at 0x7fb72ec06640)
2 params, 18 slots, 2 upvalues, 12 locals, 20 constants, 0 functions
	1	[45]	SELF     	2 0 -1	; "gsub"
	2	[45]	LOADK    	4 -2	; "^@"
	3	[45]	LOADK    	5 -3	; ""
	4	[45]	CALL     	2 4 2
	5	[45]	MOVE     	0 2
	6	[46]	GETGLOBAL	2 -4	; assert
	7	[46]	GETGLOBAL	3 -5	; io
	8	[46]	GETTABLE 	3 3 -6	; "open"
	9	[46]	MOVE     	4 0
	10	[46]	CALL     	3 2 0
	11	[46]	CALL     	2 0 2
	12	[47]	SELF     	3 2 -7	; "read"
	13	[47]	LOADK    	5 -8	; "*a"
	14	[47]	CALL     	3 3 2
	15	[48]	SELF     	4 2 -9	; "close"
	16	[48]	CALL     	4 2 1
	17	[49]	GETUPVAL 	4 0	; position_to_lines
	18	[49]	MOVE     	5 3
	19	[49]	MOVE     	6 1
	20	[49]	CALL     	4 3 2
	21	[50]	GETUPVAL 	5 1	; log
	22	[50]	LOADK    	6 -10	; "------| @"
	23	[50]	GETGLOBAL	7 -11	; tostring
	24	[50]	MOVE     	8 0
	25	[50]	CALL     	7 2 2
	26	[50]	CONCAT   	6 6 7
	27	[50]	CALL     	5 2 1
	28	[51]	LOADK    	5 -12	; 1
	29	[52]	MOVE     	6 3
	30	[52]	LOADK    	7 -13	; "\n"
	31	[52]	CONCAT   	6 6 7
	32	[52]	SELF     	6 6 -14	; "gmatch"
	33	[52]	LOADK    	8 -15	; "(.-)\n"
	34	[52]	CALL     	6 3 4
	35	[52]	JMP      	25	; to 61
	36	[53]	LOADK    	10 -16	; "% 5d"
	37	[53]	SELF     	10 10 -17	; "format"
	38	[53]	MOVE     	12 5
	39	[53]	CALL     	10 3 2
	40	[54]	GETTABLE 	11 4 5
	41	[54]	TEST     	11 0 0
	42	[54]	JMP      	3	; to 46
	43	[54]	LOADK    	11 -18	; "*"
	44	[54]	TEST     	11 0 1
	45	[54]	JMP      	1	; to 47
	46	[54]	LOADK    	11 -19	; " "
	47	[55]	GETUPVAL 	12 1	; log
	48	[55]	GETGLOBAL	13 -11	; tostring
	49	[55]	MOVE     	14 11
	50	[55]	CALL     	13 2 2
	51	[55]	GETGLOBAL	14 -11	; tostring
	52	[55]	MOVE     	15 10
	53	[55]	CALL     	14 2 2
	54	[55]	LOADK    	15 -20	; "| "
	55	[55]	GETGLOBAL	16 -11	; tostring
	56	[55]	MOVE     	17 9
	57	[55]	CALL     	16 2 2
	58	[55]	CONCAT   	13 13 16
	59	[55]	CALL     	12 2 1
	60	[56]	ADD      	5 5 -12	; - 1
	61	[52]	TFORLOOP 	6 1
	62	[56]	JMP      	-27	; to 36
	63	[58]	GETUPVAL 	6 1	; log
	64	[58]	TAILCALL 	6 1 0
	65	[58]	RETURN   	6 0
	66	[59]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:64,66> (4 instructions, 16 bytes at 0x7fb72ec08050)
1 param, 2 slots, 1 upvalue, 1 local, 1 constant, 0 functions
	1	[65]	GETUPVAL 	1 0	; create_counter
	2	[65]	CALL     	1 1 2
	3	[65]	SETTABLE 	0 -1 1	; "line_counts" -
	4	[66]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:67,75> (9 instructions, 36 bytes at 0x7fb72ec08590)
1 param, 4 slots, 0 upvalues, 1 local, 3 constants, 1 function
	1	[68]	GETGLOBAL	1 -1	; debug
	2	[68]	GETTABLE 	1 1 -2	; "sethook"
	3	[74]	CLOSURE  	2 0	; 0x7fb72ec09170
	4	[74]	MOVE     	0 0
	5	[74]	CALL     	2 1 2
	6	[74]	LOADK    	3 -3	; "l"
	7	[68]	TAILCALL 	1 3 0
	8	[74]	RETURN   	1 0
	9	[75]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:68,74> (7 instructions, 28 bytes at 0x7fb72ec09170)
0 params, 3 slots, 1 upvalue, 2 locals, 1 constant, 1 function
	1	[69]	GETUPVAL 	0 0	; self
	2	[70]	GETTABLE 	1 0 -1	; "process_line"
	3	[73]	CLOSURE  	2 0	; 0x7fb72ec09420
	4	[73]	MOVE     	0 1
	5	[73]	MOVE     	0 0
	6	[73]	RETURN   	2 2
	7	[74]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:71,73> (6 instructions, 24 bytes at 0x7fb72ec09420)
0+ params, 4 slots, 2 upvalues, 1 local, 0 constants, 0 functions
	1	[72]	GETUPVAL 	1 0	; _fn_0
	2	[72]	GETUPVAL 	2 1	; _base_1
	3	[72]	VARARG   	3 0
	4	[72]	TAILCALL 	1 0 0
	5	[72]	RETURN   	1 0
	6	[73]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:76,78> (5 instructions, 20 bytes at 0x7fb72ec096e0)
1 param, 2 slots, 0 upvalues, 1 local, 2 constants, 0 functions
	1	[77]	GETGLOBAL	1 -1	; debug
	2	[77]	GETTABLE 	1 1 -2	; "sethook"
	3	[77]	TAILCALL 	1 1 0
	4	[77]	RETURN   	1 0
	5	[78]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:79,81> (4 instructions, 16 bytes at 0x7fb72ec09a10)
1 param, 3 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[80]	SELF     	1 0 -1	; "format_results"
	2	[80]	TAILCALL 	1 2 0
	3	[80]	RETURN   	1 0
	4	[81]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:82,86> (14 instructions, 56 bytes at 0x7fb72ec073b0)
3 params, 7 slots, 0 upvalues, 5 locals, 7 constants, 0 functions
	1	[83]	GETGLOBAL	3 -1	; debug
	2	[83]	GETTABLE 	3 3 -2	; "getinfo"
	3	[83]	LOADK    	4 -3	; 2
	4	[83]	LOADK    	5 -4	; "S"
	5	[83]	CALL     	3 3 2
	6	[84]	GETTABLE 	4 3 -5	; "source"
	7	[85]	GETTABLE 	5 0 -6	; "line_counts"
	8	[85]	GETTABLE 	5 5 4
	9	[85]	GETTABLE 	6 0 -6	; "line_counts"
	10	[85]	GETTABLE 	6 6 4
	11	[85]	GETTABLE 	6 6 2
	12	[85]	ADD      	6 6 -7	; - 1
	13	[85]	SETTABLE 	5 2 6
	14	[86]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:87,122> (53 instructions, 212 bytes at 0x7fb72ec06f10)
1 param, 19 slots, 2 upvalues, 22 locals, 4 constants, 0 functions
	1	[88]	GETGLOBAL	1 -1	; require
	2	[88]	LOADK    	2 -2	; "moonscript.line_tables"
	3	[88]	CALL     	1 2 2
	4	[89]	GETUPVAL 	2 0	; create_counter
	5	[89]	CALL     	2 1 2
	6	[90]	GETGLOBAL	3 -3	; pairs
	7	[90]	GETTABLE 	4 0 -4	; "line_counts"
	8	[90]	CALL     	3 2 4
	9	[90]	JMP      	31	; to 41
	10	[91]	LOADBOOL 	8 0 0
	11	[93]	GETTABLE 	9 1 6
	12	[94]	TEST     	9 0 1
	13	[94]	JMP      	2	; to 16
	14	[95]	LOADBOOL 	8 1 0
	15	[96]	JMP      	22	; to 38
	16	[98]	GETGLOBAL	10 -3	; pairs
	17	[98]	MOVE     	11 7
	18	[98]	CALL     	10 2 4
	19	[98]	JMP      	15	; to 35
	20	[99]	LOADBOOL 	15 0 0
	21	[101]	GETTABLE 	16 9 13
	22	[102]	TEST     	16 0 1
	23	[102]	JMP      	2	; to 26
	24	[103]	LOADBOOL 	15 1 0
	25	[104]	JMP      	6	; to 32
	26	[106]	GETTABLE 	17 2 6
	27	[106]	GETTABLE 	18 2 6
	28	[106]	GETTABLE 	18 18 16
	29	[106]	ADD      	18 18 14
	30	[106]	SETTABLE 	17 16 18
	31	[107]	LOADBOOL 	15 1 0
	32	[109]	TEST     	15 0 1
	33	[109]	JMP      	1	; to 35
	34	[110]	JMP      	2	; to 37
	35	[98]	TFORLOOP 	10 2
	36	[111]	JMP      	-17	; to 20
	37	[113]	LOADBOOL 	8 1 0
	38	[115]	TEST     	8 0 1
	39	[115]	JMP      	1	; to 41
	40	[116]	JMP      	2	; to 43
	41	[90]	TFORLOOP 	3 2
	42	[117]	JMP      	-33	; to 10
	43	[119]	GETGLOBAL	3 -3	; pairs
	44	[119]	MOVE     	4 2
	45	[119]	CALL     	3 2 4
	46	[119]	JMP      	4	; to 51
	47	[120]	GETUPVAL 	8 1	; format_file
	48	[120]	MOVE     	9 6
	49	[120]	MOVE     	10 7
	50	[120]	CALL     	8 3 1
	51	[119]	TFORLOOP 	3 2
	52	[120]	JMP      	-6	; to 47
	53	[122]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:126,128> (4 instructions, 16 bytes at 0x7fb72ec06e10)
1 param, 3 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[127]	SELF     	1 0 -1	; "reset"
	2	[127]	TAILCALL 	1 2 0
	3	[127]	RETURN   	1 0
	4	[128]	RETURN   	0 1

function <./moonscript/cmd/coverage.lua:133,137> (10 instructions, 40 bytes at 0x7fb72ec097f0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[134]	GETGLOBAL	2 -1	; setmetatable
	2	[134]	NEWTABLE 	3 0 0
	3	[134]	GETUPVAL 	4 0	; _base_0
	4	[134]	CALL     	2 3 2
	5	[135]	GETTABLE 	3 0 -2	; "__init"
	6	[135]	MOVE     	4 2
	7	[135]	VARARG   	5 0
	8	[135]	CALL     	3 0 1
	9	[136]	RETURN   	2 2
	10	[137]	RETURN   	0 1
-----------------------

main <./moonscript/cmd/lint.lua:0,0> (134 instructions, 536 bytes at 0x7ffa6a4068c0)
0+ params, 48 slots, 0 upvalues, 14 locals, 64 constants, 11 functions
	1	[2]	GETGLOBAL	1 -1	; table
	2	[2]	GETTABLE 	0 1 -2	; "insert"
	3	[3]	LOADNIL  	1 1
	4	[4]	GETGLOBAL	2 -3	; require
	5	[4]	LOADK    	3 -4	; "moonscript.data"
	6	[4]	CALL     	2 2 2
	7	[4]	GETTABLE 	1 2 -5	; "Set"
	8	[5]	LOADNIL  	2 2
	9	[6]	GETGLOBAL	3 -3	; require
	10	[6]	LOADK    	4 -6	; "moonscript.compile"
	11	[6]	CALL     	3 2 2
	12	[6]	GETTABLE 	2 3 -7	; "Block"
	13	[7]	LOADNIL  	3 3
	14	[8]	GETGLOBAL	4 -3	; require
	15	[8]	LOADK    	5 -8	; "moonscript.util"
	16	[8]	CALL     	4 2 2
	17	[8]	GETTABLE 	4 4 -9	; "moon"
	18	[8]	GETTABLE 	3 4 -10	; "type"
	19	[9]	MOVE     	4 1
	20	[9]	NEWTABLE 	5 27 0
	21	[10]	LOADK    	6 -11	; "_G"
	22	[11]	LOADK    	7 -12	; "_VERSION"
	23	[12]	LOADK    	8 -13	; "assert"
	24	[13]	LOADK    	9 -14	; "bit32"
	25	[14]	LOADK    	10 -15	; "collectgarbage"
	26	[15]	LOADK    	11 -16	; "coroutine"
	27	[16]	LOADK    	12 -17	; "debug"
	28	[17]	LOADK    	13 -18	; "dofile"
	29	[18]	LOADK    	14 -19	; "error"
	30	[19]	LOADK    	15 -20	; "getfenv"
	31	[20]	LOADK    	16 -21	; "getmetatable"
	32	[21]	LOADK    	17 -22	; "io"
	33	[22]	LOADK    	18 -23	; "ipairs"
	34	[23]	LOADK    	19 -24	; "load"
	35	[24]	LOADK    	20 -25	; "loadfile"
	36	[25]	LOADK    	21 -26	; "loadstring"
	37	[26]	LOADK    	22 -27	; "math"
	38	[27]	LOADK    	23 -28	; "module"
	39	[28]	LOADK    	24 -29	; "next"
	40	[29]	LOADK    	25 -30	; "os"
	41	[30]	LOADK    	26 -31	; "package"
	42	[31]	LOADK    	27 -32	; "pairs"
	43	[32]	LOADK    	28 -33	; "pcall"
	44	[33]	LOADK    	29 -34	; "print"
	45	[34]	LOADK    	30 -35	; "rawequal"
	46	[35]	LOADK    	31 -36	; "rawget"
	47	[36]	LOADK    	32 -37	; "rawlen"
	48	[37]	LOADK    	33 -38	; "rawset"
	49	[38]	LOADK    	34 -3	; "require"
	50	[39]	LOADK    	35 -39	; "select"
	51	[40]	LOADK    	36 -40	; "setfenv"
	52	[41]	LOADK    	37 -41	; "setmetatable"
	53	[42]	LOADK    	38 -42	; "string"
	54	[43]	LOADK    	39 -1	; "table"
	55	[44]	LOADK    	40 -43	; "tonumber"
	56	[45]	LOADK    	41 -44	; "tostring"
	57	[46]	LOADK    	42 -10	; "type"
	58	[47]	LOADK    	43 -45	; "unpack"
	59	[48]	LOADK    	44 -46	; "xpcall"
	60	[49]	LOADK    	45 -47	; "nil"
	61	[50]	LOADK    	46 -48	; "true"
	62	[52]	LOADK    	47 -49	; "false"
	63	[52]	SETLIST  	5 42 1	; 1
	64	[9]	CALL     	4 2 2
	65	[53]	LOADNIL  	5 6
	66	[56]	MOVE     	7 2
	67	[57]	NEWTABLE 	8 0 4
	68	[66]	CLOSURE  	9 0	; 0x7ffa6a407080
	69	[66]	SETTABLE 	8 -50 9	; "lint_mark_used" -
	70	[121]	CLOSURE  	9 1	; 0x7ffa6a407ae0
	71	[121]	MOVE     	0 0
	72	[121]	SETTABLE 	8 -51 9	; "lint_check_unused" -
	73	[125]	CLOSURE  	9 2	; 0x7ffa6a4082f0
	74	[125]	MOVE     	0 6
	75	[125]	SETTABLE 	8 -52 9	; "render" -
	76	[138]	CLOSURE  	9 3	; 0x7ffa6a407860
	77	[138]	MOVE     	0 6
	78	[138]	SETTABLE 	8 -53 9	; "block" -
	79	[140]	SETTABLE 	8 -54 8	; "__index" -
	80	[141]	GETGLOBAL	9 -41	; setmetatable
	81	[141]	MOVE     	10 8
	82	[141]	GETTABLE 	11 7 -55	; "__base"
	83	[141]	CALL     	9 3 1
	84	[142]	GETGLOBAL	9 -41	; setmetatable
	85	[142]	NEWTABLE 	10 0 4
	86	[202]	CLOSURE  	11 4	; 0x7ffa6a409240
	87	[202]	MOVE     	0 4
	88	[202]	MOVE     	0 6
	89	[202]	MOVE     	0 0
	90	[202]	SETTABLE 	10 -56 11	; "__init" -
	91	[203]	SETTABLE 	10 -55 8	; "__base" -
	92	[204]	SETTABLE 	10 -57 -58	; "__name" "LinterBlock"
	93	[205]	SETTABLE 	10 -59 7	; "__parent" -
	94	[206]	NEWTABLE 	11 0 2
	95	[217]	CLOSURE  	12 5	; 0x7ffa6a40a130
	96	[217]	MOVE     	0 8
	97	[217]	SETTABLE 	11 -54 12	; "__index" -
	98	[222]	CLOSURE  	12 6	; 0x7ffa6a40a5d0
	99	[222]	MOVE     	0 8
	100	[222]	SETTABLE 	11 -60 12	; "__call" -
	101	[142]	CALL     	9 3 2
	102	[223]	MOVE     	6 9
	103	[224]	SETTABLE 	8 -61 6	; "__class" -
	104	[225]	GETTABLE 	9 7 -62	; "__inherited"
	105	[225]	TEST     	9 0 0
	106	[225]	JMP      	4	; to 111
	107	[226]	GETTABLE 	9 7 -62	; "__inherited"
	108	[226]	MOVE     	10 7
	109	[226]	MOVE     	11 6
	110	[226]	CALL     	9 3 1
	111	[228]	MOVE     	5 6
	112	[228]	CLOSE    	6
	113	[230]	LOADNIL  	6 6
	114	[269]	CLOSURE  	6 7	; 0x7ffa6a40aba0
	115	[270]	LOADNIL  	7 8
	116	[295]	CLOSURE  	7 8	; 0x7ffa6a40b050
	117	[295]	MOVE     	0 8
	118	[295]	MOVE     	0 4
	119	[295]	MOVE     	0 0
	120	[295]	MOVE     	0 1
	121	[295]	CLOSE    	8
	122	[297]	LOADNIL  	8 8
	123	[311]	CLOSURE  	8 9	; 0x7ffa6a40b6f0
	124	[311]	MOVE     	0 5
	125	[311]	MOVE     	0 6
	126	[312]	LOADNIL  	9 9
	127	[319]	CLOSURE  	9 10	; 0x7ffa6a40c430
	128	[319]	MOVE     	0 8
	129	[319]	MOVE     	0 7
	130	[320]	NEWTABLE 	10 0 2
	131	[321]	SETTABLE 	10 -63 8	; "lint_code" -
	132	[322]	SETTABLE 	10 -64 9	; "lint_file" -
	133	[323]	RETURN   	10 2
	134	[323]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:58,66> (19 instructions, 76 bytes at 0x7ffa6a407080)
2 params, 5 slots, 0 upvalues, 2 locals, 4 constants, 0 functions
	1	[59]	GETTABLE 	2 0 -1	; "lint_unused_names"
	2	[59]	TEST     	2 0 0
	3	[59]	JMP      	7	; to 11
	4	[59]	GETTABLE 	2 0 -1	; "lint_unused_names"
	5	[59]	GETTABLE 	2 2 1
	6	[59]	TEST     	2 0 0
	7	[59]	JMP      	3	; to 11
	8	[60]	GETTABLE 	2 0 -1	; "lint_unused_names"
	9	[60]	SETTABLE 	2 1 -2	; - false
	10	[61]	RETURN   	0 1
	11	[63]	GETTABLE 	2 0 -3	; "parent"
	12	[63]	TEST     	2 0 0
	13	[63]	JMP      	5	; to 19
	14	[64]	GETTABLE 	2 0 -3	; "parent"
	15	[64]	SELF     	2 2 -4	; "lint_mark_used"
	16	[64]	MOVE     	4 1
	17	[64]	TAILCALL 	2 3 0
	18	[64]	RETURN   	2 0
	19	[66]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:67,121> (86 instructions, 344 bytes at 0x7ffa6a407ae0)
1 param, 18 slots, 1 upvalue, 23 locals, 13 constants, 2 functions
	1	[68]	GETTABLE 	1 0 -1	; "lint_unused_names"
	2	[68]	TEST     	1 0 0
	3	[68]	JMP      	5	; to 9
	4	[68]	GETGLOBAL	1 -2	; next
	5	[68]	GETTABLE 	2 0 -1	; "lint_unused_names"
	6	[68]	CALL     	1 2 2
	7	[68]	TEST     	1 0 1
	8	[68]	JMP      	1	; to 10
	9	[69]	RETURN   	0 1
	10	[71]	NEWTABLE 	1 0 0
	11	[72]	GETGLOBAL	2 -3	; pairs
	12	[72]	GETTABLE 	3 0 -1	; "lint_unused_names"
	13	[72]	CALL     	2 2 4
	14	[72]	JMP      	18	; to 33
	15	[73]	LOADBOOL 	7 0 0
	16	[75]	TEST     	6 0 1
	17	[75]	JMP      	2	; to 20
	18	[76]	LOADBOOL 	7 1 0
	19	[77]	JMP      	10	; to 30
	20	[79]	GETTABLE 	8 1 6
	21	[79]	TEST     	8 0 1
	22	[79]	JMP      	1	; to 24
	23	[79]	NEWTABLE 	8 0 0
	24	[79]	SETTABLE 	1 6 8
	25	[80]	GETUPVAL 	8 0	; insert
	26	[80]	GETTABLE 	9 1 6
	27	[80]	MOVE     	10 5
	28	[80]	CALL     	8 3 1
	29	[81]	LOADBOOL 	7 1 0
	30	[83]	TEST     	7 0 1
	31	[83]	JMP      	1	; to 33
	32	[84]	JMP      	2	; to 35
	33	[72]	TFORLOOP 	2 2
	34	[85]	JMP      	-20	; to 15
	35	[87]	LOADNIL  	2 2
	36	[89]	NEWTABLE 	3 0 0
	37	[90]	LOADK    	4 -4	; 1
	38	[91]	GETGLOBAL	5 -3	; pairs
	39	[91]	MOVE     	6 1
	40	[91]	CALL     	5 2 4
	41	[91]	JMP      	6	; to 48
	42	[92]	NEWTABLE 	10 2 0
	43	[93]	MOVE     	11 8
	44	[95]	MOVE     	12 9
	45	[95]	SETLIST  	10 2 1	; 1
	46	[95]	SETTABLE 	3 4 10
	47	[96]	ADD      	4 4 -4	; - 1
	48	[91]	TFORLOOP 	5 2
	49	[96]	JMP      	-8	; to 42
	50	[98]	MOVE     	2 3
	51	[100]	GETGLOBAL	3 -5	; table
	52	[100]	GETTABLE 	3 3 -6	; "sort"
	53	[100]	MOVE     	4 2
	54	[102]	CLOSURE  	5 0	; 0x7ffa6a407f90
	55	[100]	CALL     	3 3 1
	56	[103]	LOADK    	3 -4	; 1
	57	[103]	LEN      	4 2
	58	[103]	LOADK    	5 -4	; 1
	59	[103]	FORPREP  	3 25	; to 85
	60	[104]	GETTABLE 	7 2 6
	61	[105]	LOADNIL  	8 9
	62	[106]	GETTABLE 	10 7 -4	; 1
	63	[106]	GETTABLE 	9 7 -7	; 2
	64	[106]	MOVE     	8 10
	65	[107]	GETUPVAL 	10 0	; insert
	66	[107]	SELF     	11 0 -8	; "get_root_block"
	67	[107]	CALL     	11 2 2
	68	[107]	GETTABLE 	11 11 -9	; "lint_errors"
	69	[107]	NEWTABLE 	12 2 0
	70	[108]	LOADK    	13 -10	; "assigned but unused "
	71	[108]	GETGLOBAL	14 -11	; tostring
	72	[108]	GETGLOBAL	15 -5	; table
	73	[108]	GETTABLE 	15 15 -12	; "concat"
	74	[117]	CLOSURE  	16 1	; 0x7ffa6a407ce0
	75	[117]	MOVE     	0 9
	76	[117]	CALL     	16 1 2
	77	[117]	LOADK    	17 -13	; ", "
	78	[108]	CALL     	15 3 0
	79	[108]	CALL     	14 0 2
	80	[117]	CONCAT   	13 13 14
	81	[119]	MOVE     	14 8
	82	[119]	SETLIST  	12 2 1	; 1
	83	[107]	CALL     	10 3 1
	84	[119]	CLOSE    	7
	85	[103]	FORLOOP  	3 -26	; to 60
	86	[121]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:100,102> (8 instructions, 32 bytes at 0x7ffa6a407f90)
2 params, 4 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[101]	GETTABLE 	2 0 -1	; 1
	2	[101]	GETTABLE 	3 1 -1	; 1
	3	[101]	LT       	1 2 3
	4	[101]	JMP      	1	; to 6
	5	[101]	LOADBOOL 	2 0 1
	6	[101]	LOADBOOL 	2 1 0
	7	[101]	RETURN   	2 2
	8	[102]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:108,117> (20 instructions, 80 bytes at 0x7ffa6a407ce0)
0 params, 10 slots, 1 upvalue, 7 locals, 3 constants, 0 functions
	1	[109]	NEWTABLE 	0 0 0
	2	[110]	LOADK    	1 -1	; 1
	3	[111]	LOADK    	2 -1	; 1
	4	[111]	GETUPVAL 	3 0	; names
	5	[111]	LEN      	3 3
	6	[111]	LOADK    	4 -1	; 1
	7	[111]	FORPREP  	2 10	; to 18
	8	[112]	GETUPVAL 	6 0	; names
	9	[112]	GETTABLE 	6 6 5
	10	[113]	LOADK    	7 -2	; "`"
	11	[113]	GETGLOBAL	8 -3	; tostring
	12	[113]	MOVE     	9 6
	13	[113]	CALL     	8 2 2
	14	[113]	LOADK    	9 -2	; "`"
	15	[113]	CONCAT   	7 7 9
	16	[113]	SETTABLE 	0 1 7
	17	[114]	ADD      	1 1 -1	; - 1
	18	[111]	FORLOOP  	2 -11	; to 8
	19	[116]	RETURN   	0 2
	20	[117]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:122,125> (11 instructions, 44 bytes at 0x7ffa6a4082f0)
1+ param, 5 slots, 1 upvalue, 2 locals, 4 constants, 0 functions
	1	[123]	SELF     	2 0 -1	; "lint_check_unused"
	2	[123]	CALL     	2 2 1
	3	[124]	GETUPVAL 	2 0	; _class_0
	4	[124]	GETTABLE 	2 2 -2	; "__parent"
	5	[124]	GETTABLE 	2 2 -3	; "__base"
	6	[124]	GETTABLE 	2 2 -4	; "render"
	7	[124]	MOVE     	3 0
	8	[124]	VARARG   	4 0
	9	[124]	TAILCALL 	2 0 0
	10	[124]	RETURN   	2 0
	11	[125]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:126,138> (23 instructions, 92 bytes at 0x7ffa6a407860)
1+ param, 5 slots, 1 upvalue, 3 locals, 9 constants, 0 functions
	1	[128]	GETUPVAL 	2 0	; _class_0
	2	[128]	GETTABLE 	2 2 -1	; "__parent"
	3	[128]	GETTABLE 	2 2 -2	; "__base"
	4	[128]	GETTABLE 	2 2 -3	; "block"
	5	[128]	MOVE     	3 0
	6	[128]	VARARG   	4 0
	7	[128]	CALL     	2 0 2
	8	[129]	GETTABLE 	3 0 -3	; "block"
	9	[129]	SETTABLE 	2 -3 3	; "block" -
	10	[130]	GETTABLE 	3 0 -4	; "render"
	11	[130]	SETTABLE 	2 -4 3	; "render" -
	12	[131]	GETTABLE 	3 0 -5	; "get_root_block"
	13	[131]	SETTABLE 	2 -5 3	; "get_root_block" -
	14	[132]	GETTABLE 	3 0 -6	; "lint_check_unused"
	15	[132]	SETTABLE 	2 -6 3	; "lint_check_unused" -
	16	[133]	GETTABLE 	3 0 -7	; "lint_mark_used"
	17	[133]	SETTABLE 	2 -7 3	; "lint_mark_used" -
	18	[134]	GETTABLE 	3 0 -8	; "value_compilers"
	19	[134]	SETTABLE 	2 -8 3	; "value_compilers" -
	20	[135]	GETTABLE 	3 0 -9	; "statement_compilers"
	21	[135]	SETTABLE 	2 -9 3	; "statement_compilers" -
	22	[136]	RETURN   	2 2
	23	[138]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:143,202> (38 instructions, 152 bytes at 0x7ffa6a409240)
2+ params, 8 slots, 3 upvalues, 5 locals, 11 constants, 3 functions
	1	[144]	EQ       	0 1 -1	; - nil
	2	[144]	JMP      	1	; to 4
	3	[145]	GETUPVAL 	1 0	; default_whitelist
	4	[147]	GETUPVAL 	3 1	; _class_0
	5	[147]	GETTABLE 	3 3 -2	; "__parent"
	6	[147]	GETTABLE 	3 3 -3	; "__init"
	7	[147]	MOVE     	4 0
	8	[147]	VARARG   	5 0
	9	[147]	CALL     	3 0 1
	10	[150]	CLOSURE  	3 0	; 0x7ffa6a409490
	11	[150]	MOVE     	0 0
	12	[150]	SETTABLE 	0 -4 3	; "get_root_block" -
	13	[151]	NEWTABLE 	3 0 0
	14	[151]	SETTABLE 	0 -5 3	; "lint_errors" -
	15	[152]	GETTABLE 	3 0 -6	; "value_compilers"
	16	[153]	GETGLOBAL	4 -7	; setmetatable
	17	[153]	NEWTABLE 	5 0 1
	18	[164]	CLOSURE  	6 1	; 0x7ffa6a409360
	19	[164]	MOVE     	0 1
	20	[164]	GETUPVAL 	0 2	; insert
	21	[164]	MOVE     	0 0
	22	[164]	MOVE     	0 3
	23	[164]	SETTABLE 	5 -8 6	; "ref" -
	24	[165]	NEWTABLE 	6 0 1
	25	[166]	SETTABLE 	6 -9 3	; "__index" -
	26	[153]	CALL     	4 3 2
	27	[167]	SETTABLE 	0 -6 4	; "value_compilers" -
	28	[168]	GETTABLE 	4 0 -10	; "statement_compilers"
	29	[169]	GETGLOBAL	5 -7	; setmetatable
	30	[169]	NEWTABLE 	6 0 1
	31	[198]	CLOSURE  	7 2	; 0x7ffa6a409c70
	32	[198]	MOVE     	0 4
	33	[198]	SETTABLE 	6 -11 7	; "assign" -
	34	[199]	NEWTABLE 	7 0 1
	35	[200]	SETTABLE 	7 -9 4	; "__index" -
	36	[169]	CALL     	5 3 2
	37	[201]	SETTABLE 	0 -10 5	; "statement_compilers" -
	38	[202]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:148,150> (3 instructions, 12 bytes at 0x7ffa6a409490)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[149]	GETUPVAL 	0 0	; self
	2	[149]	RETURN   	0 2
	3	[150]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:154,164> (38 instructions, 152 bytes at 0x7ffa6a409360)
2 params, 9 slots, 4 upvalues, 3 locals, 11 constants, 0 functions
	1	[155]	GETTABLE 	2 1 -1	; 2
	2	[156]	SELF     	3 0 -2	; "has_name"
	3	[156]	MOVE     	5 2
	4	[156]	CALL     	3 3 2
	5	[156]	TEST     	3 0 1
	6	[156]	JMP      	22	; to 29
	7	[156]	GETUPVAL 	3 0	; whitelist_globals
	8	[156]	GETTABLE 	3 3 2
	9	[156]	TEST     	3 0 1
	10	[156]	JMP      	18	; to 29
	11	[156]	SELF     	3 2 -3	; "match"
	12	[156]	LOADK    	5 -4	; "%."
	13	[156]	CALL     	3 3 2
	14	[156]	TEST     	3 0 1
	15	[156]	JMP      	13	; to 29
	16	[157]	GETUPVAL 	3 1	; insert
	17	[157]	GETUPVAL 	4 2	; self
	18	[157]	GETTABLE 	4 4 -5	; "lint_errors"
	19	[157]	NEWTABLE 	5 2 0
	20	[158]	LOADK    	6 -6	; "accessing global `"
	21	[158]	GETGLOBAL	7 -7	; tostring
	22	[158]	MOVE     	8 2
	23	[158]	CALL     	7 2 2
	24	[158]	LOADK    	8 -8	; "`"
	25	[158]	CONCAT   	6 6 8
	26	[160]	GETTABLE 	7 1 -9	; -1
	27	[160]	SETLIST  	5 2 1	; 1
	28	[157]	CALL     	3 3 1
	29	[162]	SELF     	3 0 -10	; "lint_mark_used"
	30	[162]	MOVE     	5 2
	31	[162]	CALL     	3 3 1
	32	[163]	GETUPVAL 	3 3	; vc
	33	[163]	GETTABLE 	3 3 -11	; "ref"
	34	[163]	MOVE     	4 0
	35	[163]	MOVE     	5 1
	36	[163]	TAILCALL 	3 3 0
	37	[163]	RETURN   	3 0
	38	[164]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:170,198> (60 instructions, 240 bytes at 0x7ffa6a409c70)
2 params, 15 slots, 1 upvalue, 11 locals, 12 constants, 0 functions
	1	[171]	GETTABLE 	2 1 -1	; 2
	2	[172]	LOADK    	3 -2	; 1
	3	[172]	LEN      	4 2
	4	[172]	LOADK    	5 -2	; 1
	5	[172]	FORPREP  	3 47	; to 53
	6	[173]	LOADBOOL 	7 0 0
	7	[175]	GETTABLE 	8 2 6
	8	[176]	GETGLOBAL	9 -3	; type
	9	[176]	MOVE     	10 8
	10	[176]	CALL     	9 2 2
	11	[176]	EQ       	0 9 -4	; - "table"
	12	[176]	JMP      	5	; to 18
	13	[176]	GETTABLE 	9 8 -2	; 1
	14	[176]	EQ       	0 9 -5	; - "temp_name"
	15	[176]	JMP      	2	; to 18
	16	[177]	LOADBOOL 	7 1 0
	17	[178]	JMP      	32	; to 50
	18	[180]	SELF     	9 0 -6	; "extract_assign_name"
	19	[180]	MOVE     	11 8
	20	[180]	CALL     	9 3 3
	21	[181]	TEST     	10 0 1
	22	[181]	JMP      	11	; to 34
	23	[181]	TEST     	9 0 0
	24	[181]	JMP      	7	; to 32
	25	[181]	SELF     	11 0 -7	; "has_name"
	26	[181]	MOVE     	13 9
	27	[181]	LOADBOOL 	14 1 0
	28	[181]	CALL     	11 4 2
	29	[181]	NOT      	11 11
	30	[181]	TEST     	11 0 1
	31	[181]	JMP      	2	; to 34
	32	[182]	LOADBOOL 	7 1 0
	33	[183]	JMP      	16	; to 50
	34	[185]	EQ       	0 9 -8	; - "_"
	35	[185]	JMP      	2	; to 38
	36	[186]	LOADBOOL 	7 1 0
	37	[187]	JMP      	12	; to 50
	38	[189]	GETTABLE 	11 0 -9	; "lint_unused_names"
	39	[189]	TEST     	11 0 1
	40	[189]	JMP      	1	; to 42
	41	[189]	NEWTABLE 	11 0 0
	42	[189]	SETTABLE 	0 -9 11	; "lint_unused_names" -
	43	[190]	GETTABLE 	11 0 -9	; "lint_unused_names"
	44	[190]	GETTABLE 	12 1 -10	; -1
	45	[190]	TEST     	12 0 1
	46	[190]	JMP      	1	; to 48
	47	[190]	LOADK    	12 -11	; 0
	48	[190]	SETTABLE 	11 9 12
	49	[191]	LOADBOOL 	7 1 0
	50	[193]	TEST     	7 0 1
	51	[193]	JMP      	1	; to 53
	52	[194]	JMP      	1	; to 54
	53	[172]	FORLOOP  	3 -48	; to 6
	54	[197]	GETUPVAL 	3 0	; sc
	55	[197]	GETTABLE 	3 3 -12	; "assign"
	56	[197]	MOVE     	4 0
	57	[197]	MOVE     	5 1
	58	[197]	TAILCALL 	3 3 0
	59	[197]	RETURN   	3 0
	60	[198]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:207,217> (17 instructions, 68 bytes at 0x7ffa6a40a130)
2 params, 6 slots, 1 upvalue, 4 locals, 3 constants, 0 functions
	1	[208]	GETGLOBAL	2 -1	; rawget
	2	[208]	GETUPVAL 	3 0	; _base_0
	3	[208]	MOVE     	4 1
	4	[208]	CALL     	2 3 2
	5	[209]	EQ       	0 2 -2	; - nil
	6	[209]	JMP      	9	; to 16
	7	[210]	GETGLOBAL	3 -1	; rawget
	8	[210]	MOVE     	4 0
	9	[210]	LOADK    	5 -3	; "__parent"
	10	[210]	CALL     	3 3 2
	11	[211]	TEST     	3 0 0
	12	[211]	JMP      	4	; to 17
	13	[212]	GETTABLE 	4 3 1
	14	[212]	RETURN   	4 2
	15	[213]	JMP      	1	; to 17
	16	[215]	RETURN   	2 2
	17	[217]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:218,222> (10 instructions, 40 bytes at 0x7ffa6a40a5d0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[219]	GETGLOBAL	2 -1	; setmetatable
	2	[219]	NEWTABLE 	3 0 0
	3	[219]	GETUPVAL 	4 0	; _base_0
	4	[219]	CALL     	2 3 2
	5	[220]	GETTABLE 	3 0 -2	; "__init"
	6	[220]	MOVE     	4 2
	7	[220]	VARARG   	5 0
	8	[220]	CALL     	3 0 1
	9	[221]	RETURN   	2 2
	10	[222]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:231,269> (84 instructions, 336 bytes at 0x7ffa6a40aba0)
3 params, 24 slots, 0 upvalues, 19 locals, 20 constants, 0 functions
	1	[232]	GETGLOBAL	3 -1	; next
	2	[232]	MOVE     	4 0
	3	[232]	CALL     	3 2 2
	4	[232]	TEST     	3 0 1
	5	[232]	JMP      	1	; to 7
	6	[233]	RETURN   	0 1
	7	[235]	LOADNIL  	3 4
	8	[237]	GETGLOBAL	5 -2	; require
	9	[237]	LOADK    	6 -3	; "moonscript.util"
	10	[237]	CALL     	5 2 2
	11	[238]	GETTABLE 	6 5 -4	; "pos_to_line"
	12	[238]	GETTABLE 	4 5 -5	; "get_line"
	13	[238]	MOVE     	3 6
	14	[240]	LOADNIL  	5 5
	15	[242]	NEWTABLE 	6 0 0
	16	[243]	LOADK    	7 -6	; 1
	17	[244]	LOADK    	8 -6	; 1
	18	[244]	LEN      	9 0
	19	[244]	LOADK    	10 -6	; 1
	20	[244]	FORPREP  	8 47	; to 68
	21	[245]	GETTABLE 	12 0 11
	22	[246]	LOADNIL  	13 14
	23	[247]	GETTABLE 	15 12 -6	; 1
	24	[247]	GETTABLE 	14 12 -7	; 2
	25	[247]	MOVE     	13 15
	26	[248]	TEST     	14 0 0
	27	[248]	JMP      	38	; to 66
	28	[249]	MOVE     	15 3
	29	[249]	MOVE     	16 1
	30	[249]	MOVE     	17 14
	31	[249]	CALL     	15 3 2
	32	[250]	LOADK    	16 -8	; "line "
	33	[250]	GETGLOBAL	17 -9	; tostring
	34	[250]	MOVE     	18 15
	35	[250]	CALL     	17 2 2
	36	[250]	LOADK    	18 -10	; ": "
	37	[250]	GETGLOBAL	19 -9	; tostring
	38	[250]	MOVE     	20 13
	39	[250]	CALL     	19 2 2
	40	[250]	CONCAT   	13 16 19
	41	[251]	LOADK    	16 -11	; "> "
	42	[251]	MOVE     	17 4
	43	[251]	MOVE     	18 1
	44	[251]	MOVE     	19 15
	45	[251]	CALL     	17 3 2
	46	[251]	CONCAT   	16 16 17
	47	[252]	GETGLOBAL	17 -12	; math
	48	[252]	GETTABLE 	17 17 -13	; "max"
	49	[252]	LEN      	18 13
	50	[252]	LEN      	19 16
	51	[252]	CALL     	17 3 2
	52	[253]	GETGLOBAL	18 -14	; table
	53	[253]	GETTABLE 	18 18 -15	; "concat"
	54	[253]	NEWTABLE 	19 3 0
	55	[254]	MOVE     	20 13
	56	[255]	LOADK    	21 -16	; "="
	57	[255]	SELF     	21 21 -17	; "rep"
	58	[255]	MOVE     	23 17
	59	[255]	CALL     	21 3 2
	60	[257]	MOVE     	22 16
	61	[257]	SETLIST  	19 3 1	; 1
	62	[257]	LOADK    	20 -18	; "\n"
	63	[253]	CALL     	18 3 2
	64	[257]	SETTABLE 	6 7 18
	65	[257]	JMP      	1	; to 67
	66	[259]	SETTABLE 	6 7 13
	67	[261]	ADD      	7 7 -6	; - 1
	68	[244]	FORLOOP  	8 -48	; to 21
	69	[263]	MOVE     	5 6
	70	[265]	TEST     	2 0 0
	71	[265]	JMP      	6	; to 78
	72	[266]	GETGLOBAL	6 -14	; table
	73	[266]	GETTABLE 	6 6 -19	; "insert"
	74	[266]	MOVE     	7 5
	75	[266]	LOADK    	8 -6	; 1
	76	[266]	MOVE     	9 2
	77	[266]	CALL     	6 4 1
	78	[268]	GETGLOBAL	6 -14	; table
	79	[268]	GETTABLE 	6 6 -15	; "concat"
	80	[268]	MOVE     	7 5
	81	[268]	LOADK    	8 -20	; "\n\n"
	82	[268]	TAILCALL 	6 3 0
	83	[268]	RETURN   	6 0
	84	[269]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:273,295> (48 instructions, 192 bytes at 0x7ffa6a40b050)
1 param, 15 slots, 4 upvalues, 12 locals, 7 constants, 1 function
	1	[274]	GETUPVAL 	1 0	; lint_config
	2	[274]	TEST     	1 0 1
	3	[274]	JMP      	6	; to 10
	4	[275]	NEWTABLE 	1 0 0
	5	[275]	SETUPVAL 	1 0	; lint_config
	6	[276]	GETGLOBAL	1 -1	; pcall
	7	[278]	CLOSURE  	2 0	; 0x7ffa6a40b2f0
	8	[278]	GETUPVAL 	0 0	; lint_config
	9	[276]	CALL     	1 2 1
	10	[280]	GETUPVAL 	1 0	; lint_config
	11	[280]	GETTABLE 	1 1 -2	; "whitelist_globals"
	12	[280]	TEST     	1 0 1
	13	[280]	JMP      	2	; to 16
	14	[281]	GETUPVAL 	1 1	; default_whitelist
	15	[281]	RETURN   	1 2
	16	[283]	NEWTABLE 	1 0 0
	17	[284]	GETGLOBAL	2 -3	; pairs
	18	[284]	GETUPVAL 	3 0	; lint_config
	19	[284]	GETTABLE 	3 3 -2	; "whitelist_globals"
	20	[284]	CALL     	2 2 4
	21	[284]	JMP      	15	; to 37
	22	[285]	SELF     	7 0 -4	; "match"
	23	[285]	MOVE     	9 5
	24	[285]	CALL     	7 3 2
	25	[285]	TEST     	7 0 0
	26	[285]	JMP      	10	; to 37
	27	[286]	LOADK    	7 -5	; 1
	28	[286]	LEN      	8 6
	29	[286]	LOADK    	9 -5	; 1
	30	[286]	FORPREP  	7 5	; to 36
	31	[287]	GETTABLE 	11 6 10
	32	[288]	GETUPVAL 	12 2	; insert
	33	[288]	MOVE     	13 1
	34	[288]	MOVE     	14 11
	35	[288]	CALL     	12 3 1
	36	[286]	FORLOOP  	7 -6	; to 31
	37	[284]	TFORLOOP 	2 2
	38	[290]	JMP      	-17	; to 22
	39	[292]	GETGLOBAL	2 -6	; setmetatable
	40	[292]	GETUPVAL 	3 3	; Set
	41	[292]	MOVE     	4 1
	42	[292]	CALL     	3 2 2
	43	[292]	NEWTABLE 	4 0 1
	44	[293]	GETUPVAL 	5 1	; default_whitelist
	45	[293]	SETTABLE 	4 -7 5	; "__index" -
	46	[292]	TAILCALL 	2 3 0
	47	[294]	RETURN   	2 0
	48	[295]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:276,278> (5 instructions, 20 bytes at 0x7ffa6a40b2f0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[277]	GETGLOBAL	0 -1	; require
	2	[277]	LOADK    	1 -2	; "lint_config"
	3	[277]	CALL     	0 2 2
	4	[277]	SETUPVAL 	0 0	; lint_config
	5	[278]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:298,311> (29 instructions, 116 bytes at 0x7ffa6a40b6f0)
3 params, 11 slots, 2 upvalues, 7 locals, 8 constants, 0 functions
	1	[299]	EQ       	0 1 -1	; - nil
	2	[299]	JMP      	1	; to 4
	3	[300]	LOADK    	1 -2	; "string input"
	4	[302]	GETGLOBAL	3 -3	; require
	5	[302]	LOADK    	4 -4	; "moonscript.parse"
	6	[302]	CALL     	3 2 2
	7	[303]	GETTABLE 	4 3 -5	; "string"
	8	[303]	MOVE     	5 0
	9	[303]	CALL     	4 2 3
	10	[304]	TEST     	4 0 1
	11	[304]	JMP      	3	; to 15
	12	[305]	LOADNIL  	6 6
	13	[305]	MOVE     	7 5
	14	[305]	RETURN   	6 3
	15	[307]	GETUPVAL 	6 0	; LinterBlock
	16	[307]	MOVE     	7 2
	17	[307]	CALL     	6 2 2
	18	[308]	SELF     	7 6 -6	; "stms"
	19	[308]	MOVE     	9 4
	20	[308]	CALL     	7 3 1
	21	[309]	SELF     	7 6 -7	; "lint_check_unused"
	22	[309]	CALL     	7 2 1
	23	[310]	GETUPVAL 	7 1	; format_lint
	24	[310]	GETTABLE 	8 6 -8	; "lint_errors"
	25	[310]	MOVE     	9 0
	26	[310]	MOVE     	10 1
	27	[310]	TAILCALL 	7 4 0
	28	[310]	RETURN   	7 0
	29	[311]	RETURN   	0 1

function <./moonscript/cmd/lint.lua:313,319> (20 instructions, 80 bytes at 0x7ffa6a40c430)
1 param, 8 slots, 2 upvalues, 3 locals, 4 constants, 0 functions
	1	[314]	GETGLOBAL	1 -1	; io
	2	[314]	GETTABLE 	1 1 -2	; "open"
	3	[314]	MOVE     	2 0
	4	[314]	CALL     	1 2 3
	5	[315]	TEST     	1 0 1
	6	[315]	JMP      	3	; to 10
	7	[316]	LOADNIL  	3 3
	8	[316]	MOVE     	4 2
	9	[316]	RETURN   	3 3
	10	[318]	GETUPVAL 	3 0	; lint_code
	11	[318]	SELF     	4 1 -3	; "read"
	12	[318]	LOADK    	6 -4	; "*a"
	13	[318]	CALL     	4 3 2
	14	[318]	MOVE     	5 0
	15	[318]	GETUPVAL 	6 1	; whitelist_for_file
	16	[318]	MOVE     	7 0
	17	[318]	CALL     	6 2 0
	18	[318]	TAILCALL 	3 0 0
	19	[318]	RETURN   	3 0
	20	[319]	RETURN   	0 1
-----------------------

main <./moonscript/cmd/args.lua:0,0> (15 instructions, 60 bytes at 0x7f91224068c0)
0+ params, 4 slots, 0 upvalues, 3 locals, 5 constants, 2 functions
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.util"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "unpack"
	5	[3]	LOADNIL  	1 1
	6	[23]	CLOSURE  	1 0	; 0x7f9122406a80
	7	[23]	MOVE     	0 0
	8	[24]	LOADNIL  	2 2
	9	[65]	CLOSURE  	2 1	; 0x7f91224072b0
	10	[65]	MOVE     	0 1
	11	[66]	NEWTABLE 	3 0 2
	12	[67]	SETTABLE 	3 -4 2	; "parse_arguments" -
	13	[68]	SETTABLE 	3 -5 1	; "parse_spec" -
	14	[69]	RETURN   	3 2
	15	[69]	RETURN   	0 1

function <./moonscript/cmd/args.lua:4,23> (42 instructions, 168 bytes at 0x7f9122406a80)
1 param, 12 slots, 1 upvalue, 8 locals, 12 constants, 0 functions
	1	[6]	GETGLOBAL	3 -1	; type
	2	[6]	MOVE     	4 0
	3	[6]	CALL     	3 2 2
	4	[6]	EQ       	0 3 -2	; - "table"
	5	[6]	JMP      	6	; to 12
	6	[7]	GETUPVAL 	3 0	; unpack
	7	[7]	MOVE     	4 0
	8	[7]	CALL     	3 2 2
	9	[7]	MOVE     	2 0
	10	[7]	MOVE     	1 3
	11	[7]	JMP      	4	; to 16
	12	[9]	MOVE     	3 0
	13	[9]	NEWTABLE 	4 0 0
	14	[9]	MOVE     	2 4
	15	[9]	MOVE     	1 3
	16	[11]	GETGLOBAL	3 -3	; assert
	17	[11]	LOADK    	4 -4	; "no flags for arguments"
	18	[11]	CALL     	3 2 1
	19	[12]	NEWTABLE 	3 0 0
	20	[13]	SELF     	4 1 -5	; "gmatch"
	21	[13]	LOADK    	6 -6	; "%w:?"
	22	[13]	CALL     	4 3 4
	23	[13]	JMP      	15	; to 39
	24	[14]	SELF     	8 7 -7	; "match"
	25	[14]	LOADK    	10 -8	; ":$"
	26	[14]	CALL     	8 3 2
	27	[14]	TEST     	8 0 0
	28	[14]	JMP      	8	; to 37
	29	[15]	SELF     	8 7 -9	; "sub"
	30	[15]	LOADK    	10 -10	; 1
	31	[15]	LOADK    	11 -10	; 1
	32	[15]	CALL     	8 4 2
	33	[15]	NEWTABLE 	9 0 1
	34	[16]	SETTABLE 	9 -11 -12	; "value" true
	35	[17]	SETTABLE 	3 8 9
	36	[17]	JMP      	2	; to 39
	37	[19]	NEWTABLE 	8 0 0
	38	[19]	SETTABLE 	3 7 8
	39	[13]	TFORLOOP 	4 1
	40	[20]	JMP      	-17	; to 24
	41	[22]	RETURN   	3 2
	42	[23]	RETURN   	0 1

function <./moonscript/cmd/args.lua:25,65> (52 instructions, 208 bytes at 0x7f91224072b0)
2 params, 20 slots, 1 upvalue, 18 locals, 8 constants, 0 functions
	1	[26]	GETUPVAL 	2 0	; parse_spec
	2	[26]	MOVE     	3 0
	3	[26]	CALL     	2 2 2
	4	[26]	MOVE     	0 2
	5	[27]	NEWTABLE 	2 0 0
	6	[28]	NEWTABLE 	3 0 0
	7	[29]	LOADNIL  	4 4
	8	[30]	LOADK    	5 -1	; 1
	9	[30]	LEN      	6 1
	10	[30]	LOADK    	7 -1	; 1
	11	[30]	FORPREP  	5 36	; to 48
	12	[31]	LOADBOOL 	9 0 0
	13	[33]	GETTABLE 	10 1 8
	14	[34]	NEWTABLE 	11 0 0
	15	[35]	TEST     	4 0 0
	16	[35]	JMP      	3	; to 20
	17	[36]	SETTABLE 	2 4 10
	18	[37]	LOADBOOL 	9 1 0
	19	[38]	JMP      	25	; to 45
	20	[41]	SELF     	12 10 -2	; "match"
	21	[41]	LOADK    	14 -3	; "-(%w+)"
	22	[41]	CALL     	12 3 2
	23	[42]	TEST     	12 0 0
	24	[42]	JMP      	14	; to 39
	25	[44]	GETTABLE 	13 0 12
	26	[45]	TEST     	13 0 0
	27	[45]	JMP      	2	; to 30
	28	[46]	SETTABLE 	2 13 -4	; - true
	29	[46]	JMP      	7	; to 37
	30	[48]	SELF     	14 12 -5	; "gmatch"
	31	[48]	LOADK    	16 -6	; "."
	32	[48]	CALL     	14 3 4
	33	[48]	JMP      	1	; to 35
	34	[49]	SETTABLE 	2 17 -4	; - true
	35	[48]	TFORLOOP 	14 1
	36	[49]	JMP      	-3	; to 34
	37	[53]	LOADBOOL 	9 1 0
	38	[54]	JMP      	6	; to 45
	39	[57]	GETGLOBAL	12 -7	; table
	40	[57]	GETTABLE 	12 12 -8	; "insert"
	41	[57]	MOVE     	13 3
	42	[57]	MOVE     	14 10
	43	[57]	CALL     	12 3 1
	44	[58]	LOADBOOL 	9 1 0
	45	[60]	TEST     	9 0 1
	46	[60]	JMP      	1	; to 48
	47	[61]	JMP      	1	; to 49
	48	[30]	FORLOOP  	5 -37	; to 12
	49	[64]	MOVE     	5 2
	50	[64]	MOVE     	6 3
	51	[64]	RETURN   	5 3
	52	[65]	RETURN   	0 1
-----------------------

main <./moonscript/errors.lua:0,0> (39 instructions, 156 bytes at 0x7f9d14c068b0)
0+ params, 12 slots, 0 upvalues, 12 locals, 12 constants, 5 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "moonscript.util"
	3	[1]	CALL     	0 2 2
	4	[2]	GETGLOBAL	1 -1	; require
	5	[2]	LOADK    	2 -3	; "lpeg"
	6	[2]	CALL     	1 2 2
	7	[3]	LOADNIL  	2 3
	8	[5]	GETGLOBAL	4 -4	; table
	9	[6]	GETTABLE 	5 4 -5	; "concat"
	10	[6]	GETTABLE 	3 4 -6	; "insert"
	11	[6]	MOVE     	2 5
	12	[8]	LOADNIL  	4 5
	13	[9]	GETTABLE 	6 0 -7	; "split"
	14	[9]	GETTABLE 	5 0 -8	; "pos_to_line"
	15	[9]	MOVE     	4 6
	16	[10]	LOADNIL  	6 6
	17	[16]	CLOSURE  	6 0	; 0x7f9d14c06f60
	18	[17]	LOADNIL  	7 7
	19	[27]	CLOSURE  	7 1	; 0x7f9d14c06ba0
	20	[27]	MOVE     	0 5
	21	[28]	LOADNIL  	8 8
	22	[36]	CLOSURE  	8 2	; 0x7f9d14c066e0
	23	[36]	MOVE     	0 7
	24	[37]	LOADNIL  	9 9
	25	[64]	CLOSURE  	9 3	; 0x7f9d14c07770
	26	[64]	MOVE     	0 4
	27	[64]	MOVE     	0 2
	28	[65]	LOADNIL  	10 10
	29	[111]	CLOSURE  	10 4	; 0x7f9d14c079f0
	30	[111]	MOVE     	0 1
	31	[111]	MOVE     	0 2
	32	[111]	MOVE     	0 8
	33	[112]	NEWTABLE 	11 0 4
	34	[113]	SETTABLE 	11 -9 10	; "rewrite_traceback" -
	35	[114]	SETTABLE 	11 -10 9	; "truncate_traceback" -
	36	[115]	SETTABLE 	11 -11 6	; "user_error" -
	37	[116]	SETTABLE 	11 -12 8	; "reverse_line_number" -
	38	[117]	RETURN   	11 2
	39	[117]	RETURN   	0 1

function <./moonscript/errors.lua:11,16> (8 instructions, 32 bytes at 0x7f9d14c06f60)
0+ params, 5 slots, 0 upvalues, 1 local, 2 constants, 0 functions
	1	[12]	GETGLOBAL	1 -1	; error
	2	[12]	NEWTABLE 	2 1 0
	3	[13]	LOADK    	3 -2	; "user-error"
	4	[13]	VARARG   	4 0
	5	[15]	SETLIST  	2 0 1	; 1
	6	[12]	TAILCALL 	1 2 0
	7	[15]	RETURN   	1 0
	8	[16]	RETURN   	0 1

function <./moonscript/errors.lua:18,27> (21 instructions, 84 bytes at 0x7f9d14c06ba0)
3 params, 7 slots, 1 upvalue, 4 locals, 6 constants, 0 functions
	1	[19]	GETTABLE 	3 2 0
	2	[19]	TEST     	3 0 1
	3	[19]	JMP      	12	; to 16
	4	[21]	GETGLOBAL	3 -1	; assert
	5	[21]	GETGLOBAL	4 -2	; io
	6	[21]	GETTABLE 	4 4 -3	; "open"
	7	[21]	MOVE     	5 0
	8	[21]	CALL     	4 2 0
	9	[21]	CALL     	3 0 2
	10	[22]	SELF     	4 3 -4	; "read"
	11	[22]	LOADK    	6 -5	; "*a"
	12	[22]	CALL     	4 3 2
	13	[22]	SETTABLE 	2 0 4
	14	[23]	SELF     	4 3 -6	; "close"
	15	[23]	CALL     	4 2 1
	16	[26]	GETUPVAL 	3 0	; pos_to_line
	17	[26]	GETTABLE 	4 2 0
	18	[26]	MOVE     	5 1
	19	[26]	TAILCALL 	3 3 0
	20	[26]	RETURN   	3 0
	21	[27]	RETURN   	0 1

function <./moonscript/errors.lua:29,36> (17 instructions, 68 bytes at 0x7f9d14c066e0)
4 params, 12 slots, 1 upvalue, 8 locals, 3 constants, 0 functions
	1	[30]	MOVE     	4 2
	2	[30]	LOADK    	5 -1	; 0
	3	[30]	LOADK    	6 -2	; -1
	4	[30]	FORPREP  	4 9	; to 14
	5	[31]	GETTABLE 	8 1 7
	6	[31]	TEST     	8 0 0
	7	[31]	JMP      	6	; to 14
	8	[32]	GETUPVAL 	8 0	; lookup_line
	9	[32]	MOVE     	9 0
	10	[32]	GETTABLE 	10 1 7
	11	[32]	MOVE     	11 3
	12	[32]	TAILCALL 	8 4 0
	13	[32]	RETURN   	8 0
	14	[30]	FORLOOP  	4 -10	; to 5
	15	[35]	LOADK    	4 -3	; "unknown"
	16	[35]	RETURN   	4 2
	17	[36]	RETURN   	0 1

function <./moonscript/errors.lua:38,64> (56 instructions, 224 bytes at 0x7f9d14c07770)
2 params, 11 slots, 2 upvalues, 12 locals, 10 constants, 0 functions
	1	[39]	EQ       	0 1 -1	; - nil
	2	[39]	JMP      	1	; to 4
	3	[40]	LOADK    	1 -2	; "moonscript_chunk"
	4	[42]	GETUPVAL 	2 0	; split
	5	[42]	MOVE     	3 0
	6	[42]	LOADK    	4 -3	; "\n"
	7	[42]	CALL     	2 3 2
	8	[42]	MOVE     	0 2
	9	[43]	LEN      	2 0
	10	[44]	LT       	0 -4 2	; 1 -
	11	[44]	JMP      	9	; to 21
	12	[45]	GETTABLE 	3 0 2
	13	[45]	SELF     	3 3 -5	; "match"
	14	[45]	MOVE     	5 1
	15	[45]	CALL     	3 3 2
	16	[45]	TEST     	3 0 0
	17	[45]	JMP      	1	; to 19
	18	[46]	JMP      	2	; to 21
	19	[48]	SUB      	2 2 -4	; - 1
	20	[48]	JMP      	-11	; to 10
	21	[51]	NEWTABLE 	3 0 0
	22	[52]	LOADK    	4 -4	; 1
	23	[53]	MOVE     	5 2
	24	[54]	LOADK    	6 -4	; 1
	25	[54]	LT       	0 5 -6	; - 0
	26	[54]	JMP      	4	; to 31
	27	[54]	LEN      	7 0
	28	[54]	ADD      	7 7 5
	29	[54]	TEST     	7 0 1
	30	[54]	JMP      	1	; to 32
	31	[54]	MOVE     	7 5
	32	[54]	LOADK    	8 -4	; 1
	33	[54]	FORPREP  	6 3	; to 37
	34	[55]	GETTABLE 	10 0 9
	35	[56]	SETTABLE 	3 4 10
	36	[57]	ADD      	4 4 -4	; - 1
	37	[54]	FORLOOP  	6 -4	; to 34
	38	[59]	MOVE     	0 3
	39	[61]	LOADK    	3 -7	; "function '"
	40	[61]	MOVE     	4 1
	41	[61]	LOADK    	5 -8	; "'"
	42	[61]	CONCAT   	3 3 5
	43	[62]	LEN      	4 0
	44	[62]	LEN      	5 0
	45	[62]	GETTABLE 	5 0 5
	46	[62]	SELF     	5 5 -9	; "gsub"
	47	[62]	MOVE     	7 3
	48	[62]	LOADK    	8 -10	; "main chunk"
	49	[62]	CALL     	5 4 2
	50	[62]	SETTABLE 	0 4 5
	51	[63]	GETUPVAL 	4 1	; concat
	52	[63]	MOVE     	5 0
	53	[63]	LOADK    	6 -3	; "\n"
	54	[63]	TAILCALL 	4 3 0
	55	[63]	RETURN   	4 0
	56	[64]	RETURN   	0 1

function <./moonscript/errors.lua:66,111> (91 instructions, 364 bytes at 0x7f9d14c079f0)
2 params, 23 slots, 3 upvalues, 20 locals, 19 constants, 1 function
	1	[67]	GETGLOBAL	2 -1	; require
	2	[67]	LOADK    	3 -2	; "moonscript.line_tables"
	3	[67]	CALL     	2 2 2
	4	[68]	LOADNIL  	3 6
	5	[69]	GETUPVAL 	7 0	; lpeg
	6	[69]	GETTABLE 	7 7 -3	; "V"
	7	[69]	GETUPVAL 	8 0	; lpeg
	8	[69]	GETTABLE 	8 8 -4	; "S"
	9	[69]	GETUPVAL 	9 0	; lpeg
	10	[69]	GETTABLE 	9 9 -5	; "Ct"
	11	[69]	GETUPVAL 	10 0	; lpeg
	12	[69]	GETTABLE 	6 10 -6	; "C"
	13	[69]	MOVE     	5 9
	14	[69]	MOVE     	4 8
	15	[69]	MOVE     	3 7
	16	[70]	LOADK    	7 -7	; "stack traceback:"
	17	[71]	MOVE     	8 3
	18	[71]	LOADK    	9 -8	; "Header"
	19	[71]	CALL     	8 2 2
	20	[71]	MOVE     	9 3
	21	[71]	LOADK    	10 -9	; "Line"
	22	[71]	CALL     	9 2 2
	23	[72]	GETUPVAL 	10 0	; lpeg
	24	[72]	GETTABLE 	10 10 -4	; "S"
	25	[72]	LOADK    	11 -10	; "\n"
	26	[72]	CALL     	10 2 2
	27	[73]	GETUPVAL 	11 0	; lpeg
	28	[73]	GETTABLE 	11 11 -11	; "P"
	29	[73]	NEWTABLE 	12 1 2
	30	[74]	MOVE     	13 8
	31	[75]	MUL      	14 7 10
	32	[75]	MOVE     	15 5
	33	[75]	POW      	16 9 -12	; - 1
	34	[75]	CALL     	15 2 2
	35	[75]	MUL      	14 14 15
	36	[75]	SETTABLE 	12 -8 14	; "Header" -
	37	[76]	MOVE     	14 6
	38	[76]	SUB      	15 -12 10	; 1 -
	39	[76]	POW      	15 15 -14	; - 0
	40	[76]	CALL     	14 2 2
	41	[76]	MUL      	14 -13 14	; "\t" -
	42	[76]	ADD      	15 10 -15	; - -1
	43	[76]	MUL      	14 14 15
	44	[76]	SETTABLE 	12 -9 14	; "Line" -
	45	[77]	SETLIST  	12 1 1	; 1
	46	[73]	CALL     	11 2 2
	47	[78]	NEWTABLE 	12 0 0
	48	[79]	LOADNIL  	13 13
	49	[97]	CLOSURE  	13 0	; 0x7f9d14c086a0
	50	[97]	MOVE     	0 2
	51	[97]	GETUPVAL 	0 1	; concat
	52	[97]	GETUPVAL 	0 2	; reverse_line_number
	53	[97]	MOVE     	0 12
	54	[98]	MOVE     	14 13
	55	[98]	MOVE     	15 1
	56	[98]	CALL     	14 2 2
	57	[98]	MOVE     	1 14
	58	[99]	SELF     	14 11 -16	; "match"
	59	[99]	MOVE     	16 0
	60	[99]	CALL     	14 3 2
	61	[100]	TEST     	14 0 1
	62	[100]	JMP      	2	; to 65
	63	[101]	LOADNIL  	15 15
	64	[101]	RETURN   	15 2
	65	[103]	GETGLOBAL	15 -17	; ipairs
	66	[103]	MOVE     	16 14
	67	[103]	CALL     	15 2 4
	68	[103]	JMP      	4	; to 73
	69	[104]	MOVE     	20 13
	70	[104]	MOVE     	21 19
	71	[104]	CALL     	20 2 2
	72	[104]	SETTABLE 	14 18 20
	73	[103]	TFORLOOP 	15 2
	74	[104]	JMP      	-6	; to 69
	75	[106]	GETUPVAL 	15 1	; concat
	76	[106]	NEWTABLE 	16 3 0
	77	[107]	LOADK    	17 -18	; "moon: "
	78	[107]	MOVE     	18 1
	79	[107]	CONCAT   	17 17 18
	80	[108]	MOVE     	18 7
	81	[109]	LOADK    	19 -13	; "\t"
	82	[109]	GETUPVAL 	20 1	; concat
	83	[109]	MOVE     	21 14
	84	[109]	LOADK    	22 -19	; "\n\t"
	85	[109]	CALL     	20 3 2
	86	[109]	CONCAT   	19 19 20
	87	[110]	SETLIST  	16 3 1	; 1
	88	[110]	LOADK    	17 -10	; "\n"
	89	[106]	TAILCALL 	15 3 0
	90	[110]	RETURN   	15 0
	91	[111]	RETURN   	0 1

function <./moonscript/errors.lua:80,97> (35 instructions, 140 bytes at 0x7f9d14c086a0)
1 param, 15 slots, 4 upvalues, 5 locals, 8 constants, 0 functions
	1	[81]	SELF     	1 0 -1	; "match"
	2	[81]	LOADK    	3 -2	; "^(.-):(%d+): (.*)$"
	3	[81]	CALL     	1 3 4
	4	[82]	GETUPVAL 	4 0	; line_tables
	5	[82]	LOADK    	5 -3	; "@"
	6	[82]	GETGLOBAL	6 -4	; tostring
	7	[82]	MOVE     	7 1
	8	[82]	CALL     	6 2 2
	9	[82]	CONCAT   	5 5 6
	10	[82]	GETTABLE 	4 4 5
	11	[83]	TEST     	1 0 0
	12	[83]	JMP      	21	; to 34
	13	[83]	TEST     	4 0 0
	14	[83]	JMP      	19	; to 34
	15	[84]	GETUPVAL 	5 1	; concat
	16	[84]	NEWTABLE 	6 8 0
	17	[85]	MOVE     	7 1
	18	[86]	LOADK    	8 -5	; ":"
	19	[87]	GETUPVAL 	9 2	; reverse_line_number
	20	[87]	MOVE     	10 1
	21	[87]	MOVE     	11 4
	22	[87]	MOVE     	12 2
	23	[87]	GETUPVAL 	13 3	; cache
	24	[87]	CALL     	9 5 2
	25	[88]	LOADK    	10 -6	; ": "
	26	[89]	LOADK    	11 -7	; "("
	27	[90]	MOVE     	12 2
	28	[91]	LOADK    	13 -8	; ") "
	29	[93]	MOVE     	14 3
	30	[93]	SETLIST  	6 8 1	; 1
	31	[84]	TAILCALL 	5 2 0
	32	[93]	RETURN   	5 0
	33	[93]	JMP      	1	; to 35
	34	[95]	RETURN   	0 2
	35	[97]	RETURN   	0 1
-----------------------

main <./moonscript/init.lua:0,0> (7 instructions, 28 bytes at 0x7f889a4068a0)
0+ params, 2 slots, 0 upvalues, 1 local, 3 constants, 0 functions
	1	[2]	GETGLOBAL	0 -1	; require
	2	[2]	LOADK    	1 -2	; "moonscript.base"
	3	[2]	CALL     	0 2 2
	4	[3]	GETTABLE 	1 0 -3	; "insert_loader"
	5	[3]	CALL     	1 1 1
	6	[4]	RETURN   	0 2
	7	[5]	RETURN   	0 1
-----------------------

main <./moonscript/dump.lua:0,0> (13 instructions, 52 bytes at 0x7fab20d05050)
0+ params, 4 slots, 0 upvalues, 3 locals, 2 constants, 3 functions
	1	[25]	CLOSURE  	0 0	; 0x7fab20d052a0
	2	[25]	MOVE     	0 0
	3	[26]	LOADNIL  	1 1
	4	[29]	CLOSURE  	1 1	; 0x7fab20d054b0
	5	[29]	MOVE     	0 0
	6	[30]	LOADNIL  	2 2
	7	[37]	CLOSURE  	2 2	; 0x7fab20d05cd0
	8	[37]	MOVE     	0 0
	9	[38]	NEWTABLE 	3 0 2
	10	[39]	SETTABLE 	3 -1 1	; "value" -
	11	[40]	SETTABLE 	3 -2 2	; "tree" -
	12	[41]	RETURN   	3 2
	13	[41]	RETURN   	0 1

function <./moonscript/dump.lua:2,25> (58 instructions, 232 bytes at 0x7fab20d052a0)
2 params, 13 slots, 1 upvalue, 11 locals, 15 constants, 0 functions
	1	[3]	EQ       	0 1 -1	; - nil
	2	[3]	JMP      	1	; to 4
	3	[4]	LOADK    	1 -2	; 1
	4	[6]	GETGLOBAL	2 -3	; type
	5	[6]	MOVE     	3 0
	6	[6]	CALL     	2 2 2
	7	[6]	EQ       	0 2 -4	; - "string"
	8	[6]	JMP      	5	; to 14
	9	[7]	LOADK    	2 -5	; "\""
	10	[7]	MOVE     	3 0
	11	[7]	LOADK    	4 -5	; "\""
	12	[7]	CONCAT   	2 2 4
	13	[7]	RETURN   	2 2
	14	[9]	GETGLOBAL	2 -3	; type
	15	[9]	MOVE     	3 0
	16	[9]	CALL     	2 2 2
	17	[9]	EQ       	1 2 -6	; - "table"
	18	[9]	JMP      	4	; to 23
	19	[10]	GETGLOBAL	2 -7	; tostring
	20	[10]	MOVE     	3 0
	21	[10]	TAILCALL 	2 2 0
	22	[10]	RETURN   	2 0
	23	[12]	LOADNIL  	2 2
	24	[14]	NEWTABLE 	3 0 0
	25	[15]	LOADK    	4 -2	; 1
	26	[16]	LOADK    	5 -2	; 1
	27	[16]	LEN      	6 0
	28	[16]	LOADK    	7 -2	; 1
	29	[16]	FORPREP  	5 7	; to 37
	30	[17]	GETTABLE 	9 0 8
	31	[18]	GETUPVAL 	10 0	; flat_value
	32	[18]	MOVE     	11 9
	33	[18]	ADD      	12 1 -2	; - 1
	34	[18]	CALL     	10 3 2
	35	[18]	SETTABLE 	3 4 10
	36	[19]	ADD      	4 4 -2	; - 1
	37	[16]	FORLOOP  	5 -8	; to 30
	38	[21]	MOVE     	2 3
	39	[23]	GETTABLE 	3 0 -8	; -1
	40	[24]	LOADK    	4 -9	; "{"
	41	[24]	TEST     	3 0 0
	42	[24]	JMP      	6	; to 49
	43	[24]	LOADK    	5 -10	; "["
	44	[24]	MOVE     	6 3
	45	[24]	LOADK    	7 -11	; "] "
	46	[24]	CONCAT   	5 5 7
	47	[24]	TEST     	5 0 1
	48	[24]	JMP      	1	; to 50
	49	[24]	LOADK    	5 -12	; ""
	50	[24]	GETGLOBAL	6 -6	; table
	51	[24]	GETTABLE 	6 6 -13	; "concat"
	52	[24]	MOVE     	7 2
	53	[24]	LOADK    	8 -14	; ", "
	54	[24]	CALL     	6 3 2
	55	[24]	LOADK    	7 -15	; "}"
	56	[24]	CONCAT   	4 4 7
	57	[24]	RETURN   	4 2
	58	[25]	RETURN   	0 1

function <./moonscript/dump.lua:27,29> (5 instructions, 20 bytes at 0x7fab20d054b0)
1 param, 3 slots, 1 upvalue, 1 local, 0 constants, 0 functions
	1	[28]	GETUPVAL 	1 0	; flat_value
	2	[28]	MOVE     	2 0
	3	[28]	TAILCALL 	1 2 0
	4	[28]	RETURN   	1 0
	5	[29]	RETURN   	0 1

function <./moonscript/dump.lua:31,37> (13 instructions, 52 bytes at 0x7fab20d05cd0)
1 param, 10 slots, 1 upvalue, 7 locals, 2 constants, 0 functions
	1	[32]	MOVE     	1 0
	2	[33]	LOADK    	2 -1	; 1
	3	[33]	LEN      	3 1
	4	[33]	LOADK    	4 -1	; 1
	5	[33]	FORPREP  	2 6	; to 12
	6	[34]	GETTABLE 	6 1 5
	7	[35]	GETGLOBAL	7 -2	; print
	8	[35]	GETUPVAL 	8 0	; flat_value
	9	[35]	MOVE     	9 6
	10	[35]	CALL     	8 2 0
	11	[35]	CALL     	7 0 1
	12	[33]	FORLOOP  	2 -7	; to 6
	13	[37]	RETURN   	0 1
-----------------------

main <./moonscript/compile.lua:0,0> (337 instructions, 1348 bytes at 0x7fd94cc068c0)
0+ params, 33 slots, 0 upvalues, 46 locals, 87 constants, 56 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "moonscript.util"
	3	[1]	CALL     	0 2 2
	4	[2]	GETGLOBAL	1 -1	; require
	5	[2]	LOADK    	2 -3	; "moonscript.dump"
	6	[2]	CALL     	1 2 2
	7	[3]	GETGLOBAL	2 -1	; require
	8	[3]	LOADK    	3 -4	; "moonscript.transform"
	9	[3]	CALL     	2 2 2
	10	[4]	LOADNIL  	3 4
	11	[6]	GETGLOBAL	5 -1	; require
	12	[6]	LOADK    	6 -5	; "moonscript.transform.names"
	13	[6]	CALL     	5 2 2
	14	[7]	GETTABLE 	6 5 -6	; "NameProxy"
	15	[7]	GETTABLE 	4 5 -7	; "LocalName"
	16	[7]	MOVE     	3 6
	17	[9]	LOADNIL  	5 5
	18	[10]	GETGLOBAL	6 -1	; require
	19	[10]	LOADK    	7 -8	; "moonscript.data"
	20	[10]	CALL     	6 2 2
	21	[10]	GETTABLE 	5 6 -9	; "Set"
	22	[11]	LOADNIL  	6 7
	23	[13]	GETGLOBAL	8 -1	; require
	24	[13]	LOADK    	9 -10	; "moonscript.types"
	25	[13]	CALL     	8 2 2
	26	[14]	GETTABLE 	9 8 -11	; "ntype"
	27	[14]	GETTABLE 	7 8 -12	; "value_can_be_statement"
	28	[14]	MOVE     	6 9
	29	[16]	GETGLOBAL	8 -1	; require
	30	[16]	LOADK    	9 -13	; "moonscript.compile.statement"
	31	[16]	CALL     	8 2 2
	32	[17]	GETGLOBAL	9 -1	; require
	33	[17]	LOADK    	10 -14	; "moonscript.compile.value"
	34	[17]	CALL     	9 2 2
	35	[18]	LOADNIL  	10 11
	36	[20]	GETGLOBAL	12 -15	; table
	37	[21]	GETTABLE 	13 12 -16	; "concat"
	38	[21]	GETTABLE 	11 12 -17	; "insert"
	39	[21]	MOVE     	10 13
	40	[23]	LOADNIL  	12 15
	41	[24]	GETTABLE 	16 0 -18	; "pos_to_line"
	42	[24]	GETTABLE 	17 0 -19	; "get_closest_line"
	43	[24]	GETTABLE 	18 0 -20	; "trim"
	44	[24]	GETTABLE 	15 0 -21	; "unpack"
	45	[24]	MOVE     	14 18
	46	[24]	MOVE     	13 17
	47	[24]	MOVE     	12 16
	48	[25]	GETTABLE 	16 0 -22	; "moon"
	49	[25]	GETTABLE 	16 16 -23	; "type"
	50	[26]	LOADK    	17 -24	; "  "
	51	[27]	LOADNIL  	18 23
	52	[30]	NEWTABLE 	24 0 5
	53	[38]	CLOSURE  	25 0	; 0x7fd94cc06fe0
	54	[38]	SETTABLE 	24 -25 25	; "mark_pos" -
	55	[49]	CLOSURE  	25 1	; 0x7fd94cc07700
	56	[49]	MOVE     	0 16
	57	[49]	MOVE     	0 18
	58	[49]	MOVE     	0 21
	59	[49]	SETTABLE 	24 -26 25	; "add" -
	60	[75]	CLOSURE  	25 2	; 0x7fd94cc07fd0
	61	[75]	MOVE     	0 16
	62	[75]	MOVE     	0 19
	63	[75]	MOVE     	0 20
	64	[75]	SETTABLE 	24 -27 25	; "flatten_posmap" -
	65	[110]	CLOSURE  	25 3	; 0x7fd94cc08340
	66	[110]	MOVE     	0 16
	67	[110]	MOVE     	0 19
	68	[110]	MOVE     	0 11
	69	[110]	MOVE     	0 20
	70	[110]	MOVE     	0 17
	71	[110]	SETTABLE 	24 -28 25	; "flatten" -
	72	[128]	CLOSURE  	25 4	; 0x7fd94cc08880
	73	[128]	MOVE     	0 0
	74	[128]	SETTABLE 	24 -29 25	; "__tostring" -
	75	[130]	SETTABLE 	24 -30 24	; "__index" -
	76	[131]	GETGLOBAL	25 -31	; setmetatable
	77	[131]	NEWTABLE 	26 0 3
	78	[134]	CLOSURE  	27 5	; 0x7fd94cc09160
	79	[134]	SETTABLE 	26 -32 27	; "__init" -
	80	[135]	SETTABLE 	26 -33 24	; "__base" -
	81	[136]	SETTABLE 	26 -34 -35	; "__name" "Lines"
	82	[137]	NEWTABLE 	27 0 2
	83	[138]	SETTABLE 	27 -30 24	; "__index" -
	84	[143]	CLOSURE  	28 6	; 0x7fd94cc065c0
	85	[143]	MOVE     	0 24
	86	[143]	SETTABLE 	27 -36 28	; "__call" -
	87	[131]	CALL     	25 3 2
	88	[144]	MOVE     	23 25
	89	[145]	SETTABLE 	24 -37 23	; "__class" -
	90	[146]	MOVE     	20 23
	91	[146]	CLOSE    	23
	92	[149]	LOADNIL  	23 23
	93	[150]	NEWTABLE 	24 0 5
	94	[151]	SETTABLE 	24 -38 -39	; "pos" nil
	95	[160]	CLOSURE  	25 7	; 0x7fd94cc09710
	96	[160]	MOVE     	0 11
	97	[160]	SETTABLE 	24 -40 25	; "append_list" -
	98	[176]	CLOSURE  	25 8	; 0x7fd94cc09bc0
	99	[176]	MOVE     	0 18
	100	[176]	MOVE     	0 16
	101	[176]	MOVE     	0 11
	102	[176]	SETTABLE 	24 -41 25	; "append" -
	103	[207]	CLOSURE  	25 9	; 0x7fd94cc09c80
	104	[207]	MOVE     	0 10
	105	[207]	MOVE     	0 16
	106	[207]	MOVE     	0 21
	107	[207]	MOVE     	0 20
	108	[207]	MOVE     	0 11
	109	[207]	SETTABLE 	24 -42 25	; "render" -
	110	[210]	CLOSURE  	25 10	; 0x7fd94cc0ad80
	111	[210]	MOVE     	0 0
	112	[210]	SETTABLE 	24 -29 25	; "__tostring" -
	113	[212]	SETTABLE 	24 -30 24	; "__index" -
	114	[213]	GETGLOBAL	25 -31	; setmetatable
	115	[213]	NEWTABLE 	26 0 3
	116	[214]	CLOSURE  	27 11	; 0x7fd94cc0af90
	117	[214]	SETTABLE 	26 -32 27	; "__init" -
	118	[215]	SETTABLE 	26 -33 24	; "__base" -
	119	[216]	SETTABLE 	26 -34 -43	; "__name" "Line"
	120	[217]	NEWTABLE 	27 0 2
	121	[218]	SETTABLE 	27 -30 24	; "__index" -
	122	[223]	CLOSURE  	28 12	; 0x7fd94cc0b050
	123	[223]	MOVE     	0 24
	124	[223]	SETTABLE 	27 -36 28	; "__call" -
	125	[213]	CALL     	25 3 2
	126	[224]	MOVE     	23 25
	127	[225]	SETTABLE 	24 -37 23	; "__class" -
	128	[226]	MOVE     	18 23
	129	[226]	CLOSE    	23
	130	[229]	LOADNIL  	23 23
	131	[230]	NEWTABLE 	24 0 2
	132	[231]	CLOSURE  	25 13	; 0x7fd94cc0b4c0
	133	[231]	SETTABLE 	24 -44 25	; "prepare" -
	134	[235]	CLOSURE  	25 14	; 0x7fd94cc0b570
	135	[235]	MOVE     	0 10
	136	[235]	SETTABLE 	24 -42 25	; "render" -
	137	[237]	SETTABLE 	24 -30 24	; "__index" -
	138	[238]	GETGLOBAL	25 -31	; setmetatable
	139	[238]	NEWTABLE 	26 0 3
	140	[241]	CLOSURE  	27 15	; 0x7fd94cc07930
	141	[241]	SETTABLE 	26 -32 27	; "__init" -
	142	[242]	SETTABLE 	26 -33 24	; "__base" -
	143	[243]	SETTABLE 	26 -34 -45	; "__name" "DelayedLine"
	144	[244]	NEWTABLE 	27 0 2
	145	[245]	SETTABLE 	27 -30 24	; "__index" -
	146	[250]	CLOSURE  	28 16	; 0x7fd94cc09060
	147	[250]	MOVE     	0 24
	148	[250]	SETTABLE 	27 -36 28	; "__call" -
	149	[238]	CALL     	25 3 2
	150	[251]	MOVE     	23 25
	151	[252]	SETTABLE 	24 -37 23	; "__class" -
	152	[253]	MOVE     	19 23
	153	[253]	CLOSE    	23
	154	[256]	LOADNIL  	23 23
	155	[257]	NEWTABLE 	24 0 25
	156	[258]	SETTABLE 	24 -46 -47	; "header" "do"
	157	[259]	SETTABLE 	24 -48 -49	; "footer" "end"
	158	[260]	SETTABLE 	24 -50 -51	; "export_all" false
	159	[261]	SETTABLE 	24 -52 -51	; "export_proper" false
	160	[262]	SETTABLE 	24 -53 9	; "value_compilers" -
	161	[263]	SETTABLE 	24 -54 8	; "statement_compilers" -
	162	[272]	CLOSURE  	25 17	; 0x7fd94cc06ed0
	163	[272]	MOVE     	0 15
	164	[272]	SETTABLE 	24 -29 25	; "__tostring" -
	165	[275]	CLOSURE  	25 18	; 0x7fd94cc077f0
	166	[275]	SETTABLE 	24 -55 25	; "set" -
	167	[278]	CLOSURE  	25 19	; 0x7fd94cc073c0
	168	[278]	SETTABLE 	24 -56 25	; "get" -
	169	[281]	CLOSURE  	25 20	; 0x7fd94cc093a0
	170	[281]	SETTABLE 	24 -57 25	; "get_current" -
	171	[284]	CLOSURE  	25 21	; 0x7fd94cc09440
	172	[284]	SETTABLE 	24 -58 25	; "listen" -
	173	[287]	CLOSURE  	25 22	; 0x7fd94cc09a20
	174	[287]	SETTABLE 	24 -59 25	; "unlisten" -
	175	[295]	CLOSURE  	25 23	; 0x7fd94cc0a070
	176	[295]	SETTABLE 	24 -60 25	; "send" -
	177	[311]	CLOSURE  	25 24	; 0x7fd94cc0b200
	178	[311]	MOVE     	0 16
	179	[311]	MOVE     	0 4
	180	[311]	MOVE     	0 3
	181	[311]	SETTABLE 	24 -61 25	; "extract_assign_name" -
	182	[343]	CLOSURE  	25 25	; 0x7fd94cc0bb40
	183	[343]	SETTABLE 	24 -62 25	; "declare" -
	184	[346]	CLOSURE  	25 26	; 0x7fd94cc0bf30
	185	[346]	MOVE     	0 5
	186	[346]	SETTABLE 	24 -63 25	; "whitelist_names" -
	187	[354]	CLOSURE  	25 27	; 0x7fd94cc0c3f0
	188	[354]	SETTABLE 	24 -64 25	; "name_exported" -
	189	[364]	CLOSURE  	25 28	; 0x7fd94cc0c780
	190	[364]	MOVE     	0 3
	191	[364]	MOVE     	0 16
	192	[364]	SETTABLE 	24 -65 25	; "put_name" -
	193	[377]	CLOSURE  	25 29	; 0x7fd94cc0cba0
	194	[377]	SETTABLE 	24 -66 25	; "has_name" -
	195	[392]	CLOSURE  	25 30	; 0x7fd94cc0d2f0
	196	[392]	MOVE     	0 16
	197	[392]	MOVE     	0 3
	198	[392]	MOVE     	0 4
	199	[392]	SETTABLE 	24 -67 25	; "is_local" -
	200	[410]	CLOSURE  	25 31	; 0x7fd94cc0d4b0
	201	[410]	MOVE     	0 10
	202	[410]	SETTABLE 	24 -68 25	; "free_name" -
	203	[423]	CLOSURE  	25 32	; 0x7fd94cc0da10
	204	[423]	SETTABLE 	24 -69 25	; "init_free_var" -
	205	[433]	CLOSURE  	25 33	; 0x7fd94cc0dd30
	206	[433]	SETTABLE 	24 -26 25	; "add" -
	207	[450]	CLOSURE  	25 34	; 0x7fd94cc0bac0
	208	[450]	MOVE     	0 15
	209	[450]	MOVE     	0 20
	210	[450]	SETTABLE 	24 -42 25	; "render" -
	211	[453]	CLOSURE  	25 35	; 0x7fd94cc0e780
	212	[453]	MOVE     	0 21
	213	[453]	SETTABLE 	24 -70 25	; "block" -
	214	[460]	CLOSURE  	25 36	; 0x7fd94cc0e640
	215	[460]	MOVE     	0 18
	216	[460]	SETTABLE 	24 -71 25	; "line" -
	217	[463]	CLOSURE  	25 37	; 0x7fd94cc0ed40
	218	[463]	MOVE     	0 6
	219	[463]	SETTABLE 	24 -72 25	; "is_stm" -
	220	[467]	CLOSURE  	25 38	; 0x7fd94cc0f370
	221	[467]	MOVE     	0 6
	222	[467]	SETTABLE 	24 -73 25	; "is_value" -
	223	[474]	CLOSURE  	25 39	; 0x7fd94cc0f520
	224	[474]	SETTABLE 	24 -74 25	; "name" -
	225	[503]	CLOSURE  	25 40	; 0x7fd94cc0f990
	226	[503]	MOVE     	0 1
	227	[503]	MOVE     	0 18
	228	[503]	SETTABLE 	24 -75 25	; "value" -
	229	[520]	CLOSURE  	25 41	; 0x7fd94cc0ff10
	230	[520]	MOVE     	0 18
	231	[520]	SETTABLE 	24 -76 25	; "values" -
	232	[554]	CLOSURE  	25 42	; 0x7fd94cc10850
	233	[554]	MOVE     	0 6
	234	[554]	MOVE     	0 7
	235	[554]	SETTABLE 	24 -77 25	; "stm" -
	236	[569]	CLOSURE  	25 43	; 0x7fd94cc10db0
	237	[569]	SETTABLE 	24 -78 25	; "stms" -
	238	[577]	CLOSURE  	25 44	; 0x7fd94cc10c30
	239	[577]	MOVE     	0 20
	240	[577]	SETTABLE 	24 -79 25	; "splice" -
	241	[579]	SETTABLE 	24 -30 24	; "__index" -
	242	[580]	GETGLOBAL	25 -31	; setmetatable
	243	[580]	NEWTABLE 	26 0 3
	244	[605]	CLOSURE  	27 45	; 0x7fd94cc098e0
	245	[605]	MOVE     	0 20
	246	[605]	MOVE     	0 2
	247	[605]	SETTABLE 	26 -32 27	; "__init" -
	248	[606]	SETTABLE 	26 -33 24	; "__base" -
	249	[607]	SETTABLE 	26 -34 -80	; "__name" "Block"
	250	[608]	NEWTABLE 	27 0 2
	251	[609]	SETTABLE 	27 -30 24	; "__index" -
	252	[614]	CLOSURE  	28 46	; 0x7fd94cc09960
	253	[614]	MOVE     	0 24
	254	[614]	SETTABLE 	27 -36 28	; "__call" -
	255	[580]	CALL     	25 3 2
	256	[615]	MOVE     	23 25
	257	[616]	SETTABLE 	24 -37 23	; "__class" -
	258	[617]	MOVE     	21 23
	259	[617]	CLOSE    	23
	260	[620]	LOADNIL  	23 23
	261	[621]	MOVE     	24 21
	262	[622]	NEWTABLE 	25 0 3
	263	[625]	CLOSURE  	26 47	; 0x7fd94cc0f110
	264	[625]	SETTABLE 	25 -29 26	; "__tostring" -
	265	[631]	CLOSURE  	26 48	; 0x7fd94cc0eba0
	266	[631]	MOVE     	0 2
	267	[631]	SETTABLE 	25 -81 26	; "root_stms" -
	268	[638]	CLOSURE  	26 49	; 0x7fd94cc0ddf0
	269	[638]	SETTABLE 	25 -42 26	; "render" -
	270	[640]	SETTABLE 	25 -30 25	; "__index" -
	271	[641]	GETGLOBAL	26 -31	; setmetatable
	272	[641]	MOVE     	27 25
	273	[641]	GETTABLE 	28 24 -33	; "__base"
	274	[641]	CALL     	26 3 1
	275	[642]	GETGLOBAL	26 -31	; setmetatable
	276	[642]	NEWTABLE 	27 0 4
	277	[647]	CLOSURE  	28 50	; 0x7fd94cc0df30
	278	[647]	MOVE     	0 23
	279	[647]	SETTABLE 	27 -32 28	; "__init" -
	280	[648]	SETTABLE 	27 -33 25	; "__base" -
	281	[649]	SETTABLE 	27 -34 -82	; "__name" "RootBlock"
	282	[650]	SETTABLE 	27 -83 24	; "__parent" -
	283	[651]	NEWTABLE 	28 0 2
	284	[662]	CLOSURE  	29 51	; 0x7fd94cc10660
	285	[662]	MOVE     	0 25
	286	[662]	SETTABLE 	28 -30 29	; "__index" -
	287	[667]	CLOSURE  	29 52	; 0x7fd94cc0e4f0
	288	[667]	MOVE     	0 25
	289	[667]	SETTABLE 	28 -36 29	; "__call" -
	290	[642]	CALL     	26 3 2
	291	[668]	MOVE     	23 26
	292	[669]	SETTABLE 	25 -37 23	; "__class" -
	293	[670]	GETTABLE 	26 24 -84	; "__inherited"
	294	[670]	TEST     	26 0 0
	295	[670]	JMP      	4	; to 300
	296	[671]	GETTABLE 	26 24 -84	; "__inherited"
	297	[671]	MOVE     	27 24
	298	[671]	MOVE     	28 23
	299	[671]	CALL     	26 3 1
	300	[673]	MOVE     	22 23
	301	[673]	CLOSE    	23
	302	[675]	LOADNIL  	23 23
	303	[689]	CLOSURE  	23 53	; 0x7fd94cc110f0
	304	[689]	MOVE     	0 12
	305	[689]	MOVE     	0 13
	306	[689]	MOVE     	0 14
	307	[689]	MOVE     	0 10
	308	[690]	LOADNIL  	24 24
	309	[699]	CLOSURE  	24 54	; 0x7fd94cc11640
	310	[699]	MOVE     	0 22
	311	[700]	LOADNIL  	25 25
	312	[731]	CLOSURE  	25 55	; 0x7fd94cc11a80
	313	[731]	MOVE     	0 22
	314	[731]	MOVE     	0 15
	315	[731]	MOVE     	0 0
	316	[731]	MOVE     	0 10
	317	[733]	GETGLOBAL	26 -1	; require
	318	[733]	LOADK    	27 -8	; "moonscript.data"
	319	[733]	CALL     	26 2 2
	320	[734]	GETGLOBAL	27 -85	; pairs
	321	[734]	NEWTABLE 	28 0 3
	322	[735]	SETTABLE 	28 -43 18	; "Line" -
	323	[736]	SETTABLE 	28 -35 20	; "Lines" -
	324	[737]	SETTABLE 	28 -45 19	; "DelayedLine" -
	325	[734]	CALL     	27 2 4
	326	[738]	JMP      	1	; to 328
	327	[739]	SETTABLE 	26 30 31
	328	[734]	TFORLOOP 	27 2
	329	[739]	JMP      	-3	; to 327
	330	[742]	NEWTABLE 	26 0 5
	331	[743]	SETTABLE 	26 -86 25	; "tree" -
	332	[744]	SETTABLE 	26 -75 24	; "value" -
	333	[745]	SETTABLE 	26 -87 23	; "format_error" -
	334	[746]	SETTABLE 	26 -80 21	; "Block" -
	335	[747]	SETTABLE 	26 -82 22	; "RootBlock" -
	336	[748]	RETURN   	26 2
	337	[748]	RETURN   	0 1

function <./moonscript/compile.lua:31,38> (10 instructions, 40 bytes at 0x7fd94cc06fe0)
3 params, 4 slots, 0 upvalues, 3 locals, 2 constants, 0 functions
	1	[32]	EQ       	0 2 -1	; - nil
	2	[32]	JMP      	1	; to 4
	3	[33]	LEN      	2 0
	4	[35]	GETTABLE 	3 0 -2	; "posmap"
	5	[35]	GETTABLE 	3 3 2
	6	[35]	TEST     	3 0 1
	7	[35]	JMP      	2	; to 10
	8	[36]	GETTABLE 	3 0 -2	; "posmap"
	9	[36]	SETTABLE 	3 2 1
	10	[38]	RETURN   	0 1

function <./moonscript/compile.lua:39,49> (22 instructions, 88 bytes at 0x7fd94cc07700)
2 params, 6 slots, 3 upvalues, 3 locals, 2 constants, 0 functions
	1	[40]	GETUPVAL 	2 0	; mtype
	2	[40]	MOVE     	3 1
	3	[40]	CALL     	2 2 2
	4	[41]	GETUPVAL 	3 1	; Line
	5	[41]	EQ       	0 3 2
	6	[41]	JMP      	4	; to 11
	7	[42]	SELF     	3 1 -1	; "render"
	8	[42]	MOVE     	5 0
	9	[42]	CALL     	3 3 1
	10	[42]	JMP      	10	; to 21
	11	[43]	GETUPVAL 	3 2	; Block
	12	[43]	EQ       	0 3 2
	13	[43]	JMP      	4	; to 18
	14	[44]	SELF     	3 1 -1	; "render"
	15	[44]	MOVE     	5 0
	16	[44]	CALL     	3 3 1
	17	[44]	JMP      	3	; to 21
	18	[46]	LEN      	3 0
	19	[46]	ADD      	3 3 -2	; - 1
	20	[46]	SETTABLE 	0 3 1
	21	[48]	RETURN   	0 2
	22	[49]	RETURN   	0 1

function <./moonscript/compile.lua:50,75> (57 instructions, 228 bytes at 0x7fd94cc07fd0)
3 params, 16 slots, 3 upvalues, 15 locals, 12 constants, 0 functions
	1	[51]	EQ       	0 1 -1	; - nil
	2	[51]	JMP      	1	; to 4
	3	[52]	LOADK    	1 -2	; 0
	4	[54]	EQ       	0 2 -1	; - nil
	5	[54]	JMP      	2	; to 8
	6	[55]	NEWTABLE 	3 0 0
	7	[55]	MOVE     	2 3
	8	[57]	GETTABLE 	3 0 -3	; "posmap"
	9	[58]	GETGLOBAL	4 -4	; ipairs
	10	[58]	MOVE     	5 0
	11	[58]	CALL     	4 2 4
	12	[58]	JMP      	39	; to 52
	13	[59]	GETUPVAL 	9 0	; mtype
	14	[59]	MOVE     	10 8
	15	[59]	CALL     	9 2 2
	16	[60]	EQ       	1 -5 9	; "string" -
	17	[60]	JMP      	3	; to 21
	18	[60]	GETUPVAL 	10 1	; DelayedLine
	19	[60]	EQ       	0 10 9
	20	[60]	JMP      	13	; to 34
	21	[61]	ADD      	1 1 -6	; - 1
	22	[62]	GETTABLE 	10 3 7
	23	[62]	SETTABLE 	2 1 10
	24	[63]	SELF     	10 8 -7	; "gmatch"
	25	[63]	LOADK    	12 -8	; "\n"
	26	[63]	CALL     	10 3 4
	27	[63]	JMP      	1	; to 29
	28	[64]	ADD      	1 1 -6	; - 1
	29	[63]	TFORLOOP 	10 1
	30	[64]	JMP      	-3	; to 28
	31	[66]	GETTABLE 	10 3 7
	32	[66]	SETTABLE 	2 1 10
	33	[66]	JMP      	18	; to 52
	34	[67]	GETUPVAL 	10 2	; Lines
	35	[67]	EQ       	0 10 9
	36	[67]	JMP      	8	; to 45
	37	[68]	LOADNIL  	10 10
	38	[69]	SELF     	11 8 -9	; "flatten_posmap"
	39	[69]	MOVE     	13 1
	40	[69]	MOVE     	14 2
	41	[69]	CALL     	11 4 3
	42	[69]	MOVE     	1 12
	43	[69]	MOVE     	10 11
	44	[69]	JMP      	7	; to 52
	45	[71]	GETGLOBAL	10 -10	; error
	46	[71]	LOADK    	11 -11	; "Unknown item in Lines: "
	47	[71]	GETGLOBAL	12 -12	; tostring
	48	[71]	MOVE     	13 8
	49	[71]	CALL     	12 2 2
	50	[71]	CONCAT   	11 11 12
	51	[71]	CALL     	10 2 1
	52	[58]	TFORLOOP 	4 2
	53	[72]	JMP      	-41	; to 13
	54	[74]	MOVE     	4 2
	55	[74]	MOVE     	5 1
	56	[74]	RETURN   	4 3
	57	[75]	RETURN   	0 1

function <./moonscript/compile.lua:76,110> (90 instructions, 360 bytes at 0x7fd94cc08340)
3 params, 15 slots, 5 upvalues, 11 locals, 16 constants, 0 functions
	1	[77]	EQ       	0 1 -1	; - nil
	2	[77]	JMP      	1	; to 4
	3	[78]	LOADNIL  	1 1
	4	[80]	EQ       	0 2 -1	; - nil
	5	[80]	JMP      	2	; to 8
	6	[81]	NEWTABLE 	3 0 0
	7	[81]	MOVE     	2 3
	8	[83]	LOADK    	3 -2	; 1
	9	[83]	LEN      	4 0
	10	[83]	LOADK    	5 -2	; 1
	11	[83]	FORPREP  	3 76	; to 88
	12	[84]	GETTABLE 	7 0 6
	13	[85]	GETUPVAL 	8 0	; mtype
	14	[85]	MOVE     	9 7
	15	[85]	CALL     	8 2 2
	16	[86]	GETUPVAL 	9 1	; DelayedLine
	17	[86]	EQ       	0 8 9
	18	[86]	JMP      	4	; to 23
	19	[87]	SELF     	9 7 -3	; "render"
	20	[87]	CALL     	9 2 2
	21	[87]	MOVE     	7 9
	22	[88]	LOADK    	8 -4	; "string"
	23	[90]	MOVE     	9 8
	24	[91]	EQ       	0 -4 9	; "string" -
	25	[91]	JMP      	40	; to 66
	26	[92]	TEST     	1 0 0
	27	[92]	JMP      	4	; to 32
	28	[93]	GETUPVAL 	10 2	; insert
	29	[93]	MOVE     	11 2
	30	[93]	MOVE     	12 1
	31	[93]	CALL     	10 3 1
	32	[95]	GETUPVAL 	10 2	; insert
	33	[95]	MOVE     	11 2
	34	[95]	MOVE     	12 7
	35	[95]	CALL     	10 3 1
	36	[96]	GETGLOBAL	10 -5	; type
	37	[96]	ADD      	11 6 -2	; - 1
	38	[96]	GETTABLE 	11 0 11
	39	[96]	CALL     	10 2 2
	40	[96]	EQ       	0 -4 10	; "string" -
	41	[96]	JMP      	19	; to 61
	42	[97]	SELF     	10 7 -6	; "sub"
	43	[97]	LOADK    	12 -7	; -1
	44	[97]	CALL     	10 3 2
	45	[98]	EQ       	1 10 -8	; - ")"
	46	[98]	JMP      	2	; to 49
	47	[98]	EQ       	0 10 -9	; - "]"
	48	[98]	JMP      	12	; to 61
	49	[98]	ADD      	11 6 -2	; - 1
	50	[98]	GETTABLE 	11 0 11
	51	[98]	SELF     	11 11 -6	; "sub"
	52	[98]	LOADK    	13 -2	; 1
	53	[98]	LOADK    	14 -2	; 1
	54	[98]	CALL     	11 4 2
	55	[98]	EQ       	0 11 -10	; - "("
	56	[98]	JMP      	4	; to 61
	57	[99]	GETUPVAL 	11 2	; insert
	58	[99]	MOVE     	12 2
	59	[99]	LOADK    	13 -11	; ";"
	60	[99]	CALL     	11 3 1
	61	[102]	GETUPVAL 	10 2	; insert
	62	[102]	MOVE     	11 2
	63	[102]	LOADK    	12 -12	; "\n"
	64	[102]	CALL     	10 3 1
	65	[102]	JMP      	22	; to 88
	66	[103]	GETUPVAL 	10 3	; Lines
	67	[103]	EQ       	0 10 9
	68	[103]	JMP      	12	; to 81
	69	[104]	SELF     	10 7 -13	; "flatten"
	70	[104]	TEST     	1 0 0
	71	[104]	JMP      	5	; to 77
	72	[104]	MOVE     	12 1
	73	[104]	GETUPVAL 	13 4	; indent_char
	74	[104]	CONCAT   	12 12 13
	75	[104]	TEST     	12 0 1
	76	[104]	JMP      	1	; to 78
	77	[104]	GETUPVAL 	12 4	; indent_char
	78	[104]	MOVE     	13 2
	79	[104]	CALL     	10 4 1
	80	[104]	JMP      	7	; to 88
	81	[106]	GETGLOBAL	10 -14	; error
	82	[106]	LOADK    	11 -15	; "Unknown item in Lines: "
	83	[106]	GETGLOBAL	12 -16	; tostring
	84	[106]	MOVE     	13 7
	85	[106]	CALL     	12 2 2
	86	[106]	CONCAT   	11 11 12
	87	[106]	CALL     	10 2 1
	88	[83]	FORLOOP  	3 -77	; to 12
	89	[109]	RETURN   	2 2
	90	[110]	RETURN   	0 1

function <./moonscript/compile.lua:111,128> (19 instructions, 76 bytes at 0x7fd94cc08880)
1 param, 8 slots, 1 upvalue, 2 locals, 7 constants, 1 function
	1	[126]	CLOSURE  	1 0	; 0x7fd94cc079f0
	2	[126]	MOVE     	0 1
	3	[127]	LOADK    	2 -1	; "Lines<"
	4	[127]	GETGLOBAL	3 -2	; tostring
	5	[127]	GETUPVAL 	4 0	; util
	6	[127]	GETTABLE 	4 4 -3	; "dump"
	7	[127]	MOVE     	5 1
	8	[127]	MOVE     	6 0
	9	[127]	CALL     	5 2 0
	10	[127]	CALL     	4 0 2
	11	[127]	SELF     	4 4 -4	; "sub"
	12	[127]	LOADK    	6 -5	; 1
	13	[127]	LOADK    	7 -6	; -2
	14	[127]	CALL     	4 4 0
	15	[127]	CALL     	3 0 2
	16	[127]	LOADK    	4 -7	; ">"
	17	[127]	CONCAT   	2 2 4
	18	[127]	RETURN   	2 2
	19	[128]	RETURN   	0 1

function <./moonscript/compile.lua:113,126> (22 instructions, 88 bytes at 0x7fd94cc079f0)
1 param, 10 slots, 1 upvalue, 8 locals, 3 constants, 0 functions
	1	[114]	GETGLOBAL	1 -2	; type
	2	[114]	MOVE     	2 0
	3	[114]	CALL     	1 2 2
	4	[114]	EQ       	0 -1 1	; "table" -
	5	[114]	JMP      	15	; to 21
	6	[115]	NEWTABLE 	1 0 0
	7	[116]	LOADK    	2 -3	; 1
	8	[117]	LOADK    	3 -3	; 1
	9	[117]	LEN      	4 0
	10	[117]	LOADK    	5 -3	; 1
	11	[117]	FORPREP  	3 6	; to 18
	12	[118]	GETTABLE 	7 0 6
	13	[119]	GETUPVAL 	8 0	; strip
	14	[119]	MOVE     	9 7
	15	[119]	CALL     	8 2 2
	16	[119]	SETTABLE 	1 2 8
	17	[120]	ADD      	2 2 -3	; - 1
	18	[117]	FORLOOP  	3 -7	; to 12
	19	[122]	RETURN   	1 2
	20	[122]	JMP      	1	; to 22
	21	[124]	RETURN   	0 2
	22	[126]	RETURN   	0 1

function <./moonscript/compile.lua:132,134> (3 instructions, 12 bytes at 0x7fd94cc09160)
1 param, 2 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[133]	NEWTABLE 	1 0 0
	2	[133]	SETTABLE 	0 -1 1	; "posmap" -
	3	[134]	RETURN   	0 1

function <./moonscript/compile.lua:139,143> (10 instructions, 40 bytes at 0x7fd94cc065c0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[140]	GETGLOBAL	2 -1	; setmetatable
	2	[140]	NEWTABLE 	3 0 0
	3	[140]	GETUPVAL 	4 0	; _base_0
	4	[140]	CALL     	2 3 2
	5	[141]	GETTABLE 	3 0 -2	; "__init"
	6	[141]	MOVE     	4 2
	7	[141]	VARARG   	5 0
	8	[141]	CALL     	3 0 1
	9	[142]	RETURN   	2 2
	10	[143]	RETURN   	0 1

function <./moonscript/compile.lua:152,160> (18 instructions, 72 bytes at 0x7fd94cc09710)
3 params, 10 slots, 1 upvalue, 7 locals, 2 constants, 0 functions
	1	[153]	LOADK    	3 -1	; 1
	2	[153]	LEN      	4 1
	3	[153]	LOADK    	5 -1	; 1
	4	[153]	FORPREP  	3 10	; to 15
	5	[154]	SELF     	7 0 -2	; "append"
	6	[154]	GETTABLE 	9 1 6
	7	[154]	CALL     	7 3 1
	8	[155]	LEN      	7 1
	9	[155]	LT       	0 6 7
	10	[155]	JMP      	4	; to 15
	11	[156]	GETUPVAL 	7 0	; insert
	12	[156]	MOVE     	8 0
	13	[156]	MOVE     	9 2
	14	[156]	CALL     	7 3 1
	15	[153]	FORLOOP  	3 -11	; to 5
	16	[159]	LOADNIL  	3 3
	17	[159]	RETURN   	3 2
	18	[160]	RETURN   	0 1

function <./moonscript/compile.lua:161,176> (33 instructions, 132 bytes at 0x7fd94cc09bc0)
2+ params, 11 slots, 3 upvalues, 8 locals, 3 constants, 0 functions
	1	[162]	GETUPVAL 	3 0	; Line
	2	[162]	GETUPVAL 	4 1	; mtype
	3	[162]	MOVE     	5 1
	4	[162]	CALL     	4 2 2
	5	[162]	EQ       	0 3 4
	6	[162]	JMP      	15	; to 22
	7	[163]	GETTABLE 	3 0 -1	; "pos"
	8	[163]	TEST     	3 0 1
	9	[163]	JMP      	2	; to 12
	10	[164]	GETTABLE 	3 1 -1	; "pos"
	11	[164]	SETTABLE 	0 -1 3	; "pos" -
	12	[166]	LOADK    	3 -2	; 1
	13	[166]	LEN      	4 1
	14	[166]	LOADK    	5 -2	; 1
	15	[166]	FORPREP  	3 4	; to 20
	16	[167]	GETTABLE 	7 1 6
	17	[168]	SELF     	8 0 -3	; "append"
	18	[168]	MOVE     	10 7
	19	[168]	CALL     	8 3 1
	20	[166]	FORLOOP  	3 -5	; to 16
	21	[169]	JMP      	4	; to 26
	22	[171]	GETUPVAL 	3 2	; insert
	23	[171]	MOVE     	4 0
	24	[171]	MOVE     	5 1
	25	[171]	CALL     	3 3 1
	26	[173]	VARARG   	3 2
	27	[173]	TEST     	3 0 0
	28	[173]	JMP      	4	; to 33
	29	[174]	SELF     	3 0 -3	; "append"
	30	[174]	VARARG   	5 0
	31	[174]	TAILCALL 	3 0 0
	32	[174]	RETURN   	3 0
	33	[176]	RETURN   	0 1

function <./moonscript/compile.lua:177,207> (58 instructions, 232 bytes at 0x7fd94cc09c80)
2 params, 19 slots, 5 upvalues, 16 locals, 5 constants, 1 function
	1	[178]	NEWTABLE 	2 0 0
	2	[179]	LOADNIL  	3 3
	3	[183]	CLOSURE  	3 0	; 0x7fd94cc0a690
	4	[183]	MOVE     	0 1
	5	[183]	GETUPVAL 	0 0	; concat
	6	[183]	MOVE     	0 2
	7	[183]	MOVE     	0 0
	8	[184]	LOADK    	4 -1	; 1
	9	[184]	LEN      	5 0
	10	[184]	LOADK    	6 -1	; 1
	11	[184]	FORPREP  	4 39	; to 51
	12	[185]	GETTABLE 	8 0 7
	13	[186]	GETUPVAL 	9 1	; mtype
	14	[186]	MOVE     	10 8
	15	[186]	CALL     	9 2 2
	16	[187]	GETUPVAL 	10 2	; Block
	17	[187]	EQ       	0 10 9
	18	[187]	JMP      	28	; to 47
	19	[188]	SELF     	10 8 -2	; "render"
	20	[188]	GETUPVAL 	12 3	; Lines
	21	[188]	CALL     	12 1 0
	22	[188]	CALL     	10 0 2
	23	[189]	LOADK    	11 -1	; 1
	24	[189]	LEN      	12 10
	25	[189]	LOADK    	13 -1	; 1
	26	[189]	FORPREP  	11 18	; to 45
	27	[190]	GETTABLE 	15 10 14
	28	[191]	GETGLOBAL	16 -4	; type
	29	[191]	MOVE     	17 15
	30	[191]	CALL     	16 2 2
	31	[191]	EQ       	0 -3 16	; "string" -
	32	[191]	JMP      	5	; to 38
	33	[192]	GETUPVAL 	16 4	; insert
	34	[192]	MOVE     	17 2
	35	[192]	MOVE     	18 15
	36	[192]	CALL     	16 3 1
	37	[192]	JMP      	7	; to 45
	38	[194]	MOVE     	16 3
	39	[194]	CALL     	16 1 1
	40	[195]	SELF     	16 1 -5	; "add"
	41	[195]	MOVE     	18 15
	42	[195]	CALL     	16 3 1
	43	[196]	NEWTABLE 	16 0 0
	44	[196]	MOVE     	2 16
	45	[189]	FORLOOP  	11 -19	; to 27
	46	[198]	JMP      	4	; to 51
	47	[200]	GETUPVAL 	10 4	; insert
	48	[200]	MOVE     	11 2
	49	[200]	MOVE     	12 8
	50	[200]	CALL     	10 3 1
	51	[184]	FORLOOP  	4 -40	; to 12
	52	[203]	GETTABLE 	4 2 -1	; 1
	53	[203]	TEST     	4 0 0
	54	[203]	JMP      	2	; to 57
	55	[204]	MOVE     	4 3
	56	[204]	CALL     	4 1 1
	57	[206]	RETURN   	1 2
	58	[207]	RETURN   	0 1

function <./moonscript/compile.lua:180,183> (13 instructions, 52 bytes at 0x7fd94cc0a690)
0 params, 4 slots, 4 upvalues, 0 locals, 3 constants, 0 functions
	1	[181]	GETUPVAL 	0 0	; buffer
	2	[181]	SELF     	0 0 -1	; "add"
	3	[181]	GETUPVAL 	2 1	; concat
	4	[181]	GETUPVAL 	3 2	; current
	5	[181]	CALL     	2 2 0
	6	[181]	CALL     	0 0 1
	7	[182]	GETUPVAL 	0 0	; buffer
	8	[182]	SELF     	0 0 -2	; "mark_pos"
	9	[182]	GETUPVAL 	2 3	; self
	10	[182]	GETTABLE 	2 2 -3	; "pos"
	11	[182]	TAILCALL 	0 3 0
	12	[182]	RETURN   	0 0
	13	[183]	RETURN   	0 1

function <./moonscript/compile.lua:208,210> (15 instructions, 60 bytes at 0x7fd94cc0ad80)
1 param, 7 slots, 1 upvalue, 1 local, 7 constants, 0 functions
	1	[209]	LOADK    	1 -1	; "Line<"
	2	[209]	GETGLOBAL	2 -2	; tostring
	3	[209]	GETUPVAL 	3 0	; util
	4	[209]	GETTABLE 	3 3 -3	; "dump"
	5	[209]	MOVE     	4 0
	6	[209]	CALL     	3 2 2
	7	[209]	SELF     	3 3 -4	; "sub"
	8	[209]	LOADK    	5 -5	; 1
	9	[209]	LOADK    	6 -6	; -2
	10	[209]	CALL     	3 4 0
	11	[209]	CALL     	2 0 2
	12	[209]	LOADK    	3 -7	; ">"
	13	[209]	CONCAT   	1 1 3
	14	[209]	RETURN   	1 2
	15	[210]	RETURN   	0 1

function <./moonscript/compile.lua:214,214> (1 instruction, 4 bytes at 0x7fd94cc0af90)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[214]	RETURN   	0 1

function <./moonscript/compile.lua:219,223> (10 instructions, 40 bytes at 0x7fd94cc0b050)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[220]	GETGLOBAL	2 -1	; setmetatable
	2	[220]	NEWTABLE 	3 0 0
	3	[220]	GETUPVAL 	4 0	; _base_0
	4	[220]	CALL     	2 3 2
	5	[221]	GETTABLE 	3 0 -2	; "__init"
	6	[221]	MOVE     	4 2
	7	[221]	VARARG   	5 0
	8	[221]	CALL     	3 0 1
	9	[222]	RETURN   	2 2
	10	[223]	RETURN   	0 1

function <./moonscript/compile.lua:231,231> (1 instruction, 4 bytes at 0x7fd94cc0b4c0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[231]	RETURN   	0 1

function <./moonscript/compile.lua:232,235> (7 instructions, 28 bytes at 0x7fd94cc0b570)
1 param, 3 slots, 1 upvalue, 1 local, 1 constant, 0 functions
	1	[233]	SELF     	1 0 -1	; "prepare"
	2	[233]	CALL     	1 2 1
	3	[234]	GETUPVAL 	1 0	; concat
	4	[234]	MOVE     	2 0
	5	[234]	TAILCALL 	1 2 0
	6	[234]	RETURN   	1 0
	7	[235]	RETURN   	0 1

function <./moonscript/compile.lua:239,241> (2 instructions, 8 bytes at 0x7fd94cc07930)
2 params, 2 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[240]	SETTABLE 	0 -1 1	; "prepare" -
	2	[241]	RETURN   	0 1

function <./moonscript/compile.lua:246,250> (10 instructions, 40 bytes at 0x7fd94cc09060)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[247]	GETGLOBAL	2 -1	; setmetatable
	2	[247]	NEWTABLE 	3 0 0
	3	[247]	GETUPVAL 	4 0	; _base_0
	4	[247]	CALL     	2 3 2
	5	[248]	GETTABLE 	3 0 -2	; "__init"
	6	[248]	MOVE     	4 2
	7	[248]	VARARG   	5 0
	8	[248]	CALL     	3 0 1
	9	[249]	RETURN   	2 2
	10	[250]	RETURN   	0 1

function <./moonscript/compile.lua:264,272> (25 instructions, 100 bytes at 0x7fd94cc06ed0)
1 param, 7 slots, 1 upvalue, 2 locals, 8 constants, 0 functions
	1	[266]	GETGLOBAL	2 -2	; type
	2	[266]	GETTABLE 	3 0 -3	; "header"
	3	[266]	CALL     	2 2 2
	4	[266]	EQ       	0 -1 2	; "string" -
	5	[266]	JMP      	2	; to 8
	6	[267]	GETTABLE 	1 0 -3	; "header"
	7	[267]	JMP      	7	; to 15
	8	[269]	GETUPVAL 	2 0	; unpack
	9	[269]	GETTABLE 	3 0 -3	; "header"
	10	[269]	SELF     	3 3 -4	; "render"
	11	[269]	NEWTABLE 	5 0 0
	12	[269]	CALL     	3 3 0
	13	[269]	CALL     	2 0 2
	14	[269]	MOVE     	1 2
	15	[271]	LOADK    	2 -5	; "Block<"
	16	[271]	GETGLOBAL	3 -6	; tostring
	17	[271]	MOVE     	4 1
	18	[271]	CALL     	3 2 2
	19	[271]	LOADK    	4 -7	; "> <- "
	20	[271]	GETGLOBAL	5 -6	; tostring
	21	[271]	GETTABLE 	6 0 -8	; "parent"
	22	[271]	CALL     	5 2 2
	23	[271]	CONCAT   	2 2 5
	24	[271]	RETURN   	2 2
	25	[272]	RETURN   	0 1

function <./moonscript/compile.lua:273,275> (3 instructions, 12 bytes at 0x7fd94cc077f0)
3 params, 4 slots, 0 upvalues, 3 locals, 1 constant, 0 functions
	1	[274]	GETTABLE 	3 0 -1	; "_state"
	2	[274]	SETTABLE 	3 1 2
	3	[275]	RETURN   	0 1

function <./moonscript/compile.lua:276,278> (4 instructions, 16 bytes at 0x7fd94cc073c0)
2 params, 3 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[277]	GETTABLE 	2 0 -1	; "_state"
	2	[277]	GETTABLE 	2 2 1
	3	[277]	RETURN   	2 2
	4	[278]	RETURN   	0 1

function <./moonscript/compile.lua:279,281> (6 instructions, 24 bytes at 0x7fd94cc093a0)
2 params, 5 slots, 0 upvalues, 2 locals, 2 constants, 0 functions
	1	[280]	GETGLOBAL	2 -1	; rawget
	2	[280]	GETTABLE 	3 0 -2	; "_state"
	3	[280]	MOVE     	4 1
	4	[280]	TAILCALL 	2 3 0
	5	[280]	RETURN   	2 0
	6	[281]	RETURN   	0 1

function <./moonscript/compile.lua:282,284> (3 instructions, 12 bytes at 0x7fd94cc09440)
3 params, 4 slots, 0 upvalues, 3 locals, 1 constant, 0 functions
	1	[283]	GETTABLE 	3 0 -1	; "_listeners"
	2	[283]	SETTABLE 	3 1 2
	3	[284]	RETURN   	0 1

function <./moonscript/compile.lua:285,287> (3 instructions, 12 bytes at 0x7fd94cc09a20)
2 params, 3 slots, 0 upvalues, 2 locals, 2 constants, 0 functions
	1	[286]	GETTABLE 	2 0 -1	; "_listeners"
	2	[286]	SETTABLE 	2 1 -2	; - nil
	3	[287]	RETURN   	0 1

function <./moonscript/compile.lua:288,295> (10 instructions, 40 bytes at 0x7fd94cc0a070)
2+ params, 7 slots, 0 upvalues, 4 locals, 1 constant, 0 functions
	1	[290]	GETTABLE 	3 0 -1	; "_listeners"
	2	[290]	GETTABLE 	3 3 1
	3	[291]	TEST     	3 0 0
	4	[291]	JMP      	5	; to 10
	5	[292]	MOVE     	4 3
	6	[292]	MOVE     	5 0
	7	[292]	VARARG   	6 0
	8	[292]	TAILCALL 	4 0 0
	9	[292]	RETURN   	4 0
	10	[295]	RETURN   	0 1

function <./moonscript/compile.lua:296,311> (39 instructions, 156 bytes at 0x7fd94cc0b200)
2 params, 8 slots, 3 upvalues, 5 locals, 6 constants, 0 functions
	1	[297]	LOADBOOL 	2 0 0
	2	[298]	LOADNIL  	3 3
	3	[299]	GETUPVAL 	4 0	; mtype
	4	[299]	MOVE     	5 1
	5	[299]	CALL     	4 2 2
	6	[300]	GETUPVAL 	5 1	; LocalName
	7	[300]	EQ       	0 5 4
	8	[300]	JMP      	6	; to 15
	9	[301]	LOADBOOL 	2 1 0
	10	[302]	SELF     	5 1 -1	; "get_name"
	11	[302]	MOVE     	7 0
	12	[302]	CALL     	5 3 2
	13	[302]	MOVE     	3 5
	14	[302]	JMP      	21	; to 36
	15	[303]	GETUPVAL 	5 2	; NameProxy
	16	[303]	EQ       	0 5 4
	17	[303]	JMP      	5	; to 23
	18	[304]	SELF     	5 1 -1	; "get_name"
	19	[304]	MOVE     	7 0
	20	[304]	CALL     	5 3 2
	21	[304]	MOVE     	3 5
	22	[304]	JMP      	13	; to 36
	23	[305]	EQ       	0 -2 4	; "table" -
	24	[305]	JMP      	8	; to 33
	25	[306]	GETTABLE 	5 1 -3	; 1
	26	[306]	EQ       	0 5 -4	; - "ref"
	27	[306]	JMP      	2	; to 30
	28	[306]	GETTABLE 	3 1 -5	; 2
	29	[306]	JMP      	6	; to 36
	30	[306]	LOADBOOL 	3 0 1
	31	[306]	LOADBOOL 	3 1 0
	32	[306]	JMP      	3	; to 36
	33	[307]	EQ       	0 -6 4	; "string" -
	34	[307]	JMP      	1	; to 36
	35	[308]	MOVE     	3 1
	36	[310]	MOVE     	5 3
	37	[310]	MOVE     	6 2
	38	[310]	RETURN   	5 3
	39	[311]	RETURN   	0 1

function <./moonscript/compile.lua:312,343> (45 instructions, 180 bytes at 0x7fd94cc0bb40)
2 params, 17 slots, 0 upvalues, 14 locals, 5 constants, 0 functions
	1	[315]	NEWTABLE 	3 0 0
	2	[316]	LOADK    	4 -1	; 1
	3	[317]	LOADK    	5 -1	; 1
	4	[317]	LEN      	6 1
	5	[317]	LOADK    	7 -1	; 1
	6	[317]	FORPREP  	5 35	; to 42
	7	[318]	LOADBOOL 	9 0 0
	8	[320]	GETTABLE 	10 1 8
	9	[321]	SELF     	11 0 -2	; "extract_assign_name"
	10	[321]	MOVE     	13 10
	11	[321]	CALL     	11 3 3
	12	[322]	TEST     	12 0 1
	13	[322]	JMP      	11	; to 25
	14	[322]	TEST     	11 0 0
	15	[322]	JMP      	7	; to 23
	16	[322]	SELF     	13 0 -3	; "has_name"
	17	[322]	MOVE     	15 11
	18	[322]	LOADBOOL 	16 1 0
	19	[322]	CALL     	13 4 2
	20	[322]	NOT      	13 13
	21	[322]	TEST     	13 0 1
	22	[322]	JMP      	2	; to 25
	23	[323]	LOADBOOL 	9 1 0
	24	[324]	JMP      	14	; to 39
	25	[326]	SELF     	13 0 -4	; "put_name"
	26	[326]	MOVE     	15 11
	27	[326]	CALL     	13 3 1
	28	[327]	SELF     	13 0 -5	; "name_exported"
	29	[327]	MOVE     	15 11
	30	[327]	CALL     	13 3 2
	31	[327]	TEST     	13 0 0
	32	[327]	JMP      	2	; to 35
	33	[328]	LOADBOOL 	9 1 0
	34	[329]	JMP      	4	; to 39
	35	[331]	MOVE     	13 11
	36	[332]	SETTABLE 	3 4 13
	37	[333]	ADD      	4 4 -1	; - 1
	38	[334]	LOADBOOL 	9 1 0
	39	[336]	TEST     	9 0 1
	40	[336]	JMP      	1	; to 42
	41	[337]	JMP      	1	; to 43
	42	[317]	FORLOOP  	5 -36	; to 7
	43	[340]	MOVE     	2 3
	44	[342]	RETURN   	2 2
	45	[343]	RETURN   	0 1

function <./moonscript/compile.lua:344,346> (5 instructions, 20 bytes at 0x7fd94cc0bf30)
2 params, 4 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[345]	GETUPVAL 	2 0	; Set
	2	[345]	MOVE     	3 1
	3	[345]	CALL     	2 2 2
	4	[345]	SETTABLE 	0 -1 2	; "_name_whitelist" -
	5	[346]	RETURN   	0 1

function <./moonscript/compile.lua:347,354> (16 instructions, 64 bytes at 0x7fd94cc0c3f0)
2 params, 5 slots, 0 upvalues, 2 locals, 4 constants, 0 functions
	1	[348]	GETTABLE 	2 0 -1	; "export_all"
	2	[348]	TEST     	2 0 0
	3	[348]	JMP      	2	; to 6
	4	[349]	LOADBOOL 	2 1 0
	5	[349]	RETURN   	2 2
	6	[351]	GETTABLE 	2 0 -2	; "export_proper"
	7	[351]	TEST     	2 0 0
	8	[351]	JMP      	7	; to 16
	9	[351]	SELF     	2 1 -3	; "match"
	10	[351]	LOADK    	4 -4	; "^%u"
	11	[351]	CALL     	2 3 2
	12	[351]	TEST     	2 0 0
	13	[351]	JMP      	2	; to 16
	14	[352]	LOADBOOL 	2 1 0
	15	[352]	RETURN   	2 2
	16	[354]	RETURN   	0 1

function <./moonscript/compile.lua:355,364> (21 instructions, 84 bytes at 0x7fd94cc0c780)
2+ params, 7 slots, 2 upvalues, 4 locals, 5 constants, 0 functions
	1	[356]	VARARG   	3 2
	2	[357]	GETGLOBAL	4 -1	; select
	3	[357]	LOADK    	5 -2	; "#"
	4	[357]	VARARG   	6 0
	5	[357]	CALL     	4 0 2
	6	[357]	EQ       	0 4 -3	; - 0
	7	[357]	JMP      	1	; to 9
	8	[358]	LOADBOOL 	3 1 0
	9	[360]	GETUPVAL 	4 0	; NameProxy
	10	[360]	GETUPVAL 	5 1	; mtype
	11	[360]	MOVE     	6 1
	12	[360]	CALL     	5 2 2
	13	[360]	EQ       	0 4 5
	14	[360]	JMP      	4	; to 19
	15	[361]	SELF     	4 1 -4	; "get_name"
	16	[361]	MOVE     	6 0
	17	[361]	CALL     	4 3 2
	18	[361]	MOVE     	1 4
	19	[363]	GETTABLE 	4 0 -5	; "_names"
	20	[363]	SETTABLE 	4 1 3
	21	[364]	RETURN   	0 1

function <./moonscript/compile.lua:365,377> (32 instructions, 128 bytes at 0x7fd94cc0cba0)
3 params, 8 slots, 0 upvalues, 4 locals, 6 constants, 0 functions
	1	[366]	TEST     	2 0 1
	2	[366]	JMP      	7	; to 10
	3	[366]	SELF     	3 0 -1	; "name_exported"
	4	[366]	MOVE     	5 1
	5	[366]	CALL     	3 3 2
	6	[366]	TEST     	3 0 0
	7	[366]	JMP      	2	; to 10
	8	[367]	LOADBOOL 	3 1 0
	9	[367]	RETURN   	3 2
	10	[369]	GETTABLE 	3 0 -2	; "_names"
	11	[369]	GETTABLE 	3 3 1
	12	[370]	EQ       	0 3 -3	; - nil
	13	[370]	JMP      	17	; to 31
	14	[370]	GETTABLE 	4 0 -4	; "parent"
	15	[370]	TEST     	4 0 0
	16	[370]	JMP      	14	; to 31
	17	[371]	GETTABLE 	4 0 -5	; "_name_whitelist"
	18	[371]	TEST     	4 0 0
	19	[371]	JMP      	4	; to 24
	20	[371]	GETTABLE 	4 0 -5	; "_name_whitelist"
	21	[371]	GETTABLE 	4 4 1
	22	[371]	TEST     	4 0 0
	23	[371]	JMP      	8	; to 32
	24	[372]	GETTABLE 	4 0 -4	; "parent"
	25	[372]	SELF     	4 4 -6	; "has_name"
	26	[372]	MOVE     	6 1
	27	[372]	LOADBOOL 	7 1 0
	28	[372]	TAILCALL 	4 4 0
	29	[372]	RETURN   	4 0
	30	[373]	JMP      	1	; to 32
	31	[375]	RETURN   	3 2
	32	[377]	RETURN   	0 1

function <./moonscript/compile.lua:378,392> (36 instructions, 144 bytes at 0x7fd94cc0d2f0)
2 params, 7 slots, 3 upvalues, 3 locals, 8 constants, 0 functions
	1	[379]	GETUPVAL 	2 0	; mtype
	2	[379]	MOVE     	3 1
	3	[379]	CALL     	2 2 2
	4	[380]	EQ       	0 2 -1	; - "string"
	5	[380]	JMP      	5	; to 11
	6	[381]	SELF     	3 0 -2	; "has_name"
	7	[381]	MOVE     	5 1
	8	[381]	LOADBOOL 	6 0 0
	9	[381]	TAILCALL 	3 4 0
	10	[381]	RETURN   	3 0
	11	[383]	GETUPVAL 	3 1	; NameProxy
	12	[383]	EQ       	1 2 3
	13	[383]	JMP      	3	; to 17
	14	[383]	GETUPVAL 	3 2	; LocalName
	15	[383]	EQ       	0 2 3
	16	[383]	JMP      	2	; to 19
	17	[384]	LOADBOOL 	3 1 0
	18	[384]	RETURN   	3 2
	19	[386]	EQ       	0 2 -3	; - "table"
	20	[386]	JMP      	13	; to 34
	21	[387]	GETTABLE 	3 1 -4	; 1
	22	[387]	EQ       	1 3 -5	; - "ref"
	23	[387]	JMP      	6	; to 30
	24	[387]	GETTABLE 	3 1 -4	; 1
	25	[387]	EQ       	0 3 -6	; - "chain"
	26	[387]	JMP      	7	; to 34
	27	[387]	LEN      	3 1
	28	[387]	EQ       	0 3 -7	; - 2
	29	[387]	JMP      	4	; to 34
	30	[388]	SELF     	3 0 -8	; "is_local"
	31	[388]	GETTABLE 	5 1 -7	; 2
	32	[388]	TAILCALL 	3 3 0
	33	[388]	RETURN   	3 0
	34	[391]	LOADBOOL 	3 0 0
	35	[391]	RETURN   	3 2
	36	[392]	RETURN   	0 1

function <./moonscript/compile.lua:393,410> (31 instructions, 124 bytes at 0x7fd94cc0d4b0)
3 params, 11 slots, 1 upvalue, 6 locals, 7 constants, 0 functions
	1	[394]	TEST     	1 0 1
	2	[394]	JMP      	1	; to 4
	3	[394]	LOADK    	1 -1	; "moon"
	4	[395]	LOADBOOL 	3 1 0
	5	[396]	LOADNIL  	4 4
	6	[396]	LOADK    	5 -2	; 0
	7	[397]	TEST     	3 0 0
	8	[397]	JMP      	16	; to 25
	9	[398]	GETUPVAL 	6 0	; concat
	10	[398]	NEWTABLE 	7 3 0
	11	[399]	LOADK    	8 -3	; ""
	12	[400]	MOVE     	9 1
	13	[402]	MOVE     	10 5
	14	[402]	SETLIST  	7 3 1	; 1
	15	[402]	LOADK    	8 -4	; "_"
	16	[398]	CALL     	6 3 2
	17	[402]	MOVE     	4 6
	18	[403]	ADD      	5 5 -5	; - 1
	19	[404]	SELF     	6 0 -6	; "has_name"
	20	[404]	MOVE     	8 4
	21	[404]	LOADBOOL 	9 1 0
	22	[404]	CALL     	6 4 2
	23	[404]	MOVE     	3 6
	24	[404]	JMP      	-18	; to 7
	25	[406]	TEST     	2 0 1
	26	[406]	JMP      	3	; to 30
	27	[407]	SELF     	6 0 -7	; "put_name"
	28	[407]	MOVE     	8 4
	29	[407]	CALL     	6 3 1
	30	[409]	RETURN   	4 2
	31	[410]	RETURN   	0 1

function <./moonscript/compile.lua:411,423> (17 instructions, 68 bytes at 0x7fd94cc0da10)
3 params, 11 slots, 0 upvalues, 4 locals, 3 constants, 0 functions
	1	[412]	SELF     	3 0 -1	; "free_name"
	2	[412]	MOVE     	5 1
	3	[412]	LOADBOOL 	6 1 0
	4	[412]	CALL     	3 4 2
	5	[413]	SELF     	4 0 -2	; "stm"
	6	[413]	NEWTABLE 	6 3 0
	7	[414]	LOADK    	7 -3	; "assign"
	8	[414]	NEWTABLE 	8 1 0
	9	[417]	MOVE     	9 3
	10	[417]	SETLIST  	8 1 1	; 1
	11	[417]	NEWTABLE 	9 1 0
	12	[420]	MOVE     	10 2
	13	[420]	SETLIST  	9 1 1	; 1
	14	[421]	SETLIST  	6 3 1	; 1
	15	[413]	CALL     	4 3 1
	16	[422]	RETURN   	3 2
	17	[423]	RETURN   	0 1

function <./moonscript/compile.lua:424,433> (11 instructions, 44 bytes at 0x7fd94cc0dd30)
3 params, 7 slots, 0 upvalues, 4 locals, 3 constants, 0 functions
	1	[426]	GETTABLE 	3 0 -1	; "_lines"
	2	[427]	SELF     	4 3 -2	; "add"
	3	[427]	MOVE     	6 1
	4	[427]	CALL     	4 3 1
	5	[428]	TEST     	2 0 0
	6	[428]	JMP      	3	; to 10
	7	[429]	SELF     	4 3 -3	; "mark_pos"
	8	[429]	MOVE     	6 2
	9	[429]	CALL     	4 3 1
	10	[432]	RETURN   	1 2
	11	[433]	RETURN   	0 1

function <./moonscript/compile.lua:434,450> (52 instructions, 208 bytes at 0x7fd94cc0bac0)
2 params, 9 slots, 2 upvalues, 2 locals, 12 constants, 0 functions
	1	[435]	SELF     	2 1 -1	; "add"
	2	[435]	GETTABLE 	4 0 -2	; "header"
	3	[435]	CALL     	2 3 1
	4	[436]	SELF     	2 1 -3	; "mark_pos"
	5	[436]	GETTABLE 	4 0 -4	; "pos"
	6	[436]	CALL     	2 3 1
	7	[437]	GETTABLE 	2 0 -5	; "next"
	8	[437]	TEST     	2 0 0
	9	[437]	JMP      	8	; to 18
	10	[438]	SELF     	2 1 -1	; "add"
	11	[438]	GETTABLE 	4 0 -6	; "_lines"
	12	[438]	CALL     	2 3 1
	13	[439]	GETTABLE 	2 0 -5	; "next"
	14	[439]	SELF     	2 2 -7	; "render"
	15	[439]	MOVE     	4 1
	16	[439]	CALL     	2 3 1
	17	[439]	JMP      	33	; to 51
	18	[441]	GETTABLE 	2 0 -6	; "_lines"
	19	[441]	LEN      	2 2
	20	[441]	EQ       	0 2 -8	; - 0
	21	[441]	JMP      	20	; to 42
	22	[441]	GETGLOBAL	2 -10	; type
	23	[441]	LEN      	3 1
	24	[441]	GETTABLE 	3 1 3
	25	[441]	CALL     	2 2 2
	26	[441]	EQ       	0 -9 2	; "string" -
	27	[441]	JMP      	14	; to 42
	28	[442]	LEN      	2 1
	29	[442]	LEN      	3 1
	30	[442]	GETTABLE 	3 1 3
	31	[442]	LOADK    	4 -11	; " "
	32	[442]	GETUPVAL 	5 0	; unpack
	33	[442]	GETUPVAL 	6 1	; Lines
	34	[442]	CALL     	6 1 2
	35	[442]	SELF     	6 6 -1	; "add"
	36	[442]	GETTABLE 	8 0 -12	; "footer"
	37	[442]	CALL     	6 3 0
	38	[442]	CALL     	5 0 2
	39	[442]	CONCAT   	3 3 5
	40	[442]	SETTABLE 	1 2 3
	41	[442]	JMP      	9	; to 51
	42	[444]	SELF     	2 1 -1	; "add"
	43	[444]	GETTABLE 	4 0 -6	; "_lines"
	44	[444]	CALL     	2 3 1
	45	[445]	SELF     	2 1 -1	; "add"
	46	[445]	GETTABLE 	4 0 -12	; "footer"
	47	[445]	CALL     	2 3 1
	48	[446]	SELF     	2 1 -3	; "mark_pos"
	49	[446]	GETTABLE 	4 0 -4	; "pos"
	50	[446]	CALL     	2 3 1
	51	[449]	RETURN   	1 2
	52	[450]	RETURN   	0 1

function <./moonscript/compile.lua:451,453> (7 instructions, 28 bytes at 0x7fd94cc0e780)
3 params, 7 slots, 1 upvalue, 3 locals, 0 constants, 0 functions
	1	[452]	GETUPVAL 	3 0	; Block
	2	[452]	MOVE     	4 0
	3	[452]	MOVE     	5 1
	4	[452]	MOVE     	6 2
	5	[452]	TAILCALL 	3 4 0
	6	[452]	RETURN   	3 0
	7	[453]	RETURN   	0 1

function <./moonscript/compile.lua:454,460> (7 instructions, 28 bytes at 0x7fd94cc0e640)
1+ param, 6 slots, 1 upvalue, 3 locals, 1 constant, 0 functions
	1	[456]	GETUPVAL 	2 0	; Line
	2	[456]	CALL     	2 1 2
	3	[457]	SELF     	3 2 -1	; "append"
	4	[457]	VARARG   	5 0
	5	[457]	CALL     	3 0 1
	6	[458]	RETURN   	2 2
	7	[460]	RETURN   	0 1

function <./moonscript/compile.lua:461,463> (11 instructions, 44 bytes at 0x7fd94cc0ed40)
2 params, 5 slots, 1 upvalue, 2 locals, 2 constants, 0 functions
	1	[462]	GETTABLE 	2 0 -1	; "statement_compilers"
	2	[462]	GETUPVAL 	3 0	; ntype
	3	[462]	MOVE     	4 1
	4	[462]	CALL     	3 2 2
	5	[462]	GETTABLE 	2 2 3
	6	[462]	EQ       	0 2 -2	; - nil
	7	[462]	JMP      	1	; to 9
	8	[462]	LOADBOOL 	2 0 1
	9	[462]	LOADBOOL 	2 1 0
	10	[462]	RETURN   	2 2
	11	[463]	RETURN   	0 1

function <./moonscript/compile.lua:464,467> (13 instructions, 52 bytes at 0x7fd94cc0f370)
2 params, 4 slots, 1 upvalue, 3 locals, 3 constants, 0 functions
	1	[465]	GETUPVAL 	2 0	; ntype
	2	[465]	MOVE     	3 1
	3	[465]	CALL     	2 2 2
	4	[466]	GETTABLE 	3 0 -1	; "value_compilers"
	5	[466]	GETTABLE 	3 3 2
	6	[466]	EQ       	0 3 -2	; - nil
	7	[466]	JMP      	3	; to 11
	8	[466]	EQ       	1 2 -3	; - "value"
	9	[466]	JMP      	1	; to 11
	10	[466]	LOADBOOL 	3 0 1
	11	[466]	LOADBOOL 	3 1 0
	12	[466]	RETURN   	3 2
	13	[467]	RETURN   	0 1

function <./moonscript/compile.lua:468,474> (13 instructions, 52 bytes at 0x7fd94cc0f520)
2+ params, 7 slots, 0 upvalues, 3 locals, 3 constants, 0 functions
	1	[469]	GETGLOBAL	3 -1	; type
	2	[469]	MOVE     	4 1
	3	[469]	CALL     	3 2 2
	4	[469]	EQ       	0 3 -2	; - "string"
	5	[469]	JMP      	2	; to 8
	6	[470]	RETURN   	1 2
	7	[470]	JMP      	5	; to 13
	8	[472]	SELF     	3 0 -3	; "value"
	9	[472]	MOVE     	5 1
	10	[472]	VARARG   	6 0
	11	[472]	TAILCALL 	3 0 0
	12	[472]	RETURN   	3 0
	13	[474]	RETURN   	0 1

function <./moonscript/compile.lua:475,503> (58 instructions, 232 bytes at 0x7fd94cc0f990)
2+ params, 11 slots, 2 upvalues, 7 locals, 14 constants, 0 functions
	1	[476]	GETTABLE 	3 0 -1	; "transform"
	2	[476]	GETTABLE 	3 3 -2	; "value"
	3	[476]	MOVE     	4 1
	4	[476]	CALL     	3 2 2
	5	[476]	MOVE     	1 3
	6	[477]	LOADNIL  	3 3
	7	[478]	GETGLOBAL	4 -3	; type
	8	[478]	MOVE     	5 1
	9	[478]	CALL     	4 2 2
	10	[478]	EQ       	1 4 -4	; - "table"
	11	[478]	JMP      	2	; to 14
	12	[479]	LOADK    	3 -5	; "raw_value"
	13	[479]	JMP      	1	; to 15
	14	[481]	GETTABLE 	3 1 -6	; 1
	15	[483]	GETTABLE 	4 0 -7	; "value_compilers"
	16	[483]	GETTABLE 	4 4 3
	17	[484]	TEST     	4 0 1
	18	[484]	JMP      	12	; to 31
	19	[485]	GETGLOBAL	5 -8	; error
	20	[485]	NEWTABLE 	6 3 0
	21	[486]	LOADK    	7 -9	; "compile-error"
	22	[487]	LOADK    	8 -10	; "Failed to find value compiler for: "
	23	[487]	GETUPVAL 	9 0	; dump
	24	[487]	GETTABLE 	9 9 -2	; "value"
	25	[487]	MOVE     	10 1
	26	[487]	CALL     	9 2 2
	27	[487]	CONCAT   	8 8 9
	28	[489]	GETTABLE 	9 1 -11	; -1
	29	[489]	SETLIST  	6 3 1	; 1
	30	[485]	CALL     	5 2 1
	31	[491]	MOVE     	5 4
	32	[491]	MOVE     	6 0
	33	[491]	MOVE     	7 1
	34	[491]	VARARG   	8 0
	35	[491]	CALL     	5 0 2
	36	[492]	GETGLOBAL	6 -3	; type
	37	[492]	MOVE     	7 1
	38	[492]	CALL     	6 2 2
	39	[492]	EQ       	0 6 -4	; - "table"
	40	[492]	JMP      	16	; to 57
	41	[492]	GETTABLE 	6 1 -11	; -1
	42	[492]	TEST     	6 0 0
	43	[492]	JMP      	13	; to 57
	44	[493]	GETGLOBAL	6 -3	; type
	45	[493]	MOVE     	7 5
	46	[493]	CALL     	6 2 2
	47	[493]	EQ       	0 6 -12	; - "string"
	48	[493]	JMP      	6	; to 55
	49	[495]	GETUPVAL 	6 1	; Line
	50	[495]	CALL     	6 1 2
	51	[496]	SELF     	7 6 -13	; "append"
	52	[496]	MOVE     	9 5
	53	[496]	CALL     	7 3 1
	54	[497]	MOVE     	5 6
	55	[500]	GETTABLE 	6 1 -11	; -1
	56	[500]	SETTABLE 	5 -14 6	; "pos" -
	57	[502]	RETURN   	5 2
	58	[503]	RETURN   	0 1

function <./moonscript/compile.lua:504,520> (14 instructions, 56 bytes at 0x7fd94cc0ff10)
3 params, 8 slots, 1 upvalue, 4 locals, 2 constants, 1 function
	1	[505]	TEST     	2 0 1
	2	[505]	JMP      	1	; to 4
	3	[505]	LOADK    	2 -1	; ", "
	4	[507]	GETUPVAL 	3 0	; Line
	5	[507]	CALL     	3 1 2
	6	[508]	SELF     	4 3 -2	; "append_list"
	7	[517]	CLOSURE  	6 0	; 0x7fd94cc102a0
	8	[517]	MOVE     	0 1
	9	[517]	MOVE     	0 0
	10	[517]	CALL     	6 1 2
	11	[517]	MOVE     	7 2
	12	[508]	CALL     	4 4 1
	13	[518]	RETURN   	3 2
	14	[520]	RETURN   	0 1

function <./moonscript/compile.lua:508,517> (18 instructions, 72 bytes at 0x7fd94cc102a0)
0 params, 10 slots, 2 upvalues, 7 locals, 2 constants, 0 functions
	1	[509]	NEWTABLE 	0 0 0
	2	[510]	LOADK    	1 -1	; 1
	3	[511]	LOADK    	2 -1	; 1
	4	[511]	GETUPVAL 	3 0	; values
	5	[511]	LEN      	3 3
	6	[511]	LOADK    	4 -1	; 1
	7	[511]	FORPREP  	2 8	; to 16
	8	[512]	GETUPVAL 	6 0	; values
	9	[512]	GETTABLE 	6 6 5
	10	[513]	GETUPVAL 	7 1	; self
	11	[513]	SELF     	7 7 -2	; "value"
	12	[513]	MOVE     	9 6
	13	[513]	CALL     	7 3 2
	14	[513]	SETTABLE 	0 1 7
	15	[514]	ADD      	1 1 -1	; - 1
	16	[511]	FORLOOP  	2 -9	; to 8
	17	[516]	RETURN   	0 2
	18	[517]	RETURN   	0 1

function <./moonscript/compile.lua:521,554> (68 instructions, 272 bytes at 0x7fd94cc10850)
2+ params, 12 slots, 2 upvalues, 5 locals, 12 constants, 0 functions
	1	[522]	TEST     	1 0 1
	2	[522]	JMP      	1	; to 4
	3	[523]	RETURN   	0 1
	4	[525]	GETTABLE 	3 0 -1	; "transform"
	5	[525]	GETTABLE 	3 3 -2	; "statement"
	6	[525]	MOVE     	4 1
	7	[525]	CALL     	3 2 2
	8	[525]	MOVE     	1 3
	9	[526]	LOADNIL  	3 3
	10	[528]	GETTABLE 	4 0 -3	; "statement_compilers"
	11	[528]	GETUPVAL 	5 0	; ntype
	12	[528]	MOVE     	6 1
	13	[528]	CALL     	5 2 2
	14	[528]	GETTABLE 	4 4 5
	15	[529]	TEST     	4 0 0
	16	[529]	JMP      	7	; to 24
	17	[530]	MOVE     	5 4
	18	[530]	MOVE     	6 0
	19	[530]	MOVE     	7 1
	20	[530]	VARARG   	8 0
	21	[530]	CALL     	5 0 2
	22	[530]	MOVE     	3 5
	23	[530]	JMP      	22	; to 46
	24	[532]	GETUPVAL 	5 1	; value_can_be_statement
	25	[532]	MOVE     	6 1
	26	[532]	CALL     	5 2 2
	27	[532]	TEST     	5 0 0
	28	[532]	JMP      	5	; to 34
	29	[533]	SELF     	5 0 -4	; "value"
	30	[533]	MOVE     	7 1
	31	[533]	CALL     	5 3 2
	32	[533]	MOVE     	3 5
	33	[533]	JMP      	12	; to 46
	34	[535]	SELF     	5 0 -5	; "stm"
	35	[535]	NEWTABLE 	7 3 0
	36	[536]	LOADK    	8 -6	; "assign"
	37	[536]	NEWTABLE 	9 1 0
	38	[539]	LOADK    	10 -7	; "_"
	39	[539]	SETLIST  	9 1 1	; 1
	40	[539]	NEWTABLE 	10 1 0
	41	[542]	MOVE     	11 1
	42	[542]	SETLIST  	10 1 1	; 1
	43	[543]	SETLIST  	7 3 1	; 1
	44	[535]	CALL     	5 3 2
	45	[543]	MOVE     	3 5
	46	[547]	TEST     	3 0 0
	47	[547]	JMP      	18	; to 66
	48	[548]	GETGLOBAL	4 -8	; type
	49	[548]	MOVE     	5 1
	50	[548]	CALL     	4 2 2
	51	[548]	EQ       	0 4 -9	; - "table"
	52	[548]	JMP      	10	; to 63
	53	[548]	GETGLOBAL	4 -8	; type
	54	[548]	MOVE     	5 3
	55	[548]	CALL     	4 2 2
	56	[548]	EQ       	0 4 -9	; - "table"
	57	[548]	JMP      	5	; to 63
	58	[548]	GETTABLE 	4 1 -10	; -1
	59	[548]	TEST     	4 0 0
	60	[548]	JMP      	2	; to 63
	61	[549]	GETTABLE 	4 1 -10	; -1
	62	[549]	SETTABLE 	3 -11 4	; "pos" -
	63	[551]	SELF     	4 0 -12	; "add"
	64	[551]	MOVE     	6 3
	65	[551]	CALL     	4 3 1
	66	[553]	LOADNIL  	4 4
	67	[553]	RETURN   	4 2
	68	[554]	RETURN   	0 1

function <./moonscript/compile.lua:555,569> (24 instructions, 96 bytes at 0x7fd94cc10db0)
3 params, 12 slots, 0 upvalues, 9 locals, 6 constants, 0 functions
	1	[556]	TEST     	2 0 0
	2	[556]	JMP      	3	; to 6
	3	[557]	GETGLOBAL	3 -1	; error
	4	[557]	LOADK    	4 -2	; "deprecated stms call, use transformer"
	5	[557]	CALL     	3 2 1
	6	[559]	LOADNIL  	3 4
	7	[560]	GETTABLE 	5 0 -3	; "current_stms"
	8	[560]	GETTABLE 	4 0 -4	; "current_stm_i"
	9	[560]	MOVE     	3 5
	10	[561]	SETTABLE 	0 -3 1	; "current_stms" -
	11	[562]	LOADK    	5 -5	; 1
	12	[562]	LEN      	6 1
	13	[562]	LOADK    	7 -5	; 1
	14	[562]	FORPREP  	5 4	; to 19
	15	[563]	SETTABLE 	0 -4 8	; "current_stm_i" -
	16	[564]	SELF     	9 0 -6	; "stm"
	17	[564]	GETTABLE 	11 1 8
	18	[564]	CALL     	9 3 1
	19	[562]	FORLOOP  	5 -5	; to 15
	20	[566]	SETTABLE 	0 -3 3	; "current_stms" -
	21	[567]	SETTABLE 	0 -4 4	; "current_stm_i" -
	22	[568]	LOADNIL  	5 5
	23	[568]	RETURN   	5 2
	24	[569]	RETURN   	0 1

function <./moonscript/compile.lua:570,577> (14 instructions, 56 bytes at 0x7fd94cc10c30)
2 params, 7 slots, 1 upvalue, 3 locals, 3 constants, 0 functions
	1	[571]	NEWTABLE 	2 2 0
	2	[572]	LOADK    	3 -1	; "lines"
	3	[574]	GETTABLE 	4 0 -2	; "_lines"
	4	[574]	SETLIST  	2 2 1	; 1
	5	[575]	GETUPVAL 	3 0	; Lines
	6	[575]	CALL     	3 1 2
	7	[575]	SETTABLE 	0 -2 3	; "_lines" -
	8	[576]	SELF     	3 0 -3	; "stms"
	9	[576]	MOVE     	5 1
	10	[576]	MOVE     	6 2
	11	[576]	CALL     	5 2 0
	12	[576]	TAILCALL 	3 0 0
	13	[576]	RETURN   	3 0
	14	[577]	RETURN   	0 1

function <./moonscript/compile.lua:581,605> (56 instructions, 224 bytes at 0x7fd94cc098e0)
4 params, 8 slots, 2 upvalues, 4 locals, 19 constants, 0 functions
	1	[582]	MOVE     	4 1
	2	[582]	MOVE     	5 2
	3	[582]	SETTABLE 	0 -3 3	; "footer" -
	4	[582]	SETTABLE 	0 -2 5	; "header" -
	5	[582]	SETTABLE 	0 -1 4	; "parent" -
	6	[583]	GETUPVAL 	4 0	; Lines
	7	[583]	CALL     	4 1 2
	8	[583]	SETTABLE 	0 -4 4	; "_lines" -
	9	[584]	NEWTABLE 	4 0 0
	10	[584]	SETTABLE 	0 -5 4	; "_names" -
	11	[585]	NEWTABLE 	4 0 0
	12	[585]	SETTABLE 	0 -6 4	; "_state" -
	13	[586]	NEWTABLE 	4 0 0
	14	[586]	SETTABLE 	0 -7 4	; "_listeners" -
	15	[588]	NEWTABLE 	4 0 2
	16	[589]	GETUPVAL 	5 1	; transform
	17	[589]	GETTABLE 	5 5 -10	; "Value"
	18	[589]	SELF     	5 5 -11	; "bind"
	19	[589]	MOVE     	7 0
	20	[589]	CALL     	5 3 2
	21	[589]	SETTABLE 	4 -9 5	; "value" -
	22	[590]	GETUPVAL 	5 1	; transform
	23	[590]	GETTABLE 	5 5 -13	; "Statement"
	24	[590]	SELF     	5 5 -11	; "bind"
	25	[590]	MOVE     	7 0
	26	[590]	CALL     	5 3 2
	27	[590]	SETTABLE 	4 -12 5	; "statement" -
	28	[591]	SETTABLE 	0 -8 4	; "transform" -
	29	[593]	GETTABLE 	4 0 -1	; "parent"
	30	[593]	TEST     	4 0 0
	31	[593]	JMP      	23	; to 55
	32	[594]	GETTABLE 	4 0 -1	; "parent"
	33	[594]	GETTABLE 	4 4 -14	; "root"
	34	[594]	SETTABLE 	0 -14 4	; "root" -
	35	[595]	GETTABLE 	4 0 -1	; "parent"
	36	[595]	GETTABLE 	4 4 -15	; "indent"
	37	[595]	ADD      	4 4 -16	; - 1
	38	[595]	SETTABLE 	0 -15 4	; "indent" -
	39	[596]	GETGLOBAL	4 -17	; setmetatable
	40	[596]	GETTABLE 	5 0 -6	; "_state"
	41	[596]	NEWTABLE 	6 0 1
	42	[597]	GETTABLE 	7 0 -1	; "parent"
	43	[597]	GETTABLE 	7 7 -6	; "_state"
	44	[597]	SETTABLE 	6 -18 7	; "__index" -
	45	[596]	CALL     	4 3 1
	46	[599]	GETGLOBAL	4 -17	; setmetatable
	47	[599]	GETTABLE 	5 0 -7	; "_listeners"
	48	[599]	NEWTABLE 	6 0 1
	49	[600]	GETTABLE 	7 0 -1	; "parent"
	50	[600]	GETTABLE 	7 7 -7	; "_listeners"
	51	[600]	SETTABLE 	6 -18 7	; "__index" -
	52	[599]	TAILCALL 	4 3 0
	53	[601]	RETURN   	4 0
	54	[601]	JMP      	1	; to 56
	55	[603]	SETTABLE 	0 -15 -19	; "indent" 0
	56	[605]	RETURN   	0 1

function <./moonscript/compile.lua:610,614> (10 instructions, 40 bytes at 0x7fd94cc09960)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[611]	GETGLOBAL	2 -1	; setmetatable
	2	[611]	NEWTABLE 	3 0 0
	3	[611]	GETUPVAL 	4 0	; _base_0
	4	[611]	CALL     	2 3 2
	5	[612]	GETTABLE 	3 0 -2	; "__init"
	6	[612]	MOVE     	4 2
	7	[612]	VARARG   	5 0
	8	[612]	CALL     	3 0 1
	9	[613]	RETURN   	2 2
	10	[614]	RETURN   	0 1

function <./moonscript/compile.lua:623,625> (3 instructions, 12 bytes at 0x7fd94cc0f110)
1 param, 2 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[624]	LOADK    	1 -1	; "RootBlock<>"
	2	[624]	RETURN   	1 2
	3	[625]	RETURN   	0 1

function <./moonscript/compile.lua:626,631> (17 instructions, 68 bytes at 0x7fd94cc0eba0)
2 params, 5 slots, 1 upvalue, 2 locals, 7 constants, 0 functions
	1	[627]	GETTABLE 	2 0 -1	; "options"
	2	[627]	GETTABLE 	2 2 -2	; "implicitly_return_root"
	3	[627]	EQ       	1 2 -3	; - false
	4	[627]	JMP      	8	; to 13
	5	[628]	GETUPVAL 	2 0	; transform
	6	[628]	GETTABLE 	2 2 -4	; "Statement"
	7	[628]	GETTABLE 	2 2 -5	; "transformers"
	8	[628]	GETTABLE 	2 2 -6	; "root_stms"
	9	[628]	MOVE     	3 0
	10	[628]	MOVE     	4 1
	11	[628]	CALL     	2 3 2
	12	[628]	MOVE     	1 2
	13	[630]	SELF     	2 0 -7	; "stms"
	14	[630]	MOVE     	4 1
	15	[630]	TAILCALL 	2 3 0
	16	[630]	RETURN   	2 0
	17	[631]	RETURN   	0 1

function <./moonscript/compile.lua:632,638> (15 instructions, 60 bytes at 0x7fd94cc0ddf0)
1 param, 4 slots, 0 upvalues, 2 locals, 6 constants, 0 functions
	1	[633]	GETTABLE 	1 0 -1	; "_lines"
	2	[633]	SELF     	1 1 -2	; "flatten"
	3	[633]	CALL     	1 2 2
	4	[634]	LEN      	2 1
	5	[634]	GETTABLE 	2 1 2
	6	[634]	EQ       	0 2 -3	; - "\n"
	7	[634]	JMP      	2	; to 10
	8	[635]	LEN      	2 1
	9	[635]	SETTABLE 	1 2 -4	; - nil
	10	[637]	GETGLOBAL	2 -5	; table
	11	[637]	GETTABLE 	2 2 -6	; "concat"
	12	[637]	MOVE     	3 1
	13	[637]	TAILCALL 	2 2 0
	14	[637]	RETURN   	2 0
	15	[638]	RETURN   	0 1

function <./moonscript/compile.lua:643,647> (9 instructions, 36 bytes at 0x7fd94cc0df30)
2 params, 4 slots, 1 upvalue, 2 locals, 4 constants, 0 functions
	1	[644]	SETTABLE 	0 -1 1	; "options" -
	2	[645]	SETTABLE 	0 -2 0	; "root" -
	3	[646]	GETUPVAL 	2 0	; _class_0
	4	[646]	GETTABLE 	2 2 -3	; "__parent"
	5	[646]	GETTABLE 	2 2 -4	; "__init"
	6	[646]	MOVE     	3 0
	7	[646]	TAILCALL 	2 2 0
	8	[646]	RETURN   	2 0
	9	[647]	RETURN   	0 1

function <./moonscript/compile.lua:652,662> (17 instructions, 68 bytes at 0x7fd94cc10660)
2 params, 6 slots, 1 upvalue, 4 locals, 3 constants, 0 functions
	1	[653]	GETGLOBAL	2 -1	; rawget
	2	[653]	GETUPVAL 	3 0	; _base_0
	3	[653]	MOVE     	4 1
	4	[653]	CALL     	2 3 2
	5	[654]	EQ       	0 2 -2	; - nil
	6	[654]	JMP      	9	; to 16
	7	[655]	GETGLOBAL	3 -1	; rawget
	8	[655]	MOVE     	4 0
	9	[655]	LOADK    	5 -3	; "__parent"
	10	[655]	CALL     	3 3 2
	11	[656]	TEST     	3 0 0
	12	[656]	JMP      	4	; to 17
	13	[657]	GETTABLE 	4 3 1
	14	[657]	RETURN   	4 2
	15	[658]	JMP      	1	; to 17
	16	[660]	RETURN   	2 2
	17	[662]	RETURN   	0 1

function <./moonscript/compile.lua:663,667> (10 instructions, 40 bytes at 0x7fd94cc0e4f0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[664]	GETGLOBAL	2 -1	; setmetatable
	2	[664]	NEWTABLE 	3 0 0
	3	[664]	GETUPVAL 	4 0	; _base_0
	4	[664]	CALL     	2 3 2
	5	[665]	GETTABLE 	3 0 -2	; "__init"
	6	[665]	MOVE     	4 2
	7	[665]	VARARG   	5 0
	8	[665]	CALL     	3 0 1
	9	[666]	RETURN   	2 2
	10	[667]	RETURN   	0 1

function <./moonscript/compile.lua:676,689> (35 instructions, 140 bytes at 0x7fd94cc110f0)
3 params, 11 slots, 4 upvalues, 6 locals, 5 constants, 0 functions
	1	[678]	TEST     	1 0 0
	2	[678]	JMP      	22	; to 25
	3	[679]	GETUPVAL 	4 0	; pos_to_line
	4	[679]	MOVE     	5 2
	5	[679]	MOVE     	6 1
	6	[679]	CALL     	4 3 2
	7	[680]	LOADNIL  	5 5
	8	[681]	GETUPVAL 	6 1	; get_closest_line
	9	[681]	MOVE     	7 2
	10	[681]	MOVE     	8 4
	11	[681]	CALL     	6 3 3
	12	[681]	MOVE     	4 7
	13	[681]	MOVE     	5 6
	14	[682]	TEST     	5 0 1
	15	[682]	JMP      	1	; to 17
	16	[682]	LOADK    	5 -1	; ""
	17	[683]	LOADK    	6 -2	; " [%d] >>    %s"
	18	[683]	SELF     	6 6 -3	; "format"
	19	[683]	MOVE     	8 4
	20	[683]	GETUPVAL 	9 2	; trim
	21	[683]	MOVE     	10 5
	22	[683]	CALL     	9 2 0
	23	[683]	CALL     	6 0 2
	24	[683]	MOVE     	3 6
	25	[685]	GETUPVAL 	4 3	; concat
	26	[685]	NEWTABLE 	5 2 0
	27	[686]	LOADK    	6 -4	; "Compile error: "
	28	[686]	MOVE     	7 0
	29	[686]	CONCAT   	6 6 7
	30	[688]	MOVE     	7 3
	31	[688]	SETLIST  	5 2 1	; 1
	32	[688]	LOADK    	6 -5	; "\n"
	33	[685]	TAILCALL 	4 3 0
	34	[688]	RETURN   	4 0
	35	[689]	RETURN   	0 1

function <./moonscript/compile.lua:691,699> (12 instructions, 48 bytes at 0x7fd94cc11640)
1 param, 8 slots, 1 upvalue, 3 locals, 3 constants, 0 functions
	1	[694]	GETUPVAL 	2 0	; RootBlock
	2	[694]	CALL     	2 1 2
	3	[695]	SELF     	3 2 -1	; "add"
	4	[695]	SELF     	5 2 -2	; "value"
	5	[695]	MOVE     	7 0
	6	[695]	CALL     	5 3 0
	7	[695]	CALL     	3 0 1
	8	[696]	SELF     	3 2 -3	; "render"
	9	[696]	CALL     	3 2 2
	10	[696]	MOVE     	1 3
	11	[698]	RETURN   	1 2
	12	[699]	RETURN   	0 1

function <./moonscript/compile.lua:701,731> (81 instructions, 324 bytes at 0x7fd94cc11a80)
2 params, 13 slots, 4 upvalues, 11 locals, 23 constants, 1 function
	1	[702]	EQ       	0 1 -1	; - nil
	2	[702]	JMP      	2	; to 5
	3	[703]	NEWTABLE 	2 0 0
	4	[703]	MOVE     	1 2
	5	[705]	GETGLOBAL	2 -2	; assert
	6	[705]	MOVE     	3 0
	7	[705]	LOADK    	4 -3	; "missing tree"
	8	[705]	CALL     	2 3 1
	9	[706]	GETTABLE 	2 1 -4	; "scope"
	10	[706]	TEST     	2 0 1
	11	[706]	JMP      	1	; to 13
	12	[706]	GETUPVAL 	2 0	; RootBlock
	13	[706]	MOVE     	3 1
	14	[706]	CALL     	2 2 2
	15	[707]	GETGLOBAL	3 -5	; coroutine
	16	[707]	GETTABLE 	3 3 -6	; "create"
	17	[709]	CLOSURE  	4 0	; 0x7fd94cc12000
	18	[709]	MOVE     	0 2
	19	[709]	MOVE     	0 0
	20	[707]	CALL     	3 2 2
	21	[710]	GETGLOBAL	4 -5	; coroutine
	22	[710]	GETTABLE 	4 4 -7	; "resume"
	23	[710]	MOVE     	5 3
	24	[710]	CALL     	4 2 3
	25	[711]	TEST     	4 0 1
	26	[711]	JMP      	46	; to 73
	27	[712]	LOADNIL  	6 7
	28	[713]	GETGLOBAL	8 -8	; type
	29	[713]	MOVE     	9 5
	30	[713]	CALL     	8 2 2
	31	[713]	EQ       	0 8 -9	; - "table"
	32	[713]	JMP      	22	; to 55
	33	[714]	GETTABLE 	8 5 -10	; 1
	34	[715]	EQ       	1 -11 8	; "user-error" -
	35	[715]	JMP      	2	; to 38
	36	[715]	EQ       	0 -12 8	; "compile-error" -
	37	[715]	JMP      	7	; to 45
	38	[716]	GETUPVAL 	9 1	; unpack
	39	[716]	MOVE     	10 5
	40	[716]	LOADK    	11 -13	; 2
	41	[716]	CALL     	9 3 3
	42	[716]	MOVE     	7 10
	43	[716]	MOVE     	6 9
	44	[716]	JMP      	22	; to 67
	45	[718]	GETGLOBAL	9 -14	; error
	46	[718]	LOADK    	10 -15	; "Unknown error thrown"
	47	[718]	GETUPVAL 	11 2	; util
	48	[718]	GETTABLE 	11 11 -16	; "dump"
	49	[718]	MOVE     	12 6
	50	[718]	CALL     	11 2 0
	51	[718]	CALL     	9 0 3
	52	[718]	MOVE     	7 10
	53	[718]	MOVE     	6 9
	54	[719]	JMP      	12	; to 67
	55	[721]	GETUPVAL 	8 3	; concat
	56	[721]	NEWTABLE 	9 1 0
	57	[722]	MOVE     	10 5
	58	[723]	GETGLOBAL	11 -17	; debug
	59	[723]	GETTABLE 	11 11 -18	; "traceback"
	60	[723]	MOVE     	12 3
	61	[723]	CALL     	11 2 0
	62	[724]	SETLIST  	9 0 1	; 1
	63	[724]	LOADK    	10 -19	; "\n"
	64	[721]	CALL     	8 3 3
	65	[724]	MOVE     	7 9
	66	[724]	MOVE     	6 8
	67	[726]	LOADNIL  	8 8
	68	[726]	MOVE     	9 6
	69	[726]	TESTSET  	10 7 1
	70	[726]	JMP      	1	; to 72
	71	[726]	GETTABLE 	10 2 -20	; "last_pos"
	72	[726]	RETURN   	8 4
	73	[728]	SELF     	6 2 -21	; "render"
	74	[728]	CALL     	6 2 2
	75	[729]	GETTABLE 	7 2 -22	; "_lines"
	76	[729]	SELF     	7 7 -23	; "flatten_posmap"
	77	[729]	CALL     	7 2 2
	78	[730]	MOVE     	8 6
	79	[730]	MOVE     	9 7
	80	[730]	RETURN   	8 3
	81	[731]	RETURN   	0 1

function <./moonscript/compile.lua:707,709> (6 instructions, 24 bytes at 0x7fd94cc12000)
0 params, 3 slots, 2 upvalues, 0 locals, 1 constant, 0 functions
	1	[708]	GETUPVAL 	0 0	; scope
	2	[708]	SELF     	0 0 -1	; "root_stms"
	3	[708]	GETUPVAL 	2 1	; tree
	4	[708]	TAILCALL 	0 3 0
	5	[708]	RETURN   	0 0
	6	[709]	RETURN   	0 1
-----------------------

main <./moonscript/transform.lua:0,0> (11 instructions, 44 bytes at 0x7fee08c068c0)
0+ params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[1]	NEWTABLE 	0 0 2
	2	[2]	GETGLOBAL	1 -2	; require
	3	[2]	LOADK    	2 -3	; "moonscript.transform.statement"
	4	[2]	CALL     	1 2 2
	5	[2]	SETTABLE 	0 -1 1	; "Statement" -
	6	[3]	GETGLOBAL	1 -2	; require
	7	[3]	LOADK    	2 -5	; "moonscript.transform.value"
	8	[3]	CALL     	1 2 2
	9	[3]	SETTABLE 	0 -4 1	; "Value" -
	10	[4]	RETURN   	0 2
	11	[4]	RETURN   	0 1
-----------------------

main <./moonscript/parse/env.lua:0,0> (14 instructions, 56 bytes at 0x7ffaa9c068c0)
0+ params, 4 slots, 0 upvalues, 4 locals, 5 constants, 1 function
	1	[3]	GETGLOBAL	2 -1	; require
	2	[3]	LOADK    	3 -2	; "moonscript.util"
	3	[3]	CALL     	2 2 2
	4	[4]	GETTABLE 	3 2 -3	; "getfenv"
	5	[4]	GETTABLE 	1 2 -4	; "setfenv"
	6	[4]	MOVE     	0 3
	7	[6]	LOADNIL  	2 2
	8	[67]	CLOSURE  	2 0	; 0x7ffaa9c06ad0
	9	[67]	MOVE     	0 0
	10	[67]	MOVE     	0 1
	11	[68]	NEWTABLE 	3 0 1
	12	[69]	SETTABLE 	3 -5 2	; "wrap_env" -
	13	[70]	RETURN   	3 2
	14	[70]	RETURN   	0 1

function <./moonscript/parse/env.lua:7,67> (37 instructions, 148 bytes at 0x7ffaa9c06ad0)
2 params, 12 slots, 2 upvalues, 10 locals, 8 constants, 3 functions
	1	[10]	GETGLOBAL	4 -1	; require
	2	[10]	LOADK    	5 -2	; "lpeg"
	3	[10]	CALL     	4 2 2
	4	[11]	GETTABLE 	5 4 -3	; "V"
	5	[11]	GETTABLE 	3 4 -4	; "Cmt"
	6	[11]	MOVE     	2 5
	7	[13]	GETUPVAL 	4 0	; getfenv
	8	[13]	MOVE     	5 1
	9	[13]	CALL     	4 2 2
	10	[14]	MOVE     	5 2
	11	[15]	TEST     	0 0 0
	12	[15]	JMP      	12	; to 25
	13	[16]	LOADK    	6 -5	; 0
	14	[17]	LOADK    	7 -6	; "  "
	15	[18]	LOADNIL  	8 8
	16	[34]	CLOSURE  	8 0	; 0x7ffaa9c07280
	17	[34]	MOVE     	0 7
	18	[34]	MOVE     	0 6
	19	[52]	CLOSURE  	5 1	; 0x7ffaa9c07bd0
	20	[52]	MOVE     	0 2
	21	[52]	MOVE     	0 3
	22	[52]	MOVE     	0 8
	23	[52]	MOVE     	0 6
	24	[52]	CLOSE    	6
	25	[54]	GETUPVAL 	6 1	; setfenv
	26	[54]	MOVE     	7 1
	27	[54]	GETGLOBAL	8 -7	; setmetatable
	28	[54]	NEWTABLE 	9 0 0
	29	[54]	NEWTABLE 	10 0 1
	30	[65]	CLOSURE  	11 2	; 0x7ffaa9c08ae0
	31	[65]	MOVE     	0 4
	32	[65]	MOVE     	0 5
	33	[65]	SETTABLE 	10 -8 11	; "__index" -
	34	[54]	CALL     	8 3 0
	35	[54]	TAILCALL 	6 0 0
	36	[66]	RETURN   	6 0
	37	[67]	RETURN   	0 1

function <./moonscript/parse/env.lua:19,34> (24 instructions, 96 bytes at 0x7ffaa9c07280)
0+ params, 8 slots, 2 upvalues, 2 locals, 9 constants, 1 function
	1	[20]	GETGLOBAL	1 -1	; table
	2	[20]	GETTABLE 	1 1 -2	; "concat"
	3	[32]	CLOSURE  	2 0	; 0x7ffaa9c07660
	4	[32]	VARARG   	3 0
	5	[32]	CALL     	2 0 2
	6	[32]	LOADK    	3 -3	; ", "
	7	[20]	CALL     	1 3 2
	8	[33]	GETGLOBAL	2 -4	; io
	9	[33]	GETTABLE 	2 2 -5	; "stderr"
	10	[33]	SELF     	2 2 -6	; "write"
	11	[33]	GETGLOBAL	4 -7	; tostring
	12	[33]	GETUPVAL 	5 0	; indent_char
	13	[33]	SELF     	5 5 -8	; "rep"
	14	[33]	GETUPVAL 	7 1	; indent
	15	[33]	CALL     	5 3 0
	16	[33]	CALL     	4 0 2
	17	[33]	GETGLOBAL	5 -7	; tostring
	18	[33]	MOVE     	6 1
	19	[33]	CALL     	5 2 2
	20	[33]	LOADK    	6 -9	; "\n"
	21	[33]	CONCAT   	4 4 6
	22	[33]	TAILCALL 	2 3 0
	23	[33]	RETURN   	2 0
	24	[34]	RETURN   	0 1

function <./moonscript/parse/env.lua:20,32> (18 instructions, 72 bytes at 0x7ffaa9c07660)
0+ params, 11 slots, 0 upvalues, 9 locals, 2 constants, 0 functions
	1	[21]	NEWTABLE 	1 0 0
	2	[22]	LOADK    	2 -1	; 1
	3	[23]	NEWTABLE 	3 0 0
	4	[23]	VARARG   	4 0
	5	[25]	SETLIST  	3 0 1	; 1
	6	[26]	LOADK    	4 -1	; 1
	7	[26]	LEN      	5 3
	8	[26]	LOADK    	6 -1	; 1
	9	[26]	FORPREP  	4 6	; to 16
	10	[27]	GETTABLE 	8 3 7
	11	[28]	GETGLOBAL	9 -2	; tostring
	12	[28]	MOVE     	10 8
	13	[28]	CALL     	9 2 2
	14	[28]	SETTABLE 	1 2 9
	15	[29]	ADD      	2 2 -1	; - 1
	16	[26]	FORLOOP  	4 -7	; to 10
	17	[31]	RETURN   	1 2
	18	[32]	RETURN   	0 1

function <./moonscript/parse/env.lua:35,52> (28 instructions, 112 bytes at 0x7ffaa9c07bd0)
1 param, 6 slots, 4 upvalues, 2 locals, 1 constant, 3 functions
	1	[36]	GETUPVAL 	1 0	; V
	2	[36]	MOVE     	2 0
	3	[36]	CALL     	1 2 2
	4	[37]	GETUPVAL 	2 1	; Cmt
	5	[37]	LOADK    	3 -1	; ""
	6	[42]	CLOSURE  	4 0	; 0x7ffaa9c07cb0
	7	[42]	GETUPVAL 	0 2	; iprint
	8	[42]	MOVE     	0 0
	9	[42]	GETUPVAL 	0 3	; indent
	10	[37]	CALL     	2 3 2
	11	[42]	GETUPVAL 	3 1	; Cmt
	12	[42]	MOVE     	4 1
	13	[46]	CLOSURE  	5 1	; 0x7ffaa9c081c0
	14	[46]	GETUPVAL 	0 2	; iprint
	15	[46]	MOVE     	0 0
	16	[46]	GETUPVAL 	0 3	; indent
	17	[42]	CALL     	3 3 2
	18	[46]	MUL      	2 2 3
	19	[46]	GETUPVAL 	3 1	; Cmt
	20	[46]	LOADK    	4 -1	; ""
	21	[50]	CLOSURE  	5 2	; 0x7ffaa9c08a20
	22	[50]	GETUPVAL 	0 2	; iprint
	23	[50]	MOVE     	0 0
	24	[50]	GETUPVAL 	0 3	; indent
	25	[46]	CALL     	3 3 2
	26	[50]	ADD      	1 2 3
	27	[51]	RETURN   	1 2
	28	[52]	RETURN   	0 1

function <./moonscript/parse/env.lua:37,42> (25 instructions, 100 bytes at 0x7ffaa9c07cb0)
2 params, 9 slots, 3 upvalues, 3 locals, 9 constants, 0 functions
	1	[38]	SELF     	2 0 -1	; "sub"
	2	[38]	MOVE     	4 1
	3	[38]	LOADK    	5 -2	; -1
	4	[38]	CALL     	2 4 2
	5	[38]	SELF     	2 2 -3	; "match"
	6	[38]	LOADK    	4 -4	; "^([^\n]*)"
	7	[38]	CALL     	2 3 2
	8	[39]	GETUPVAL 	3 0	; iprint
	9	[39]	LOADK    	4 -5	; "* "
	10	[39]	GETGLOBAL	5 -6	; tostring
	11	[39]	GETUPVAL 	6 1	; name
	12	[39]	CALL     	5 2 2
	13	[39]	LOADK    	6 -7	; " ("
	14	[39]	GETGLOBAL	7 -6	; tostring
	15	[39]	MOVE     	8 2
	16	[39]	CALL     	7 2 2
	17	[39]	LOADK    	8 -8	; ")"
	18	[39]	CONCAT   	4 4 8
	19	[39]	CALL     	3 2 1
	20	[40]	GETUPVAL 	3 2	; indent
	21	[40]	ADD      	3 3 -9	; - 1
	22	[40]	SETUPVAL 	3 2	; indent
	23	[41]	LOADBOOL 	3 1 0
	24	[41]	RETURN   	3 2
	25	[42]	RETURN   	0 1

function <./moonscript/parse/env.lua:42,46> (11 instructions, 44 bytes at 0x7ffaa9c081c0)
2+ params, 6 slots, 3 upvalues, 3 locals, 1 constant, 0 functions
	1	[43]	GETUPVAL 	3 0	; iprint
	2	[43]	GETUPVAL 	4 1	; name
	3	[43]	LOADBOOL 	5 1 0
	4	[43]	CALL     	3 3 1
	5	[44]	GETUPVAL 	3 2	; indent
	6	[44]	SUB      	3 3 -1	; - 1
	7	[44]	SETUPVAL 	3 2	; indent
	8	[45]	LOADBOOL 	3 1 0
	9	[45]	VARARG   	4 0
	10	[45]	RETURN   	3 0
	11	[46]	RETURN   	0 1

function <./moonscript/parse/env.lua:46,50> (10 instructions, 40 bytes at 0x7ffaa9c08a20)
0 params, 3 slots, 3 upvalues, 0 locals, 1 constant, 0 functions
	1	[47]	GETUPVAL 	0 0	; iprint
	2	[47]	GETUPVAL 	1 1	; name
	3	[47]	LOADBOOL 	2 0 0
	4	[47]	CALL     	0 3 1
	5	[48]	GETUPVAL 	0 2	; indent
	6	[48]	SUB      	0 0 -1	; - 1
	7	[48]	SETUPVAL 	0 2	; indent
	8	[49]	LOADBOOL 	0 0 0
	9	[49]	RETURN   	0 2
	10	[50]	RETURN   	0 1

function <./moonscript/parse/env.lua:55,65> (23 instructions, 92 bytes at 0x7ffaa9c08ae0)
2 params, 7 slots, 2 upvalues, 4 locals, 6 constants, 0 functions
	1	[56]	GETUPVAL 	2 0	; env
	2	[56]	GETTABLE 	2 2 1
	3	[57]	EQ       	1 2 -1	; - nil
	4	[57]	JMP      	1	; to 6
	5	[58]	RETURN   	2 2
	6	[60]	SELF     	3 1 -2	; "match"
	7	[60]	LOADK    	5 -3	; "^[A-Z][A-Za-z0-9]*$"
	8	[60]	CALL     	3 3 2
	9	[60]	TEST     	3 0 0
	10	[60]	JMP      	4	; to 15
	11	[61]	GETUPVAL 	3 1	; wrap_name
	12	[61]	MOVE     	4 1
	13	[61]	CALL     	3 2 2
	14	[62]	RETURN   	3 2
	15	[64]	GETGLOBAL	3 -4	; error
	16	[64]	LOADK    	4 -5	; "unknown variable referenced: "
	17	[64]	GETGLOBAL	5 -6	; tostring
	18	[64]	MOVE     	6 1
	19	[64]	CALL     	5 2 2
	20	[64]	CONCAT   	4 4 5
	21	[64]	TAILCALL 	3 2 0
	22	[64]	RETURN   	3 0
	23	[65]	RETURN   	0 1
-----------------------

main <./moonscript/parse/literals.lua:0,0> (182 instructions, 728 bytes at 0x7fd9dcc068c0)
0+ params, 23 slots, 0 upvalues, 21 locals, 46 constants, 1 function
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.util"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "safe_module"
	5	[3]	LOADNIL  	1 4
	6	[5]	GETGLOBAL	5 -1	; require
	7	[5]	LOADK    	6 -4	; "lpeg"
	8	[5]	CALL     	5 2 2
	9	[6]	GETTABLE 	6 5 -5	; "S"
	10	[6]	GETTABLE 	7 5 -6	; "P"
	11	[6]	GETTABLE 	8 5 -7	; "R"
	12	[6]	GETTABLE 	4 5 -8	; "C"
	13	[6]	MOVE     	3 8
	14	[6]	MOVE     	2 7
	15	[6]	MOVE     	1 6
	16	[8]	GETGLOBAL	5 -1	; require
	17	[8]	LOADK    	6 -4	; "lpeg"
	18	[8]	CALL     	5 2 2
	19	[9]	GETTABLE 	6 5 -9	; "luversion"
	20	[9]	TEST     	6 0 0
	21	[9]	JMP      	3	; to 25
	22	[9]	GETTABLE 	6 5 -10	; "L"
	23	[9]	TEST     	6 0 1
	24	[9]	JMP      	1	; to 26
	25	[11]	CLOSURE  	6 0	; 0x7fd9dcc06ab0
	26	[12]	MOVE     	7 1
	27	[12]	LOADK    	8 -11	; " \t\r\n"
	28	[12]	CALL     	7 2 2
	29	[12]	POW      	7 7 -12	; - 0
	30	[13]	MOVE     	8 1
	31	[13]	LOADK    	9 -13	; " \t"
	32	[13]	CALL     	8 2 2
	33	[13]	POW      	8 8 -12	; - 0
	34	[14]	MOVE     	9 2
	35	[14]	LOADK    	10 -14	; "\r"
	36	[14]	CALL     	9 2 2
	37	[14]	POW      	9 9 -15	; - -1
	38	[14]	MOVE     	10 2
	39	[14]	LOADK    	11 -16	; "\n"
	40	[14]	CALL     	10 2 2
	41	[14]	MUL      	9 9 10
	42	[15]	ADD      	10 9 -15	; - -1
	43	[16]	MOVE     	11 2
	44	[16]	LOADK    	12 -17	; "--"
	45	[16]	CALL     	11 2 2
	46	[16]	MOVE     	12 1
	47	[16]	LOADK    	13 -18	; "\r\n"
	48	[16]	CALL     	12 2 2
	49	[16]	SUB      	12 -19 12	; 1 -
	50	[16]	POW      	12 12 -12	; - 0
	51	[16]	MUL      	11 11 12
	52	[16]	MOVE     	12 6
	53	[16]	MOVE     	13 10
	54	[16]	CALL     	12 2 2
	55	[16]	MUL      	11 11 12
	56	[17]	POW      	12 11 -15	; - -1
	57	[17]	MUL      	12 8 12
	58	[18]	MOVE     	13 1
	59	[18]	LOADK    	14 -13	; " \t"
	60	[18]	CALL     	13 2 2
	61	[18]	POW      	13 13 -19	; - 1
	62	[18]	POW      	14 11 -15	; - -1
	63	[18]	MUL      	13 13 14
	64	[19]	MUL      	14 12 9
	65	[20]	MOVE     	15 14
	66	[21]	MOVE     	16 3
	67	[21]	LOADK    	17 -20	; "az"
	68	[21]	LOADK    	18 -21	; "AZ"
	69	[21]	LOADK    	19 -22	; "09"
	70	[21]	LOADK    	20 -23	; "__"
	71	[21]	CALL     	16 5 2
	72	[22]	MOVE     	17 4
	73	[22]	MOVE     	18 3
	74	[22]	LOADK    	19 -20	; "az"
	75	[22]	LOADK    	20 -21	; "AZ"
	76	[22]	LOADK    	21 -23	; "__"
	77	[22]	CALL     	18 4 2
	78	[22]	POW      	19 16 -12	; - 0
	79	[22]	MUL      	18 18 19
	80	[22]	CALL     	17 2 2
	81	[23]	MOVE     	18 2
	82	[23]	LOADK    	19 -24	; "0x"
	83	[23]	CALL     	18 2 2
	84	[23]	MOVE     	19 3
	85	[23]	LOADK    	20 -22	; "09"
	86	[23]	LOADK    	21 -25	; "af"
	87	[23]	LOADK    	22 -26	; "AF"
	88	[23]	CALL     	19 4 2
	89	[23]	POW      	19 19 -19	; - 1
	90	[23]	MUL      	18 18 19
	91	[23]	MOVE     	19 1
	92	[23]	LOADK    	20 -27	; "uU"
	93	[23]	CALL     	19 2 2
	94	[23]	POW      	19 19 -15	; - -1
	95	[23]	MOVE     	20 1
	96	[23]	LOADK    	21 -28	; "lL"
	97	[23]	CALL     	20 2 2
	98	[23]	POW      	20 20 -29	; - 2
	99	[23]	MUL      	19 19 20
	100	[23]	POW      	19 19 -15	; - -1
	101	[23]	MUL      	18 18 19
	102	[23]	MOVE     	19 3
	103	[23]	LOADK    	20 -22	; "09"
	104	[23]	CALL     	19 2 2
	105	[23]	POW      	19 19 -19	; - 1
	106	[23]	MOVE     	20 1
	107	[23]	LOADK    	21 -27	; "uU"
	108	[23]	CALL     	20 2 2
	109	[23]	POW      	20 20 -15	; - -1
	110	[23]	MOVE     	21 1
	111	[23]	LOADK    	22 -28	; "lL"
	112	[23]	CALL     	21 2 2
	113	[23]	POW      	21 21 -29	; - 2
	114	[23]	MUL      	20 20 21
	115	[23]	MUL      	19 19 20
	116	[23]	ADD      	18 18 19
	117	[23]	MOVE     	19 3
	118	[23]	LOADK    	20 -22	; "09"
	119	[23]	CALL     	19 2 2
	120	[23]	POW      	19 19 -19	; - 1
	121	[23]	MOVE     	20 2
	122	[23]	LOADK    	21 -30	; "."
	123	[23]	CALL     	20 2 2
	124	[23]	MOVE     	21 3
	125	[23]	LOADK    	22 -22	; "09"
	126	[23]	CALL     	21 2 2
	127	[23]	POW      	21 21 -19	; - 1
	128	[23]	MUL      	20 20 21
	129	[23]	POW      	20 20 -15	; - -1
	130	[23]	MUL      	19 19 20
	131	[23]	MOVE     	20 2
	132	[23]	LOADK    	21 -30	; "."
	133	[23]	CALL     	20 2 2
	134	[23]	MOVE     	21 3
	135	[23]	LOADK    	22 -22	; "09"
	136	[23]	CALL     	21 2 2
	137	[23]	POW      	21 21 -19	; - 1
	138	[23]	MUL      	20 20 21
	139	[23]	ADD      	19 19 20
	140	[23]	MOVE     	20 1
	141	[23]	LOADK    	21 -31	; "eE"
	142	[23]	CALL     	20 2 2
	143	[23]	MOVE     	21 2
	144	[23]	LOADK    	22 -32	; "-"
	145	[23]	CALL     	21 2 2
	146	[23]	POW      	21 21 -15	; - -1
	147	[23]	MUL      	20 20 21
	148	[23]	MOVE     	21 3
	149	[23]	LOADK    	22 -22	; "09"
	150	[23]	CALL     	21 2 2
	151	[23]	POW      	21 21 -19	; - 1
	152	[23]	MUL      	20 20 21
	153	[23]	POW      	20 20 -15	; - -1
	154	[23]	MUL      	19 19 20
	155	[23]	ADD      	18 18 19
	156	[24]	MOVE     	19 2
	157	[24]	LOADK    	20 -33	; "#!"
	158	[24]	CALL     	19 2 2
	159	[24]	MOVE     	20 2
	160	[24]	SUB      	21 -19 10	; 1 -
	161	[24]	CALL     	20 2 2
	162	[24]	POW      	20 20 -12	; - 0
	163	[24]	MUL      	19 19 20
	164	[25]	MOVE     	20 0
	165	[25]	LOADK    	21 -34	; "moonscript.parse.literals"
	166	[25]	NEWTABLE 	22 0 13
	167	[26]	SETTABLE 	22 -10 6	; "L" -
	168	[27]	SETTABLE 	22 -35 7	; "White" -
	169	[28]	SETTABLE 	22 -36 9	; "Break" -
	170	[29]	SETTABLE 	22 -37 10	; "Stop" -
	171	[30]	SETTABLE 	22 -38 11	; "Comment" -
	172	[31]	SETTABLE 	22 -39 12	; "Space" -
	173	[32]	SETTABLE 	22 -40 13	; "SomeSpace" -
	174	[33]	SETTABLE 	22 -41 14	; "SpaceBreak" -
	175	[34]	SETTABLE 	22 -42 15	; "EmptyLine" -
	176	[35]	SETTABLE 	22 -43 16	; "AlphaNum" -
	177	[36]	SETTABLE 	22 -44 17	; "Name" -
	178	[37]	SETTABLE 	22 -45 18	; "Num" -
	179	[38]	SETTABLE 	22 -46 19	; "Shebang" -
	180	[25]	TAILCALL 	20 3 0
	181	[39]	RETURN   	20 0
	182	[39]	RETURN   	0 1

function <./moonscript/parse/literals.lua:9,11> (3 instructions, 12 bytes at 0x7fd9dcc06ab0)
1 param, 2 slots, 0 upvalues, 1 local, 0 constants, 0 functions
	1	[10]	LEN      	1 0
	2	[10]	RETURN   	1 2
	3	[11]	RETURN   	0 1
-----------------------

main <./moonscript/parse/util.lua:0,0> (131 instructions, 524 bytes at 0x7ffa994068c0)
0+ params, 31 slots, 0 upvalues, 33 locals, 42 constants, 21 functions
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.util"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "unpack"
	5	[3]	LOADNIL  	1 6
	6	[5]	GETGLOBAL	7 -1	; require
	7	[5]	LOADK    	8 -4	; "lpeg"
	8	[5]	CALL     	7 2 2
	9	[6]	GETTABLE 	8 7 -5	; "P"
	10	[6]	GETTABLE 	9 7 -6	; "C"
	11	[6]	GETTABLE 	10 7 -7	; "S"
	12	[6]	GETTABLE 	11 7 -8	; "Cp"
	13	[6]	GETTABLE 	12 7 -9	; "Cmt"
	14	[6]	GETTABLE 	6 7 -10	; "V"
	15	[6]	MOVE     	5 12
	16	[6]	MOVE     	4 11
	17	[6]	MOVE     	3 10
	18	[6]	MOVE     	2 9
	19	[6]	MOVE     	1 8
	20	[8]	LOADNIL  	7 7
	21	[9]	GETGLOBAL	8 -1	; require
	22	[9]	LOADK    	9 -11	; "moonscript.types"
	23	[9]	CALL     	8 2 2
	24	[9]	GETTABLE 	7 8 -12	; "ntype"
	25	[10]	LOADNIL  	8 8
	26	[11]	GETGLOBAL	9 -1	; require
	27	[11]	LOADK    	10 -13	; "moonscript.parse.literals"
	28	[11]	CALL     	9 2 2
	29	[11]	GETTABLE 	8 9 -14	; "Space"
	30	[12]	MOVE     	9 2
	31	[12]	MOVE     	10 3
	32	[12]	LOADK    	11 -15	; "\t "
	33	[12]	CALL     	10 2 2
	34	[12]	POW      	10 10 -16	; - 0
	35	[12]	CALL     	9 2 2
	36	[25]	CLOSURE  	10 0	; 0x7ffa99407090
	37	[25]	DIV      	9 9 10
	38	[26]	MOVE     	10 1
	39	[28]	CLOSURE  	11 1	; 0x7ffa99406700
	40	[26]	CALL     	10 2 2
	41	[29]	LOADNIL  	11 11
	42	[32]	CLOSURE  	11 2	; 0x7ffa99407480
	43	[32]	MOVE     	0 10
	44	[33]	LOADNIL  	12 12
	45	[43]	CLOSURE  	12 3	; 0x7ffa994077b0
	46	[44]	LOADNIL  	13 13
	47	[95]	CLOSURE  	13 4	; 0x7ffa99407a10
	48	[96]	LOADNIL  	14 14
	49	[104]	CLOSURE  	14 5	; 0x7ffa99408050
	50	[105]	LOADNIL  	15 15
	51	[113]	CLOSURE  	15 6	; 0x7ffa994083e0
	52	[113]	MOVE     	0 4
	53	[114]	LOADNIL  	16 16
	54	[123]	CLOSURE  	16 7	; 0x7ffa994073e0
	55	[123]	MOVE     	0 5
	56	[123]	MOVE     	0 13
	57	[124]	LOADNIL  	17 17
	58	[133]	CLOSURE  	17 8	; 0x7ffa99409820
	59	[134]	LOADNIL  	18 18
	60	[136]	NEWTABLE 	19 0 3
	61	[137]	SETTABLE 	19 -17 -18	; "index" true
	62	[138]	SETTABLE 	19 -19 -18	; "dot" true
	63	[139]	SETTABLE 	19 -20 -18	; "slice" true
	64	[153]	CLOSURE  	18 9	; 0x7ffa99406bb0
	65	[153]	MOVE     	0 7
	66	[153]	MOVE     	0 19
	67	[153]	CLOSE    	19
	68	[155]	LOADNIL  	19 19
	69	[162]	CLOSURE  	19 10	; 0x7ffa99406d90
	70	[162]	MOVE     	0 18
	71	[163]	LOADNIL  	20 20
	72	[165]	MOVE     	21 17
	73	[165]	LOADK    	22 -21	; "explist"
	74	[165]	CALL     	21 2 2
	75	[196]	CLOSURE  	20 11	; 0x7ffa9940a850
	76	[196]	MOVE     	0 21
	77	[196]	MOVE     	0 18
	78	[196]	MOVE     	0 7
	79	[196]	MOVE     	0 0
	80	[196]	CLOSE    	21
	81	[198]	LOADNIL  	21 21
	82	[207]	CLOSURE  	21 12	; 0x7ffa9940ac30
	83	[207]	MOVE     	0 20
	84	[208]	LOADNIL  	22 22
	85	[211]	CLOSURE  	22 13	; 0x7ffa9940b290
	86	[211]	MOVE     	0 8
	87	[212]	LOADNIL  	23 23
	88	[215]	CLOSURE  	23 14	; 0x7ffa9940b370
	89	[216]	LOADNIL  	24 24
	90	[226]	CLOSURE  	24 15	; 0x7ffa9940b950
	91	[226]	MOVE     	0 1
	92	[226]	MOVE     	0 23
	93	[226]	MOVE     	0 6
	94	[226]	MOVE     	0 22
	95	[226]	MOVE     	0 2
	96	[226]	MOVE     	0 14
	97	[227]	LOADNIL  	25 25
	98	[235]	CLOSURE  	25 16	; 0x7ffa9940baf0
	99	[236]	LOADNIL  	26 26
	100	[254]	CLOSURE  	26 17	; 0x7ffa99409b10
	101	[254]	MOVE     	0 7
	102	[255]	LOADNIL  	27 27
	103	[265]	CLOSURE  	27 18	; 0x7ffa99409990
	104	[266]	LOADNIL  	28 28
	105	[269]	CLOSURE  	28 19	; 0x7ffa99409cc0
	106	[270]	LOADNIL  	29 29
	107	[283]	CLOSURE  	29 20	; 0x7ffa99409d40
	108	[284]	NEWTABLE 	30 0 19
	109	[285]	SETTABLE 	30 -22 9	; "Indent" -
	110	[286]	SETTABLE 	30 -23 10	; "Cut" -
	111	[287]	SETTABLE 	30 -24 11	; "ensure" -
	112	[288]	SETTABLE 	30 -25 12	; "extract_line" -
	113	[289]	SETTABLE 	30 -26 14	; "mark" -
	114	[290]	SETTABLE 	30 -27 15	; "pos" -
	115	[291]	SETTABLE 	30 -28 17	; "flatten_or_mark" -
	116	[292]	SETTABLE 	30 -29 18	; "is_assignable" -
	117	[293]	SETTABLE 	30 -30 19	; "check_assignable" -
	118	[294]	SETTABLE 	30 -31 20	; "format_assign" -
	119	[295]	SETTABLE 	30 -32 21	; "format_single_assign" -
	120	[296]	SETTABLE 	30 -33 22	; "sym" -
	121	[297]	SETTABLE 	30 -34 23	; "symx" -
	122	[298]	SETTABLE 	30 -35 24	; "simple_string" -
	123	[299]	SETTABLE 	30 -36 25	; "wrap_func_arg" -
	124	[300]	SETTABLE 	30 -37 26	; "join_chain" -
	125	[301]	SETTABLE 	30 -38 27	; "wrap_decorator" -
	126	[302]	SETTABLE 	30 -39 28	; "check_lua_string" -
	127	[303]	SETTABLE 	30 -40 29	; "self_assign" -
	128	[304]	SETTABLE 	30 -41 16	; "got" -
	129	[305]	SETTABLE 	30 -42 13	; "show_line_position" -
	130	[306]	RETURN   	30 2
	131	[306]	RETURN   	0 1

function <./moonscript/parse/util.lua:12,25> (17 instructions, 68 bytes at 0x7ffa99407090)
1 param, 8 slots, 0 upvalues, 7 locals, 7 constants, 0 functions
	1	[14]	LOADK    	1 -1	; 0
	2	[15]	SELF     	2 0 -2	; "gmatch"
	3	[15]	LOADK    	4 -3	; "[\t ]"
	4	[15]	CALL     	2 3 4
	5	[15]	JMP      	8	; to 14
	6	[16]	MOVE     	6 5
	7	[17]	EQ       	0 -4 6	; " " -
	8	[17]	JMP      	2	; to 11
	9	[18]	ADD      	1 1 -5	; - 1
	10	[18]	JMP      	3	; to 14
	11	[19]	EQ       	0 -6 6	; "\t" -
	12	[19]	JMP      	1	; to 14
	13	[20]	ADD      	1 1 -7	; - 4
	14	[15]	TFORLOOP 	2 1
	15	[21]	JMP      	-10	; to 6
	16	[23]	RETURN   	1 2
	17	[25]	RETURN   	0 1

function <./moonscript/parse/util.lua:26,28> (3 instructions, 12 bytes at 0x7ffa99406700)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[27]	LOADBOOL 	0 0 0
	2	[27]	RETURN   	0 2
	3	[28]	RETURN   	0 1

function <./moonscript/parse/util.lua:30,32> (6 instructions, 24 bytes at 0x7ffa99407480)
2 params, 4 slots, 1 upvalue, 2 locals, 0 constants, 0 functions
	1	[31]	MUL      	2 0 1
	2	[31]	GETUPVAL 	3 0	; Cut
	3	[31]	MUL      	3 1 3
	4	[31]	ADD      	2 2 3
	5	[31]	RETURN   	2 2
	6	[32]	RETURN   	0 1

function <./moonscript/parse/util.lua:34,43> (15 instructions, 60 bytes at 0x7ffa994077b0)
2 params, 5 slots, 0 upvalues, 3 locals, 4 constants, 0 functions
	1	[35]	SELF     	2 0 -1	; "sub"
	2	[35]	MOVE     	4 1
	3	[35]	CALL     	2 3 2
	4	[35]	MOVE     	0 2
	5	[37]	SELF     	2 0 -2	; "match"
	6	[37]	LOADK    	4 -3	; "^(.-)\n"
	7	[37]	CALL     	2 3 2
	8	[38]	TEST     	2 0 0
	9	[38]	JMP      	1	; to 11
	10	[39]	RETURN   	2 2
	11	[42]	SELF     	2 0 -2	; "match"
	12	[42]	LOADK    	4 -4	; "^.-$"
	13	[42]	TAILCALL 	2 3 0
	14	[42]	RETURN   	2 0
	15	[43]	RETURN   	0 1

function <./moonscript/parse/util.lua:45,95> (111 instructions, 444 bytes at 0x7ffa99407a10)
3 params, 18 slots, 0 upvalues, 24 locals, 16 constants, 0 functions
	1	[46]	EQ       	0 2 -1	; - nil
	2	[46]	JMP      	1	; to 4
	3	[47]	LOADBOOL 	2 1 0
	4	[49]	NEWTABLE 	3 1 0
	5	[49]	NEWTABLE 	4 0 0
	6	[51]	SETLIST  	3 1 1	; 1
	7	[52]	SELF     	4 0 -2	; "gmatch"
	8	[52]	LOADK    	6 -3	; "."
	9	[52]	CALL     	4 3 4
	10	[52]	JMP      	19	; to 30
	11	[53]	LEN      	8 3
	12	[53]	LEN      	9 3
	13	[53]	GETTABLE 	9 3 9
	14	[53]	TEST     	9 0 1
	15	[53]	JMP      	1	; to 17
	16	[53]	NEWTABLE 	9 0 0
	17	[53]	SETTABLE 	3 8 9
	18	[54]	GETGLOBAL	8 -4	; table
	19	[54]	GETTABLE 	8 8 -5	; "insert"
	20	[54]	LEN      	9 3
	21	[54]	GETTABLE 	9 3 9
	22	[54]	MOVE     	10 7
	23	[54]	CALL     	8 3 1
	24	[55]	EQ       	0 7 -6	; - "\n"
	25	[55]	JMP      	4	; to 30
	26	[56]	LEN      	8 3
	27	[56]	ADD      	8 8 -7	; - 1
	28	[56]	NEWTABLE 	9 0 0
	29	[56]	SETTABLE 	3 8 9
	30	[52]	TFORLOOP 	4 1
	31	[57]	JMP      	-21	; to 11
	32	[59]	GETGLOBAL	4 -8	; ipairs
	33	[59]	MOVE     	5 3
	34	[59]	CALL     	4 2 4
	35	[59]	JMP      	5	; to 41
	36	[60]	GETGLOBAL	9 -4	; table
	37	[60]	GETTABLE 	9 9 -9	; "concat"
	38	[60]	MOVE     	10 8
	39	[60]	CALL     	9 2 2
	40	[60]	SETTABLE 	3 7 9
	41	[59]	TFORLOOP 	4 2
	42	[60]	JMP      	-7	; to 36
	43	[62]	LOADNIL  	4 4
	44	[63]	SUB      	5 1 -7	; - 1
	45	[64]	GETGLOBAL	6 -8	; ipairs
	46	[64]	MOVE     	7 3
	47	[64]	CALL     	6 2 4
	48	[64]	JMP      	46	; to 95
	49	[65]	LEN      	11 10
	50	[65]	LT       	0 5 11
	51	[65]	JMP      	41	; to 93
	52	[66]	SELF     	11 10 -10	; "sub"
	53	[66]	LOADK    	13 -7	; 1
	54	[66]	MOVE     	14 5
	55	[66]	CALL     	11 4 2
	56	[67]	SELF     	12 10 -10	; "sub"
	57	[67]	ADD      	14 5 -7	; - 1
	58	[67]	CALL     	12 3 2
	59	[68]	NEWTABLE 	13 1 0
	60	[69]	GETGLOBAL	14 -11	; tostring
	61	[69]	MOVE     	15 11
	62	[69]	CALL     	14 2 2
	63	[69]	LOADK    	15 -12	; "\226\151\137"
	64	[69]	GETGLOBAL	16 -11	; tostring
	65	[69]	MOVE     	17 12
	66	[69]	CALL     	16 2 2
	67	[69]	CONCAT   	14 14 16
	68	[70]	SETLIST  	13 1 1	; 1
	69	[70]	MOVE     	4 13
	70	[71]	TEST     	2 0 0
	71	[71]	JMP      	25	; to 97
	72	[73]	SUB      	13 9 -7	; - 1
	73	[73]	GETTABLE 	13 3 13
	74	[74]	TEST     	13 0 0
	75	[74]	JMP      	6	; to 82
	76	[75]	GETGLOBAL	14 -4	; table
	77	[75]	GETTABLE 	14 14 -5	; "insert"
	78	[75]	MOVE     	15 4
	79	[75]	LOADK    	16 -7	; 1
	80	[75]	MOVE     	17 13
	81	[75]	CALL     	14 4 1
	82	[79]	ADD      	13 9 -7	; - 1
	83	[79]	GETTABLE 	13 3 13
	84	[80]	TEST     	13 0 0
	85	[80]	JMP      	11	; to 97
	86	[81]	GETGLOBAL	14 -4	; table
	87	[81]	GETTABLE 	14 14 -5	; "insert"
	88	[81]	MOVE     	15 4
	89	[81]	MOVE     	16 13
	90	[81]	CALL     	14 3 1
	91	[85]	JMP      	5	; to 97
	92	[85]	JMP      	2	; to 95
	93	[87]	LEN      	11 10
	94	[87]	SUB      	5 5 11
	95	[64]	TFORLOOP 	6 2
	96	[88]	JMP      	-48	; to 49
	97	[90]	TEST     	4 0 1
	98	[90]	JMP      	2	; to 101
	99	[91]	LOADK    	6 -13	; "-"
	100	[91]	RETURN   	6 2
	101	[93]	GETGLOBAL	6 -4	; table
	102	[93]	GETTABLE 	6 6 -9	; "concat"
	103	[93]	MOVE     	7 4
	104	[93]	CALL     	6 2 2
	105	[93]	MOVE     	4 6
	106	[94]	SELF     	6 4 -14	; "gsub"
	107	[94]	LOADK    	8 -15	; "\n*$"
	108	[94]	LOADK    	9 -16	; ""
	109	[94]	CALL     	6 4 2
	110	[94]	RETURN   	6 2
	111	[95]	RETURN   	0 1

function <./moonscript/parse/util.lua:97,104> (4 instructions, 16 bytes at 0x7ffa99408050)
1 param, 2 slots, 0 upvalues, 1 local, 0 constants, 1 function
	1	[103]	CLOSURE  	1 0	; 0x7ffa99408a40
	2	[103]	MOVE     	0 0
	3	[103]	RETURN   	1 2
	4	[104]	RETURN   	0 1

function <./moonscript/parse/util.lua:98,103> (6 instructions, 24 bytes at 0x7ffa99408a40)
0+ params, 4 slots, 1 upvalue, 1 local, 0 constants, 0 functions
	1	[99]	NEWTABLE 	1 1 0
	2	[100]	GETUPVAL 	2 0	; name
	3	[100]	VARARG   	3 0
	4	[102]	SETLIST  	1 0 1	; 1
	5	[102]	RETURN   	1 2
	6	[103]	RETURN   	0 1

function <./moonscript/parse/util.lua:106,113> (7 instructions, 28 bytes at 0x7ffa994083e0)
1 param, 3 slots, 1 upvalue, 1 local, 0 constants, 1 function
	1	[107]	GETUPVAL 	1 0	; Cp
	2	[107]	CALL     	1 1 2
	3	[107]	MUL      	1 1 0
	4	[112]	CLOSURE  	2 0	; 0x7ffa99408e70
	5	[112]	DIV      	1 1 2
	6	[112]	RETURN   	1 2
	7	[113]	RETURN   	0 1

function <./moonscript/parse/util.lua:107,112> (8 instructions, 32 bytes at 0x7ffa99408e70)
2 params, 4 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[108]	GETGLOBAL	2 -1	; type
	2	[108]	MOVE     	3 1
	3	[108]	CALL     	2 2 2
	4	[108]	EQ       	0 2 -2	; - "table"
	5	[108]	JMP      	1	; to 7
	6	[109]	SETTABLE 	1 -3 0	; -1 -
	7	[111]	RETURN   	1 2
	8	[112]	RETURN   	0 1

function <./moonscript/parse/util.lua:115,123> (12 instructions, 48 bytes at 0x7ffa994073e0)
2 params, 5 slots, 2 upvalues, 2 locals, 2 constants, 1 function
	1	[116]	EQ       	0 1 -1	; - nil
	2	[116]	JMP      	1	; to 4
	3	[117]	LOADBOOL 	1 1 0
	4	[119]	GETUPVAL 	2 0	; Cmt
	5	[119]	LOADK    	3 -2	; ""
	6	[122]	CLOSURE  	4 0	; 0x7ffa99408dd0
	7	[122]	MOVE     	0 0
	8	[122]	GETUPVAL 	0 1	; show_line_position
	9	[122]	MOVE     	0 1
	10	[119]	TAILCALL 	2 3 0
	11	[122]	RETURN   	2 0
	12	[123]	RETURN   	0 1

function <./moonscript/parse/util.lua:119,122> (20 instructions, 80 bytes at 0x7ffa99408dd0)
2 params, 10 slots, 3 upvalues, 2 locals, 5 constants, 0 functions
	1	[120]	GETGLOBAL	2 -1	; print
	2	[120]	LOADK    	3 -2	; "++ got "
	3	[120]	GETGLOBAL	4 -3	; tostring
	4	[120]	GETUPVAL 	5 0	; what
	5	[120]	CALL     	4 2 2
	6	[120]	CONCAT   	3 3 4
	7	[120]	LOADK    	4 -4	; "["
	8	[120]	GETGLOBAL	5 -3	; tostring
	9	[120]	GETUPVAL 	6 1	; show_line_position
	10	[120]	MOVE     	7 0
	11	[120]	MOVE     	8 1
	12	[120]	GETUPVAL 	9 2	; context
	13	[120]	CALL     	6 4 0
	14	[120]	CALL     	5 0 2
	15	[120]	LOADK    	6 -5	; "]"
	16	[120]	CONCAT   	4 4 6
	17	[120]	CALL     	2 3 1
	18	[121]	LOADBOOL 	2 1 0
	19	[121]	RETURN   	2 2
	20	[122]	RETURN   	0 1

function <./moonscript/parse/util.lua:125,133> (4 instructions, 16 bytes at 0x7ffa99409820)
1 param, 2 slots, 0 upvalues, 1 local, 0 constants, 1 function
	1	[132]	CLOSURE  	1 0	; 0x7ffa99409a40
	2	[132]	MOVE     	0 0
	3	[132]	RETURN   	1 2
	4	[133]	RETURN   	0 1

function <./moonscript/parse/util.lua:126,132> (13 instructions, 52 bytes at 0x7ffa99409a40)
1 param, 5 slots, 1 upvalue, 1 local, 3 constants, 0 functions
	1	[127]	LEN      	1 0
	2	[127]	EQ       	0 1 -1	; - 1
	3	[127]	JMP      	2	; to 6
	4	[128]	GETTABLE 	1 0 -1	; 1
	5	[128]	RETURN   	1 2
	6	[130]	GETGLOBAL	1 -2	; table
	7	[130]	GETTABLE 	1 1 -3	; "insert"
	8	[130]	MOVE     	2 0
	9	[130]	LOADK    	3 -1	; 1
	10	[130]	GETUPVAL 	4 0	; name
	11	[130]	CALL     	1 4 1
	12	[131]	RETURN   	0 2
	13	[132]	RETURN   	0 1

function <./moonscript/parse/util.lua:141,153> (33 instructions, 132 bytes at 0x7ffa99406bb0)
1 param, 5 slots, 2 upvalues, 2 locals, 7 constants, 0 functions
	1	[142]	EQ       	0 0 -1	; - "..."
	2	[142]	JMP      	2	; to 5
	3	[143]	LOADBOOL 	1 0 0
	4	[143]	RETURN   	1 2
	5	[145]	GETUPVAL 	1 0	; ntype
	6	[145]	MOVE     	2 0
	7	[145]	CALL     	1 2 2
	8	[146]	EQ       	1 -2 1	; "ref" -
	9	[146]	JMP      	8	; to 18
	10	[146]	EQ       	1 -3 1	; "self" -
	11	[146]	JMP      	6	; to 18
	12	[146]	EQ       	1 -4 1	; "value" -
	13	[146]	JMP      	4	; to 18
	14	[146]	EQ       	1 -5 1	; "self_class" -
	15	[146]	JMP      	2	; to 18
	16	[146]	EQ       	0 -6 1	; "table" -
	17	[146]	JMP      	3	; to 21
	18	[147]	LOADBOOL 	2 1 0
	19	[147]	RETURN   	2 2
	20	[147]	JMP      	12	; to 33
	21	[148]	EQ       	0 -7 1	; "chain" -
	22	[148]	JMP      	8	; to 31
	23	[149]	GETUPVAL 	2 1	; chain_assignable
	24	[149]	GETUPVAL 	3 0	; ntype
	25	[149]	LEN      	4 0
	26	[149]	GETTABLE 	4 0 4
	27	[149]	CALL     	3 2 2
	28	[149]	GETTABLE 	2 2 3
	29	[149]	RETURN   	2 2
	30	[149]	JMP      	2	; to 33
	31	[151]	LOADBOOL 	2 0 0
	32	[151]	RETURN   	2 2
	33	[153]	RETURN   	0 1

function <./moonscript/parse/util.lua:156,162> (12 instructions, 48 bytes at 0x7ffa99406d90)
3 params, 5 slots, 1 upvalue, 3 locals, 0 constants, 0 functions
	1	[157]	GETUPVAL 	3 0	; is_assignable
	2	[157]	MOVE     	4 2
	3	[157]	CALL     	3 2 2
	4	[157]	TEST     	3 0 0
	5	[157]	JMP      	4	; to 10
	6	[158]	LOADBOOL 	3 1 0
	7	[158]	MOVE     	4 2
	8	[158]	RETURN   	3 3
	9	[158]	JMP      	2	; to 12
	10	[160]	LOADBOOL 	3 0 0
	11	[160]	RETURN   	3 2
	12	[162]	RETURN   	0 1

function <./moonscript/parse/util.lua:166,196> (60 instructions, 240 bytes at 0x7ffa9940a850)
2 params, 11 slots, 4 upvalues, 9 locals, 8 constants, 0 functions
	1	[167]	TEST     	1 0 1
	2	[167]	JMP      	4	; to 7
	3	[168]	GETUPVAL 	2 0	; flatten_explist
	4	[168]	MOVE     	3 0
	5	[168]	TAILCALL 	2 2 0
	6	[168]	RETURN   	2 0
	7	[170]	LOADK    	2 -1	; 1
	8	[170]	LEN      	3 0
	9	[170]	LOADK    	4 -1	; 1
	10	[170]	FORPREP  	2 12	; to 23
	11	[171]	GETTABLE 	6 0 5
	12	[172]	GETUPVAL 	7 1	; is_assignable
	13	[172]	MOVE     	8 6
	14	[172]	CALL     	7 2 2
	15	[172]	TEST     	7 0 1
	16	[172]	JMP      	6	; to 23
	17	[173]	GETGLOBAL	7 -2	; error
	18	[173]	NEWTABLE 	8 2 0
	19	[174]	MOVE     	9 6
	20	[176]	LOADK    	10 -3	; "left hand expression is not assignable"
	21	[176]	SETLIST  	8 2 1	; 1
	22	[173]	CALL     	7 2 1
	23	[170]	FORLOOP  	2 -13	; to 11
	24	[179]	GETUPVAL 	2 2	; ntype
	25	[179]	MOVE     	3 1
	26	[179]	CALL     	2 2 2
	27	[180]	MOVE     	3 2
	28	[181]	EQ       	0 -4 3	; "assign" -
	29	[181]	JMP      	10	; to 40
	30	[182]	NEWTABLE 	4 2 0
	31	[183]	LOADK    	5 -4	; "assign"
	32	[184]	MOVE     	6 0
	33	[185]	GETUPVAL 	7 3	; unpack
	34	[185]	MOVE     	8 1
	35	[185]	LOADK    	9 -5	; 2
	36	[185]	CALL     	7 3 0
	37	[186]	SETLIST  	4 0 1	; 1
	38	[186]	RETURN   	4 2
	39	[186]	JMP      	20	; to 60
	40	[187]	EQ       	0 -6 3	; "update" -
	41	[187]	JMP      	10	; to 52
	42	[188]	NEWTABLE 	4 2 0
	43	[189]	LOADK    	5 -6	; "update"
	44	[190]	GETTABLE 	6 0 -1	; 1
	45	[191]	GETUPVAL 	7 3	; unpack
	46	[191]	MOVE     	8 1
	47	[191]	LOADK    	9 -5	; 2
	48	[191]	CALL     	7 3 0
	49	[192]	SETLIST  	4 0 1	; 1
	50	[192]	RETURN   	4 2
	51	[192]	JMP      	8	; to 60
	52	[194]	GETGLOBAL	4 -2	; error
	53	[194]	LOADK    	5 -7	; "unknown assign expression: "
	54	[194]	GETGLOBAL	6 -8	; tostring
	55	[194]	MOVE     	7 2
	56	[194]	CALL     	6 2 2
	57	[194]	CONCAT   	5 5 6
	58	[194]	TAILCALL 	4 2 0
	59	[194]	RETURN   	4 0
	60	[196]	RETURN   	0 1

function <./moonscript/parse/util.lua:199,207> (12 instructions, 48 bytes at 0x7ffa9940ac30)
2 params, 5 slots, 1 upvalue, 2 locals, 0 constants, 0 functions
	1	[200]	TEST     	1 0 0
	2	[200]	JMP      	8	; to 11
	3	[201]	GETUPVAL 	2 0	; format_assign
	4	[201]	NEWTABLE 	3 1 0
	5	[203]	MOVE     	4 0
	6	[203]	SETLIST  	3 1 1	; 1
	7	[203]	MOVE     	4 1
	8	[201]	TAILCALL 	2 3 0
	9	[203]	RETURN   	2 0
	10	[203]	JMP      	1	; to 12
	11	[205]	RETURN   	0 2
	12	[207]	RETURN   	0 1

function <./moonscript/parse/util.lua:209,211> (4 instructions, 16 bytes at 0x7ffa9940b290)
1 param, 2 slots, 1 upvalue, 1 local, 0 constants, 0 functions
	1	[210]	GETUPVAL 	1 0	; Space
	2	[210]	MUL      	1 1 0
	3	[210]	RETURN   	1 2
	4	[211]	RETURN   	0 1

function <./moonscript/parse/util.lua:213,215> (2 instructions, 8 bytes at 0x7ffa9940b370)
1 param, 2 slots, 0 upvalues, 1 local, 0 constants, 0 functions
	1	[214]	RETURN   	0 2
	2	[215]	RETURN   	0 1

function <./moonscript/parse/util.lua:217,226> (57 instructions, 228 bytes at 0x7ffa9940b950)
2 params, 7 slots, 6 upvalues, 4 locals, 10 constants, 0 functions
	1	[218]	GETUPVAL 	2 0	; P
	2	[218]	LOADK    	3 -1	; "\\"
	3	[218]	GETGLOBAL	4 -2	; tostring
	4	[218]	MOVE     	5 0
	5	[218]	CALL     	4 2 2
	6	[218]	CONCAT   	3 3 4
	7	[218]	CALL     	2 2 2
	8	[218]	ADD      	2 2 -3	; - "\\\\"
	9	[218]	GETUPVAL 	3 0	; P
	10	[218]	MOVE     	4 0
	11	[218]	CALL     	3 2 2
	12	[218]	SUB      	3 -4 3	; 1 -
	13	[218]	ADD      	2 2 3
	14	[219]	TEST     	1 0 0
	15	[219]	JMP      	22	; to 38
	16	[220]	GETUPVAL 	3 1	; symx
	17	[220]	LOADK    	4 -5	; "#{"
	18	[220]	CALL     	3 2 2
	19	[220]	GETUPVAL 	4 2	; V
	20	[220]	LOADK    	5 -6	; "Exp"
	21	[220]	CALL     	4 2 2
	22	[220]	MUL      	3 3 4
	23	[220]	GETUPVAL 	4 3	; sym
	24	[220]	LOADK    	5 -7	; "}"
	25	[220]	CALL     	4 2 2
	26	[220]	MUL      	3 3 4
	27	[221]	GETUPVAL 	4 4	; C
	28	[221]	SUB      	5 2 3
	29	[221]	POW      	5 5 -4	; - 1
	30	[221]	CALL     	4 2 2
	31	[221]	GETUPVAL 	5 5	; mark
	32	[221]	LOADK    	6 -8	; "interpolate"
	33	[221]	CALL     	5 2 2
	34	[221]	DIV      	5 3 5
	35	[221]	ADD      	4 4 5
	36	[221]	POW      	2 4 -9	; - 0
	37	[221]	JMP      	4	; to 42
	38	[223]	GETUPVAL 	3 4	; C
	39	[223]	POW      	4 2 -9	; - 0
	40	[223]	CALL     	3 2 2
	41	[223]	MOVE     	2 3
	42	[225]	GETUPVAL 	3 4	; C
	43	[225]	GETUPVAL 	4 1	; symx
	44	[225]	MOVE     	5 0
	45	[225]	CALL     	4 2 0
	46	[225]	CALL     	3 0 2
	47	[225]	MUL      	3 3 2
	48	[225]	GETUPVAL 	4 3	; sym
	49	[225]	MOVE     	5 0
	50	[225]	CALL     	4 2 2
	51	[225]	MUL      	3 3 4
	52	[225]	GETUPVAL 	4 5	; mark
	53	[225]	LOADK    	5 -10	; "string"
	54	[225]	CALL     	4 2 2
	55	[225]	DIV      	3 3 4
	56	[225]	RETURN   	3 2
	57	[226]	RETURN   	0 1

function <./moonscript/parse/util.lua:228,235> (8 instructions, 32 bytes at 0x7ffa9940baf0)
1 param, 5 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[229]	NEWTABLE 	1 2 0
	2	[230]	LOADK    	2 -1	; "call"
	3	[230]	NEWTABLE 	3 1 0
	4	[233]	MOVE     	4 0
	5	[233]	SETLIST  	3 1 1	; 1
	6	[234]	SETLIST  	1 2 1	; 1
	7	[234]	RETURN   	1 2
	8	[235]	RETURN   	0 1

function <./moonscript/parse/util.lua:237,254> (27 instructions, 108 bytes at 0x7ffa99409b10)
2 params, 6 slots, 1 upvalue, 2 locals, 5 constants, 0 functions
	1	[238]	LEN      	2 1
	2	[238]	EQ       	0 2 -1	; - 0
	3	[238]	JMP      	1	; to 5
	4	[239]	RETURN   	0 2
	5	[241]	NEWTABLE 	2 2 0
	6	[242]	LOADK    	3 -2	; "call"
	7	[244]	MOVE     	4 1
	8	[244]	SETLIST  	2 2 1	; 1
	9	[244]	MOVE     	1 2
	10	[245]	GETUPVAL 	2 0	; ntype
	11	[245]	MOVE     	3 0
	12	[245]	CALL     	2 2 2
	13	[245]	EQ       	0 2 -3	; - "chain"
	14	[245]	JMP      	6	; to 21
	15	[246]	GETGLOBAL	2 -4	; table
	16	[246]	GETTABLE 	2 2 -5	; "insert"
	17	[246]	MOVE     	3 0
	18	[246]	MOVE     	4 1
	19	[246]	CALL     	2 3 1
	20	[247]	RETURN   	0 2
	21	[249]	NEWTABLE 	2 3 0
	22	[250]	LOADK    	3 -3	; "chain"
	23	[251]	MOVE     	4 0
	24	[253]	MOVE     	5 1
	25	[253]	SETLIST  	2 3 1	; 1
	26	[253]	RETURN   	2 2
	27	[254]	RETURN   	0 1

function <./moonscript/parse/util.lua:256,265> (10 instructions, 40 bytes at 0x7ffa99409990)
2 params, 6 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[257]	TEST     	1 0 1
	2	[257]	JMP      	1	; to 4
	3	[258]	RETURN   	0 2
	4	[260]	NEWTABLE 	2 3 0
	5	[261]	LOADK    	3 -1	; "decorated"
	6	[262]	MOVE     	4 0
	7	[264]	MOVE     	5 1
	8	[264]	SETLIST  	2 3 1	; 1
	9	[264]	RETURN   	2 2
	10	[265]	RETURN   	0 1

function <./moonscript/parse/util.lua:267,269> (8 instructions, 32 bytes at 0x7ffa99409cc0)
4 params, 6 slots, 0 upvalues, 4 locals, 0 constants, 0 functions
	1	[268]	LEN      	4 3
	2	[268]	LEN      	5 2
	3	[268]	EQ       	1 4 5
	4	[268]	JMP      	1	; to 6
	5	[268]	LOADBOOL 	4 0 1
	6	[268]	LOADBOOL 	4 1 0
	7	[268]	RETURN   	4 2
	8	[269]	RETURN   	0 1

function <./moonscript/parse/util.lua:271,283> (13 instructions, 52 bytes at 0x7ffa99409d40)
2 params, 7 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[272]	NEWTABLE 	2 2 0
	2	[272]	NEWTABLE 	3 2 0
	3	[274]	LOADK    	4 -1	; "key_literal"
	4	[276]	MOVE     	5 0
	5	[276]	SETLIST  	3 2 1	; 1
	6	[276]	NEWTABLE 	4 2 1
	7	[278]	LOADK    	5 -2	; "ref"
	8	[279]	MOVE     	6 0
	9	[280]	SETTABLE 	4 -3 1	; -1 -
	10	[281]	SETLIST  	4 2 1	; 1
	11	[282]	SETLIST  	2 2 1	; 1
	12	[282]	RETURN   	2 2
	13	[283]	RETURN   	0 1
-----------------------

main <./moonscript/version.lua:0,0> (8 instructions, 32 bytes at 0x7f9bacc068c0)
0+ params, 3 slots, 0 upvalues, 1 local, 3 constants, 1 function
	1	[1]	LOADK    	0 -1	; "0.5.0"
	2	[2]	NEWTABLE 	1 0 2
	3	[3]	SETTABLE 	1 -2 0	; "version" -
	4	[6]	CLOSURE  	2 0	; 0x7f9bacc06cd0
	5	[6]	MOVE     	0 0
	6	[6]	SETTABLE 	1 -3 2	; "print_version" -
	7	[7]	RETURN   	1 2
	8	[7]	RETURN   	0 1

function <./moonscript/version.lua:4,6> (9 instructions, 36 bytes at 0x7f9bacc06cd0)
0 params, 4 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[5]	GETGLOBAL	0 -1	; print
	2	[5]	LOADK    	1 -2	; "MoonScript version "
	3	[5]	GETGLOBAL	2 -3	; tostring
	4	[5]	GETUPVAL 	3 0	; version
	5	[5]	CALL     	2 2 2
	6	[5]	CONCAT   	1 1 2
	7	[5]	TAILCALL 	0 2 0
	8	[5]	RETURN   	0 0
	9	[6]	RETURN   	0 1
-----------------------

main <./moonscript/compile/value.lua:0,0> (82 instructions, 328 bytes at 0x7f8a774068c0)
0+ params, 11 slots, 0 upvalues, 10 locals, 35 constants, 20 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "moonscript.util"
	3	[1]	CALL     	0 2 2
	4	[2]	GETGLOBAL	1 -1	; require
	5	[2]	LOADK    	2 -3	; "moonscript.data"
	6	[2]	CALL     	1 2 2
	7	[3]	LOADNIL  	2 2
	8	[4]	GETGLOBAL	3 -1	; require
	9	[4]	LOADK    	4 -4	; "moonscript.types"
	10	[4]	CALL     	3 2 2
	11	[4]	GETTABLE 	2 3 -5	; "ntype"
	12	[5]	LOADNIL  	3 3
	13	[6]	GETGLOBAL	4 -1	; require
	14	[6]	LOADK    	5 -6	; "moonscript.errors"
	15	[6]	CALL     	4 2 2
	16	[6]	GETTABLE 	3 4 -7	; "user_error"
	17	[7]	LOADNIL  	4 5
	18	[9]	GETGLOBAL	6 -8	; table
	19	[10]	GETTABLE 	7 6 -9	; "concat"
	20	[10]	GETTABLE 	5 6 -10	; "insert"
	21	[10]	MOVE     	4 7
	22	[12]	LOADNIL  	6 6
	23	[13]	GETTABLE 	6 0 -11	; "unpack"
	24	[14]	LOADK    	7 -12	; ","
	25	[15]	NEWTABLE 	8 0 2
	26	[16]	SETTABLE 	8 -13 -14	; "\r" "\\r"
	27	[17]	SETTABLE 	8 -15 -16	; "\n" "\\n"
	28	[19]	NEWTABLE 	9 0 18
	29	[29]	CLOSURE  	10 0	; 0x7f8a77406be0
	30	[29]	SETTABLE 	9 -17 10	; "scoped" -
	31	[53]	CLOSURE  	10 1	; 0x7f8a77406680
	32	[53]	SETTABLE 	9 -18 10	; "exp" -
	33	[69]	CLOSURE  	10 2	; 0x7f8a77408200
	34	[69]	SETTABLE 	9 -19 10	; "explist" -
	35	[72]	CLOSURE  	10 3	; 0x7f8a77407030
	36	[72]	SETTABLE 	9 -20 10	; "parens" -
	37	[80]	CLOSURE  	10 4	; 0x7f8a774091d0
	38	[80]	MOVE     	0 6
	39	[80]	MOVE     	0 8
	40	[80]	SETTABLE 	9 -21 10	; "string" -
	41	[134]	CLOSURE  	10 5	; 0x7f8a774096b0
	42	[134]	MOVE     	0 2
	43	[134]	MOVE     	0 3
	44	[134]	MOVE     	0 6
	45	[134]	SETTABLE 	9 -22 10	; "chain" -
	46	[239]	CLOSURE  	10 6	; 0x7f8a77408330
	47	[239]	MOVE     	0 6
	48	[239]	MOVE     	0 5
	49	[239]	MOVE     	0 4
	50	[239]	SETTABLE 	9 -23 10	; "fndef" -
	51	[279]	CLOSURE  	10 7	; 0x7f8a7740a1d0
	52	[279]	MOVE     	0 6
	53	[279]	MOVE     	0 2
	54	[279]	MOVE     	0 1
	55	[279]	MOVE     	0 7
	56	[279]	SETTABLE 	9 -8 10	; "table" -
	57	[282]	CLOSURE  	10 8	; 0x7f8a7740ad40
	58	[282]	SETTABLE 	9 -24 10	; "minus" -
	59	[285]	CLOSURE  	10 9	; 0x7f8a7740aa90
	60	[285]	SETTABLE 	9 -25 10	; "temp_name" -
	61	[288]	CLOSURE  	10 10	; 0x7f8a7740a770
	62	[288]	SETTABLE 	9 -26 10	; "number" -
	63	[291]	CLOSURE  	10 11	; 0x7f8a7740b340
	64	[291]	SETTABLE 	9 -27 10	; "bitnot" -
	65	[294]	CLOSURE  	10 12	; 0x7f8a77408fe0
	66	[294]	SETTABLE 	9 -28 10	; "length" -
	67	[297]	CLOSURE  	10 13	; 0x7f8a7740b650
	68	[297]	SETTABLE 	9 -29 10	; "not" -
	69	[300]	CLOSURE  	10 14	; 0x7f8a77408a90
	70	[300]	SETTABLE 	9 -30 10	; "self" -
	71	[303]	CLOSURE  	10 15	; 0x7f8a7740be20
	72	[303]	SETTABLE 	9 -31 10	; "self_class" -
	73	[306]	CLOSURE  	10 16	; 0x7f8a7740c0f0
	74	[306]	SETTABLE 	9 -32 10	; "self_colon" -
	75	[309]	CLOSURE  	10 17	; 0x7f8a7740acc0
	76	[309]	SETTABLE 	9 -33 10	; "self_class_colon" -
	77	[318]	CLOSURE  	10 18	; 0x7f8a77407180
	78	[318]	SETTABLE 	9 -34 10	; "ref" -
	79	[324]	CLOSURE  	10 19	; 0x7f8a7740ccc0
	80	[324]	SETTABLE 	9 -35 10	; "raw_value" -
	81	[325]	RETURN   	9 2
	82	[325]	RETURN   	0 1

function <./moonscript/compile/value.lua:20,29> (24 instructions, 96 bytes at 0x7f8a77406be0)
2 params, 10 slots, 0 upvalues, 7 locals, 6 constants, 0 functions
	1	[22]	GETTABLE 	6 1 -1	; 1
	2	[22]	GETTABLE 	7 1 -2	; 2
	3	[22]	GETTABLE 	8 1 -3	; 3
	4	[22]	GETTABLE 	5 1 -4	; 4
	5	[22]	MOVE     	4 8
	6	[22]	MOVE     	3 7
	7	[22]	MOVE     	2 6
	8	[23]	TESTSET  	2 3 0
	9	[23]	JMP      	4	; to 14
	10	[23]	SELF     	6 3 -5	; "call"
	11	[23]	MOVE     	8 0
	12	[23]	CALL     	6 3 2
	13	[23]	MOVE     	2 6
	14	[25]	SELF     	6 0 -6	; "value"
	15	[25]	MOVE     	8 4
	16	[25]	CALL     	6 3 2
	17	[26]	TESTSET  	2 5 0
	18	[26]	JMP      	4	; to 23
	19	[26]	SELF     	7 5 -5	; "call"
	20	[26]	MOVE     	9 0
	21	[26]	CALL     	7 3 2
	22	[26]	MOVE     	2 7
	23	[27]	RETURN   	6 2
	24	[29]	RETURN   	0 1

function <./moonscript/compile/value.lua:30,53> (13 instructions, 52 bytes at 0x7f8a77406680)
2 params, 8 slots, 0 upvalues, 4 locals, 3 constants, 2 functions
	1	[37]	CLOSURE  	2 0	; 0x7f8a77407920
	2	[37]	MOVE     	0 0
	3	[39]	SELF     	3 0 -1	; "line"
	4	[39]	CALL     	3 2 2
	5	[40]	SELF     	4 3 -2	; "append_list"
	6	[50]	CLOSURE  	6 1	; 0x7f8a77407bb0
	7	[50]	MOVE     	0 1
	8	[50]	MOVE     	0 2
	9	[50]	CALL     	6 1 2
	10	[50]	LOADK    	7 -3	; " "
	11	[40]	CALL     	4 4 1
	12	[51]	RETURN   	3 2
	13	[53]	RETURN   	0 1

function <./moonscript/compile/value.lua:32,37> (12 instructions, 48 bytes at 0x7f8a77407920)
2 params, 5 slots, 1 upvalue, 2 locals, 5 constants, 0 functions
	1	[33]	MOD      	2 0 -1
	2	[33]	EQ       	0 2 -2	; - 1
	3	[33]	JMP      	3	; to 7
	4	[33]	EQ       	0 1 -3	; - "!="
	5	[33]	JMP      	1	; to 7
	6	[34]	LOADK    	1 -4	; "~="
	7	[36]	GETUPVAL 	2 0	; self
	8	[36]	SELF     	2 2 -5	; "value"
	9	[36]	MOVE     	4 1
	10	[36]	TAILCALL 	2 3 0
	11	[36]	RETURN   	2 0
	12	[37]	RETURN   	0 1

function <./moonscript/compile/value.lua:40,50> (18 instructions, 72 bytes at 0x7f8a77407bb0)
0 params, 10 slots, 2 upvalues, 7 locals, 2 constants, 0 functions
	1	[41]	NEWTABLE 	0 0 0
	2	[42]	LOADK    	1 -1	; 1
	3	[43]	GETGLOBAL	2 -2	; ipairs
	4	[43]	GETUPVAL 	3 0	; node
	5	[43]	CALL     	2 2 4
	6	[43]	JMP      	8	; to 15
	7	[44]	LT       	0 -1 5	; 1 -
	8	[44]	JMP      	6	; to 15
	9	[45]	GETUPVAL 	7 1	; _comp
	10	[45]	MOVE     	8 5
	11	[45]	MOVE     	9 6
	12	[45]	CALL     	7 3 2
	13	[45]	SETTABLE 	0 1 7
	14	[46]	ADD      	1 1 -1	; - 1
	15	[43]	TFORLOOP 	2 2
	16	[47]	JMP      	-10	; to 7
	17	[49]	RETURN   	0 2
	18	[50]	RETURN   	0 1

function <./moonscript/compile/value.lua:54,69> (11 instructions, 44 bytes at 0x7f8a77408200)
2 params, 7 slots, 0 upvalues, 3 locals, 3 constants, 1 function
	1	[56]	SELF     	2 0 -1	; "line"
	2	[56]	CALL     	2 2 2
	3	[57]	SELF     	3 2 -2	; "append_list"
	4	[66]	CLOSURE  	5 0	; 0x7f8a774078a0
	5	[66]	MOVE     	0 1
	6	[66]	MOVE     	0 0
	7	[66]	CALL     	5 1 2
	8	[66]	LOADK    	6 -3	; ", "
	9	[57]	CALL     	3 4 1
	10	[67]	RETURN   	2 2
	11	[69]	RETURN   	0 1

function <./moonscript/compile/value.lua:57,66> (18 instructions, 72 bytes at 0x7f8a774078a0)
0 params, 10 slots, 2 upvalues, 7 locals, 3 constants, 0 functions
	1	[58]	NEWTABLE 	0 0 0
	2	[59]	LOADK    	1 -1	; 1
	3	[60]	LOADK    	2 -2	; 2
	4	[60]	GETUPVAL 	3 0	; node
	5	[60]	LEN      	3 3
	6	[60]	LOADK    	4 -1	; 1
	7	[60]	FORPREP  	2 8	; to 16
	8	[61]	GETUPVAL 	6 0	; node
	9	[61]	GETTABLE 	6 6 5
	10	[62]	GETUPVAL 	7 1	; self
	11	[62]	SELF     	7 7 -3	; "value"
	12	[62]	MOVE     	9 6
	13	[62]	CALL     	7 3 2
	14	[62]	SETTABLE 	0 1 7
	15	[63]	ADD      	1 1 -1	; - 1
	16	[60]	FORLOOP  	2 -9	; to 8
	17	[65]	RETURN   	0 2
	18	[66]	RETURN   	0 1

function <./moonscript/compile/value.lua:70,72> (9 instructions, 36 bytes at 0x7f8a77407030)
2 params, 8 slots, 0 upvalues, 2 locals, 5 constants, 0 functions
	1	[71]	SELF     	2 0 -1	; "line"
	2	[71]	LOADK    	4 -2	; "("
	3	[71]	SELF     	5 0 -3	; "value"
	4	[71]	GETTABLE 	7 1 -4	; 2
	5	[71]	CALL     	5 3 2
	6	[71]	LOADK    	6 -5	; ")"
	7	[71]	TAILCALL 	2 5 0
	8	[71]	RETURN   	2 0
	9	[72]	RETURN   	0 1

function <./moonscript/compile/value.lua:73,80> (23 instructions, 92 bytes at 0x7f8a774091d0)
2 params, 9 slots, 2 upvalues, 5 locals, 7 constants, 0 functions
	1	[74]	GETUPVAL 	2 0	; unpack
	2	[74]	MOVE     	3 1
	3	[74]	LOADK    	4 -1	; 2
	4	[74]	CALL     	2 3 3
	5	[75]	SELF     	4 2 -2	; "gsub"
	6	[75]	LOADK    	6 -3	; "%["
	7	[75]	LOADK    	7 -4	; "]"
	8	[75]	CALL     	4 4 2
	9	[76]	EQ       	1 2 -5	; - "'"
	10	[76]	JMP      	2	; to 13
	11	[76]	EQ       	0 2 -6	; - "\""
	12	[76]	JMP      	5	; to 18
	13	[77]	SELF     	5 3 -2	; "gsub"
	14	[77]	LOADK    	7 -7	; "[\r\n]"
	15	[77]	GETUPVAL 	8 1	; string_chars
	16	[77]	CALL     	5 4 2
	17	[77]	MOVE     	3 5
	18	[79]	MOVE     	5 2
	19	[79]	MOVE     	6 3
	20	[79]	MOVE     	7 4
	21	[79]	CONCAT   	5 5 7
	22	[79]	RETURN   	5 2
	23	[80]	RETURN   	0 1

function <./moonscript/compile/value.lua:81,134> (96 instructions, 384 bytes at 0x7f8a774096b0)
2 params, 18 slots, 3 upvalues, 15 locals, 21 constants, 1 function
	1	[82]	GETTABLE 	2 1 -1	; 2
	2	[83]	GETUPVAL 	3 0	; ntype
	3	[83]	MOVE     	4 2
	4	[83]	CALL     	3 2 2
	5	[84]	LOADK    	4 -2	; 3
	6	[85]	EQ       	1 3 -3	; - "dot"
	7	[85]	JMP      	4	; to 12
	8	[85]	EQ       	1 3 -4	; - "colon"
	9	[85]	JMP      	2	; to 12
	10	[85]	EQ       	0 3 -5	; - "index"
	11	[85]	JMP      	10	; to 22
	12	[86]	SELF     	5 0 -6	; "get"
	13	[86]	LOADK    	7 -7	; "scope_var"
	14	[86]	CALL     	5 3 2
	15	[86]	MOVE     	2 5
	16	[87]	TEST     	2 0 1
	17	[87]	JMP      	3	; to 21
	18	[88]	GETUPVAL 	5 1	; user_error
	19	[88]	LOADK    	6 -8	; "Short-dot syntax must be called within a with block"
	20	[88]	CALL     	5 2 1
	21	[90]	LOADK    	4 -1	; 2
	22	[92]	EQ       	0 3 -9	; - "ref"
	23	[92]	JMP      	3	; to 27
	24	[92]	GETTABLE 	5 2 -1	; 2
	25	[92]	EQ       	1 5 -10	; - "super"
	26	[92]	JMP      	2	; to 29
	27	[92]	EQ       	0 2 -10	; - "super"
	28	[92]	JMP      	12	; to 41
	29	[94]	SELF     	5 0 -6	; "get"
	30	[94]	LOADK    	7 -10	; "super"
	31	[94]	CALL     	5 3 2
	32	[95]	TEST     	5 0 0
	33	[95]	JMP      	7	; to 41
	34	[96]	SELF     	6 0 -11	; "value"
	35	[96]	MOVE     	8 5
	36	[96]	MOVE     	9 0
	37	[96]	MOVE     	10 1
	38	[96]	CALL     	8 3 0
	39	[96]	TAILCALL 	6 0 0
	40	[96]	RETURN   	6 0
	41	[100]	LOADNIL  	5 5
	42	[116]	CLOSURE  	5 0	; 0x7f8a774083b0
	43	[116]	GETUPVAL 	0 2	; unpack
	44	[116]	MOVE     	0 0
	45	[116]	GETUPVAL 	0 1	; user_error
	46	[117]	EQ       	1 3 -12	; - "self"
	47	[117]	JMP      	2	; to 50
	48	[117]	EQ       	0 3 -13	; - "self_class"
	49	[117]	JMP      	12	; to 62
	50	[117]	GETTABLE 	6 1 -2	; 3
	51	[117]	TEST     	6 0 0
	52	[117]	JMP      	9	; to 62
	53	[117]	GETUPVAL 	6 0	; ntype
	54	[117]	GETTABLE 	7 1 -2	; 3
	55	[117]	CALL     	6 2 2
	56	[117]	EQ       	0 6 -14	; - "call"
	57	[117]	JMP      	4	; to 62
	58	[118]	MOVE     	6 3
	59	[118]	LOADK    	7 -16	; "_colon"
	60	[118]	CONCAT   	6 6 7
	61	[118]	SETTABLE 	2 -15 6	; 1 -
	62	[120]	SELF     	6 0 -11	; "value"
	63	[120]	MOVE     	8 2
	64	[120]	CALL     	6 3 2
	65	[121]	GETUPVAL 	7 0	; ntype
	66	[121]	MOVE     	8 2
	67	[121]	CALL     	7 2 2
	68	[121]	EQ       	0 7 -17	; - "exp"
	69	[121]	JMP      	6	; to 76
	70	[122]	SELF     	7 0 -18	; "line"
	71	[122]	LOADK    	9 -19	; "("
	72	[122]	MOVE     	10 6
	73	[122]	LOADK    	11 -20	; ")"
	74	[122]	CALL     	7 5 2
	75	[122]	MOVE     	6 7
	76	[124]	LOADNIL  	7 7
	77	[126]	SELF     	8 0 -18	; "line"
	78	[126]	CALL     	8 2 2
	79	[127]	MOVE     	9 4
	80	[127]	LEN      	10 1
	81	[127]	LOADK    	11 -15	; 1
	82	[127]	FORPREP  	9 6	; to 89
	83	[128]	GETTABLE 	13 1 12
	84	[129]	SELF     	14 8 -21	; "append"
	85	[129]	MOVE     	16 5
	86	[129]	MOVE     	17 13
	87	[129]	CALL     	16 2 0
	88	[129]	CALL     	14 0 1
	89	[127]	FORLOOP  	9 -7	; to 83
	90	[131]	MOVE     	7 8
	91	[133]	SELF     	8 0 -18	; "line"
	92	[133]	MOVE     	10 6
	93	[133]	MOVE     	11 7
	94	[133]	TAILCALL 	8 4 0
	95	[133]	RETURN   	8 0
	96	[134]	RETURN   	0 1

function <./moonscript/compile/value.lua:101,116> (55 instructions, 220 bytes at 0x7f8a774083b0)
1 param, 7 slots, 3 upvalues, 3 locals, 17 constants, 0 functions
	1	[102]	GETUPVAL 	1 0	; unpack
	2	[102]	MOVE     	2 0
	3	[102]	CALL     	1 2 3
	4	[103]	EQ       	0 1 -1	; - "call"
	5	[103]	JMP      	8	; to 14
	6	[104]	LOADK    	3 -2	; "("
	7	[104]	GETUPVAL 	4 1	; self
	8	[104]	SELF     	4 4 -3	; "values"
	9	[104]	MOVE     	6 2
	10	[104]	CALL     	4 3 2
	11	[104]	LOADK    	5 -4	; ")"
	12	[104]	RETURN   	3 4
	13	[104]	JMP      	41	; to 55
	14	[105]	EQ       	0 1 -5	; - "index"
	15	[105]	JMP      	8	; to 24
	16	[106]	LOADK    	3 -6	; "["
	17	[106]	GETUPVAL 	4 1	; self
	18	[106]	SELF     	4 4 -7	; "value"
	19	[106]	MOVE     	6 2
	20	[106]	CALL     	4 3 2
	21	[106]	LOADK    	5 -8	; "]"
	22	[106]	RETURN   	3 4
	23	[106]	JMP      	31	; to 55
	24	[107]	EQ       	0 1 -9	; - "dot"
	25	[107]	JMP      	6	; to 32
	26	[108]	LOADK    	3 -10	; "."
	27	[108]	GETGLOBAL	4 -11	; tostring
	28	[108]	MOVE     	5 2
	29	[108]	CALL     	4 2 0
	30	[108]	RETURN   	3 0
	31	[108]	JMP      	23	; to 55
	32	[109]	EQ       	0 1 -12	; - "colon"
	33	[109]	JMP      	6	; to 40
	34	[110]	LOADK    	3 -13	; ":"
	35	[110]	GETGLOBAL	4 -11	; tostring
	36	[110]	MOVE     	5 2
	37	[110]	CALL     	4 2 0
	38	[110]	RETURN   	3 0
	39	[110]	JMP      	15	; to 55
	40	[111]	EQ       	0 1 -14	; - "colon_stub"
	41	[111]	JMP      	5	; to 47
	42	[112]	GETUPVAL 	3 2	; user_error
	43	[112]	LOADK    	4 -15	; "Uncalled colon stub"
	44	[112]	TAILCALL 	3 2 0
	45	[112]	RETURN   	3 0
	46	[112]	JMP      	8	; to 55
	47	[114]	GETGLOBAL	3 -16	; error
	48	[114]	LOADK    	4 -17	; "Unknown chain action: "
	49	[114]	GETGLOBAL	5 -11	; tostring
	50	[114]	MOVE     	6 1
	51	[114]	CALL     	5 2 2
	52	[114]	CONCAT   	4 4 5
	53	[114]	TAILCALL 	3 2 0
	54	[114]	RETURN   	3 0
	55	[116]	RETURN   	0 1

function <./moonscript/compile/value.lua:135,239> (161 instructions, 644 bytes at 0x7f8a77408330)
2 params, 28 slots, 3 upvalues, 47 locals, 24 constants, 0 functions
	1	[136]	GETUPVAL 	2 0	; unpack
	2	[136]	MOVE     	3 1
	3	[136]	LOADK    	4 -1	; 2
	4	[136]	CALL     	2 3 5
	5	[137]	NEWTABLE 	6 0 0
	6	[138]	NEWTABLE 	7 0 0
	7	[139]	LOADNIL  	8 8
	8	[141]	NEWTABLE 	9 0 0
	9	[142]	LOADK    	10 -2	; 1
	10	[143]	LOADK    	11 -2	; 1
	11	[143]	LEN      	12 2
	12	[143]	LOADK    	13 -2	; 1
	13	[143]	FORPREP  	11 30	; to 44
	14	[144]	GETTABLE 	15 2 14
	15	[145]	GETUPVAL 	16 0	; unpack
	16	[145]	MOVE     	17 15
	17	[145]	CALL     	16 2 3
	18	[146]	GETGLOBAL	18 -3	; type
	19	[146]	MOVE     	19 16
	20	[146]	CALL     	18 2 2
	21	[146]	EQ       	0 18 -4	; - "string"
	22	[146]	JMP      	1	; to 24
	23	[147]	JMP      	11	; to 35
	24	[149]	GETTABLE 	18 16 -2	; 1
	25	[149]	EQ       	1 18 -5	; - "self"
	26	[149]	JMP      	3	; to 30
	27	[149]	GETTABLE 	18 16 -2	; 1
	28	[149]	EQ       	0 18 -6	; - "self_class"
	29	[149]	JMP      	4	; to 34
	30	[150]	GETUPVAL 	18 1	; insert
	31	[150]	MOVE     	19 7
	32	[150]	MOVE     	20 16
	33	[150]	CALL     	18 3 1
	34	[152]	GETTABLE 	16 16 -1	; 2
	35	[154]	TEST     	17 0 0
	36	[154]	JMP      	4	; to 41
	37	[155]	GETUPVAL 	18 1	; insert
	38	[155]	MOVE     	19 6
	39	[155]	MOVE     	20 15
	40	[155]	CALL     	18 3 1
	41	[157]	MOVE     	18 16
	42	[158]	SETTABLE 	9 10 18
	43	[159]	ADD      	10 10 -2	; - 1
	44	[143]	FORLOOP  	11 -31	; to 14
	45	[161]	MOVE     	8 9
	46	[163]	EQ       	0 4 -7	; - "fat"
	47	[163]	JMP      	5	; to 53
	48	[164]	GETUPVAL 	9 1	; insert
	49	[164]	MOVE     	10 8
	50	[164]	LOADK    	11 -2	; 1
	51	[164]	LOADK    	12 -5	; "self"
	52	[164]	CALL     	9 4 1
	53	[167]	SELF     	9 0 -8	; "block"
	54	[167]	CALL     	9 2 2
	55	[168]	LEN      	10 3
	56	[168]	LT       	0 -9 10	; 0 -
	57	[168]	JMP      	3	; to 61
	58	[169]	SELF     	10 9 -10	; "whitelist_names"
	59	[169]	MOVE     	12 3
	60	[169]	CALL     	10 3 1
	61	[171]	LOADK    	10 -2	; 1
	62	[171]	LEN      	11 8
	63	[171]	LOADK    	12 -2	; 1
	64	[171]	FORPREP  	10 4	; to 69
	65	[172]	GETTABLE 	14 8 13
	66	[173]	SELF     	15 9 -11	; "put_name"
	67	[173]	MOVE     	17 14
	68	[173]	CALL     	15 3 1
	69	[171]	FORLOOP  	10 -5	; to 65
	70	[175]	LOADK    	10 -2	; 1
	71	[175]	LEN      	11 6
	72	[175]	LOADK    	12 -2	; 1
	73	[175]	FORPREP  	10 35	; to 109
	74	[176]	GETTABLE 	14 6 13
	75	[177]	GETUPVAL 	15 0	; unpack
	76	[177]	MOVE     	16 14
	77	[177]	CALL     	15 2 3
	78	[178]	GETGLOBAL	17 -3	; type
	79	[178]	MOVE     	18 15
	80	[178]	CALL     	17 2 2
	81	[178]	EQ       	0 17 -12	; - "table"
	82	[178]	JMP      	1	; to 84
	83	[179]	GETTABLE 	15 15 -1	; 2
	84	[181]	SELF     	17 9 -13	; "stm"
	85	[181]	NEWTABLE 	19 3 0
	86	[182]	LOADK    	20 -14	; "if"
	87	[182]	NEWTABLE 	21 4 0
	88	[184]	LOADK    	22 -15	; "exp"
	89	[184]	NEWTABLE 	23 2 0
	90	[186]	LOADK    	24 -16	; "ref"
	91	[188]	MOVE     	25 15
	92	[188]	SETLIST  	23 2 1	; 1
	93	[189]	LOADK    	24 -17	; "=="
	94	[191]	LOADK    	25 -18	; "nil"
	95	[191]	SETLIST  	21 4 1	; 1
	96	[191]	NEWTABLE 	22 1 0
	97	[192]	NEWTABLE 	23 3 0
	98	[194]	LOADK    	24 -19	; "assign"
	99	[194]	NEWTABLE 	25 1 0
	100	[197]	MOVE     	26 15
	101	[197]	SETLIST  	25 1 1	; 1
	102	[197]	NEWTABLE 	26 1 0
	103	[200]	MOVE     	27 16
	104	[200]	SETLIST  	26 1 1	; 1
	105	[201]	SETLIST  	23 3 1	; 1
	106	[202]	SETLIST  	22 1 1	; 1
	107	[203]	SETLIST  	19 3 1	; 1
	108	[181]	CALL     	17 3 1
	109	[175]	FORLOOP  	10 -36	; to 74
	110	[205]	LOADNIL  	10 10
	111	[207]	NEWTABLE 	11 0 0
	112	[208]	LOADK    	12 -2	; 1
	113	[209]	LOADK    	13 -2	; 1
	114	[209]	LEN      	14 7
	115	[209]	LOADK    	15 -2	; 1
	116	[209]	FORPREP  	13 4	; to 121
	117	[210]	GETTABLE 	17 7 16
	118	[211]	GETTABLE 	18 17 -1	; 2
	119	[211]	SETTABLE 	11 12 18
	120	[212]	ADD      	12 12 -2	; - 1
	121	[209]	FORLOOP  	13 -5	; to 117
	122	[214]	MOVE     	10 11
	123	[216]	LEN      	11 7
	124	[216]	LT       	0 -9 11	; 0 -
	125	[216]	JMP      	7	; to 133
	126	[217]	SELF     	11 9 -13	; "stm"
	127	[217]	NEWTABLE 	13 3 0
	128	[218]	LOADK    	14 -19	; "assign"
	129	[219]	MOVE     	15 7
	130	[221]	MOVE     	16 10
	131	[221]	SETLIST  	13 3 1	; 1
	132	[217]	CALL     	11 3 1
	133	[223]	SELF     	11 9 -20	; "stms"
	134	[223]	MOVE     	13 5
	135	[223]	CALL     	11 3 1
	136	[224]	LEN      	11 2
	137	[224]	LEN      	12 8
	138	[224]	LT       	0 12 11
	139	[224]	JMP      	12	; to 152
	140	[226]	NEWTABLE 	11 0 0
	141	[227]	LOADK    	12 -2	; 1
	142	[228]	LOADK    	13 -2	; 1
	143	[228]	LEN      	14 2
	144	[228]	LOADK    	15 -2	; 1
	145	[228]	FORPREP  	13 4	; to 150
	146	[229]	GETTABLE 	17 2 16
	147	[230]	GETTABLE 	18 17 -2	; 1
	148	[230]	SETTABLE 	11 12 18
	149	[231]	ADD      	12 12 -2	; - 1
	150	[228]	FORLOOP  	13 -5	; to 146
	151	[233]	MOVE     	8 11
	152	[236]	LOADK    	11 -22	; "function("
	153	[236]	GETUPVAL 	12 2	; concat
	154	[236]	MOVE     	13 8
	155	[236]	LOADK    	14 -23	; ", "
	156	[236]	CALL     	12 3 2
	157	[236]	LOADK    	13 -24	; ")"
	158	[236]	CONCAT   	11 11 13
	159	[236]	SETTABLE 	9 -21 11	; "header" -
	160	[237]	RETURN   	9 2
	161	[239]	RETURN   	0 1

function <./moonscript/compile/value.lua:240,279> (38 instructions, 152 bytes at 0x7f8a7740a1d0)
2 params, 15 slots, 4 upvalues, 12 locals, 7 constants, 1 function
	1	[241]	GETUPVAL 	2 0	; unpack
	2	[241]	MOVE     	3 1
	3	[241]	LOADK    	4 -1	; 2
	4	[241]	CALL     	2 3 2
	5	[243]	SELF     	3 0 -2	; "block"
	6	[243]	LOADK    	5 -3	; "{"
	7	[243]	LOADK    	6 -4	; "}"
	8	[243]	CALL     	3 4 2
	9	[244]	LOADNIL  	4 4
	10	[266]	CLOSURE  	4 0	; 0x7f8a7740ab10
	11	[266]	GETUPVAL 	0 0	; unpack
	12	[266]	GETUPVAL 	0 1	; ntype
	13	[266]	GETUPVAL 	0 2	; data
	14	[266]	MOVE     	0 0
	15	[266]	MOVE     	0 3
	16	[267]	TEST     	2 0 0
	17	[267]	JMP      	18	; to 36
	18	[268]	LEN      	5 2
	19	[269]	GETGLOBAL	6 -5	; ipairs
	20	[269]	MOVE     	7 2
	21	[269]	CALL     	6 2 4
	22	[269]	JMP      	11	; to 34
	23	[270]	MOVE     	11 4
	24	[270]	MOVE     	12 10
	25	[270]	CALL     	11 2 2
	26	[271]	EQ       	1 5 9
	27	[271]	JMP      	3	; to 31
	28	[272]	SELF     	12 11 -6	; "append"
	29	[272]	GETUPVAL 	14 3	; table_delim
	30	[272]	CALL     	12 3 1
	31	[274]	SELF     	12 3 -7	; "add"
	32	[274]	MOVE     	14 11
	33	[274]	CALL     	12 3 1
	34	[269]	TFORLOOP 	6 2
	35	[274]	JMP      	-13	; to 23
	36	[277]	RETURN   	3 2
	37	[277]	CLOSE    	3
	38	[279]	RETURN   	0 1

function <./moonscript/compile/value.lua:245,266> (61 instructions, 244 bytes at 0x7f8a7740ab10)
1 param, 11 slots, 5 upvalues, 5 locals, 11 constants, 0 functions
	1	[246]	LEN      	1 0
	2	[246]	EQ       	0 1 -1	; - 2
	3	[246]	JMP      	49	; to 53
	4	[247]	GETUPVAL 	1 0	; unpack
	5	[247]	MOVE     	2 0
	6	[247]	CALL     	1 2 3
	7	[248]	GETUPVAL 	3 1	; ntype
	8	[248]	MOVE     	4 1
	9	[248]	CALL     	3 2 2
	10	[248]	EQ       	0 3 -2	; - "key_literal"
	11	[248]	JMP      	12	; to 24
	12	[248]	GETUPVAL 	3 2	; data
	13	[248]	GETTABLE 	3 3 -3	; "lua_keywords"
	14	[248]	GETTABLE 	4 1 -1	; 2
	15	[248]	GETTABLE 	3 3 4
	16	[248]	TEST     	3 0 0
	17	[248]	JMP      	6	; to 24
	18	[249]	NEWTABLE 	3 3 0
	19	[250]	LOADK    	4 -4	; "string"
	20	[251]	LOADK    	5 -5	; "\""
	21	[253]	GETTABLE 	6 1 -1	; 2
	22	[253]	SETLIST  	3 3 1	; 1
	23	[253]	MOVE     	1 3
	24	[255]	LOADNIL  	3 3
	25	[256]	GETUPVAL 	4 1	; ntype
	26	[256]	MOVE     	5 1
	27	[256]	CALL     	4 2 2
	28	[256]	EQ       	0 4 -2	; - "key_literal"
	29	[256]	JMP      	2	; to 32
	30	[257]	GETTABLE 	3 1 -1	; 2
	31	[257]	JMP      	10	; to 42
	32	[259]	GETUPVAL 	4 3	; self
	33	[259]	SELF     	4 4 -6	; "line"
	34	[259]	LOADK    	6 -7	; "["
	35	[259]	GETUPVAL 	7 4	; _with_0
	36	[259]	SELF     	7 7 -8	; "value"
	37	[259]	MOVE     	9 1
	38	[259]	CALL     	7 3 2
	39	[259]	LOADK    	8 -9	; "]"
	40	[259]	CALL     	4 5 2
	41	[259]	MOVE     	3 4
	42	[261]	GETUPVAL 	4 3	; self
	43	[261]	SELF     	4 4 -6	; "line"
	44	[261]	MOVE     	6 3
	45	[261]	LOADK    	7 -10	; " = "
	46	[261]	GETUPVAL 	8 4	; _with_0
	47	[261]	SELF     	8 8 -8	; "value"
	48	[261]	MOVE     	10 2
	49	[261]	CALL     	8 3 0
	50	[261]	CALL     	4 0 2
	51	[262]	RETURN   	4 2
	52	[262]	JMP      	8	; to 61
	53	[264]	GETUPVAL 	1 3	; self
	54	[264]	SELF     	1 1 -6	; "line"
	55	[264]	GETUPVAL 	3 4	; _with_0
	56	[264]	SELF     	3 3 -8	; "value"
	57	[264]	GETTABLE 	5 0 -11	; 1
	58	[264]	CALL     	3 3 0
	59	[264]	TAILCALL 	1 0 0
	60	[264]	RETURN   	1 0
	61	[266]	RETURN   	0 1

function <./moonscript/compile/value.lua:280,282> (8 instructions, 32 bytes at 0x7f8a7740ad40)
2 params, 8 slots, 0 upvalues, 2 locals, 4 constants, 0 functions
	1	[281]	SELF     	2 0 -1	; "line"
	2	[281]	LOADK    	4 -2	; "-"
	3	[281]	SELF     	5 0 -3	; "value"
	4	[281]	GETTABLE 	7 1 -4	; 2
	5	[281]	CALL     	5 3 0
	6	[281]	TAILCALL 	2 0 0
	7	[281]	RETURN   	2 0
	8	[282]	RETURN   	0 1

function <./moonscript/compile/value.lua:283,285> (6 instructions, 24 bytes at 0x7f8a7740aa90)
2+ params, 7 slots, 0 upvalues, 3 locals, 1 constant, 0 functions
	1	[284]	SELF     	3 1 -1	; "get_name"
	2	[284]	MOVE     	5 0
	3	[284]	VARARG   	6 0
	4	[284]	TAILCALL 	3 0 0
	5	[284]	RETURN   	3 0
	6	[285]	RETURN   	0 1

function <./moonscript/compile/value.lua:286,288> (3 instructions, 12 bytes at 0x7f8a7740a770)
2 params, 3 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[287]	GETTABLE 	2 1 -1	; 2
	2	[287]	RETURN   	2 2
	3	[288]	RETURN   	0 1

function <./moonscript/compile/value.lua:289,291> (8 instructions, 32 bytes at 0x7f8a7740b340)
2 params, 8 slots, 0 upvalues, 2 locals, 4 constants, 0 functions
	1	[290]	SELF     	2 0 -1	; "line"
	2	[290]	LOADK    	4 -2	; "~"
	3	[290]	SELF     	5 0 -3	; "value"
	4	[290]	GETTABLE 	7 1 -4	; 2
	5	[290]	CALL     	5 3 0
	6	[290]	TAILCALL 	2 0 0
	7	[290]	RETURN   	2 0
	8	[291]	RETURN   	0 1

function <./moonscript/compile/value.lua:292,294> (8 instructions, 32 bytes at 0x7f8a77408fe0)
2 params, 8 slots, 0 upvalues, 2 locals, 4 constants, 0 functions
	1	[293]	SELF     	2 0 -1	; "line"
	2	[293]	LOADK    	4 -2	; "#"
	3	[293]	SELF     	5 0 -3	; "value"
	4	[293]	GETTABLE 	7 1 -4	; 2
	5	[293]	CALL     	5 3 0
	6	[293]	TAILCALL 	2 0 0
	7	[293]	RETURN   	2 0
	8	[294]	RETURN   	0 1

function <./moonscript/compile/value.lua:295,297> (8 instructions, 32 bytes at 0x7f8a7740b650)
2 params, 8 slots, 0 upvalues, 2 locals, 4 constants, 0 functions
	1	[296]	SELF     	2 0 -1	; "line"
	2	[296]	LOADK    	4 -2	; "not "
	3	[296]	SELF     	5 0 -3	; "value"
	4	[296]	GETTABLE 	7 1 -4	; 2
	5	[296]	CALL     	5 3 0
	6	[296]	TAILCALL 	2 0 0
	7	[296]	RETURN   	2 0
	8	[297]	RETURN   	0 1

function <./moonscript/compile/value.lua:298,300> (7 instructions, 28 bytes at 0x7f8a77408a90)
2 params, 6 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[299]	LOADK    	2 -1	; "self."
	2	[299]	SELF     	3 0 -2	; "name"
	3	[299]	GETTABLE 	5 1 -3	; 2
	4	[299]	CALL     	3 3 2
	5	[299]	CONCAT   	2 2 3
	6	[299]	RETURN   	2 2
	7	[300]	RETURN   	0 1

function <./moonscript/compile/value.lua:301,303> (7 instructions, 28 bytes at 0x7f8a7740be20)
2 params, 6 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[302]	LOADK    	2 -1	; "self.__class."
	2	[302]	SELF     	3 0 -2	; "name"
	3	[302]	GETTABLE 	5 1 -3	; 2
	4	[302]	CALL     	3 3 2
	5	[302]	CONCAT   	2 2 3
	6	[302]	RETURN   	2 2
	7	[303]	RETURN   	0 1

function <./moonscript/compile/value.lua:304,306> (7 instructions, 28 bytes at 0x7f8a7740c0f0)
2 params, 6 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[305]	LOADK    	2 -1	; "self:"
	2	[305]	SELF     	3 0 -2	; "name"
	3	[305]	GETTABLE 	5 1 -3	; 2
	4	[305]	CALL     	3 3 2
	5	[305]	CONCAT   	2 2 3
	6	[305]	RETURN   	2 2
	7	[306]	RETURN   	0 1

function <./moonscript/compile/value.lua:307,309> (7 instructions, 28 bytes at 0x7f8a7740acc0)
2 params, 6 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[308]	LOADK    	2 -1	; "self.__class:"
	2	[308]	SELF     	3 0 -2	; "name"
	3	[308]	GETTABLE 	5 1 -3	; 2
	4	[308]	CALL     	3 3 2
	5	[308]	CONCAT   	2 2 3
	6	[308]	RETURN   	2 2
	7	[309]	RETURN   	0 1

function <./moonscript/compile/value.lua:310,318> (22 instructions, 88 bytes at 0x7f8a77407180)
2 params, 7 slots, 0 upvalues, 3 locals, 5 constants, 0 functions
	1	[312]	GETTABLE 	2 1 -1	; 2
	2	[312]	EQ       	0 2 -2	; - "super"
	3	[312]	JMP      	4	; to 8
	4	[312]	SELF     	2 0 -3	; "get"
	5	[312]	LOADK    	4 -2	; "super"
	6	[312]	CALL     	2 3 2
	7	[312]	JMP      	2	; to 10
	8	[312]	LOADBOOL 	2 0 1
	9	[312]	LOADBOOL 	2 1 0
	10	[313]	TEST     	2 0 0
	11	[313]	JMP      	6	; to 18
	12	[314]	SELF     	3 0 -4	; "value"
	13	[314]	MOVE     	5 2
	14	[314]	MOVE     	6 0
	15	[314]	CALL     	5 2 0
	16	[314]	TAILCALL 	3 0 0
	17	[314]	RETURN   	3 0
	18	[317]	GETGLOBAL	2 -5	; tostring
	19	[317]	GETTABLE 	3 1 -1	; 2
	20	[317]	TAILCALL 	2 2 0
	21	[317]	RETURN   	2 0
	22	[318]	RETURN   	0 1

function <./moonscript/compile/value.lua:319,324> (10 instructions, 40 bytes at 0x7f8a7740ccc0)
2 params, 5 slots, 0 upvalues, 2 locals, 4 constants, 0 functions
	1	[320]	EQ       	0 1 -1	; - "..."
	2	[320]	JMP      	3	; to 6
	3	[321]	SELF     	2 0 -2	; "send"
	4	[321]	LOADK    	4 -3	; "varargs"
	5	[321]	CALL     	2 3 1
	6	[323]	GETGLOBAL	2 -4	; tostring
	7	[323]	MOVE     	3 1
	8	[323]	TAILCALL 	2 2 0
	9	[323]	RETURN   	2 0
	10	[324]	RETURN   	0 1
-----------------------

main <./moonscript/compile/statement.lua:0,0> (59 instructions, 236 bytes at 0x7fc94b4068d0)
0+ params, 6 slots, 0 upvalues, 5 locals, 25 constants, 17 functions
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.types"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "ntype"
	5	[3]	LOADNIL  	1 2
	6	[5]	GETGLOBAL	3 -4	; table
	7	[6]	GETTABLE 	4 3 -5	; "concat"
	8	[6]	GETTABLE 	2 3 -6	; "insert"
	9	[6]	MOVE     	1 4
	10	[8]	LOADNIL  	3 3
	11	[9]	GETGLOBAL	4 -1	; require
	12	[9]	LOADK    	5 -7	; "moonscript.util"
	13	[9]	CALL     	4 2 2
	14	[9]	GETTABLE 	3 4 -8	; "unpack"
	15	[10]	NEWTABLE 	4 0 17
	16	[13]	CLOSURE  	5 0	; 0x7fc94b406bc0
	17	[13]	SETTABLE 	4 -9 5	; "raw" -
	18	[20]	CLOSURE  	5 1	; 0x7fc94b4073e0
	19	[20]	SETTABLE 	4 -10 5	; "lines" -
	20	[40]	CLOSURE  	5 2	; 0x7fc94b407610
	21	[40]	SETTABLE 	4 -11 5	; "declare" -
	22	[58]	CLOSURE  	5 3	; 0x7fc94b4079a0
	23	[58]	SETTABLE 	4 -12 5	; "declare_with_shadows" -
	24	[103]	CLOSURE  	5 4	; 0x7fc94b4085e0
	25	[103]	MOVE     	0 3
	26	[103]	MOVE     	0 1
	27	[103]	MOVE     	0 0
	28	[103]	SETTABLE 	4 -13 5	; "assign" -
	29	[110]	CLOSURE  	5 5	; 0x7fc94b408e70
	30	[110]	SETTABLE 	4 -14 5	; "return" -
	31	[113]	CLOSURE  	5 6	; 0x7fc94b409300
	32	[113]	SETTABLE 	4 -15 5	; "break" -
	33	[143]	CLOSURE  	5 7	; 0x7fc94b4098f0
	34	[143]	SETTABLE 	4 -16 5	; "if" -
	35	[151]	CLOSURE  	5 8	; 0x7fc94b407360
	36	[151]	MOVE     	0 3
	37	[151]	SETTABLE 	4 -17 5	; "repeat" -
	38	[159]	CLOSURE  	5 9	; 0x7fc94b40a8e0
	39	[159]	MOVE     	0 3
	40	[159]	SETTABLE 	4 -18 5	; "while" -
	41	[174]	CLOSURE  	5 10	; 0x7fc94b40ae40
	42	[174]	MOVE     	0 3
	43	[174]	SETTABLE 	4 -19 5	; "for" -
	44	[211]	CLOSURE  	5 11	; 0x7fc94b40b0b0
	45	[211]	MOVE     	0 3
	46	[211]	SETTABLE 	4 -20 5	; "foreach" -
	47	[224]	CLOSURE  	5 12	; 0x7fc94b409830
	48	[224]	MOVE     	0 3
	49	[224]	SETTABLE 	4 -21 5	; "export" -
	50	[228]	CLOSURE  	5 13	; 0x7fc94b4097b0
	51	[228]	SETTABLE 	4 -22 5	; "run" -
	52	[231]	CLOSURE  	5 14	; 0x7fc94b407fc0
	53	[231]	SETTABLE 	4 -23 5	; "group" -
	54	[238]	CLOSURE  	5 15	; 0x7fc94b4094f0
	55	[238]	SETTABLE 	4 -24 5	; "do" -
	56	[239]	CLOSURE  	5 16	; 0x7fc94b40bc70
	57	[239]	SETTABLE 	4 -25 5	; "noop" -
	58	[240]	RETURN   	4 2
	59	[240]	RETURN   	0 1

function <./moonscript/compile/statement.lua:11,13> (5 instructions, 20 bytes at 0x7fc94b406bc0)
2 params, 5 slots, 0 upvalues, 2 locals, 2 constants, 0 functions
	1	[12]	SELF     	2 0 -1	; "add"
	2	[12]	GETTABLE 	4 1 -2	; 2
	3	[12]	TAILCALL 	2 3 0
	4	[12]	RETURN   	2 0
	5	[13]	RETURN   	0 1

function <./moonscript/compile/statement.lua:14,20> (11 instructions, 44 bytes at 0x7fc94b4073e0)
2 params, 11 slots, 0 upvalues, 8 locals, 3 constants, 0 functions
	1	[15]	GETTABLE 	2 1 -1	; 2
	2	[16]	LOADK    	3 -2	; 1
	3	[16]	LEN      	4 2
	4	[16]	LOADK    	5 -2	; 1
	5	[16]	FORPREP  	3 4	; to 10
	6	[17]	GETTABLE 	7 2 6
	7	[18]	SELF     	8 0 -3	; "add"
	8	[18]	MOVE     	10 7
	9	[18]	CALL     	8 3 1
	10	[16]	FORLOOP  	3 -5	; to 6
	11	[20]	RETURN   	0 1

function <./moonscript/compile/statement.lua:21,40> (19 instructions, 76 bytes at 0x7fc94b407610)
2 params, 9 slots, 0 upvalues, 5 locals, 7 constants, 1 function
	1	[22]	GETTABLE 	2 1 -1	; 2
	2	[23]	SELF     	3 0 -2	; "declare"
	3	[23]	MOVE     	5 2
	4	[23]	CALL     	3 3 2
	5	[24]	LEN      	4 3
	6	[24]	LT       	0 -3 4	; 0 -
	7	[24]	JMP      	11	; to 19
	8	[26]	SELF     	4 0 -4	; "line"
	9	[26]	LOADK    	6 -5	; "local "
	10	[26]	CALL     	4 3 2
	11	[27]	SELF     	5 4 -6	; "append_list"
	12	[36]	CLOSURE  	7 0	; 0x7fc94b406e00
	13	[36]	MOVE     	0 3
	14	[36]	MOVE     	0 0
	15	[36]	CALL     	7 1 2
	16	[36]	LOADK    	8 -7	; ", "
	17	[27]	CALL     	5 4 1
	18	[37]	RETURN   	4 2
	19	[40]	RETURN   	0 1

function <./moonscript/compile/statement.lua:27,36> (18 instructions, 72 bytes at 0x7fc94b406e00)
0 params, 10 slots, 2 upvalues, 7 locals, 2 constants, 0 functions
	1	[28]	NEWTABLE 	0 0 0
	2	[29]	LOADK    	1 -1	; 1
	3	[30]	LOADK    	2 -1	; 1
	4	[30]	GETUPVAL 	3 0	; undeclared
	5	[30]	LEN      	3 3
	6	[30]	LOADK    	4 -1	; 1
	7	[30]	FORPREP  	2 8	; to 16
	8	[31]	GETUPVAL 	6 0	; undeclared
	9	[31]	GETTABLE 	6 6 5
	10	[32]	GETUPVAL 	7 1	; self
	11	[32]	SELF     	7 7 -2	; "name"
	12	[32]	MOVE     	9 6
	13	[32]	CALL     	7 3 2
	14	[32]	SETTABLE 	0 1 7
	15	[33]	ADD      	1 1 -1	; - 1
	16	[30]	FORLOOP  	2 -9	; to 8
	17	[35]	RETURN   	0 2
	18	[36]	RETURN   	0 1

function <./moonscript/compile/statement.lua:41,58> (16 instructions, 64 bytes at 0x7fc94b4079a0)
2 params, 8 slots, 0 upvalues, 4 locals, 6 constants, 1 function
	1	[42]	GETTABLE 	2 1 -1	; 2
	2	[43]	SELF     	3 0 -2	; "declare"
	3	[43]	MOVE     	5 2
	4	[43]	CALL     	3 3 1
	5	[45]	SELF     	3 0 -3	; "line"
	6	[45]	LOADK    	5 -4	; "local "
	7	[45]	CALL     	3 3 2
	8	[46]	SELF     	4 3 -5	; "append_list"
	9	[55]	CLOSURE  	6 0	; 0x7fc94b4081a0
	10	[55]	MOVE     	0 2
	11	[55]	MOVE     	0 0
	12	[55]	CALL     	6 1 2
	13	[55]	LOADK    	7 -6	; ", "
	14	[46]	CALL     	4 4 1
	15	[56]	RETURN   	3 2
	16	[58]	RETURN   	0 1

function <./moonscript/compile/statement.lua:46,55> (18 instructions, 72 bytes at 0x7fc94b4081a0)
0 params, 10 slots, 2 upvalues, 7 locals, 2 constants, 0 functions
	1	[47]	NEWTABLE 	0 0 0
	2	[48]	LOADK    	1 -1	; 1
	3	[49]	LOADK    	2 -1	; 1
	4	[49]	GETUPVAL 	3 0	; names
	5	[49]	LEN      	3 3
	6	[49]	LOADK    	4 -1	; 1
	7	[49]	FORPREP  	2 8	; to 16
	8	[50]	GETUPVAL 	6 0	; names
	9	[50]	GETTABLE 	6 6 5
	10	[51]	GETUPVAL 	7 1	; self
	11	[51]	SELF     	7 7 -2	; "name"
	12	[51]	MOVE     	9 6
	13	[51]	CALL     	7 3 2
	14	[51]	SETTABLE 	0 1 7
	15	[52]	ADD      	1 1 -1	; - 1
	16	[49]	FORLOOP  	2 -9	; to 8
	17	[54]	RETURN   	0 2
	18	[55]	RETURN   	0 1

function <./moonscript/compile/statement.lua:59,103> (64 instructions, 256 bytes at 0x7fc94b4085e0)
2 params, 13 slots, 3 upvalues, 9 locals, 13 constants, 2 functions
	1	[60]	GETUPVAL 	2 0	; unpack
	2	[60]	MOVE     	3 1
	3	[60]	LOADK    	4 -1	; 2
	4	[60]	CALL     	2 3 3
	5	[61]	SELF     	4 0 -2	; "declare"
	6	[61]	MOVE     	6 2
	7	[61]	CALL     	4 3 2
	8	[62]	LOADK    	5 -3	; "local "
	9	[62]	GETUPVAL 	6 1	; concat
	10	[62]	MOVE     	7 4
	11	[62]	LOADK    	8 -4	; ", "
	12	[62]	CALL     	6 3 2
	13	[62]	CONCAT   	5 5 6
	14	[63]	LOADBOOL 	6 0 0
	15	[64]	LOADK    	7 -5	; 1
	16	[65]	LEN      	8 3
	17	[65]	LE       	0 7 8
	18	[65]	JMP      	8	; to 27
	19	[66]	GETUPVAL 	8 2	; ntype
	20	[66]	GETTABLE 	9 3 7
	21	[66]	CALL     	8 2 2
	22	[66]	EQ       	0 8 -6	; - "fndef"
	23	[66]	JMP      	1	; to 25
	24	[67]	LOADBOOL 	6 1 0
	25	[69]	ADD      	7 7 -5	; - 1
	26	[69]	JMP      	-11	; to 16
	27	[72]	SELF     	8 0 -7	; "line"
	28	[72]	CALL     	8 2 2
	29	[73]	LEN      	9 4
	30	[73]	LEN      	10 2
	31	[73]	EQ       	0 9 10
	32	[73]	JMP      	6	; to 39
	33	[73]	TEST     	6 0 1
	34	[73]	JMP      	4	; to 39
	35	[74]	SELF     	9 8 -8	; "append"
	36	[74]	MOVE     	11 5
	37	[74]	CALL     	9 3 1
	38	[74]	JMP      	14	; to 53
	39	[76]	LEN      	9 4
	40	[76]	LT       	0 -9 9	; 0 -
	41	[76]	JMP      	4	; to 46
	42	[77]	SELF     	9 0 -10	; "add"
	43	[77]	MOVE     	11 5
	44	[77]	GETTABLE 	12 1 -11	; -1
	45	[77]	CALL     	9 4 1
	46	[79]	SELF     	9 8 -12	; "append_list"
	47	[88]	CLOSURE  	11 0	; 0x7fc94b406d00
	48	[88]	MOVE     	0 2
	49	[88]	MOVE     	0 0
	50	[88]	CALL     	11 1 2
	51	[88]	LOADK    	12 -4	; ", "
	52	[79]	CALL     	9 4 1
	53	[90]	SELF     	9 8 -8	; "append"
	54	[90]	LOADK    	11 -13	; " = "
	55	[90]	CALL     	9 3 1
	56	[91]	SELF     	9 8 -12	; "append_list"
	57	[100]	CLOSURE  	11 1	; 0x7fc94b407720
	58	[100]	MOVE     	0 3
	59	[100]	MOVE     	0 0
	60	[100]	CALL     	11 1 2
	61	[100]	LOADK    	12 -4	; ", "
	62	[91]	CALL     	9 4 1
	63	[101]	RETURN   	8 2
	64	[103]	RETURN   	0 1

function <./moonscript/compile/statement.lua:79,88> (18 instructions, 72 bytes at 0x7fc94b406d00)
0 params, 10 slots, 2 upvalues, 7 locals, 2 constants, 0 functions
	1	[80]	NEWTABLE 	0 0 0
	2	[81]	LOADK    	1 -1	; 1
	3	[82]	LOADK    	2 -1	; 1
	4	[82]	GETUPVAL 	3 0	; names
	5	[82]	LEN      	3 3
	6	[82]	LOADK    	4 -1	; 1
	7	[82]	FORPREP  	2 8	; to 16
	8	[83]	GETUPVAL 	6 0	; names
	9	[83]	GETTABLE 	6 6 5
	10	[84]	GETUPVAL 	7 1	; self
	11	[84]	SELF     	7 7 -2	; "value"
	12	[84]	MOVE     	9 6
	13	[84]	CALL     	7 3 2
	14	[84]	SETTABLE 	0 1 7
	15	[85]	ADD      	1 1 -1	; - 1
	16	[82]	FORLOOP  	2 -9	; to 8
	17	[87]	RETURN   	0 2
	18	[88]	RETURN   	0 1

function <./moonscript/compile/statement.lua:91,100> (18 instructions, 72 bytes at 0x7fc94b407720)
0 params, 10 slots, 2 upvalues, 7 locals, 2 constants, 0 functions
	1	[92]	NEWTABLE 	0 0 0
	2	[93]	LOADK    	1 -1	; 1
	3	[94]	LOADK    	2 -1	; 1
	4	[94]	GETUPVAL 	3 0	; values
	5	[94]	LEN      	3 3
	6	[94]	LOADK    	4 -1	; 1
	7	[94]	FORPREP  	2 8	; to 16
	8	[95]	GETUPVAL 	6 0	; values
	9	[95]	GETTABLE 	6 6 5
	10	[96]	GETUPVAL 	7 1	; self
	11	[96]	SELF     	7 7 -2	; "value"
	12	[96]	MOVE     	9 6
	13	[96]	CALL     	7 3 2
	14	[96]	SETTABLE 	0 1 7
	15	[97]	ADD      	1 1 -1	; - 1
	16	[94]	FORLOOP  	2 -9	; to 8
	17	[99]	RETURN   	0 2
	18	[100]	RETURN   	0 1

function <./moonscript/compile/statement.lua:104,110> (9 instructions, 36 bytes at 0x7fc94b408e70)
2 params, 6 slots, 0 upvalues, 2 locals, 2 constants, 1 function
	1	[105]	SELF     	2 0 -1	; "line"
	2	[105]	LOADK    	4 -2	; "return "
	3	[109]	CLOSURE  	5 0	; 0x7fc94b409060
	4	[109]	MOVE     	0 1
	5	[109]	MOVE     	0 0
	6	[109]	CALL     	5 1 0
	7	[105]	TAILCALL 	2 0 0
	8	[109]	RETURN   	2 0
	9	[110]	RETURN   	0 1

function <./moonscript/compile/statement.lua:105,109> (11 instructions, 44 bytes at 0x7fc94b409060)
0 params, 3 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[106]	GETUPVAL 	0 0	; node
	2	[106]	GETTABLE 	0 0 -1	; 2
	3	[106]	EQ       	1 0 -2	; - ""
	4	[106]	JMP      	6	; to 11
	5	[107]	GETUPVAL 	0 1	; self
	6	[107]	SELF     	0 0 -3	; "value"
	7	[107]	GETUPVAL 	2 0	; node
	8	[107]	GETTABLE 	2 2 -1	; 2
	9	[107]	TAILCALL 	0 3 0
	10	[107]	RETURN   	0 0
	11	[109]	RETURN   	0 1

function <./moonscript/compile/statement.lua:111,113> (3 instructions, 12 bytes at 0x7fc94b409300)
2 params, 3 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[112]	LOADK    	2 -1	; "break"
	2	[112]	RETURN   	2 2
	3	[113]	RETURN   	0 1

function <./moonscript/compile/statement.lua:114,143> (32 instructions, 128 bytes at 0x7fc94b4098f0)
2 params, 14 slots, 0 upvalues, 13 locals, 10 constants, 1 function
	1	[115]	GETTABLE 	2 1 -1	; 2
	2	[115]	GETTABLE 	3 1 -2	; 3
	3	[116]	LOADNIL  	4 4
	4	[118]	SELF     	5 0 -3	; "block"
	5	[118]	SELF     	7 0 -4	; "line"
	6	[118]	LOADK    	9 -5	; "if "
	7	[118]	SELF     	10 0 -6	; "value"
	8	[118]	MOVE     	12 2
	9	[118]	CALL     	10 3 2
	10	[118]	LOADK    	11 -7	; " then"
	11	[118]	CALL     	7 5 0
	12	[118]	CALL     	5 0 2
	13	[119]	SELF     	6 5 -8	; "stms"
	14	[119]	MOVE     	8 3
	15	[119]	CALL     	6 3 1
	16	[120]	MOVE     	4 5
	17	[122]	MOVE     	5 4
	18	[123]	LOADNIL  	6 6
	19	[137]	CLOSURE  	6 0	; 0x7fc94b409b80
	20	[137]	MOVE     	0 0
	21	[137]	MOVE     	0 5
	22	[138]	LOADK    	7 -9	; 4
	23	[138]	LEN      	8 1
	24	[138]	LOADK    	9 -10	; 1
	25	[138]	FORPREP  	7 4	; to 30
	26	[139]	GETTABLE 	11 1 10
	27	[140]	MOVE     	12 6
	28	[140]	MOVE     	13 11
	29	[140]	CALL     	12 2 1
	30	[138]	FORLOOP  	7 -5	; to 26
	31	[142]	RETURN   	4 2
	32	[143]	RETURN   	0 1

function <./moonscript/compile/statement.lua:124,137> (32 instructions, 128 bytes at 0x7fc94b409b80)
1 param, 12 slots, 2 upvalues, 4 locals, 10 constants, 0 functions
	1	[125]	GETTABLE 	1 0 -1	; 1
	2	[126]	LOADK    	2 -2	; 2
	3	[127]	LOADNIL  	3 3
	4	[128]	EQ       	0 1 -3	; - "else"
	5	[128]	JMP      	6	; to 12
	6	[129]	GETUPVAL 	4 0	; self
	7	[129]	SELF     	4 4 -4	; "block"
	8	[129]	LOADK    	6 -3	; "else"
	9	[129]	CALL     	4 3 2
	10	[129]	MOVE     	3 4
	11	[129]	JMP      	14	; to 26
	12	[131]	ADD      	2 2 -1	; - 1
	13	[132]	GETUPVAL 	4 0	; self
	14	[132]	SELF     	4 4 -4	; "block"
	15	[132]	GETUPVAL 	6 0	; self
	16	[132]	SELF     	6 6 -5	; "line"
	17	[132]	LOADK    	8 -6	; "elseif "
	18	[132]	GETUPVAL 	9 0	; self
	19	[132]	SELF     	9 9 -7	; "value"
	20	[132]	GETTABLE 	11 0 -2	; 2
	21	[132]	CALL     	9 3 2
	22	[132]	LOADK    	10 -8	; " then"
	23	[132]	CALL     	6 5 0
	24	[132]	CALL     	4 0 2
	25	[132]	MOVE     	3 4
	26	[134]	SELF     	4 3 -9	; "stms"
	27	[134]	GETTABLE 	6 0 2
	28	[134]	CALL     	4 3 1
	29	[135]	GETUPVAL 	4 1	; current
	30	[135]	SETTABLE 	4 -10 3	; "next" -
	31	[136]	SETUPVAL 	3 1	; current
	32	[137]	RETURN   	0 1

function <./moonscript/compile/statement.lua:144,151> (18 instructions, 72 bytes at 0x7fc94b407360)
2 params, 13 slots, 1 upvalue, 5 locals, 7 constants, 0 functions
	1	[145]	GETUPVAL 	2 0	; unpack
	2	[145]	MOVE     	3 1
	3	[145]	LOADK    	4 -1	; 2
	4	[145]	CALL     	2 3 3
	5	[147]	SELF     	4 0 -2	; "block"
	6	[147]	LOADK    	6 -3	; "repeat"
	7	[147]	SELF     	7 0 -4	; "line"
	8	[147]	LOADK    	9 -5	; "until "
	9	[147]	SELF     	10 0 -6	; "value"
	10	[147]	MOVE     	12 2
	11	[147]	CALL     	10 3 0
	12	[147]	CALL     	7 0 0
	13	[147]	CALL     	4 0 2
	14	[148]	SELF     	5 4 -7	; "stms"
	15	[148]	MOVE     	7 3
	16	[148]	CALL     	5 3 1
	17	[149]	RETURN   	4 2
	18	[151]	RETURN   	0 1

function <./moonscript/compile/statement.lua:152,159> (18 instructions, 72 bytes at 0x7fc94b40a8e0)
2 params, 12 slots, 1 upvalue, 5 locals, 7 constants, 0 functions
	1	[153]	GETUPVAL 	2 0	; unpack
	2	[153]	MOVE     	3 1
	3	[153]	LOADK    	4 -1	; 2
	4	[153]	CALL     	2 3 3
	5	[155]	SELF     	4 0 -2	; "block"
	6	[155]	SELF     	6 0 -3	; "line"
	7	[155]	LOADK    	8 -4	; "while "
	8	[155]	SELF     	9 0 -5	; "value"
	9	[155]	MOVE     	11 2
	10	[155]	CALL     	9 3 2
	11	[155]	LOADK    	10 -6	; " do"
	12	[155]	CALL     	6 5 0
	13	[155]	CALL     	4 0 2
	14	[156]	SELF     	5 4 -7	; "stms"
	15	[156]	MOVE     	7 3
	16	[156]	CALL     	5 3 1
	17	[157]	RETURN   	4 2
	18	[159]	RETURN   	0 1

function <./moonscript/compile/statement.lua:160,174> (33 instructions, 132 bytes at 0x7fc94b40ae40)
2 params, 16 slots, 1 upvalue, 7 locals, 11 constants, 0 functions
	1	[161]	GETUPVAL 	2 0	; unpack
	2	[161]	MOVE     	3 1
	3	[161]	LOADK    	4 -1	; 2
	4	[161]	CALL     	2 3 4
	5	[162]	SELF     	5 0 -2	; "line"
	6	[162]	LOADK    	7 -3	; "for "
	7	[162]	SELF     	8 0 -4	; "name"
	8	[162]	MOVE     	10 2
	9	[162]	CALL     	8 3 2
	10	[162]	LOADK    	9 -5	; " = "
	11	[162]	SELF     	10 0 -6	; "value"
	12	[162]	NEWTABLE 	12 1 0
	13	[163]	LOADK    	13 -7	; "explist"
	14	[164]	GETUPVAL 	14 0	; unpack
	15	[164]	MOVE     	15 3
	16	[164]	CALL     	14 2 0
	17	[165]	SETLIST  	12 0 1	; 1
	18	[162]	CALL     	10 3 2
	19	[165]	LOADK    	11 -8	; " do"
	20	[162]	CALL     	5 7 2
	21	[167]	SELF     	6 0 -9	; "block"
	22	[167]	MOVE     	8 5
	23	[167]	CALL     	6 3 2
	24	[168]	SELF     	7 6 -10	; "declare"
	25	[168]	NEWTABLE 	9 1 0
	26	[170]	MOVE     	10 2
	27	[170]	SETLIST  	9 1 1	; 1
	28	[168]	CALL     	7 3 1
	29	[171]	SELF     	7 6 -11	; "stms"
	30	[171]	MOVE     	9 4
	31	[171]	CALL     	7 3 1
	32	[172]	RETURN   	6 2
	33	[174]	RETURN   	0 1

function <./moonscript/compile/statement.lua:175,211> (43 instructions, 172 bytes at 0x7fc94b40b0b0)
2 params, 11 slots, 1 upvalue, 8 locals, 12 constants, 2 functions
	1	[176]	GETUPVAL 	2 0	; unpack
	2	[176]	MOVE     	3 1
	3	[176]	LOADK    	4 -1	; 2
	4	[176]	CALL     	2 3 4
	5	[177]	LOADNIL  	5 5
	6	[179]	SELF     	6 0 -2	; "line"
	7	[179]	CALL     	6 2 2
	8	[180]	SELF     	7 6 -3	; "append"
	9	[180]	LOADK    	9 -4	; "for "
	10	[180]	CALL     	7 3 1
	11	[181]	MOVE     	5 6
	12	[184]	SELF     	6 0 -5	; "block"
	13	[184]	MOVE     	8 5
	14	[184]	CALL     	6 3 2
	15	[185]	SELF     	7 5 -6	; "append_list"
	16	[194]	CLOSURE  	9 0	; 0x7fc94b40b530
	17	[194]	MOVE     	0 2
	18	[194]	MOVE     	0 6
	19	[194]	CALL     	9 1 2
	20	[194]	LOADK    	10 -7	; ", "
	21	[185]	CALL     	7 4 1
	22	[195]	SELF     	7 5 -3	; "append"
	23	[195]	LOADK    	9 -8	; " in "
	24	[195]	CALL     	7 3 1
	25	[196]	SELF     	7 5 -6	; "append_list"
	26	[205]	CLOSURE  	9 1	; 0x7fc94b4090e0
	27	[205]	MOVE     	0 3
	28	[205]	MOVE     	0 0
	29	[205]	CALL     	9 1 2
	30	[205]	LOADK    	10 -9	; ","
	31	[196]	CALL     	7 4 1
	32	[206]	SELF     	7 5 -3	; "append"
	33	[206]	LOADK    	9 -10	; " do"
	34	[206]	CALL     	7 3 1
	35	[207]	SELF     	7 6 -11	; "declare"
	36	[207]	MOVE     	9 2
	37	[207]	CALL     	7 3 1
	38	[208]	SELF     	7 6 -12	; "stms"
	39	[208]	MOVE     	9 4
	40	[208]	CALL     	7 3 1
	41	[209]	RETURN   	6 2
	42	[209]	CLOSE    	6
	43	[211]	RETURN   	0 1

function <./moonscript/compile/statement.lua:185,194> (19 instructions, 76 bytes at 0x7fc94b40b530)
0 params, 11 slots, 2 upvalues, 7 locals, 2 constants, 0 functions
	1	[186]	NEWTABLE 	0 0 0
	2	[187]	LOADK    	1 -1	; 1
	3	[188]	LOADK    	2 -1	; 1
	4	[188]	GETUPVAL 	3 0	; names
	5	[188]	LEN      	3 3
	6	[188]	LOADK    	4 -1	; 1
	7	[188]	FORPREP  	2 9	; to 17
	8	[189]	GETUPVAL 	6 0	; names
	9	[189]	GETTABLE 	6 6 5
	10	[190]	GETUPVAL 	7 1	; _with_0
	11	[190]	SELF     	7 7 -2	; "name"
	12	[190]	MOVE     	9 6
	13	[190]	LOADBOOL 	10 0 0
	14	[190]	CALL     	7 4 2
	15	[190]	SETTABLE 	0 1 7
	16	[191]	ADD      	1 1 -1	; - 1
	17	[188]	FORLOOP  	2 -10	; to 8
	18	[193]	RETURN   	0 2
	19	[194]	RETURN   	0 1

function <./moonscript/compile/statement.lua:196,205> (18 instructions, 72 bytes at 0x7fc94b4090e0)
0 params, 10 slots, 2 upvalues, 7 locals, 2 constants, 0 functions
	1	[197]	NEWTABLE 	0 0 0
	2	[198]	LOADK    	1 -1	; 1
	3	[199]	LOADK    	2 -1	; 1
	4	[199]	GETUPVAL 	3 0	; exps
	5	[199]	LEN      	3 3
	6	[199]	LOADK    	4 -1	; 1
	7	[199]	FORPREP  	2 8	; to 16
	8	[200]	GETUPVAL 	6 0	; exps
	9	[200]	GETTABLE 	6 6 5
	10	[201]	GETUPVAL 	7 1	; self
	11	[201]	SELF     	7 7 -2	; "value"
	12	[201]	MOVE     	9 6
	13	[201]	CALL     	7 3 2
	14	[201]	SETTABLE 	0 1 7
	15	[202]	ADD      	1 1 -1	; - 1
	16	[199]	FORLOOP  	2 -9	; to 8
	17	[204]	RETURN   	0 2
	18	[205]	RETURN   	0 1

function <./moonscript/compile/statement.lua:212,224> (23 instructions, 92 bytes at 0x7fc94b409830)
2 params, 6 slots, 1 upvalue, 3 locals, 9 constants, 0 functions
	1	[213]	GETUPVAL 	2 0	; unpack
	2	[213]	MOVE     	3 1
	3	[213]	LOADK    	4 -1	; 2
	4	[213]	CALL     	2 3 2
	5	[214]	GETGLOBAL	3 -2	; type
	6	[214]	MOVE     	4 2
	7	[214]	CALL     	3 2 2
	8	[214]	EQ       	0 3 -3	; - "string"
	9	[214]	JMP      	8	; to 18
	10	[215]	EQ       	0 2 -4	; - "*"
	11	[215]	JMP      	2	; to 14
	12	[216]	SETTABLE 	0 -5 -6	; "export_all" true
	13	[216]	JMP      	7	; to 21
	14	[217]	EQ       	0 2 -7	; - "^"
	15	[217]	JMP      	5	; to 21
	16	[218]	SETTABLE 	0 -8 -6	; "export_proper" true
	17	[219]	JMP      	3	; to 21
	18	[221]	SELF     	3 0 -9	; "declare"
	19	[221]	MOVE     	5 2
	20	[221]	CALL     	3 3 1
	21	[223]	LOADNIL  	3 3
	22	[223]	RETURN   	3 2
	23	[224]	RETURN   	0 1

function <./moonscript/compile/statement.lua:225,228> (6 instructions, 24 bytes at 0x7fc94b4097b0)
2 params, 5 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[226]	SELF     	2 1 -1	; "call"
	2	[226]	MOVE     	4 0
	3	[226]	CALL     	2 3 1
	4	[227]	LOADNIL  	2 2
	5	[227]	RETURN   	2 2
	6	[228]	RETURN   	0 1

function <./moonscript/compile/statement.lua:229,231> (5 instructions, 20 bytes at 0x7fc94b407fc0)
2 params, 5 slots, 0 upvalues, 2 locals, 2 constants, 0 functions
	1	[230]	SELF     	2 0 -1	; "stms"
	2	[230]	GETTABLE 	4 1 -2	; 2
	3	[230]	TAILCALL 	2 3 0
	4	[230]	RETURN   	2 0
	5	[231]	RETURN   	0 1

function <./moonscript/compile/statement.lua:232,238> (7 instructions, 28 bytes at 0x7fc94b4094f0)
2 params, 6 slots, 0 upvalues, 3 locals, 3 constants, 0 functions
	1	[234]	SELF     	2 0 -1	; "block"
	2	[234]	CALL     	2 2 2
	3	[235]	SELF     	3 2 -2	; "stms"
	4	[235]	GETTABLE 	5 1 -3	; 2
	5	[235]	CALL     	3 3 1
	6	[236]	RETURN   	2 2
	7	[238]	RETURN   	0 1

function <./moonscript/compile/statement.lua:239,239> (1 instruction, 4 bytes at 0x7fc94b40bc70)
1 param, 2 slots, 0 upvalues, 1 local, 0 constants, 0 functions
	1	[239]	RETURN   	0 1
-----------------------

main <./moonscript/data.lua:0,0> (69 instructions, 276 bytes at 0x7ffa544068a0)
0+ params, 28 slots, 0 upvalues, 9 locals, 39 constants, 7 functions
	1	[3]	GETGLOBAL	3 -1	; table
	2	[4]	GETTABLE 	4 3 -2	; "concat"
	3	[4]	GETTABLE 	5 3 -3	; "remove"
	4	[4]	GETTABLE 	2 3 -4	; "insert"
	5	[4]	MOVE     	1 5
	6	[4]	MOVE     	0 4
	7	[6]	LOADNIL  	3 3
	8	[14]	CLOSURE  	3 0	; 0x7ffa54406b20
	9	[15]	LOADNIL  	4 5
	10	[18]	NEWTABLE 	6 0 4
	11	[21]	CLOSURE  	7 1	; 0x7ffa54407040
	12	[21]	MOVE     	0 0
	13	[21]	SETTABLE 	6 -5 7	; "__tostring" -
	14	[24]	CLOSURE  	7 2	; 0x7ffa544065c0
	15	[24]	MOVE     	0 1
	16	[24]	SETTABLE 	6 -6 7	; "pop" -
	17	[32]	CLOSURE  	7 3	; 0x7ffa54407890
	18	[32]	MOVE     	0 2
	19	[32]	SETTABLE 	6 -7 7	; "push" -
	20	[35]	CLOSURE  	7 4	; 0x7ffa54406ca0
	21	[35]	SETTABLE 	6 -8 7	; "top" -
	22	[37]	SETTABLE 	6 -9 6	; "__index" -
	23	[38]	GETGLOBAL	7 -10	; setmetatable
	24	[38]	NEWTABLE 	8 0 3
	25	[42]	CLOSURE  	9 5	; 0x7ffa54406fc0
	26	[42]	SETTABLE 	8 -11 9	; "__init" -
	27	[43]	SETTABLE 	8 -12 6	; "__base" -
	28	[44]	SETTABLE 	8 -13 -14	; "__name" "Stack"
	29	[45]	NEWTABLE 	9 0 2
	30	[46]	SETTABLE 	9 -9 6	; "__index" -
	31	[51]	CLOSURE  	10 6	; 0x7ffa54407e90
	32	[51]	MOVE     	0 6
	33	[51]	SETTABLE 	9 -15 10	; "__call" -
	34	[38]	CALL     	7 3 2
	35	[52]	MOVE     	5 7
	36	[53]	SETTABLE 	6 -16 5	; "__class" -
	37	[54]	MOVE     	4 5
	38	[54]	CLOSE    	5
	39	[56]	MOVE     	5 3
	40	[56]	NEWTABLE 	6 19 0
	41	[57]	LOADK    	7 -17	; "and"
	42	[58]	LOADK    	8 -18	; "break"
	43	[59]	LOADK    	9 -19	; "do"
	44	[60]	LOADK    	10 -20	; "else"
	45	[61]	LOADK    	11 -21	; "elseif"
	46	[62]	LOADK    	12 -22	; "end"
	47	[63]	LOADK    	13 -23	; "false"
	48	[64]	LOADK    	14 -24	; "for"
	49	[65]	LOADK    	15 -25	; "function"
	50	[66]	LOADK    	16 -26	; "if"
	51	[67]	LOADK    	17 -27	; "in"
	52	[68]	LOADK    	18 -28	; "local"
	53	[69]	LOADK    	19 -29	; "nil"
	54	[70]	LOADK    	20 -30	; "not"
	55	[71]	LOADK    	21 -31	; "or"
	56	[72]	LOADK    	22 -32	; "repeat"
	57	[73]	LOADK    	23 -33	; "return"
	58	[74]	LOADK    	24 -34	; "then"
	59	[75]	LOADK    	25 -35	; "true"
	60	[76]	LOADK    	26 -36	; "until"
	61	[78]	LOADK    	27 -37	; "while"
	62	[78]	SETLIST  	6 21 1	; 1
	63	[56]	CALL     	5 2 2
	64	[79]	NEWTABLE 	6 0 3
	65	[80]	SETTABLE 	6 -38 3	; "Set" -
	66	[81]	SETTABLE 	6 -14 4	; "Stack" -
	67	[82]	SETTABLE 	6 -39 5	; "lua_keywords" -
	68	[83]	RETURN   	6 2
	69	[83]	RETURN   	0 1

function <./moonscript/data.lua:7,14> (10 instructions, 40 bytes at 0x7ffa54406b20)
1 param, 7 slots, 0 upvalues, 7 locals, 2 constants, 0 functions
	1	[8]	NEWTABLE 	1 0 0
	2	[9]	LOADK    	2 -1	; 1
	3	[9]	LEN      	3 0
	4	[9]	LOADK    	4 -1	; 1
	5	[9]	FORPREP  	2 2	; to 8
	6	[10]	GETTABLE 	6 0 5
	7	[11]	SETTABLE 	1 6 -2	; - true
	8	[9]	FORLOOP  	2 -3	; to 6
	9	[13]	RETURN   	1 2
	10	[14]	RETURN   	0 1

function <./moonscript/data.lua:19,21> (9 instructions, 36 bytes at 0x7ffa54407040)
1 param, 5 slots, 1 upvalue, 1 local, 3 constants, 0 functions
	1	[20]	LOADK    	1 -1	; "<Stack {"
	2	[20]	GETUPVAL 	2 0	; concat
	3	[20]	MOVE     	3 0
	4	[20]	LOADK    	4 -2	; ", "
	5	[20]	CALL     	2 3 2
	6	[20]	LOADK    	3 -3	; "}>"
	7	[20]	CONCAT   	1 1 3
	8	[20]	RETURN   	1 2
	9	[21]	RETURN   	0 1

function <./moonscript/data.lua:22,24> (5 instructions, 20 bytes at 0x7ffa544065c0)
1 param, 3 slots, 1 upvalue, 1 local, 0 constants, 0 functions
	1	[23]	GETUPVAL 	1 0	; remove
	2	[23]	MOVE     	2 0
	3	[23]	TAILCALL 	1 2 0
	4	[23]	RETURN   	1 0
	5	[24]	RETURN   	0 1

function <./moonscript/data.lua:25,32> (14 instructions, 56 bytes at 0x7ffa54407890)
2+ params, 6 slots, 1 upvalue, 3 locals, 1 constant, 0 functions
	1	[26]	GETUPVAL 	3 0	; insert
	2	[26]	MOVE     	4 0
	3	[26]	MOVE     	5 1
	4	[26]	CALL     	3 3 1
	5	[27]	VARARG   	3 2
	6	[27]	TEST     	3 0 0
	7	[27]	JMP      	5	; to 13
	8	[28]	SELF     	3 0 -1	; "push"
	9	[28]	VARARG   	5 0
	10	[28]	TAILCALL 	3 0 0
	11	[28]	RETURN   	3 0
	12	[28]	JMP      	1	; to 14
	13	[30]	RETURN   	1 2
	14	[32]	RETURN   	0 1

function <./moonscript/data.lua:33,35> (4 instructions, 16 bytes at 0x7ffa54406ca0)
1 param, 2 slots, 0 upvalues, 1 local, 0 constants, 0 functions
	1	[34]	LEN      	1 0
	2	[34]	GETTABLE 	1 0 1
	3	[34]	RETURN   	1 2
	4	[35]	RETURN   	0 1

function <./moonscript/data.lua:39,42> (6 instructions, 24 bytes at 0x7ffa54406fc0)
1+ param, 5 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[40]	SELF     	2 0 -1	; "push"
	2	[40]	VARARG   	4 0
	3	[40]	CALL     	2 0 1
	4	[41]	LOADNIL  	2 2
	5	[41]	RETURN   	2 2
	6	[42]	RETURN   	0 1

function <./moonscript/data.lua:47,51> (10 instructions, 40 bytes at 0x7ffa54407e90)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[48]	GETGLOBAL	2 -1	; setmetatable
	2	[48]	NEWTABLE 	3 0 0
	3	[48]	GETUPVAL 	4 0	; _base_0
	4	[48]	CALL     	2 3 2
	5	[49]	GETTABLE 	3 0 -2	; "__init"
	6	[49]	MOVE     	4 2
	7	[49]	VARARG   	5 0
	8	[49]	CALL     	3 0 1
	9	[50]	RETURN   	2 2
	10	[51]	RETURN   	0 1
-----------------------

main <./moonscript/base.lua:0,0> (74 instructions, 296 bytes at 0x7f84614068a0)
0+ params, 22 slots, 0 upvalues, 22 locals, 26 constants, 8 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "moonscript.compile"
	3	[1]	CALL     	0 2 2
	4	[2]	GETGLOBAL	1 -1	; require
	5	[2]	LOADK    	2 -3	; "moonscript.parse"
	6	[2]	CALL     	1 2 2
	7	[3]	LOADNIL  	2 4
	8	[5]	GETGLOBAL	5 -4	; table
	9	[6]	GETTABLE 	6 5 -5	; "concat"
	10	[6]	GETTABLE 	7 5 -6	; "insert"
	11	[6]	GETTABLE 	4 5 -7	; "remove"
	12	[6]	MOVE     	3 7
	13	[6]	MOVE     	2 6
	14	[8]	LOADNIL  	5 8
	15	[10]	GETGLOBAL	9 -1	; require
	16	[10]	LOADK    	10 -8	; "moonscript.util"
	17	[10]	CALL     	9 2 2
	18	[11]	GETTABLE 	10 9 -9	; "split"
	19	[11]	GETTABLE 	11 9 -10	; "dump"
	20	[11]	GETTABLE 	12 9 -11	; "get_options"
	21	[11]	GETTABLE 	8 9 -12	; "unpack"
	22	[11]	MOVE     	7 12
	23	[11]	MOVE     	6 11
	24	[11]	MOVE     	5 10
	25	[13]	NEWTABLE 	9 0 2
	26	[14]	GETGLOBAL	10 -13	; loadstring
	27	[14]	SETTABLE 	9 -13 10	; "loadstring" -
	28	[15]	GETGLOBAL	10 -14	; load
	29	[15]	SETTABLE 	9 -14 10	; "load" -
	30	[17]	LOADNIL  	10 19
	31	[18]	LOADK    	10 -15	; "/"
	32	[19]	GETGLOBAL	20 -1	; require
	33	[19]	LOADK    	21 -16	; "moonscript.line_tables"
	34	[19]	CALL     	20 2 2
	35	[19]	MOVE     	11 20
	36	[47]	CLOSURE  	12 0	; 0x7f8461406cf0
	37	[47]	MOVE     	0 5
	38	[47]	MOVE     	0 2
	39	[65]	CLOSURE  	13 1	; 0x7f8461407680
	40	[65]	MOVE     	0 1
	41	[65]	MOVE     	0 0
	42	[86]	CLOSURE  	14 2	; 0x7f8461407f10
	43	[86]	MOVE     	0 10
	44	[86]	MOVE     	0 15
	45	[101]	CLOSURE  	15 3	; 0x7f8461408340
	46	[101]	MOVE     	0 7
	47	[101]	MOVE     	0 13
	48	[101]	MOVE     	0 11
	49	[101]	MOVE     	0 9
	50	[101]	MOVE     	0 8
	51	[110]	CLOSURE  	16 4	; 0x7f8461408b80
	52	[110]	MOVE     	0 15
	53	[114]	CLOSURE  	17 5	; 0x7f8461408fc0
	54	[114]	MOVE     	0 16
	55	[131]	CLOSURE  	18 6	; 0x7f84614090c0
	56	[131]	MOVE     	0 12
	57	[131]	MOVE     	0 14
	58	[131]	MOVE     	0 3
	59	[141]	CLOSURE  	19 7	; 0x7f8461409620
	60	[141]	MOVE     	0 14
	61	[141]	MOVE     	0 4
	62	[142]	NEWTABLE 	20 0 10
	63	[143]	SETTABLE 	20 -17 -18	; "_NAME" "moonscript"
	64	[144]	SETTABLE 	20 -19 18	; "insert_loader" -
	65	[145]	SETTABLE 	20 -20 19	; "remove_loader" -
	66	[146]	SETTABLE 	20 -21 13	; "to_lua" -
	67	[147]	SETTABLE 	20 -22 14	; "moon_loader" -
	68	[148]	SETTABLE 	20 -23 10	; "dirsep" -
	69	[149]	SETTABLE 	20 -24 17	; "dofile" -
	70	[150]	SETTABLE 	20 -25 16	; "loadfile" -
	71	[151]	SETTABLE 	20 -13 15	; "loadstring" -
	72	[152]	SETTABLE 	20 -26 12	; "create_moonpath" -
	73	[153]	RETURN   	20 2
	74	[153]	RETURN   	0 1

function <./moonscript/base.lua:20,47> (36 instructions, 144 bytes at 0x7f8461406cf0)
1 param, 14 slots, 2 upvalues, 13 locals, 5 constants, 0 functions
	1	[23]	NEWTABLE 	2 0 0
	2	[24]	LOADK    	3 -1	; 1
	3	[25]	GETUPVAL 	4 0	; split
	4	[25]	MOVE     	5 0
	5	[25]	LOADK    	6 -2	; ";"
	6	[25]	CALL     	4 3 2
	7	[26]	LOADK    	5 -1	; 1
	8	[26]	LEN      	6 4
	9	[26]	LOADK    	7 -1	; 1
	10	[26]	FORPREP  	5 18	; to 29
	11	[27]	LOADBOOL 	9 0 0
	12	[29]	GETTABLE 	10 4 8
	13	[30]	SELF     	11 10 -3	; "match"
	14	[30]	LOADK    	13 -4	; "^(.-)%.lua$"
	15	[30]	CALL     	11 3 2
	16	[31]	TEST     	11 0 1
	17	[31]	JMP      	2	; to 20
	18	[32]	LOADBOOL 	9 1 0
	19	[33]	JMP      	6	; to 26
	20	[35]	MOVE     	12 11
	21	[35]	LOADK    	13 -5	; ".moon"
	22	[35]	CONCAT   	12 12 13
	23	[36]	SETTABLE 	2 3 12
	24	[37]	ADD      	3 3 -1	; - 1
	25	[38]	LOADBOOL 	9 1 0
	26	[40]	TEST     	9 0 1
	27	[40]	JMP      	1	; to 29
	28	[41]	JMP      	1	; to 30
	29	[26]	FORLOOP  	5 -19	; to 11
	30	[44]	MOVE     	1 2
	31	[46]	GETUPVAL 	2 1	; concat
	32	[46]	MOVE     	3 1
	33	[46]	LOADK    	4 -2	; ";"
	34	[46]	TAILCALL 	2 3 0
	35	[46]	RETURN   	2 0
	36	[47]	RETURN   	0 1

function <./moonscript/base.lua:48,65> (46 instructions, 184 bytes at 0x7f8461407680)
2 params, 12 slots, 2 upvalues, 8 locals, 7 constants, 0 functions
	1	[49]	EQ       	0 1 -1	; - nil
	2	[49]	JMP      	2	; to 5
	3	[50]	NEWTABLE 	2 0 0
	4	[50]	MOVE     	1 2
	5	[52]	GETGLOBAL	2 -3	; type
	6	[52]	MOVE     	3 0
	7	[52]	CALL     	2 2 2
	8	[52]	EQ       	1 -2 2	; "string" -
	9	[52]	JMP      	9	; to 19
	10	[53]	GETGLOBAL	2 -3	; type
	11	[53]	MOVE     	3 0
	12	[53]	CALL     	2 2 2
	13	[54]	LOADNIL  	3 3
	14	[54]	LOADK    	4 -4	; "expecting string (got "
	15	[54]	MOVE     	5 2
	16	[54]	LOADK    	6 -5	; ")"
	17	[54]	CONCAT   	4 4 6
	18	[54]	RETURN   	3 3
	19	[56]	GETUPVAL 	2 0	; parse
	20	[56]	GETTABLE 	2 2 -2	; "string"
	21	[56]	MOVE     	3 0
	22	[56]	CALL     	2 2 3
	23	[57]	TEST     	2 0 1
	24	[57]	JMP      	3	; to 28
	25	[58]	LOADNIL  	4 4
	26	[58]	MOVE     	5 3
	27	[58]	RETURN   	4 3
	28	[60]	GETUPVAL 	4 1	; compile
	29	[60]	GETTABLE 	4 4 -6	; "tree"
	30	[60]	MOVE     	5 2
	31	[60]	MOVE     	6 1
	32	[60]	CALL     	4 3 4
	33	[61]	TEST     	4 0 1
	34	[61]	JMP      	8	; to 43
	35	[62]	LOADNIL  	7 7
	36	[62]	GETUPVAL 	8 1	; compile
	37	[62]	GETTABLE 	8 8 -7	; "format_error"
	38	[62]	MOVE     	9 5
	39	[62]	MOVE     	10 6
	40	[62]	MOVE     	11 0
	41	[62]	CALL     	8 4 0
	42	[62]	RETURN   	7 0
	43	[64]	MOVE     	7 4
	44	[64]	MOVE     	8 5
	45	[64]	RETURN   	7 3
	46	[65]	RETURN   	0 1

function <./moonscript/base.lua:66,86> (54 instructions, 216 bytes at 0x7f8461407f10)
1 param, 12 slots, 2 upvalues, 11 locals, 17 constants, 0 functions
	1	[67]	SELF     	1 0 -1	; "gsub"
	2	[67]	LOADK    	3 -2	; "%."
	3	[67]	GETUPVAL 	4 0	; dirsep
	4	[67]	CALL     	1 4 2
	5	[68]	LOADNIL  	2 3
	6	[69]	GETGLOBAL	4 -3	; package
	7	[69]	GETTABLE 	4 4 -4	; "moonpath"
	8	[69]	SELF     	4 4 -5	; "gmatch"
	9	[69]	LOADK    	6 -6	; "[^;]+"
	10	[69]	CALL     	4 3 4
	11	[69]	JMP      	13	; to 25
	12	[70]	SELF     	8 7 -1	; "gsub"
	13	[70]	LOADK    	10 -7	; "?"
	14	[70]	MOVE     	11 1
	15	[70]	CALL     	8 4 2
	16	[70]	MOVE     	3 8
	17	[71]	GETGLOBAL	8 -8	; io
	18	[71]	GETTABLE 	8 8 -9	; "open"
	19	[71]	MOVE     	9 3
	20	[71]	CALL     	8 2 2
	21	[71]	MOVE     	2 8
	22	[72]	TEST     	2 0 0
	23	[72]	JMP      	1	; to 25
	24	[73]	JMP      	2	; to 27
	25	[69]	TFORLOOP 	4 1
	26	[74]	JMP      	-15	; to 12
	27	[76]	TEST     	2 0 0
	28	[76]	JMP      	22	; to 51
	29	[77]	SELF     	4 2 -10	; "read"
	30	[77]	LOADK    	6 -11	; "*a"
	31	[77]	CALL     	4 3 2
	32	[78]	SELF     	5 2 -12	; "close"
	33	[78]	CALL     	5 2 1
	34	[79]	GETUPVAL 	5 1	; loadstring
	35	[79]	MOVE     	6 4
	36	[79]	LOADK    	7 -13	; "@"
	37	[79]	GETGLOBAL	8 -14	; tostring
	38	[79]	MOVE     	9 3
	39	[79]	CALL     	8 2 2
	40	[79]	CONCAT   	7 7 8
	41	[79]	CALL     	5 3 3
	42	[80]	TEST     	5 0 1
	43	[80]	JMP      	6	; to 50
	44	[81]	GETGLOBAL	7 -15	; error
	45	[81]	MOVE     	8 3
	46	[81]	LOADK    	9 -16	; ": "
	47	[81]	MOVE     	10 6
	48	[81]	CONCAT   	8 8 10
	49	[81]	CALL     	7 2 1
	50	[83]	RETURN   	5 2
	51	[85]	LOADNIL  	4 4
	52	[85]	LOADK    	5 -17	; "Could not find moon file"
	53	[85]	RETURN   	4 3
	54	[86]	RETURN   	0 1

function <./moonscript/base.lua:87,101> (36 instructions, 144 bytes at 0x7f8461408340)
0+ params, 15 slots, 5 upvalues, 8 locals, 3 constants, 0 functions
	1	[88]	GETUPVAL 	1 0	; get_options
	2	[88]	VARARG   	2 0
	3	[88]	CALL     	1 0 6
	4	[89]	TEST     	3 0 1
	5	[89]	JMP      	1	; to 7
	6	[89]	LOADK    	3 -1	; "=(moonscript.loadstring)"
	7	[90]	GETUPVAL 	6 1	; to_lua
	8	[90]	MOVE     	7 2
	9	[90]	MOVE     	8 1
	10	[90]	CALL     	6 3 3
	11	[91]	TEST     	6 0 1
	12	[91]	JMP      	3	; to 16
	13	[92]	LOADNIL  	8 8
	14	[92]	MOVE     	9 7
	15	[92]	RETURN   	8 3
	16	[94]	TEST     	3 0 0
	17	[94]	JMP      	2	; to 20
	18	[95]	GETUPVAL 	8 2	; line_tables
	19	[95]	SETTABLE 	8 3 7
	20	[97]	GETUPVAL 	8 3	; lua
	21	[97]	GETTABLE 	8 8 -2	; "loadstring"
	22	[97]	TEST     	8 0 1
	23	[97]	JMP      	2	; to 26
	24	[97]	GETUPVAL 	8 3	; lua
	25	[97]	GETTABLE 	8 8 -3	; "load"
	26	[97]	MOVE     	9 6
	27	[97]	MOVE     	10 3
	28	[97]	GETUPVAL 	11 4	; unpack
	29	[97]	NEWTABLE 	12 2 0
	30	[98]	MOVE     	13 4
	31	[100]	MOVE     	14 5
	32	[100]	SETLIST  	12 2 1	; 1
	33	[97]	CALL     	11 2 0
	34	[97]	TAILCALL 	8 0 0
	35	[100]	RETURN   	8 0
	36	[101]	RETURN   	0 1

function <./moonscript/base.lua:102,110> (27 instructions, 108 bytes at 0x7f8461408b80)
1+ param, 10 slots, 1 upvalue, 5 locals, 8 constants, 0 functions
	1	[103]	GETGLOBAL	2 -1	; io
	2	[103]	GETTABLE 	2 2 -2	; "open"
	3	[103]	MOVE     	3 0
	4	[103]	CALL     	2 2 3
	5	[104]	TEST     	2 0 1
	6	[104]	JMP      	3	; to 10
	7	[105]	LOADNIL  	4 4
	8	[105]	MOVE     	5 3
	9	[105]	RETURN   	4 3
	10	[107]	GETGLOBAL	4 -3	; assert
	11	[107]	SELF     	5 2 -4	; "read"
	12	[107]	LOADK    	7 -5	; "*a"
	13	[107]	CALL     	5 3 0
	14	[107]	CALL     	4 0 2
	15	[108]	SELF     	5 2 -6	; "close"
	16	[108]	CALL     	5 2 1
	17	[109]	GETUPVAL 	5 0	; loadstring
	18	[109]	MOVE     	6 4
	19	[109]	LOADK    	7 -7	; "@"
	20	[109]	GETGLOBAL	8 -8	; tostring
	21	[109]	MOVE     	9 0
	22	[109]	CALL     	8 2 2
	23	[109]	CONCAT   	7 7 8
	24	[109]	VARARG   	8 0
	25	[109]	TAILCALL 	5 0 0
	26	[109]	RETURN   	5 0
	27	[110]	RETURN   	0 1

function <./moonscript/base.lua:111,114> (9 instructions, 36 bytes at 0x7f8461408fc0)
0+ params, 4 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[112]	GETGLOBAL	1 -1	; assert
	2	[112]	GETUPVAL 	2 0	; loadfile
	3	[112]	VARARG   	3 0
	4	[112]	CALL     	2 0 0
	5	[112]	CALL     	1 0 2
	6	[113]	MOVE     	2 1
	7	[113]	TAILCALL 	2 1 0
	8	[113]	RETURN   	2 0
	9	[114]	RETURN   	0 1

function <./moonscript/base.lua:115,131> (38 instructions, 152 bytes at 0x7f84614090c0)
1 param, 8 slots, 3 upvalues, 7 locals, 8 constants, 0 functions
	1	[116]	EQ       	0 0 -1	; - nil
	2	[116]	JMP      	1	; to 4
	3	[117]	LOADK    	0 -2	; 2
	4	[119]	GETGLOBAL	1 -3	; package
	5	[119]	GETTABLE 	1 1 -4	; "moonpath"
	6	[119]	TEST     	1 0 1
	7	[119]	JMP      	6	; to 14
	8	[120]	GETGLOBAL	1 -3	; package
	9	[120]	GETUPVAL 	2 0	; create_moonpath
	10	[120]	GETGLOBAL	3 -3	; package
	11	[120]	GETTABLE 	3 3 -5	; "path"
	12	[120]	CALL     	2 2 2
	13	[120]	SETTABLE 	1 -4 2	; "moonpath" -
	14	[122]	GETGLOBAL	1 -3	; package
	15	[122]	GETTABLE 	1 1 -6	; "loaders"
	16	[122]	TEST     	1 0 1
	17	[122]	JMP      	2	; to 20
	18	[122]	GETGLOBAL	1 -3	; package
	19	[122]	GETTABLE 	1 1 -7	; "searchers"
	20	[123]	LOADK    	2 -8	; 1
	21	[123]	LEN      	3 1
	22	[123]	LOADK    	4 -8	; 1
	23	[123]	FORPREP  	2 6	; to 30
	24	[124]	GETTABLE 	6 1 5
	25	[125]	GETUPVAL 	7 1	; moon_loader
	26	[125]	EQ       	0 6 7
	27	[125]	JMP      	2	; to 30
	28	[126]	LOADBOOL 	7 0 0
	29	[126]	RETURN   	7 2
	30	[123]	FORLOOP  	2 -7	; to 24
	31	[129]	GETUPVAL 	2 2	; insert
	32	[129]	MOVE     	3 1
	33	[129]	MOVE     	4 0
	34	[129]	GETUPVAL 	5 1	; moon_loader
	35	[129]	CALL     	2 4 1
	36	[130]	LOADBOOL 	2 1 0
	37	[130]	RETURN   	2 2
	38	[131]	RETURN   	0 1

function <./moonscript/base.lua:132,141> (24 instructions, 96 bytes at 0x7f8461409620)
0 params, 9 slots, 2 upvalues, 6 locals, 4 constants, 0 functions
	1	[133]	GETGLOBAL	0 -1	; package
	2	[133]	GETTABLE 	0 0 -2	; "loaders"
	3	[133]	TEST     	0 0 1
	4	[133]	JMP      	2	; to 7
	5	[133]	GETGLOBAL	0 -1	; package
	6	[133]	GETTABLE 	0 0 -3	; "searchers"
	7	[134]	GETGLOBAL	1 -4	; ipairs
	8	[134]	MOVE     	2 0
	9	[134]	CALL     	1 2 4
	10	[134]	JMP      	9	; to 20
	11	[135]	GETUPVAL 	6 0	; moon_loader
	12	[135]	EQ       	0 5 6
	13	[135]	JMP      	6	; to 20
	14	[136]	GETUPVAL 	6 1	; remove
	15	[136]	MOVE     	7 0
	16	[136]	MOVE     	8 4
	17	[136]	CALL     	6 3 1
	18	[137]	LOADBOOL 	6 1 0
	19	[137]	RETURN   	6 2
	20	[134]	TFORLOOP 	1 2
	21	[138]	JMP      	-11	; to 11
	22	[140]	LOADBOOL 	1 0 0
	23	[140]	RETURN   	1 2
	24	[141]	RETURN   	0 1
-----------------------

main <./moonscript/types.lua:0,0> (218 instructions, 872 bytes at 0x7ff165c068a0)
0+ params, 23 slots, 0 upvalues, 23 locals, 55 constants, 17 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "moonscript.util"
	3	[1]	CALL     	0 2 2
	4	[2]	LOADNIL  	1 1
	5	[3]	GETGLOBAL	2 -1	; require
	6	[3]	LOADK    	3 -3	; "moonscript.data"
	7	[3]	CALL     	2 2 2
	8	[3]	GETTABLE 	1 2 -4	; "Set"
	9	[4]	LOADNIL  	2 2
	10	[5]	GETGLOBAL	3 -5	; table
	11	[5]	GETTABLE 	2 3 -6	; "insert"
	12	[6]	LOADNIL  	3 3
	13	[7]	GETTABLE 	3 0 -7	; "unpack"
	14	[8]	MOVE     	4 1
	15	[8]	NEWTABLE 	5 4 0
	16	[9]	LOADK    	6 -8	; "foreach"
	17	[10]	LOADK    	7 -9	; "for"
	18	[11]	LOADK    	8 -10	; "while"
	19	[13]	LOADK    	9 -11	; "return"
	20	[13]	SETLIST  	5 4 1	; 1
	21	[8]	CALL     	4 2 2
	22	[14]	MOVE     	5 1
	23	[14]	NEWTABLE 	6 6 0
	24	[15]	LOADK    	7 -12	; "if"
	25	[16]	LOADK    	8 -13	; "unless"
	26	[17]	LOADK    	9 -14	; "with"
	27	[18]	LOADK    	10 -15	; "switch"
	28	[19]	LOADK    	11 -16	; "class"
	29	[21]	LOADK    	12 -17	; "do"
	30	[21]	SETLIST  	6 6 1	; 1
	31	[14]	CALL     	5 2 2
	32	[22]	MOVE     	6 1
	33	[22]	NEWTABLE 	7 2 0
	34	[23]	LOADK    	8 -11	; "return"
	35	[25]	LOADK    	9 -18	; "break"
	36	[25]	SETLIST  	7 2 1	; 1
	37	[22]	CALL     	6 2 2
	38	[26]	LOADNIL  	7 7
	39	[36]	CLOSURE  	7 0	; 0x7ff165c06c40
	40	[37]	LOADNIL  	8 8
	41	[39]	GETTABLE 	9 0 -19	; "moon"
	42	[39]	GETTABLE 	9 9 -20	; "type"
	43	[46]	CLOSURE  	8 1	; 0x7ff165c06bc0
	44	[46]	MOVE     	0 9
	45	[46]	CLOSE    	9
	46	[48]	LOADNIL  	9 9
	47	[54]	CLOSURE  	9 2	; 0x7ff165c07760
	48	[54]	MOVE     	0 7
	49	[55]	LOADNIL  	10 10
	50	[60]	CLOSURE  	10 3	; 0x7ff165c07ff0
	51	[61]	LOADNIL  	11 11
	52	[64]	CLOSURE  	11 4	; 0x7ff165c08600
	53	[65]	LOADNIL  	12 12
	54	[68]	CLOSURE  	12 5	; 0x7ff165c08800
	55	[68]	MOVE     	0 7
	56	[69]	NEWTABLE 	13 0 0
	57	[70]	NEWTABLE 	14 0 8
	58	[71]	NEWTABLE 	15 2 0
	59	[71]	NEWTABLE 	16 2 0
	60	[73]	LOADK    	17 -21	; "name"
	61	[75]	LOADK    	18 -22	; "Tmp"
	62	[75]	SETLIST  	16 2 1	; 1
	63	[75]	NEWTABLE 	17 2 0
	64	[77]	LOADK    	18 -23	; "body"
	65	[79]	MOVE     	19 13
	66	[79]	SETLIST  	17 2 1	; 1
	67	[80]	SETLIST  	15 2 1	; 1
	68	[80]	SETTABLE 	14 -16 15	; "class" -
	69	[81]	NEWTABLE 	15 4 0
	70	[81]	NEWTABLE 	16 2 0
	71	[83]	LOADK    	17 -25	; "args"
	72	[85]	MOVE     	18 13
	73	[85]	SETLIST  	16 2 1	; 1
	74	[85]	NEWTABLE 	17 2 0
	75	[87]	LOADK    	18 -26	; "whitelist"
	76	[89]	MOVE     	19 13
	77	[89]	SETLIST  	17 2 1	; 1
	78	[89]	NEWTABLE 	18 2 0
	79	[91]	LOADK    	19 -27	; "arrow"
	80	[93]	LOADK    	20 -28	; "slim"
	81	[93]	SETLIST  	18 2 1	; 1
	82	[93]	NEWTABLE 	19 2 0
	83	[95]	LOADK    	20 -23	; "body"
	84	[97]	MOVE     	21 13
	85	[97]	SETLIST  	19 2 1	; 1
	86	[98]	SETLIST  	15 4 1	; 1
	87	[98]	SETTABLE 	14 -24 15	; "fndef" -
	88	[99]	NEWTABLE 	15 3 0
	89	[99]	NEWTABLE 	16 2 0
	90	[101]	LOADK    	17 -29	; "names"
	91	[103]	MOVE     	18 13
	92	[103]	SETLIST  	16 2 1	; 1
	93	[103]	NEWTABLE 	17 1 0
	94	[106]	LOADK    	18 -30	; "iter"
	95	[106]	SETLIST  	17 1 1	; 1
	96	[106]	NEWTABLE 	18 2 0
	97	[108]	LOADK    	19 -23	; "body"
	98	[110]	MOVE     	20 13
	99	[110]	SETLIST  	18 2 1	; 1
	100	[111]	SETLIST  	15 3 1	; 1
	101	[111]	SETTABLE 	14 -8 15	; "foreach" -
	102	[112]	NEWTABLE 	15 3 0
	103	[112]	NEWTABLE 	16 1 0
	104	[115]	LOADK    	17 -21	; "name"
	105	[115]	SETLIST  	16 1 1	; 1
	106	[115]	NEWTABLE 	17 2 0
	107	[117]	LOADK    	18 -31	; "bounds"
	108	[119]	MOVE     	19 13
	109	[119]	SETLIST  	17 2 1	; 1
	110	[119]	NEWTABLE 	18 2 0
	111	[121]	LOADK    	19 -23	; "body"
	112	[123]	MOVE     	20 13
	113	[123]	SETLIST  	18 2 1	; 1
	114	[124]	SETLIST  	15 3 1	; 1
	115	[124]	SETTABLE 	14 -9 15	; "for" -
	116	[125]	NEWTABLE 	15 2 0
	117	[125]	NEWTABLE 	16 2 0
	118	[127]	LOADK    	17 -32	; "cond"
	119	[129]	MOVE     	18 13
	120	[129]	SETLIST  	16 2 1	; 1
	121	[129]	NEWTABLE 	17 2 0
	122	[131]	LOADK    	18 -23	; "body"
	123	[133]	MOVE     	19 13
	124	[133]	SETLIST  	17 2 1	; 1
	125	[134]	SETLIST  	15 2 1	; 1
	126	[134]	SETTABLE 	14 -10 15	; "while" -
	127	[135]	NEWTABLE 	15 2 0
	128	[135]	NEWTABLE 	16 2 0
	129	[137]	LOADK    	17 -29	; "names"
	130	[139]	MOVE     	18 13
	131	[139]	SETLIST  	16 2 1	; 1
	132	[139]	NEWTABLE 	17 2 0
	133	[141]	LOADK    	18 -34	; "values"
	134	[143]	MOVE     	19 13
	135	[143]	SETLIST  	17 2 1	; 1
	136	[144]	SETLIST  	15 2 1	; 1
	137	[144]	SETTABLE 	14 -33 15	; "assign" -
	138	[145]	NEWTABLE 	15 1 0
	139	[145]	NEWTABLE 	16 2 0
	140	[147]	LOADK    	17 -29	; "names"
	141	[149]	MOVE     	18 13
	142	[149]	SETLIST  	16 2 1	; 1
	143	[150]	SETLIST  	15 1 1	; 1
	144	[150]	SETTABLE 	14 -35 15	; "declare" -
	145	[151]	NEWTABLE 	15 2 0
	146	[151]	NEWTABLE 	16 2 0
	147	[153]	LOADK    	17 -32	; "cond"
	148	[155]	MOVE     	18 13
	149	[155]	SETLIST  	16 2 1	; 1
	150	[155]	NEWTABLE 	17 2 0
	151	[157]	LOADK    	18 -36	; "then"
	152	[159]	MOVE     	19 13
	153	[159]	SETLIST  	17 2 1	; 1
	154	[160]	SETLIST  	15 2 1	; 1
	155	[160]	SETTABLE 	14 -12 15	; "if" -
	156	[162]	LOADNIL  	15 15
	157	[174]	CLOSURE  	15 6	; 0x7ff165c06f10
	158	[174]	MOVE     	0 14
	159	[175]	MOVE     	16 15
	160	[175]	CALL     	16 1 2
	161	[176]	LOADNIL  	17 17
	162	[204]	CLOSURE  	17 7	; 0x7ff165c070c0
	163	[204]	MOVE     	0 14
	164	[204]	MOVE     	0 3
	165	[204]	MOVE     	0 13
	166	[205]	LOADNIL  	18 18
	167	[206]	GETGLOBAL	19 -37	; setmetatable
	168	[206]	NEWTABLE 	20 0 6
	169	[215]	CLOSURE  	21 8	; 0x7ff165c08ba0
	170	[215]	SETTABLE 	20 -38 21	; "group" -
	171	[221]	CLOSURE  	21 9	; 0x7ff165c08f10
	172	[221]	SETTABLE 	20 -17 21	; "do" -
	173	[231]	CLOSURE  	21 10	; 0x7ff165c08fa0
	174	[231]	MOVE     	0 18
	175	[231]	SETTABLE 	20 -39 21	; "assign_one" -
	176	[249]	CLOSURE  	21 11	; 0x7ff165c093d0
	177	[249]	SETTABLE 	20 -5 21	; "table" -
	178	[255]	CLOSURE  	21 12	; 0x7ff165c097a0
	179	[255]	SETTABLE 	20 -40 21	; "block_exp" -
	180	[273]	CLOSURE  	21 13	; 0x7ff165c09860
	181	[273]	MOVE     	0 2
	182	[273]	SETTABLE 	20 -41 21	; "chain" -
	183	[274]	NEWTABLE 	21 0 1
	184	[278]	CLOSURE  	22 14	; 0x7ff165c09d70
	185	[278]	MOVE     	0 17
	186	[278]	SETTABLE 	21 -42 22	; "__index" -
	187	[206]	CALL     	19 3 2
	188	[279]	MOVE     	18 19
	189	[280]	GETGLOBAL	19 -37	; setmetatable
	190	[280]	NEWTABLE 	20 0 0
	191	[280]	NEWTABLE 	21 0 1
	192	[301]	CLOSURE  	22 15	; 0x7ff165c09eb0
	193	[301]	MOVE     	0 16
	194	[301]	MOVE     	0 7
	195	[301]	SETTABLE 	21 -42 22	; "__index" -
	196	[280]	CALL     	19 3 2
	197	[303]	LOADNIL  	20 20
	198	[306]	CLOSURE  	20 16	; 0x7ff165c0ace0
	199	[306]	MOVE     	0 19
	200	[306]	MOVE     	0 7
	201	[307]	NEWTABLE 	21 1 0
	202	[309]	LOADK    	22 -43	; "noop"
	203	[309]	SETLIST  	21 1 1	; 1
	204	[310]	NEWTABLE 	22 0 12
	205	[311]	SETTABLE 	22 -44 7	; "ntype" -
	206	[312]	SETTABLE 	22 -45 20	; "smart_node" -
	207	[313]	SETTABLE 	22 -46 18	; "build" -
	208	[314]	SETTABLE 	22 -47 10	; "is_value" -
	209	[315]	SETTABLE 	22 -48 12	; "is_slice" -
	210	[316]	SETTABLE 	22 -49 4	; "manual_return" -
	211	[317]	SETTABLE 	22 -50 5	; "cascading" -
	212	[318]	SETTABLE 	22 -51 11	; "value_is_singular" -
	213	[319]	SETTABLE 	22 -52 9	; "value_can_be_statement" -
	214	[320]	SETTABLE 	22 -53 8	; "mtype" -
	215	[321]	SETTABLE 	22 -54 6	; "terminating" -
	216	[322]	SETTABLE 	22 -55 21	; "NOOP" -
	217	[323]	RETURN   	22 2
	218	[323]	RETURN   	0 1

function <./moonscript/types.lua:27,36> (16 instructions, 64 bytes at 0x7ff165c06c40)
1 param, 3 slots, 0 upvalues, 2 locals, 5 constants, 0 functions
	1	[28]	GETGLOBAL	1 -1	; type
	2	[28]	MOVE     	2 0
	3	[28]	CALL     	1 2 2
	4	[29]	EQ       	0 -2 1	; "nil" -
	5	[29]	JMP      	3	; to 9
	6	[30]	LOADK    	2 -2	; "nil"
	7	[30]	RETURN   	2 2
	8	[30]	JMP      	7	; to 16
	9	[31]	EQ       	0 -3 1	; "table" -
	10	[31]	JMP      	3	; to 14
	11	[32]	GETTABLE 	2 0 -4	; 1
	12	[32]	RETURN   	2 2
	13	[32]	JMP      	2	; to 16
	14	[34]	LOADK    	2 -5	; "value"
	15	[34]	RETURN   	2 2
	16	[36]	RETURN   	0 1

function <./moonscript/types.lua:40,46> (15 instructions, 60 bytes at 0x7ff165c06bc0)
1 param, 4 slots, 1 upvalue, 2 locals, 3 constants, 0 functions
	1	[41]	GETGLOBAL	1 -1	; getmetatable
	2	[41]	MOVE     	2 0
	3	[41]	CALL     	1 2 2
	4	[42]	TEST     	1 0 0
	5	[42]	JMP      	5	; to 11
	6	[42]	GETTABLE 	2 1 -2	; "smart_node"
	7	[42]	TEST     	2 0 0
	8	[42]	JMP      	2	; to 11
	9	[43]	LOADK    	2 -3	; "table"
	10	[43]	RETURN   	2 2
	11	[45]	GETUPVAL 	2 0	; moon_type
	12	[45]	MOVE     	3 0
	13	[45]	TAILCALL 	2 2 0
	14	[45]	RETURN   	2 0
	15	[46]	RETURN   	0 1

function <./moonscript/types.lua:49,54> (17 instructions, 68 bytes at 0x7ff165c07760)
1 param, 3 slots, 1 upvalue, 1 local, 2 constants, 0 functions
	1	[50]	GETUPVAL 	1 0	; ntype
	2	[50]	MOVE     	2 0
	3	[50]	CALL     	1 2 2
	4	[50]	EQ       	1 1 -1	; - "chain"
	5	[50]	JMP      	2	; to 8
	6	[51]	LOADBOOL 	1 0 0
	7	[51]	RETURN   	1 2
	8	[53]	GETUPVAL 	1 0	; ntype
	9	[53]	LEN      	2 0
	10	[53]	GETTABLE 	2 0 2
	11	[53]	CALL     	1 2 2
	12	[53]	EQ       	1 1 -2	; - "call"
	13	[53]	JMP      	1	; to 15
	14	[53]	LOADBOOL 	1 0 1
	15	[53]	LOADBOOL 	1 1 0
	16	[53]	RETURN   	1 2
	17	[54]	RETURN   	0 1

function <./moonscript/types.lua:56,60> (18 instructions, 72 bytes at 0x7ff165c07ff0)
1 param, 6 slots, 0 upvalues, 3 locals, 7 constants, 0 functions
	1	[57]	GETGLOBAL	1 -1	; require
	2	[57]	LOADK    	2 -2	; "moonscript.compile"
	3	[57]	CALL     	1 2 2
	4	[58]	GETGLOBAL	2 -1	; require
	5	[58]	LOADK    	3 -3	; "moonscript.transform"
	6	[58]	CALL     	2 2 2
	7	[59]	GETTABLE 	3 1 -4	; "Block"
	8	[59]	SELF     	3 3 -5	; "is_value"
	9	[59]	MOVE     	5 0
	10	[59]	CALL     	3 3 2
	11	[59]	TEST     	3 0 1
	12	[59]	JMP      	4	; to 17
	13	[59]	GETTABLE 	3 2 -6	; "Value"
	14	[59]	SELF     	3 3 -7	; "can_transform"
	15	[59]	MOVE     	5 0
	16	[59]	CALL     	3 3 2
	17	[59]	RETURN   	3 2
	18	[60]	RETURN   	0 1

function <./moonscript/types.lua:62,64> (15 instructions, 60 bytes at 0x7ff165c08600)
1 param, 3 slots, 0 upvalues, 1 local, 5 constants, 0 functions
	1	[63]	GETGLOBAL	1 -1	; type
	2	[63]	MOVE     	2 0
	3	[63]	CALL     	1 2 2
	4	[63]	EQ       	0 1 -2	; - "table"
	5	[63]	JMP      	7	; to 13
	6	[63]	GETTABLE 	1 0 -3	; 1
	7	[63]	EQ       	0 1 -4	; - "exp"
	8	[63]	JMP      	4	; to 13
	9	[63]	LEN      	1 0
	10	[63]	EQ       	1 1 -5	; - 2
	11	[63]	JMP      	1	; to 13
	12	[63]	LOADBOOL 	1 0 1
	13	[63]	LOADBOOL 	1 1 0
	14	[63]	RETURN   	1 2
	15	[64]	RETURN   	0 1

function <./moonscript/types.lua:66,68> (15 instructions, 60 bytes at 0x7ff165c08800)
1 param, 3 slots, 1 upvalue, 1 local, 2 constants, 0 functions
	1	[67]	GETUPVAL 	1 0	; ntype
	2	[67]	MOVE     	2 0
	3	[67]	CALL     	1 2 2
	4	[67]	EQ       	0 1 -1	; - "chain"
	5	[67]	JMP      	6	; to 12
	6	[67]	GETUPVAL 	1 0	; ntype
	7	[67]	LEN      	2 0
	8	[67]	GETTABLE 	2 0 2
	9	[67]	CALL     	1 2 2
	10	[67]	EQ       	1 1 -2	; - "slice"
	11	[67]	JMP      	1	; to 13
	12	[67]	LOADBOOL 	1 0 1
	13	[67]	LOADBOOL 	1 1 0
	14	[67]	RETURN   	1 2
	15	[68]	RETURN   	0 1

function <./moonscript/types.lua:163,174> (20 instructions, 80 bytes at 0x7ff165c06f10)
0 params, 14 slots, 1 upvalue, 13 locals, 3 constants, 0 functions
	1	[164]	NEWTABLE 	0 0 0
	2	[165]	GETGLOBAL	1 -1	; pairs
	3	[165]	GETUPVAL 	2 0	; node_types
	4	[165]	CALL     	1 2 4
	5	[165]	JMP      	11	; to 17
	6	[166]	NEWTABLE 	6 0 0
	7	[167]	GETGLOBAL	7 -2	; ipairs
	8	[167]	MOVE     	8 5
	9	[167]	CALL     	7 2 4
	10	[167]	JMP      	3	; to 14
	11	[168]	GETTABLE 	12 11 -3	; 1
	12	[169]	ADD      	13 10 -3	; - 1
	13	[169]	SETTABLE 	6 12 13
	14	[167]	TFORLOOP 	7 2
	15	[169]	JMP      	-5	; to 11
	16	[171]	SETTABLE 	0 4 6
	17	[165]	TFORLOOP 	1 2
	18	[171]	JMP      	-13	; to 6
	19	[173]	RETURN   	0 2
	20	[174]	RETURN   	0 1

function <./moonscript/types.lua:177,204> (16 instructions, 64 bytes at 0x7ff165c070c0)
1 param, 5 slots, 3 upvalues, 2 locals, 2 constants, 1 function
	1	[178]	GETUPVAL 	1 0	; node_types
	2	[178]	GETTABLE 	1 1 0
	3	[179]	TEST     	1 0 1
	4	[179]	JMP      	5	; to 10
	5	[180]	GETGLOBAL	2 -1	; error
	6	[180]	LOADK    	3 -2	; "don't know how to build node: "
	7	[180]	MOVE     	4 0
	8	[180]	CONCAT   	3 3 4
	9	[180]	CALL     	2 2 1
	10	[203]	CLOSURE  	2 0	; 0x7ff165c083c0
	11	[203]	MOVE     	0 0
	12	[203]	MOVE     	0 1
	13	[203]	GETUPVAL 	0 1	; unpack
	14	[203]	GETUPVAL 	0 2	; t
	15	[203]	RETURN   	2 2
	16	[204]	RETURN   	0 1

function <./moonscript/types.lua:182,203> (32 instructions, 128 bytes at 0x7ff165c083c0)
1 param, 11 slots, 4 upvalues, 10 locals, 3 constants, 0 functions
	1	[183]	EQ       	0 0 -1	; - nil
	2	[183]	JMP      	2	; to 5
	3	[184]	NEWTABLE 	1 0 0
	4	[184]	MOVE     	0 1
	5	[186]	NEWTABLE 	1 1 0
	6	[188]	GETUPVAL 	2 0	; name
	7	[188]	SETLIST  	1 1 1	; 1
	8	[189]	GETGLOBAL	2 -2	; ipairs
	9	[189]	GETUPVAL 	3 1	; spec
	10	[189]	CALL     	2 2 4
	11	[189]	JMP      	17	; to 29
	12	[190]	GETUPVAL 	7 2	; unpack
	13	[190]	MOVE     	8 6
	14	[190]	CALL     	7 2 3
	15	[191]	LOADNIL  	9 9
	16	[192]	GETTABLE 	10 0 7
	17	[192]	TEST     	10 0 0
	18	[192]	JMP      	2	; to 21
	19	[193]	GETTABLE 	9 0 7
	20	[193]	JMP      	1	; to 22
	21	[195]	MOVE     	9 8
	22	[197]	GETUPVAL 	10 3	; t
	23	[197]	EQ       	0 9 10
	24	[197]	JMP      	2	; to 27
	25	[198]	NEWTABLE 	10 0 0
	26	[198]	MOVE     	9 10
	27	[200]	ADD      	10 5 -3	; - 1
	28	[200]	SETTABLE 	1 10 9
	29	[189]	TFORLOOP 	2 2
	30	[200]	JMP      	-19	; to 12
	31	[202]	RETURN   	1 2
	32	[203]	RETURN   	0 1

function <./moonscript/types.lua:207,215> (10 instructions, 40 bytes at 0x7ff165c08ba0)
1 param, 4 slots, 0 upvalues, 1 local, 2 constants, 0 functions
	1	[208]	EQ       	0 0 -1	; - nil
	2	[208]	JMP      	2	; to 5
	3	[209]	NEWTABLE 	1 0 0
	4	[209]	MOVE     	0 1
	5	[211]	NEWTABLE 	1 2 0
	6	[212]	LOADK    	2 -2	; "group"
	7	[214]	MOVE     	3 0
	8	[214]	SETLIST  	1 2 1	; 1
	9	[214]	RETURN   	1 2
	10	[215]	RETURN   	0 1

function <./moonscript/types.lua:216,221> (6 instructions, 24 bytes at 0x7ff165c08f10)
1 param, 4 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[217]	NEWTABLE 	1 2 0
	2	[218]	LOADK    	2 -1	; "do"
	3	[220]	MOVE     	3 0
	4	[220]	SETLIST  	1 2 1	; 1
	5	[220]	RETURN   	1 2
	6	[221]	RETURN   	0 1

function <./moonscript/types.lua:222,231> (14 instructions, 56 bytes at 0x7ff165c08fa0)
2 params, 6 slots, 1 upvalue, 2 locals, 3 constants, 0 functions
	1	[223]	GETUPVAL 	2 0	; build
	2	[223]	GETTABLE 	2 2 -1	; "assign"
	3	[223]	NEWTABLE 	3 0 2
	4	[224]	NEWTABLE 	4 1 0
	5	[226]	MOVE     	5 0
	6	[226]	SETLIST  	4 1 1	; 1
	7	[226]	SETTABLE 	3 -2 4	; "names" -
	8	[227]	NEWTABLE 	4 1 0
	9	[229]	MOVE     	5 1
	10	[229]	SETLIST  	4 1 1	; 1
	11	[229]	SETTABLE 	3 -3 4	; "values" -
	12	[223]	TAILCALL 	2 2 0
	13	[230]	RETURN   	2 0
	14	[231]	RETURN   	0 1

function <./moonscript/types.lua:232,249> (26 instructions, 104 bytes at 0x7ff165c093d0)
1 param, 9 slots, 0 upvalues, 6 locals, 6 constants, 0 functions
	1	[233]	EQ       	0 0 -1	; - nil
	2	[233]	JMP      	2	; to 5
	3	[234]	NEWTABLE 	1 0 0
	4	[234]	MOVE     	0 1
	5	[236]	LOADK    	1 -2	; 1
	6	[236]	LEN      	2 0
	7	[236]	LOADK    	3 -2	; 1
	8	[236]	FORPREP  	1 11	; to 20
	9	[237]	GETTABLE 	5 0 4
	10	[238]	GETGLOBAL	6 -3	; type
	11	[238]	GETTABLE 	7 5 -2	; 1
	12	[238]	CALL     	6 2 2
	13	[238]	EQ       	0 6 -4	; - "string"
	14	[238]	JMP      	5	; to 20
	15	[239]	NEWTABLE 	6 2 0
	16	[240]	LOADK    	7 -5	; "key_literal"
	17	[242]	GETTABLE 	8 5 -2	; 1
	18	[242]	SETLIST  	6 2 1	; 1
	19	[242]	SETTABLE 	5 -2 6	; 1 -
	20	[236]	FORLOOP  	1 -12	; to 9
	21	[245]	NEWTABLE 	1 2 0
	22	[246]	LOADK    	2 -6	; "table"
	23	[248]	MOVE     	3 0
	24	[248]	SETLIST  	1 2 1	; 1
	25	[248]	RETURN   	1 2
	26	[249]	RETURN   	0 1

function <./moonscript/types.lua:250,255> (6 instructions, 24 bytes at 0x7ff165c097a0)
1 param, 4 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[251]	NEWTABLE 	1 2 0
	2	[252]	LOADK    	2 -1	; "block_exp"
	3	[254]	MOVE     	3 0
	4	[254]	SETLIST  	1 2 1	; 1
	5	[254]	RETURN   	1 2
	6	[255]	RETURN   	0 1

function <./moonscript/types.lua:256,273> (32 instructions, 128 bytes at 0x7ff165c09860)
1 param, 11 slots, 1 upvalue, 8 locals, 8 constants, 0 functions
	1	[257]	GETTABLE 	1 0 -1	; "base"
	2	[257]	TEST     	1 0 1
	3	[257]	JMP      	3	; to 7
	4	[257]	GETGLOBAL	1 -2	; error
	5	[257]	LOADK    	2 -3	; "expecting base property for chain"
	6	[257]	CALL     	1 2 2
	7	[258]	GETGLOBAL	2 -4	; type
	8	[258]	MOVE     	3 1
	9	[258]	CALL     	2 2 2
	10	[258]	EQ       	0 2 -5	; - "string"
	11	[258]	JMP      	5	; to 17
	12	[259]	NEWTABLE 	2 2 0
	13	[260]	LOADK    	3 -6	; "ref"
	14	[262]	MOVE     	4 1
	15	[262]	SETLIST  	2 2 1	; 1
	16	[262]	MOVE     	1 2
	17	[264]	NEWTABLE 	2 2 0
	18	[265]	LOADK    	3 -7	; "chain"
	19	[267]	MOVE     	4 1
	20	[267]	SETLIST  	2 2 1	; 1
	21	[268]	LOADK    	3 -8	; 1
	22	[268]	LEN      	4 0
	23	[268]	LOADK    	5 -8	; 1
	24	[268]	FORPREP  	3 5	; to 30
	25	[269]	GETTABLE 	7 0 6
	26	[270]	GETUPVAL 	8 0	; insert
	27	[270]	MOVE     	9 2
	28	[270]	MOVE     	10 7
	29	[270]	CALL     	8 3 1
	30	[268]	FORLOOP  	3 -6	; to 25
	31	[272]	RETURN   	2 2
	32	[273]	RETURN   	0 1

function <./moonscript/types.lua:275,278> (10 instructions, 40 bytes at 0x7ff165c09d70)
2 params, 5 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[276]	GETUPVAL 	2 0	; make_builder
	2	[276]	MOVE     	3 1
	3	[276]	CALL     	2 2 2
	4	[276]	SETTABLE 	0 1 2
	5	[277]	GETGLOBAL	2 -1	; rawget
	6	[277]	MOVE     	3 0
	7	[277]	MOVE     	4 1
	8	[277]	TAILCALL 	2 3 0
	9	[277]	RETURN   	2 0
	10	[278]	RETURN   	0 1

function <./moonscript/types.lua:281,301> (14 instructions, 56 bytes at 0x7ff165c09eb0)
2 params, 5 slots, 2 upvalues, 4 locals, 4 constants, 2 functions
	1	[282]	GETUPVAL 	2 0	; key_table
	2	[282]	GETTABLE 	2 2 1
	3	[283]	NEWTABLE 	3 0 3
	4	[284]	SETTABLE 	3 -1 -2	; "smart_node" true
	5	[291]	CLOSURE  	4 0	; 0x7ff165c0a2d0
	6	[291]	MOVE     	0 2
	7	[291]	GETUPVAL 	0 1	; ntype
	8	[291]	SETTABLE 	3 -3 4	; "__index" -
	9	[297]	CLOSURE  	4 1	; 0x7ff165c0aaa0
	10	[297]	MOVE     	0 2
	11	[297]	SETTABLE 	3 -4 4	; "__newindex" -
	12	[299]	SETTABLE 	0 1 3
	13	[300]	RETURN   	3 2
	14	[301]	RETURN   	0 1

function <./moonscript/types.lua:285,291> (28 instructions, 112 bytes at 0x7ff165c0a2d0)
2 params, 8 slots, 2 upvalues, 2 locals, 7 constants, 0 functions
	1	[286]	GETUPVAL 	2 0	; index
	2	[286]	GETTABLE 	2 2 1
	3	[286]	TEST     	2 0 0
	4	[286]	JMP      	7	; to 12
	5	[287]	GETGLOBAL	2 -1	; rawget
	6	[287]	MOVE     	3 0
	7	[287]	GETUPVAL 	4 0	; index
	8	[287]	GETTABLE 	4 4 1
	9	[287]	TAILCALL 	2 3 0
	10	[287]	RETURN   	2 0
	11	[287]	JMP      	16	; to 28
	12	[288]	GETGLOBAL	2 -2	; type
	13	[288]	MOVE     	3 1
	14	[288]	CALL     	2 2 2
	15	[288]	EQ       	0 2 -3	; - "string"
	16	[288]	JMP      	11	; to 28
	17	[289]	GETGLOBAL	2 -4	; error
	18	[289]	LOADK    	3 -5	; "unknown key: `"
	19	[289]	MOVE     	4 1
	20	[289]	LOADK    	5 -6	; "` on node type: `"
	21	[289]	GETUPVAL 	6 1	; ntype
	22	[289]	MOVE     	7 0
	23	[289]	CALL     	6 2 2
	24	[289]	LOADK    	7 -7	; "`"
	25	[289]	CONCAT   	3 3 7
	26	[289]	TAILCALL 	2 2 0
	27	[289]	RETURN   	2 0
	28	[291]	RETURN   	0 1

function <./moonscript/types.lua:292,297> (13 instructions, 52 bytes at 0x7ff165c0aaa0)
3 params, 7 slots, 1 upvalue, 3 locals, 1 constant, 0 functions
	1	[293]	GETUPVAL 	3 0	; index
	2	[293]	GETTABLE 	3 3 1
	3	[293]	TEST     	3 0 0
	4	[293]	JMP      	2	; to 7
	5	[294]	GETUPVAL 	3 0	; index
	6	[294]	GETTABLE 	1 3 1
	7	[296]	GETGLOBAL	3 -1	; rawset
	8	[296]	MOVE     	4 0
	9	[296]	MOVE     	5 1
	10	[296]	MOVE     	6 2
	11	[296]	TAILCALL 	3 4 0
	12	[296]	RETURN   	3 0
	13	[297]	RETURN   	0 1

function <./moonscript/types.lua:304,306> (10 instructions, 40 bytes at 0x7ff165c0ace0)
1 param, 6 slots, 2 upvalues, 1 local, 1 constant, 0 functions
	1	[305]	GETGLOBAL	1 -1	; setmetatable
	2	[305]	MOVE     	2 0
	3	[305]	GETUPVAL 	3 0	; smart_node_mt
	4	[305]	GETUPVAL 	4 1	; ntype
	5	[305]	MOVE     	5 0
	6	[305]	CALL     	4 2 2
	7	[305]	GETTABLE 	3 3 4
	8	[305]	TAILCALL 	1 3 0
	9	[305]	RETURN   	1 0
	10	[306]	RETURN   	0 1
-----------------------

main <./moonscript/util.lua:0,0> (73 instructions, 292 bytes at 0x7f893a4068a0)
0+ params, 16 slots, 0 upvalues, 15 locals, 18 constants, 14 functions
	1	[2]	GETGLOBAL	1 -1	; table
	2	[2]	GETTABLE 	0 1 -2	; "concat"
	3	[3]	GETGLOBAL	1 -3	; unpack
	4	[3]	TEST     	1 0 1
	5	[3]	JMP      	2	; to 8
	6	[3]	GETGLOBAL	1 -1	; table
	7	[3]	GETTABLE 	1 1 -3	; "unpack"
	8	[4]	GETGLOBAL	2 -4	; type
	9	[5]	NEWTABLE 	3 0 3
	10	[8]	CLOSURE  	4 0	; 0x7f893a406b60
	11	[8]	MOVE     	0 2
	12	[8]	SETTABLE 	3 -5 4	; "is_object" -
	13	[21]	CLOSURE  	4 1	; 0x7f893a4071f0
	14	[21]	MOVE     	0 2
	15	[21]	SETTABLE 	3 -6 4	; "is_a" -
	16	[31]	CLOSURE  	4 2	; 0x7f893a4074e0
	17	[31]	MOVE     	0 2
	18	[31]	SETTABLE 	3 -4 4	; "type" -
	19	[33]	LOADNIL  	4 4
	20	[40]	CLOSURE  	4 3	; 0x7f893a407850
	21	[41]	LOADNIL  	5 5
	22	[44]	CLOSURE  	5 4	; 0x7f893a407db0
	23	[45]	LOADNIL  	6 6
	24	[53]	CLOSURE  	6 5	; 0x7f893a406640
	25	[54]	LOADNIL  	7 7
	26	[62]	CLOSURE  	7 6	; 0x7f893a408330
	27	[62]	MOVE     	0 6
	28	[62]	MOVE     	0 5
	29	[62]	MOVE     	0 7
	30	[63]	LOADNIL  	8 8
	31	[76]	CLOSURE  	8 7	; 0x7f893a4077d0
	32	[77]	LOADNIL  	9 9
	33	[111]	CLOSURE  	9 8	; 0x7f893a408f60
	34	[111]	MOVE     	0 2
	35	[111]	MOVE     	0 0
	36	[112]	LOADNIL  	10 10
	37	[147]	CLOSURE  	10 9	; 0x7f893a407750
	38	[147]	MOVE     	0 1
	39	[147]	MOVE     	0 4
	40	[147]	MOVE     	0 6
	41	[147]	MOVE     	0 7
	42	[147]	MOVE     	0 5
	43	[147]	MOVE     	0 0
	44	[148]	GETGLOBAL	11 -7	; setfenv
	45	[148]	TEST     	11 0 1
	46	[148]	JMP      	1	; to 48
	47	[164]	CLOSURE  	11 10	; 0x7f893a406ed0
	48	[165]	GETGLOBAL	12 -8	; getfenv
	49	[165]	TEST     	12 0 1
	50	[165]	JMP      	1	; to 52
	51	[178]	CLOSURE  	12 11	; 0x7f893a40a040
	52	[179]	LOADNIL  	13 13
	53	[190]	CLOSURE  	13 12	; 0x7f893a40a330
	54	[190]	MOVE     	0 2
	55	[190]	MOVE     	0 1
	56	[191]	LOADNIL  	14 14
	57	[198]	CLOSURE  	14 13	; 0x7f893a40a6a0
	58	[199]	NEWTABLE 	15 0 13
	59	[200]	SETTABLE 	15 -9 3	; "moon" -
	60	[201]	SETTABLE 	15 -10 4	; "pos_to_line" -
	61	[202]	SETTABLE 	15 -11 7	; "get_closest_line" -
	62	[203]	SETTABLE 	15 -12 6	; "get_line" -
	63	[204]	SETTABLE 	15 -13 5	; "trim" -
	64	[205]	SETTABLE 	15 -14 8	; "split" -
	65	[206]	SETTABLE 	15 -15 9	; "dump" -
	66	[207]	SETTABLE 	15 -16 10	; "debug_posmap" -
	67	[208]	SETTABLE 	15 -8 12	; "getfenv" -
	68	[209]	SETTABLE 	15 -7 11	; "setfenv" -
	69	[210]	SETTABLE 	15 -17 13	; "get_options" -
	70	[211]	SETTABLE 	15 -3 1	; "unpack" -
	71	[212]	SETTABLE 	15 -18 14	; "safe_module" -
	72	[213]	RETURN   	15 2
	73	[213]	RETURN   	0 1

function <./moonscript/util.lua:6,8> (11 instructions, 44 bytes at 0x7f893a406b60)
1 param, 3 slots, 1 upvalue, 1 local, 2 constants, 0 functions
	1	[7]	GETUPVAL 	1 0	; type
	2	[7]	MOVE     	2 0
	3	[7]	CALL     	1 2 2
	4	[7]	EQ       	0 1 -1	; - "table"
	5	[7]	JMP      	2	; to 8
	6	[7]	GETTABLE 	1 0 -2	; "__class"
	7	[7]	JMP      	2	; to 10
	8	[7]	LOADBOOL 	1 0 1
	9	[7]	LOADBOOL 	1 1 0
	10	[7]	RETURN   	1 2
	11	[8]	RETURN   	0 1

function <./moonscript/util.lua:9,21> (19 instructions, 76 bytes at 0x7f893a4071f0)
2 params, 4 slots, 1 upvalue, 3 locals, 3 constants, 0 functions
	1	[10]	GETUPVAL 	2 0	; type
	2	[10]	MOVE     	3 0
	3	[10]	CALL     	2 2 2
	4	[10]	EQ       	1 2 -1	; - "table"
	5	[10]	JMP      	2	; to 8
	6	[11]	LOADBOOL 	2 0 0
	7	[11]	RETURN   	2 2
	8	[13]	GETTABLE 	2 0 -2	; "__class"
	9	[14]	TEST     	2 0 0
	10	[14]	JMP      	6	; to 17
	11	[15]	EQ       	0 2 1
	12	[15]	JMP      	2	; to 15
	13	[16]	LOADBOOL 	3 1 0
	14	[16]	RETURN   	3 2
	15	[18]	GETTABLE 	2 2 -3	; "__parent"
	16	[18]	JMP      	-8	; to 9
	17	[20]	LOADBOOL 	3 0 0
	18	[20]	RETURN   	3 2
	19	[21]	RETURN   	0 1

function <./moonscript/util.lua:22,31> (11 instructions, 44 bytes at 0x7f893a4074e0)
1 param, 3 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[23]	GETUPVAL 	1 0	; type
	2	[23]	MOVE     	2 0
	3	[23]	CALL     	1 2 2
	4	[24]	EQ       	0 1 -1	; - "table"
	5	[24]	JMP      	4	; to 10
	6	[25]	GETTABLE 	2 0 -2	; "__class"
	7	[26]	TEST     	2 0 0
	8	[26]	JMP      	1	; to 10
	9	[27]	RETURN   	2 2
	10	[30]	RETURN   	1 2
	11	[31]	RETURN   	0 1

function <./moonscript/util.lua:34,40> (14 instructions, 56 bytes at 0x7f893a407850)
2 params, 9 slots, 0 upvalues, 7 locals, 4 constants, 0 functions
	1	[35]	LOADK    	2 -1	; 1
	2	[36]	SELF     	3 0 -2	; "sub"
	3	[36]	LOADK    	5 -1	; 1
	4	[36]	MOVE     	6 1
	5	[36]	CALL     	3 4 2
	6	[36]	SELF     	3 3 -3	; "gmatch"
	7	[36]	LOADK    	5 -4	; "\n"
	8	[36]	CALL     	3 3 4
	9	[36]	JMP      	1	; to 11
	10	[37]	ADD      	2 2 -1	; - 1
	11	[36]	TFORLOOP 	3 1
	12	[37]	JMP      	-3	; to 10
	13	[39]	RETURN   	2 2
	14	[40]	RETURN   	0 1

function <./moonscript/util.lua:42,44> (5 instructions, 20 bytes at 0x7f893a407db0)
1 param, 4 slots, 0 upvalues, 1 local, 2 constants, 0 functions
	1	[43]	SELF     	1 0 -1	; "match"
	2	[43]	LOADK    	3 -2	; "^%s*(.-)%s*$"
	3	[43]	TAILCALL 	1 3 0
	4	[43]	RETURN   	1 0
	5	[44]	RETURN   	0 1

function <./moonscript/util.lua:46,53> (11 instructions, 44 bytes at 0x7f893a406640)
2 params, 8 slots, 0 upvalues, 6 locals, 3 constants, 0 functions
	1	[47]	SELF     	2 0 -1	; "gmatch"
	2	[47]	LOADK    	4 -2	; "([^\n]*)\n?"
	3	[47]	CALL     	2 3 4
	4	[47]	JMP      	4	; to 9
	5	[48]	EQ       	0 1 -3	; - 1
	6	[48]	JMP      	1	; to 8
	7	[49]	RETURN   	5 2
	8	[51]	SUB      	1 1 -3	; - 1
	9	[47]	TFORLOOP 	2 1
	10	[51]	JMP      	-6	; to 5
	11	[53]	RETURN   	0 1

function <./moonscript/util.lua:55,62> (23 instructions, 92 bytes at 0x7f893a408330)
2 params, 6 slots, 3 upvalues, 3 locals, 2 constants, 0 functions
	1	[56]	GETUPVAL 	2 0	; get_line
	2	[56]	MOVE     	3 0
	3	[56]	MOVE     	4 1
	4	[56]	CALL     	2 3 2
	5	[57]	TEST     	2 0 0
	6	[57]	JMP      	5	; to 12
	7	[57]	GETUPVAL 	3 1	; trim
	8	[57]	MOVE     	4 2
	9	[57]	CALL     	3 2 2
	10	[57]	EQ       	0 3 -1	; - ""
	11	[57]	JMP      	8	; to 20
	12	[57]	LT       	0 -2 1	; 1 -
	13	[57]	JMP      	6	; to 20
	14	[58]	GETUPVAL 	3 2	; get_closest_line
	15	[58]	MOVE     	4 0
	16	[58]	SUB      	5 1 -2	; - 1
	17	[58]	TAILCALL 	3 3 0
	18	[58]	RETURN   	3 0
	19	[58]	JMP      	3	; to 23
	20	[60]	MOVE     	3 2
	21	[60]	MOVE     	4 1
	22	[60]	RETURN   	3 3
	23	[62]	RETURN   	0 1

function <./moonscript/util.lua:64,76> (21 instructions, 84 bytes at 0x7f893a4077d0)
2 params, 10 slots, 0 upvalues, 8 locals, 4 constants, 0 functions
	1	[65]	EQ       	0 0 -1	; - ""
	2	[65]	JMP      	2	; to 5
	3	[66]	NEWTABLE 	2 0 0
	4	[66]	RETURN   	2 2
	5	[68]	MOVE     	2 0
	6	[68]	MOVE     	3 1
	7	[68]	CONCAT   	0 2 3
	8	[69]	NEWTABLE 	2 0 0
	9	[70]	LOADK    	3 -2	; 1
	10	[71]	SELF     	4 0 -3	; "gmatch"
	11	[71]	LOADK    	6 -4	; "(.-)"
	12	[71]	MOVE     	7 1
	13	[71]	CONCAT   	6 6 7
	14	[71]	CALL     	4 3 4
	15	[71]	JMP      	2	; to 18
	16	[72]	SETTABLE 	2 3 7
	17	[73]	ADD      	3 3 -2	; - 1
	18	[71]	TFORLOOP 	4 1
	19	[73]	JMP      	-4	; to 16
	20	[75]	RETURN   	2 2
	21	[76]	RETURN   	0 1

function <./moonscript/util.lua:78,111> (12 instructions, 48 bytes at 0x7f893a408f60)
1 param, 5 slots, 2 upvalues, 3 locals, 0 constants, 1 function
	1	[79]	NEWTABLE 	1 0 0
	2	[80]	LOADNIL  	2 2
	3	[109]	CLOSURE  	2 0	; 0x7f893a409270
	4	[109]	GETUPVAL 	0 0	; type
	5	[109]	MOVE     	0 1
	6	[109]	MOVE     	0 2
	7	[109]	GETUPVAL 	0 1	; concat
	8	[110]	MOVE     	3 2
	9	[110]	MOVE     	4 0
	10	[110]	TAILCALL 	3 2 0
	11	[110]	RETURN   	3 0
	12	[111]	RETURN   	0 1

function <./moonscript/util.lua:81,109> (78 instructions, 312 bytes at 0x7f893a409270)
2 params, 18 slots, 4 upvalues, 11 locals, 21 constants, 0 functions
	1	[82]	EQ       	0 1 -1	; - nil
	2	[82]	JMP      	1	; to 4
	3	[83]	LOADK    	1 -2	; 0
	4	[85]	GETUPVAL 	2 0	; type
	5	[85]	MOVE     	3 0
	6	[85]	CALL     	2 2 2
	7	[86]	EQ       	0 2 -3	; - "string"
	8	[86]	JMP      	6	; to 15
	9	[87]	LOADK    	3 -4	; "\""
	10	[87]	MOVE     	4 0
	11	[87]	LOADK    	5 -5	; "\"\n"
	12	[87]	CONCAT   	3 3 5
	13	[87]	RETURN   	3 2
	14	[87]	JMP      	63	; to 78
	15	[88]	EQ       	0 2 -6	; - "table"
	16	[88]	JMP      	55	; to 72
	17	[89]	GETUPVAL 	3 1	; seen
	18	[89]	GETTABLE 	3 3 0
	19	[89]	TEST     	3 0 0
	20	[89]	JMP      	7	; to 28
	21	[90]	LOADK    	3 -7	; "recursion("
	22	[90]	GETGLOBAL	4 -8	; tostring
	23	[90]	MOVE     	5 0
	24	[90]	CALL     	4 2 2
	25	[90]	LOADK    	5 -9	; ")...\n"
	26	[90]	CONCAT   	3 3 5
	27	[90]	RETURN   	3 2
	28	[92]	GETUPVAL 	3 1	; seen
	29	[92]	SETTABLE 	3 0 -10	; - true
	30	[93]	ADD      	1 1 -11	; - 1
	31	[94]	LOADNIL  	3 3
	32	[96]	NEWTABLE 	4 0 0
	33	[97]	LOADK    	5 -11	; 1
	34	[98]	GETGLOBAL	6 -12	; pairs
	35	[98]	MOVE     	7 0
	36	[98]	CALL     	6 2 4
	37	[98]	JMP      	16	; to 54
	38	[99]	LOADK    	11 -13	; " "
	39	[99]	SELF     	11 11 -14	; "rep"
	40	[99]	MUL      	13 1 -15	; - 4
	41	[99]	CALL     	11 3 2
	42	[99]	LOADK    	12 -16	; "["
	43	[99]	GETGLOBAL	13 -8	; tostring
	44	[99]	MOVE     	14 9
	45	[99]	CALL     	13 2 2
	46	[99]	LOADK    	14 -17	; "] = "
	47	[99]	GETUPVAL 	15 2	; _dump
	48	[99]	MOVE     	16 10
	49	[99]	MOVE     	17 1
	50	[99]	CALL     	15 3 2
	51	[99]	CONCAT   	11 11 15
	52	[99]	SETTABLE 	4 5 11
	53	[100]	ADD      	5 5 -11	; - 1
	54	[98]	TFORLOOP 	6 2
	55	[100]	JMP      	-18	; to 38
	56	[102]	MOVE     	3 4
	57	[104]	GETUPVAL 	4 1	; seen
	58	[104]	SETTABLE 	4 0 -18	; - false
	59	[105]	LOADK    	4 -19	; "{\n"
	60	[105]	GETUPVAL 	5 3	; concat
	61	[105]	MOVE     	6 3
	62	[105]	CALL     	5 2 2
	63	[105]	LOADK    	6 -13	; " "
	64	[105]	SELF     	6 6 -14	; "rep"
	65	[105]	SUB      	8 1 -11	; - 1
	66	[105]	MUL      	8 8 -15	; - 4
	67	[105]	CALL     	6 3 2
	68	[105]	LOADK    	7 -20	; "}\n"
	69	[105]	CONCAT   	4 4 7
	70	[105]	RETURN   	4 2
	71	[105]	JMP      	6	; to 78
	72	[107]	GETGLOBAL	3 -8	; tostring
	73	[107]	MOVE     	4 0
	74	[107]	CALL     	3 2 2
	75	[107]	LOADK    	4 -21	; "\n"
	76	[107]	CONCAT   	3 3 4
	77	[107]	RETURN   	3 2
	78	[109]	RETURN   	0 1

function <./moonscript/util.lua:113,147> (78 instructions, 312 bytes at 0x7f893a407750)
3 params, 28 slots, 6 upvalues, 25 locals, 10 constants, 1 function
	1	[116]	NEWTABLE 	4 0 0
	2	[117]	LOADK    	5 -1	; 1
	3	[118]	GETGLOBAL	6 -2	; pairs
	4	[118]	MOVE     	7 0
	5	[118]	CALL     	6 2 4
	6	[118]	JMP      	6	; to 13
	7	[119]	NEWTABLE 	11 2 0
	8	[120]	MOVE     	12 9
	9	[122]	MOVE     	13 10
	10	[122]	SETLIST  	11 2 1	; 1
	11	[122]	SETTABLE 	4 5 11
	12	[123]	ADD      	5 5 -1	; - 1
	13	[118]	TFORLOOP 	6 2
	14	[123]	JMP      	-8	; to 7
	15	[125]	MOVE     	3 4
	16	[127]	GETGLOBAL	4 -3	; table
	17	[127]	GETTABLE 	4 4 -4	; "sort"
	18	[127]	MOVE     	5 3
	19	[129]	CLOSURE  	6 0	; 0x7f893a406f50
	20	[127]	CALL     	4 3 1
	21	[130]	LOADNIL  	4 4
	22	[132]	NEWTABLE 	5 0 0
	23	[133]	LOADK    	6 -1	; 1
	24	[134]	LOADK    	7 -1	; 1
	25	[134]	LEN      	8 3
	26	[134]	LOADK    	9 -1	; 1
	27	[134]	FORPREP  	7 43	; to 71
	28	[135]	GETTABLE 	11 3 10
	29	[136]	GETUPVAL 	12 0	; unpack
	30	[136]	MOVE     	13 11
	31	[136]	CALL     	12 2 3
	32	[137]	GETUPVAL 	14 1	; pos_to_line
	33	[137]	MOVE     	15 1
	34	[137]	MOVE     	16 13
	35	[137]	CALL     	14 3 2
	36	[138]	GETUPVAL 	15 2	; get_line
	37	[138]	MOVE     	16 2
	38	[138]	MOVE     	17 12
	39	[138]	CALL     	15 3 2
	40	[139]	GETUPVAL 	16 3	; get_closest_line
	41	[139]	MOVE     	17 1
	42	[139]	MOVE     	18 14
	43	[139]	CALL     	16 3 2
	44	[140]	GETGLOBAL	17 -5	; tostring
	45	[140]	MOVE     	18 13
	46	[140]	CALL     	17 2 2
	47	[140]	LOADK    	18 -6	; "\t "
	48	[140]	GETGLOBAL	19 -5	; tostring
	49	[140]	MOVE     	20 12
	50	[140]	CALL     	19 2 2
	51	[140]	LOADK    	20 -7	; ":[ "
	52	[140]	GETGLOBAL	21 -5	; tostring
	53	[140]	GETUPVAL 	22 4	; trim
	54	[140]	MOVE     	23 15
	55	[140]	CALL     	22 2 0
	56	[140]	CALL     	21 0 2
	57	[140]	LOADK    	22 -8	; " ] >> "
	58	[140]	GETGLOBAL	23 -5	; tostring
	59	[140]	MOVE     	24 14
	60	[140]	CALL     	23 2 2
	61	[140]	LOADK    	24 -7	; ":[ "
	62	[140]	GETGLOBAL	25 -5	; tostring
	63	[140]	GETUPVAL 	26 4	; trim
	64	[140]	MOVE     	27 16
	65	[140]	CALL     	26 2 0
	66	[140]	CALL     	25 0 2
	67	[140]	LOADK    	26 -9	; " ]"
	68	[140]	CONCAT   	17 17 26
	69	[141]	SETTABLE 	5 6 17
	70	[142]	ADD      	6 6 -1	; - 1
	71	[134]	FORLOOP  	7 -44	; to 28
	72	[144]	MOVE     	4 5
	73	[146]	GETUPVAL 	5 5	; concat
	74	[146]	MOVE     	6 4
	75	[146]	LOADK    	7 -10	; "\n"
	76	[146]	TAILCALL 	5 3 0
	77	[146]	RETURN   	5 0
	78	[147]	RETURN   	0 1

function <./moonscript/util.lua:127,129> (8 instructions, 32 bytes at 0x7f893a406f50)
2 params, 4 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[128]	GETTABLE 	2 0 -1	; 1
	2	[128]	GETTABLE 	3 1 -1	; 1
	3	[128]	LT       	1 2 3
	4	[128]	JMP      	1	; to 6
	5	[128]	LOADBOOL 	2 0 1
	6	[128]	LOADBOOL 	2 1 0
	7	[128]	RETURN   	2 2
	8	[129]	RETURN   	0 1

function <./moonscript/util.lua:148,164> (26 instructions, 104 bytes at 0x7f893a406ed0)
2 params, 9 slots, 0 upvalues, 4 locals, 5 constants, 1 function
	1	[150]	LOADK    	3 -1	; 1
	2	[152]	GETGLOBAL	4 -2	; debug
	3	[152]	GETTABLE 	4 4 -3	; "getupvalue"
	4	[152]	MOVE     	5 0
	5	[152]	MOVE     	6 3
	6	[152]	CALL     	4 3 2
	7	[152]	MOVE     	2 4
	8	[153]	TEST     	2 0 0
	9	[153]	JMP      	5	; to 15
	10	[153]	EQ       	0 2 -4	; - "_ENV"
	11	[153]	JMP      	1	; to 13
	12	[154]	JMP      	2	; to 15
	13	[156]	ADD      	3 3 -1	; - 1
	14	[156]	JMP      	-13	; to 2
	15	[158]	TEST     	2 0 0
	16	[158]	JMP      	8	; to 25
	17	[159]	GETGLOBAL	4 -2	; debug
	18	[159]	GETTABLE 	4 4 -5	; "upvaluejoin"
	19	[159]	MOVE     	5 0
	20	[159]	MOVE     	6 3
	21	[161]	CLOSURE  	7 0	; 0x7f893a409f20
	22	[161]	MOVE     	0 1
	23	[161]	LOADK    	8 -1	; 1
	24	[159]	CALL     	4 5 1
	25	[163]	RETURN   	0 2
	26	[164]	RETURN   	0 1

function <./moonscript/util.lua:159,161> (3 instructions, 12 bytes at 0x7f893a409f20)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[160]	GETUPVAL 	0 0	; env
	2	[160]	RETURN   	0 2
	3	[161]	RETURN   	0 1

function <./moonscript/util.lua:165,178> (17 instructions, 68 bytes at 0x7f893a40a040)
1 param, 5 slots, 0 upvalues, 4 locals, 4 constants, 0 functions
	1	[166]	LOADK    	1 -1	; 1
	2	[168]	GETGLOBAL	2 -2	; debug
	3	[168]	GETTABLE 	2 2 -3	; "getupvalue"
	4	[168]	MOVE     	3 0
	5	[168]	MOVE     	4 1
	6	[168]	CALL     	2 3 3
	7	[169]	TEST     	2 0 1
	8	[169]	JMP      	1	; to 10
	9	[170]	JMP      	5	; to 15
	10	[172]	EQ       	0 2 -4	; - "_ENV"
	11	[172]	JMP      	1	; to 13
	12	[173]	RETURN   	3 2
	13	[175]	ADD      	1 1 -1	; - 1
	14	[175]	JMP      	-13	; to 2
	15	[177]	LOADNIL  	2 2
	16	[177]	RETURN   	2 2
	17	[178]	RETURN   	0 1

function <./moonscript/util.lua:180,190> (27 instructions, 108 bytes at 0x7f893a40a330)
0+ params, 8 slots, 2 upvalues, 3 locals, 4 constants, 0 functions
	1	[181]	GETGLOBAL	1 -1	; select
	2	[181]	LOADK    	2 -2	; "#"
	3	[181]	VARARG   	3 0
	4	[181]	CALL     	1 0 2
	5	[182]	GETGLOBAL	2 -1	; select
	6	[182]	MOVE     	3 1
	7	[182]	VARARG   	4 0
	8	[182]	CALL     	2 0 2
	9	[183]	GETUPVAL 	3 0	; type
	10	[183]	MOVE     	4 2
	11	[183]	CALL     	3 2 2
	12	[183]	EQ       	0 3 -3	; - "table"
	13	[183]	JMP      	10	; to 24
	14	[184]	MOVE     	3 2
	15	[184]	GETUPVAL 	4 1	; unpack
	16	[184]	NEWTABLE 	5 0 0
	17	[184]	VARARG   	6 0
	18	[186]	SETLIST  	5 0 1	; 1
	19	[186]	LOADNIL  	6 6
	20	[186]	SUB      	7 1 -4	; - 1
	21	[184]	CALL     	4 4 0
	22	[186]	RETURN   	3 0
	23	[186]	JMP      	3	; to 27
	24	[188]	NEWTABLE 	3 0 0
	25	[188]	VARARG   	4 0
	26	[188]	RETURN   	3 0
	27	[190]	RETURN   	0 1

function <./moonscript/util.lua:192,198> (9 instructions, 36 bytes at 0x7f893a40a6a0)
2 params, 6 slots, 0 upvalues, 2 locals, 2 constants, 1 function
	1	[193]	GETGLOBAL	2 -1	; setmetatable
	2	[193]	MOVE     	3 1
	3	[193]	NEWTABLE 	4 0 1
	4	[196]	CLOSURE  	5 0	; 0x7f893a40ac10
	5	[196]	MOVE     	0 0
	6	[196]	SETTABLE 	4 -2 5	; "__index" -
	7	[193]	TAILCALL 	2 3 0
	8	[197]	RETURN   	2 0
	9	[198]	RETURN   	0 1

function <./moonscript/util.lua:194,196> (13 instructions, 52 bytes at 0x7f893a40ac10)
2 params, 8 slots, 1 upvalue, 2 locals, 4 constants, 0 functions
	1	[195]	GETGLOBAL	2 -1	; error
	2	[195]	LOADK    	3 -2	; "Attempted to import non-existent `"
	3	[195]	GETGLOBAL	4 -3	; tostring
	4	[195]	MOVE     	5 1
	5	[195]	CALL     	4 2 2
	6	[195]	LOADK    	5 -4	; "` from "
	7	[195]	GETGLOBAL	6 -3	; tostring
	8	[195]	GETUPVAL 	7 0	; name
	9	[195]	CALL     	6 2 2
	10	[195]	CONCAT   	3 3 6
	11	[195]	TAILCALL 	2 2 0
	12	[195]	RETURN   	2 0
	13	[196]	RETURN   	0 1
-----------------------

main <./moonscript/transform/class.lua:0,0> (51 instructions, 204 bytes at 0x7fcaf1c068d0)
0+ params, 12 slots, 0 upvalues, 13 locals, 15 constants, 3 functions
	1	[3]	GETGLOBAL	2 -1	; require
	2	[3]	LOADK    	3 -2	; "moonscript.transform.names"
	3	[3]	CALL     	2 2 2
	4	[4]	GETTABLE 	3 2 -3	; "NameProxy"
	5	[4]	GETTABLE 	1 2 -4	; "LocalName"
	6	[4]	MOVE     	0 3
	7	[6]	LOADNIL  	2 2
	8	[7]	GETGLOBAL	3 -1	; require
	9	[7]	LOADK    	4 -5	; "moonscript.transform.statements"
	10	[7]	CALL     	3 2 2
	11	[7]	GETTABLE 	2 3 -6	; "Run"
	12	[8]	LOADK    	3 -7	; "new"
	13	[9]	LOADNIL  	4 4
	14	[10]	GETGLOBAL	5 -8	; table
	15	[10]	GETTABLE 	4 5 -9	; "insert"
	16	[11]	LOADNIL  	5 7
	17	[13]	GETGLOBAL	8 -1	; require
	18	[13]	LOADK    	9 -10	; "moonscript.types"
	19	[13]	CALL     	8 2 2
	20	[14]	GETTABLE 	9 8 -11	; "build"
	21	[14]	GETTABLE 	10 8 -12	; "ntype"
	22	[14]	GETTABLE 	7 8 -13	; "NOOP"
	23	[14]	MOVE     	6 10
	24	[14]	MOVE     	5 9
	25	[16]	LOADNIL  	8 8
	26	[17]	GETGLOBAL	9 -1	; require
	27	[17]	LOADK    	10 -14	; "moonscript.util"
	28	[17]	CALL     	9 2 2
	29	[17]	GETTABLE 	8 9 -15	; "unpack"
	30	[18]	LOADNIL  	9 9
	31	[91]	CLOSURE  	9 0	; 0x7fcaf1c06e80
	32	[91]	MOVE     	0 8
	33	[91]	MOVE     	0 4
	34	[91]	MOVE     	0 6
	35	[92]	LOADNIL  	10 10
	36	[107]	CLOSURE  	10 1	; 0x7fcaf1c06b40
	37	[107]	MOVE     	0 2
	38	[486]	CLOSURE  	11 2	; 0x7fcaf1c086d0
	39	[486]	MOVE     	0 8
	40	[486]	MOVE     	0 0
	41	[486]	MOVE     	0 9
	42	[486]	MOVE     	0 4
	43	[486]	MOVE     	0 6
	44	[486]	MOVE     	0 10
	45	[486]	MOVE     	0 5
	46	[486]	MOVE     	0 3
	47	[486]	MOVE     	0 1
	48	[486]	MOVE     	0 2
	49	[486]	MOVE     	0 7
	50	[486]	RETURN   	11 2
	51	[486]	RETURN   	0 1

function <./moonscript/transform/class.lua:19,91> (110 instructions, 440 bytes at 0x7fcaf1c06e80)
4 params, 17 slots, 3 upvalues, 16 locals, 17 constants, 0 functions
	1	[20]	EQ       	0 1 -1	; - nil
	2	[20]	JMP      	1	; to 4
	3	[21]	LOADBOOL 	1 1 0
	4	[23]	NEWTABLE 	4 3 0
	5	[24]	LOADK    	5 -2	; "chain"
	6	[25]	MOVE     	6 0
	7	[25]	NEWTABLE 	7 2 0
	8	[27]	LOADK    	8 -3	; "dot"
	9	[29]	LOADK    	9 -4	; "__parent"
	10	[29]	SETLIST  	7 2 1	; 1
	11	[30]	SETLIST  	4 3 1	; 1
	12	[31]	TEST     	3 0 1
	13	[31]	JMP      	1	; to 15
	14	[32]	RETURN   	4 2
	15	[34]	NEWTABLE 	5 0 0
	16	[35]	GETUPVAL 	6 0	; unpack
	17	[35]	MOVE     	7 3
	18	[35]	LOADK    	8 -5	; 3
	19	[35]	CALL     	6 3 0
	20	[36]	SETLIST  	5 0 1	; 1
	21	[37]	GETTABLE 	6 5 -6	; 1
	22	[38]	EQ       	0 6 -1	; - nil
	23	[38]	JMP      	1	; to 25
	24	[39]	RETURN   	4 2
	25	[41]	MOVE     	7 4
	26	[42]	GETTABLE 	8 6 -6	; 1
	27	[43]	EQ       	0 -7 8	; "call" -
	28	[43]	JMP      	47	; to 76
	29	[44]	TEST     	1 0 0
	30	[44]	JMP      	7	; to 38
	31	[45]	GETUPVAL 	9 1	; insert
	32	[45]	MOVE     	10 7
	33	[45]	NEWTABLE 	11 2 0
	34	[46]	LOADK    	12 -3	; "dot"
	35	[48]	LOADK    	13 -8	; "__base"
	36	[48]	SETLIST  	11 2 1	; 1
	37	[45]	CALL     	9 3 1
	38	[50]	SELF     	9 2 -9	; "get"
	39	[50]	LOADK    	11 -10	; "current_method"
	40	[50]	CALL     	9 3 2
	41	[51]	GETGLOBAL	10 -11	; assert
	42	[51]	MOVE     	11 9
	43	[51]	LOADK    	12 -12	; "missing calling name"
	44	[51]	CALL     	10 3 1
	45	[52]	NEWTABLE 	10 2 0
	46	[53]	LOADK    	11 -7	; "call"
	47	[53]	NEWTABLE 	12 1 0
	48	[55]	LOADK    	13 -13	; "self"
	49	[56]	GETUPVAL 	14 0	; unpack
	50	[56]	GETTABLE 	15 6 -14	; 2
	51	[56]	CALL     	14 2 0
	52	[57]	SETLIST  	12 0 1	; 1
	53	[58]	SETLIST  	10 2 1	; 1
	54	[58]	SETTABLE 	5 -6 10	; 1 -
	55	[59]	GETUPVAL 	10 2	; ntype
	56	[59]	MOVE     	11 9
	57	[59]	CALL     	10 2 2
	58	[59]	EQ       	0 10 -15	; - "key_literal"
	59	[59]	JMP      	8	; to 68
	60	[60]	GETUPVAL 	10 1	; insert
	61	[60]	MOVE     	11 7
	62	[60]	NEWTABLE 	12 2 0
	63	[61]	LOADK    	13 -3	; "dot"
	64	[63]	GETTABLE 	14 9 -14	; 2
	65	[63]	SETLIST  	12 2 1	; 1
	66	[60]	CALL     	10 3 1
	67	[63]	JMP      	31	; to 99
	68	[65]	GETUPVAL 	10 1	; insert
	69	[65]	MOVE     	11 7
	70	[65]	NEWTABLE 	12 2 0
	71	[66]	LOADK    	13 -16	; "index"
	72	[68]	MOVE     	14 9
	73	[68]	SETLIST  	12 2 1	; 1
	74	[65]	CALL     	10 3 1
	75	[69]	JMP      	23	; to 99
	76	[70]	EQ       	0 -17 8	; "colon" -
	77	[70]	JMP      	21	; to 99
	78	[71]	GETTABLE 	9 5 -14	; 2
	79	[72]	TEST     	9 0 0
	80	[72]	JMP      	18	; to 99
	81	[72]	GETTABLE 	10 9 -6	; 1
	82	[72]	EQ       	0 10 -7	; - "call"
	83	[72]	JMP      	15	; to 99
	84	[73]	NEWTABLE 	10 2 0
	85	[74]	LOADK    	11 -3	; "dot"
	86	[76]	GETTABLE 	12 6 -14	; 2
	87	[76]	SETLIST  	10 2 1	; 1
	88	[76]	SETTABLE 	5 -6 10	; 1 -
	89	[77]	NEWTABLE 	10 2 0
	90	[78]	LOADK    	11 -7	; "call"
	91	[78]	NEWTABLE 	12 1 0
	92	[80]	LOADK    	13 -13	; "self"
	93	[81]	GETUPVAL 	14 0	; unpack
	94	[81]	GETTABLE 	15 9 -14	; 2
	95	[81]	CALL     	14 2 0
	96	[82]	SETLIST  	12 0 1	; 1
	97	[83]	SETLIST  	10 2 1	; 1
	98	[83]	SETTABLE 	5 -14 10	; 2 -
	99	[86]	LOADK    	9 -6	; 1
	100	[86]	LEN      	10 5
	101	[86]	LOADK    	11 -6	; 1
	102	[86]	FORPREP  	9 5	; to 108
	103	[87]	GETTABLE 	13 5 12
	104	[88]	GETUPVAL 	14 1	; insert
	105	[88]	MOVE     	15 7
	106	[88]	MOVE     	16 13
	107	[88]	CALL     	14 3 1
	108	[86]	FORLOOP  	9 -6	; to 103
	109	[90]	RETURN   	7 2
	110	[91]	RETURN   	0 1

function <./moonscript/transform/class.lua:93,107> (16 instructions, 64 bytes at 0x7fcaf1c06b40)
3 params, 10 slots, 1 upvalue, 4 locals, 1 constant, 2 functions
	1	[95]	NEWTABLE 	4 3 0
	2	[96]	LOADK    	5 -1	; "scoped"
	3	[97]	GETUPVAL 	6 0	; Run
	4	[101]	CLOSURE  	7 0	; 0x7fcaf1c07de0
	5	[101]	MOVE     	0 3
	6	[101]	MOVE     	0 2
	7	[101]	MOVE     	0 1
	8	[97]	CALL     	6 2 2
	9	[102]	MOVE     	7 0
	10	[103]	GETUPVAL 	8 0	; Run
	11	[105]	CLOSURE  	9 1	; 0x7fcaf1c082e0
	12	[105]	MOVE     	0 3
	13	[103]	CALL     	8 2 0
	14	[106]	SETLIST  	4 0 1	; 1
	15	[106]	RETURN   	4 2
	16	[107]	RETURN   	0 1

function <./moonscript/transform/class.lua:97,101> (14 instructions, 56 bytes at 0x7fcaf1c07de0)
1 param, 5 slots, 3 upvalues, 1 local, 4 constants, 0 functions
	1	[98]	SELF     	1 0 -1	; "get"
	2	[98]	LOADK    	3 -2	; "current_method"
	3	[98]	CALL     	1 3 2
	4	[98]	SETUPVAL 	1 0	; prev_method
	5	[99]	SELF     	1 0 -3	; "set"
	6	[99]	LOADK    	3 -2	; "current_method"
	7	[99]	GETUPVAL 	4 1	; key
	8	[99]	CALL     	1 4 1
	9	[100]	SELF     	1 0 -3	; "set"
	10	[100]	LOADK    	3 -4	; "super"
	11	[100]	GETUPVAL 	4 2	; t
	12	[100]	TAILCALL 	1 4 0
	13	[100]	RETURN   	1 0
	14	[101]	RETURN   	0 1

function <./moonscript/transform/class.lua:103,105> (6 instructions, 24 bytes at 0x7fcaf1c082e0)
1 param, 5 slots, 1 upvalue, 1 local, 2 constants, 0 functions
	1	[104]	SELF     	1 0 -1	; "set"
	2	[104]	LOADK    	3 -2	; "current_method"
	3	[104]	GETUPVAL 	4 0	; prev_method
	4	[104]	TAILCALL 	1 4 0
	5	[104]	RETURN   	1 0
	6	[105]	RETURN   	0 1

function <./moonscript/transform/class.lua:108,486> (603 instructions, 2412 bytes at 0x7fcaf1c086d0)
4 params, 44 slots, 11 upvalues, 52 locals, 57 constants, 7 functions
	1	[109]	GETUPVAL 	4 0	; unpack
	2	[109]	MOVE     	5 1
	3	[109]	LOADK    	6 -1	; 2
	4	[109]	CALL     	4 3 4
	5	[110]	EQ       	0 5 -2	; - ""
	6	[110]	JMP      	1	; to 8
	7	[111]	LOADNIL  	5 5
	8	[113]	GETUPVAL 	7 1	; NameProxy
	9	[113]	LOADK    	8 -3	; "parent"
	10	[113]	CALL     	7 2 2
	11	[114]	GETUPVAL 	8 1	; NameProxy
	12	[114]	LOADK    	9 -4	; "base"
	13	[114]	CALL     	8 2 2
	14	[115]	GETUPVAL 	9 1	; NameProxy
	15	[115]	LOADK    	10 -5	; "self"
	16	[115]	CALL     	9 2 2
	17	[116]	GETUPVAL 	10 1	; NameProxy
	18	[116]	LOADK    	11 -6	; "class"
	19	[116]	CALL     	10 2 2
	20	[117]	LOADNIL  	11 11
	21	[120]	CLOSURE  	11 0	; 0x7fcaf1c08a50
	22	[120]	GETUPVAL 	0 2	; transform_super
	23	[120]	MOVE     	0 10
	24	[121]	LOADNIL  	12 12
	25	[124]	CLOSURE  	12 1	; 0x7fcaf1c08c30
	26	[124]	GETUPVAL 	0 2	; transform_super
	27	[124]	MOVE     	0 10
	28	[125]	NEWTABLE 	13 0 0
	29	[126]	NEWTABLE 	14 0 0
	30	[127]	LOADK    	15 -7	; 1
	31	[127]	LEN      	16 6
	32	[127]	LOADK    	17 -7	; 1
	33	[127]	FORPREP  	15 48	; to 82
	34	[128]	GETTABLE 	19 6 18
	35	[129]	GETTABLE 	20 19 -7	; 1
	36	[130]	EQ       	0 -8 20	; "stm" -
	37	[130]	JMP      	5	; to 43
	38	[131]	GETUPVAL 	21 3	; insert
	39	[131]	MOVE     	22 13
	40	[131]	GETTABLE 	23 19 -1	; 2
	41	[131]	CALL     	21 3 1
	42	[131]	JMP      	39	; to 82
	43	[132]	EQ       	0 -9 20	; "props" -
	44	[132]	JMP      	37	; to 82
	45	[133]	LOADK    	21 -1	; 2
	46	[133]	LEN      	22 19
	47	[133]	LOADK    	23 -7	; 1
	48	[133]	FORPREP  	21 32	; to 81
	49	[134]	GETTABLE 	25 19 24
	50	[135]	GETUPVAL 	26 4	; ntype
	51	[135]	GETTABLE 	27 25 -7	; 1
	52	[135]	CALL     	26 2 2
	53	[135]	EQ       	0 26 -5	; - "self"
	54	[135]	JMP      	22	; to 77
	55	[136]	LOADNIL  	26 27
	56	[137]	GETTABLE 	28 25 -7	; 1
	57	[137]	GETTABLE 	27 25 -1	; 2
	58	[137]	MOVE     	26 28
	59	[138]	GETUPVAL 	28 5	; super_scope
	60	[138]	MOVE     	29 27
	61	[138]	MOVE     	30 12
	62	[138]	NEWTABLE 	31 2 0
	63	[139]	LOADK    	32 -10	; "key_literal"
	64	[141]	GETTABLE 	33 26 -1	; 2
	65	[141]	SETLIST  	31 2 1	; 1
	66	[138]	CALL     	28 4 2
	67	[141]	MOVE     	27 28
	68	[142]	GETUPVAL 	28 3	; insert
	69	[142]	MOVE     	29 13
	70	[142]	GETUPVAL 	30 6	; build
	71	[142]	GETTABLE 	30 30 -11	; "assign_one"
	72	[142]	MOVE     	31 26
	73	[142]	MOVE     	32 27
	74	[142]	CALL     	30 3 0
	75	[142]	CALL     	28 0 1
	76	[142]	JMP      	4	; to 81
	77	[144]	GETUPVAL 	26 3	; insert
	78	[144]	MOVE     	27 14
	79	[144]	MOVE     	28 25
	80	[144]	CALL     	26 3 1
	81	[133]	FORLOOP  	21 -33	; to 49
	82	[127]	FORLOOP  	15 -49	; to 34
	83	[149]	LOADNIL  	15 15
	84	[151]	NEWTABLE 	16 0 0
	85	[152]	LOADK    	17 -7	; 1
	86	[153]	LOADK    	18 -7	; 1
	87	[153]	LEN      	19 14
	88	[153]	LOADK    	20 -7	; 1
	89	[153]	FORPREP  	18 34	; to 124
	90	[154]	LOADBOOL 	22 0 0
	91	[156]	GETTABLE 	23 14 21
	92	[157]	GETTABLE 	24 23 -7	; 1
	93	[158]	LOADNIL  	25 25
	94	[159]	GETTABLE 	26 24 -7	; 1
	95	[159]	EQ       	0 26 -10	; - "key_literal"
	96	[159]	JMP      	8	; to 105
	97	[159]	GETTABLE 	26 24 -1	; 2
	98	[159]	GETUPVAL 	27 7	; CONSTRUCTOR_NAME
	99	[159]	EQ       	0 26 27
	100	[159]	JMP      	4	; to 105
	101	[160]	GETTABLE 	15 23 -1	; 2
	102	[161]	LOADBOOL 	22 1 0
	103	[162]	JMP      	17	; to 121
	104	[162]	JMP      	13	; to 118
	105	[164]	LOADNIL  	26 26
	106	[165]	GETTABLE 	27 23 -7	; 1
	107	[165]	GETTABLE 	26 23 -1	; 2
	108	[165]	MOVE     	24 27
	109	[166]	NEWTABLE 	27 1 0
	110	[167]	MOVE     	28 24
	111	[168]	GETUPVAL 	29 5	; super_scope
	112	[168]	MOVE     	30 26
	113	[168]	MOVE     	31 11
	114	[168]	MOVE     	32 24
	115	[168]	CALL     	29 4 0
	116	[169]	SETLIST  	27 0 1	; 1
	117	[169]	MOVE     	25 27
	118	[171]	SETTABLE 	16 17 25
	119	[172]	ADD      	17 17 -7	; - 1
	120	[173]	LOADBOOL 	22 1 0
	121	[175]	TEST     	22 0 1
	122	[175]	JMP      	1	; to 124
	123	[176]	JMP      	1	; to 125
	124	[153]	FORLOOP  	18 -35	; to 90
	125	[179]	MOVE     	14 16
	126	[181]	TEST     	15 0 1
	127	[181]	JMP      	34	; to 162
	128	[182]	TEST     	5 0 0
	129	[182]	JMP      	28	; to 158
	130	[183]	GETUPVAL 	16 6	; build
	131	[183]	GETTABLE 	16 16 -12	; "fndef"
	132	[183]	NEWTABLE 	17 0 3
	133	[184]	NEWTABLE 	18 1 0
	134	[184]	NEWTABLE 	19 1 0
	135	[187]	LOADK    	20 -14	; "..."
	136	[187]	SETLIST  	19 1 1	; 1
	137	[188]	SETLIST  	18 1 1	; 1
	138	[188]	SETTABLE 	17 -13 18	; "args" -
	139	[189]	SETTABLE 	17 -15 -16	; "arrow" "fat"
	140	[190]	NEWTABLE 	18 0 0
	141	[191]	GETUPVAL 	19 6	; build
	142	[191]	GETTABLE 	19 19 -18	; "chain"
	143	[191]	NEWTABLE 	20 1 1
	144	[192]	SETTABLE 	20 -4 -19	; "base" "super"
	145	[192]	NEWTABLE 	21 2 0
	146	[194]	LOADK    	22 -20	; "call"
	147	[194]	NEWTABLE 	23 1 0
	148	[197]	LOADK    	24 -14	; "..."
	149	[197]	SETLIST  	23 1 1	; 1
	150	[198]	SETLIST  	21 2 1	; 1
	151	[199]	SETLIST  	20 1 1	; 1
	152	[191]	CALL     	19 2 0
	153	[200]	SETLIST  	18 0 1	; 1
	154	[200]	SETTABLE 	17 -17 18	; "body" -
	155	[183]	CALL     	16 2 2
	156	[201]	MOVE     	15 16
	157	[201]	JMP      	4	; to 162
	158	[203]	GETUPVAL 	16 6	; build
	159	[203]	GETTABLE 	16 16 -12	; "fndef"
	160	[203]	CALL     	16 1 2
	161	[203]	MOVE     	15 16
	162	[206]	TESTSET  	16 4 1
	163	[206]	JMP      	4	; to 168
	164	[206]	TESTSET  	16 3 0
	165	[206]	JMP      	2	; to 168
	166	[206]	GETTABLE 	16 3 -1	; 2
	167	[206]	GETTABLE 	16 16 -7	; 1
	168	[207]	GETUPVAL 	17 4	; ntype
	169	[207]	MOVE     	18 16
	170	[207]	CALL     	17 2 2
	171	[208]	EQ       	0 -18 17	; "chain" -
	172	[208]	JMP      	20	; to 193
	173	[209]	LEN      	18 16
	174	[209]	GETTABLE 	18 16 18
	175	[210]	GETUPVAL 	19 4	; ntype
	176	[210]	MOVE     	20 18
	177	[210]	CALL     	19 2 2
	178	[211]	EQ       	0 -21 19	; "dot" -
	179	[211]	JMP      	7	; to 187
	180	[212]	NEWTABLE 	20 3 0
	181	[213]	LOADK    	21 -22	; "string"
	182	[214]	LOADK    	22 -23	; "\""
	183	[216]	GETTABLE 	23 18 -1	; 2
	184	[216]	SETLIST  	20 3 1	; 1
	185	[216]	MOVE     	16 20
	186	[216]	JMP      	39	; to 226
	187	[217]	EQ       	0 -24 19	; "index" -
	188	[217]	JMP      	2	; to 191
	189	[218]	GETTABLE 	16 18 -1	; 2
	190	[218]	JMP      	35	; to 226
	191	[220]	LOADK    	16 -25	; "nil"
	192	[221]	JMP      	33	; to 226
	193	[222]	EQ       	0 -25 17	; "nil" -
	194	[222]	JMP      	2	; to 197
	195	[223]	LOADK    	16 -25	; "nil"
	196	[223]	JMP      	29	; to 226
	197	[225]	GETGLOBAL	18 -26	; type
	198	[225]	MOVE     	19 16
	199	[225]	CALL     	18 2 2
	200	[226]	LOADNIL  	19 19
	201	[227]	EQ       	0 18 -22	; - "string"
	202	[227]	JMP      	2	; to 205
	203	[228]	MOVE     	19 16
	204	[228]	JMP      	15	; to 220
	205	[229]	EQ       	0 18 -27	; - "table"
	206	[229]	JMP      	5	; to 212
	207	[229]	GETTABLE 	20 16 -7	; 1
	208	[229]	EQ       	0 20 -28	; - "ref"
	209	[229]	JMP      	2	; to 212
	210	[230]	GETTABLE 	19 16 -1	; 2
	211	[230]	JMP      	8	; to 220
	212	[232]	GETGLOBAL	20 -29	; error
	213	[232]	LOADK    	21 -30	; "don't know how to extract name from "
	214	[232]	GETGLOBAL	22 -31	; tostring
	215	[232]	MOVE     	23 18
	216	[232]	CALL     	22 2 2
	217	[232]	CONCAT   	21 21 22
	218	[232]	CALL     	20 2 2
	219	[232]	MOVE     	19 20
	220	[234]	NEWTABLE 	20 3 0
	221	[235]	LOADK    	21 -22	; "string"
	222	[236]	LOADK    	22 -23	; "\""
	223	[238]	MOVE     	23 19
	224	[238]	SETLIST  	20 3 1	; 1
	225	[238]	MOVE     	16 20
	226	[240]	GETUPVAL 	18 6	; build
	227	[240]	GETTABLE 	18 18 -27	; "table"
	228	[240]	NEWTABLE 	19 4 0
	229	[240]	NEWTABLE 	20 1 0
	230	[242]	LOADK    	21 -32	; "__init"
	231	[243]	GETUPVAL 	22 5	; super_scope
	232	[243]	MOVE     	23 15
	233	[243]	MOVE     	24 12
	234	[243]	NEWTABLE 	25 2 0
	235	[244]	LOADK    	26 -10	; "key_literal"
	236	[246]	LOADK    	27 -32	; "__init"
	237	[246]	SETLIST  	25 2 1	; 1
	238	[243]	CALL     	22 4 0
	239	[247]	SETLIST  	20 0 1	; 1
	240	[247]	NEWTABLE 	21 2 0
	241	[249]	LOADK    	22 -33	; "__base"
	242	[251]	MOVE     	23 8
	243	[251]	SETLIST  	21 2 1	; 1
	244	[251]	NEWTABLE 	22 2 0
	245	[253]	LOADK    	23 -34	; "__name"
	246	[255]	MOVE     	24 16
	247	[255]	SETLIST  	22 2 1	; 1
	248	[256]	TEST     	5 0 0
	249	[256]	JMP      	6	; to 256
	250	[256]	NEWTABLE 	23 2 0
	251	[257]	LOADK    	24 -35	; "__parent"
	252	[259]	MOVE     	25 7
	253	[259]	SETLIST  	23 2 1	; 1
	254	[259]	TEST     	23 0 1
	255	[259]	JMP      	1	; to 257
	256	[260]	LOADNIL  	23 23
	257	[260]	SETLIST  	19 4 1	; 1
	258	[240]	CALL     	18 2 2
	259	[261]	LOADNIL  	19 19
	260	[262]	TEST     	5 0 0
	261	[262]	JMP      	117	; to 379
	262	[263]	GETUPVAL 	20 6	; build
	263	[263]	GETTABLE 	20 20 -36	; "if"
	264	[263]	NEWTABLE 	21 0 2
	265	[264]	NEWTABLE 	22 4 0
	266	[265]	LOADK    	23 -38	; "exp"
	267	[265]	NEWTABLE 	24 2 0
	268	[267]	LOADK    	25 -28	; "ref"
	269	[269]	LOADK    	26 -39	; "val"
	270	[269]	SETLIST  	24 2 1	; 1
	271	[270]	LOADK    	25 -40	; "=="
	272	[272]	LOADK    	26 -25	; "nil"
	273	[272]	SETLIST  	22 4 1	; 1
	274	[272]	SETTABLE 	21 -37 22	; "cond" -
	275	[273]	NEWTABLE 	22 1 0
	276	[274]	GETUPVAL 	23 6	; build
	277	[274]	GETTABLE 	23 23 -11	; "assign_one"
	278	[274]	GETUPVAL 	24 8	; LocalName
	279	[274]	LOADK    	25 -3	; "parent"
	280	[274]	CALL     	24 2 2
	281	[274]	GETUPVAL 	25 6	; build
	282	[274]	GETTABLE 	25 25 -18	; "chain"
	283	[274]	NEWTABLE 	26 1 1
	284	[275]	SETTABLE 	26 -4 -42	; "base" "rawget"
	285	[275]	NEWTABLE 	27 2 0
	286	[277]	LOADK    	28 -20	; "call"
	287	[277]	NEWTABLE 	29 2 0
	288	[278]	NEWTABLE 	30 2 0
	289	[280]	LOADK    	31 -28	; "ref"
	290	[282]	LOADK    	32 -43	; "cls"
	291	[282]	SETLIST  	30 2 1	; 1
	292	[282]	NEWTABLE 	31 3 0
	293	[284]	LOADK    	32 -22	; "string"
	294	[285]	LOADK    	33 -23	; "\""
	295	[287]	LOADK    	34 -35	; "__parent"
	296	[287]	SETLIST  	31 3 1	; 1
	297	[288]	SETLIST  	29 2 1	; 1
	298	[289]	SETLIST  	27 2 1	; 1
	299	[290]	SETLIST  	26 1 1	; 1
	300	[274]	CALL     	25 2 0
	301	[274]	CALL     	23 0 2
	302	[291]	GETUPVAL 	24 6	; build
	303	[291]	GETTABLE 	24 24 -36	; "if"
	304	[291]	NEWTABLE 	25 0 2
	305	[292]	GETUPVAL 	26 8	; LocalName
	306	[292]	LOADK    	27 -3	; "parent"
	307	[292]	CALL     	26 2 2
	308	[292]	SETTABLE 	25 -37 26	; "cond" -
	309	[293]	NEWTABLE 	26 0 0
	310	[294]	GETUPVAL 	27 6	; build
	311	[294]	GETTABLE 	27 27 -18	; "chain"
	312	[294]	NEWTABLE 	28 1 1
	313	[295]	GETUPVAL 	29 8	; LocalName
	314	[295]	LOADK    	30 -3	; "parent"
	315	[295]	CALL     	29 2 2
	316	[295]	SETTABLE 	28 -4 29	; "base" -
	317	[295]	NEWTABLE 	29 2 0
	318	[297]	LOADK    	30 -24	; "index"
	319	[299]	LOADK    	31 -44	; "name"
	320	[299]	SETLIST  	29 2 1	; 1
	321	[300]	SETLIST  	28 1 1	; 1
	322	[294]	CALL     	27 2 0
	323	[301]	SETLIST  	26 0 1	; 1
	324	[301]	SETTABLE 	25 -41 26	; "then" -
	325	[291]	CALL     	24 2 0
	326	[303]	SETLIST  	22 0 1	; 1
	327	[303]	SETTABLE 	21 -41 22	; "then" -
	328	[263]	CALL     	20 2 2
	329	[305]	GETUPVAL 	21 3	; insert
	330	[305]	MOVE     	22 20
	331	[305]	NEWTABLE 	23 2 0
	332	[306]	LOADK    	24 -45	; "else"
	333	[306]	NEWTABLE 	25 1 0
	334	[309]	LOADK    	26 -39	; "val"
	335	[309]	SETLIST  	25 1 1	; 1
	336	[310]	SETLIST  	23 2 1	; 1
	337	[305]	CALL     	21 3 1
	338	[311]	GETUPVAL 	21 6	; build
	339	[311]	GETTABLE 	21 21 -12	; "fndef"
	340	[311]	NEWTABLE 	22 0 2
	341	[312]	NEWTABLE 	23 2 0
	342	[312]	NEWTABLE 	24 1 0
	343	[315]	LOADK    	25 -43	; "cls"
	344	[315]	SETLIST  	24 1 1	; 1
	345	[315]	NEWTABLE 	25 1 0
	346	[318]	LOADK    	26 -44	; "name"
	347	[318]	SETLIST  	25 1 1	; 1
	348	[319]	SETLIST  	23 2 1	; 1
	349	[319]	SETTABLE 	22 -13 23	; "args" -
	350	[320]	NEWTABLE 	23 2 0
	351	[321]	GETUPVAL 	24 6	; build
	352	[321]	GETTABLE 	24 24 -11	; "assign_one"
	353	[321]	GETUPVAL 	25 8	; LocalName
	354	[321]	LOADK    	26 -39	; "val"
	355	[321]	CALL     	25 2 2
	356	[321]	GETUPVAL 	26 6	; build
	357	[321]	GETTABLE 	26 26 -18	; "chain"
	358	[321]	NEWTABLE 	27 1 1
	359	[322]	SETTABLE 	27 -4 -42	; "base" "rawget"
	360	[322]	NEWTABLE 	28 2 0
	361	[324]	LOADK    	29 -20	; "call"
	362	[324]	NEWTABLE 	30 2 0
	363	[326]	MOVE     	31 8
	364	[326]	NEWTABLE 	32 2 0
	365	[328]	LOADK    	33 -28	; "ref"
	366	[330]	LOADK    	34 -44	; "name"
	367	[330]	SETLIST  	32 2 1	; 1
	368	[331]	SETLIST  	30 2 1	; 1
	369	[332]	SETLIST  	28 2 1	; 1
	370	[333]	SETLIST  	27 1 1	; 1
	371	[321]	CALL     	26 2 0
	372	[321]	CALL     	24 0 2
	373	[335]	MOVE     	25 20
	374	[335]	SETLIST  	23 2 1	; 1
	375	[335]	SETTABLE 	22 -17 23	; "body" -
	376	[311]	CALL     	21 2 2
	377	[336]	MOVE     	19 21
	378	[336]	JMP      	1	; to 380
	379	[338]	MOVE     	19 8
	380	[340]	GETUPVAL 	20 6	; build
	381	[340]	GETTABLE 	20 20 -27	; "table"
	382	[340]	NEWTABLE 	21 2 0
	383	[340]	NEWTABLE 	22 2 0
	384	[342]	LOADK    	23 -46	; "__index"
	385	[344]	MOVE     	24 19
	386	[344]	SETLIST  	22 2 1	; 1
	387	[344]	NEWTABLE 	23 1 0
	388	[346]	LOADK    	24 -47	; "__call"
	389	[347]	GETUPVAL 	25 6	; build
	390	[347]	GETTABLE 	25 25 -12	; "fndef"
	391	[347]	NEWTABLE 	26 0 2
	392	[348]	NEWTABLE 	27 2 0
	393	[348]	NEWTABLE 	28 1 0
	394	[351]	LOADK    	29 -43	; "cls"
	395	[351]	SETLIST  	28 1 1	; 1
	396	[351]	NEWTABLE 	29 1 0
	397	[354]	LOADK    	30 -14	; "..."
	398	[354]	SETLIST  	29 1 1	; 1
	399	[355]	SETLIST  	27 2 1	; 1
	400	[355]	SETTABLE 	26 -13 27	; "args" -
	401	[356]	NEWTABLE 	27 3 0
	402	[357]	GETUPVAL 	28 6	; build
	403	[357]	GETTABLE 	28 28 -11	; "assign_one"
	404	[357]	MOVE     	29 9
	405	[357]	GETUPVAL 	30 6	; build
	406	[357]	GETTABLE 	30 30 -18	; "chain"
	407	[357]	NEWTABLE 	31 1 1
	408	[358]	SETTABLE 	31 -4 -48	; "base" "setmetatable"
	409	[358]	NEWTABLE 	32 2 0
	410	[360]	LOADK    	33 -20	; "call"
	411	[360]	NEWTABLE 	34 2 0
	412	[362]	LOADK    	35 -49	; "{}"
	413	[364]	MOVE     	36 8
	414	[364]	SETLIST  	34 2 1	; 1
	415	[365]	SETLIST  	32 2 1	; 1
	416	[366]	SETLIST  	31 1 1	; 1
	417	[357]	CALL     	30 2 0
	418	[357]	CALL     	28 0 2
	419	[367]	GETUPVAL 	29 6	; build
	420	[367]	GETTABLE 	29 29 -18	; "chain"
	421	[367]	NEWTABLE 	30 1 1
	422	[368]	SETTABLE 	30 -4 -50	; "base" "cls.__init"
	423	[368]	NEWTABLE 	31 2 0
	424	[370]	LOADK    	32 -20	; "call"
	425	[370]	NEWTABLE 	33 2 0
	426	[372]	MOVE     	34 9
	427	[374]	LOADK    	35 -14	; "..."
	428	[374]	SETLIST  	33 2 1	; 1
	429	[375]	SETLIST  	31 2 1	; 1
	430	[376]	SETLIST  	30 1 1	; 1
	431	[367]	CALL     	29 2 2
	432	[378]	MOVE     	30 9
	433	[378]	SETLIST  	27 3 1	; 1
	434	[378]	SETTABLE 	26 -17 27	; "body" -
	435	[347]	CALL     	25 2 0
	436	[380]	SETLIST  	23 0 1	; 1
	437	[381]	SETLIST  	21 2 1	; 1
	438	[340]	CALL     	20 2 2
	439	[382]	GETUPVAL 	21 6	; build
	440	[382]	GETTABLE 	21 21 -18	; "chain"
	441	[382]	NEWTABLE 	22 1 1
	442	[383]	SETTABLE 	22 -4 -48	; "base" "setmetatable"
	443	[383]	NEWTABLE 	23 2 0
	444	[385]	LOADK    	24 -20	; "call"
	445	[385]	NEWTABLE 	25 2 0
	446	[387]	MOVE     	26 18
	447	[389]	MOVE     	27 20
	448	[389]	SETLIST  	25 2 1	; 1
	449	[390]	SETLIST  	23 2 1	; 1
	450	[391]	SETLIST  	22 1 1	; 1
	451	[382]	CALL     	21 2 2
	452	[391]	MOVE     	18 21
	453	[392]	LOADNIL  	21 21
	454	[394]	NEWTABLE 	22 12 0
	455	[395]	GETUPVAL 	23 9	; Run
	456	[399]	CLOSURE  	24 2	; 0x7fcaf1c09530
	457	[399]	MOVE     	0 4
	458	[395]	CALL     	23 2 2
	459	[399]	NEWTABLE 	24 2 0
	460	[401]	LOADK    	25 -51	; "declare"
	461	[401]	NEWTABLE 	26 1 0
	462	[404]	MOVE     	27 10
	463	[404]	SETLIST  	26 1 1	; 1
	464	[405]	SETLIST  	24 2 1	; 1
	465	[405]	NEWTABLE 	25 2 0
	466	[407]	LOADK    	26 -52	; "declare_glob"
	467	[409]	LOADK    	27 -53	; "*"
	468	[409]	SETLIST  	25 2 1	; 1
	469	[410]	TEST     	5 0 0
	470	[410]	JMP      	7	; to 478
	471	[410]	GETUPVAL 	26 6	; build
	472	[410]	GETTABLE 	26 26 -11	; "assign_one"
	473	[410]	MOVE     	27 7
	474	[410]	MOVE     	28 5
	475	[410]	CALL     	26 3 2
	476	[410]	TEST     	26 0 1
	477	[410]	JMP      	1	; to 479
	478	[410]	GETUPVAL 	26 10	; NOOP
	479	[411]	GETUPVAL 	27 6	; build
	480	[411]	GETTABLE 	27 27 -11	; "assign_one"
	481	[411]	MOVE     	28 8
	482	[411]	NEWTABLE 	29 2 0
	483	[412]	LOADK    	30 -27	; "table"
	484	[414]	MOVE     	31 14
	485	[414]	SETLIST  	29 2 1	; 1
	486	[411]	CALL     	27 3 2
	487	[415]	GETUPVAL 	28 6	; build
	488	[415]	GETTABLE 	28 28 -11	; "assign_one"
	489	[415]	SELF     	29 8 -18	; "chain"
	490	[415]	LOADK    	31 -46	; "__index"
	491	[415]	CALL     	29 3 2
	492	[415]	MOVE     	30 8
	493	[415]	CALL     	28 3 2
	494	[416]	TEST     	5 0 0
	495	[416]	JMP      	24	; to 520
	496	[416]	GETUPVAL 	29 6	; build
	497	[416]	GETTABLE 	29 29 -18	; "chain"
	498	[416]	NEWTABLE 	30 1 1
	499	[417]	SETTABLE 	30 -4 -48	; "base" "setmetatable"
	500	[417]	NEWTABLE 	31 2 0
	501	[419]	LOADK    	32 -20	; "call"
	502	[419]	NEWTABLE 	33 1 0
	503	[421]	MOVE     	34 8
	504	[422]	GETUPVAL 	35 6	; build
	505	[422]	GETTABLE 	35 35 -18	; "chain"
	506	[422]	NEWTABLE 	36 1 1
	507	[423]	SETTABLE 	36 -4 7	; "base" -
	508	[423]	NEWTABLE 	37 2 0
	509	[425]	LOADK    	38 -21	; "dot"
	510	[427]	LOADK    	39 -33	; "__base"
	511	[427]	SETLIST  	37 2 1	; 1
	512	[428]	SETLIST  	36 1 1	; 1
	513	[422]	CALL     	35 2 0
	514	[429]	SETLIST  	33 0 1	; 1
	515	[430]	SETLIST  	31 2 1	; 1
	516	[431]	SETLIST  	30 1 1	; 1
	517	[416]	CALL     	29 2 2
	518	[431]	TEST     	29 0 1
	519	[431]	JMP      	1	; to 521
	520	[431]	GETUPVAL 	29 10	; NOOP
	521	[432]	GETUPVAL 	30 6	; build
	522	[432]	GETTABLE 	30 30 -11	; "assign_one"
	523	[432]	MOVE     	31 10
	524	[432]	MOVE     	32 18
	525	[432]	CALL     	30 3 2
	526	[433]	GETUPVAL 	31 6	; build
	527	[433]	GETTABLE 	31 31 -11	; "assign_one"
	528	[433]	SELF     	32 8 -18	; "chain"
	529	[433]	LOADK    	34 -54	; "__class"
	530	[433]	CALL     	32 3 2
	531	[433]	MOVE     	33 10
	532	[433]	CALL     	31 3 2
	533	[434]	GETUPVAL 	32 6	; build
	534	[434]	GETTABLE 	32 32 -55	; "group"
	535	[441]	CLOSURE  	33 3	; 0x7fcaf1c09670
	536	[441]	MOVE     	0 13
	537	[441]	GETUPVAL 	0 6	; build
	538	[441]	GETUPVAL 	0 8	; LocalName
	539	[441]	MOVE     	0 10
	540	[441]	CALL     	33 1 0
	541	[434]	CALL     	32 0 2
	542	[442]	TEST     	5 0 0
	543	[442]	JMP      	26	; to 570
	544	[442]	GETUPVAL 	33 6	; build
	545	[442]	GETTABLE 	33 33 -36	; "if"
	546	[442]	NEWTABLE 	34 0 2
	547	[443]	NEWTABLE 	35 1 0
	548	[444]	LOADK    	36 -38	; "exp"
	549	[445]	SELF     	37 7 -18	; "chain"
	550	[445]	LOADK    	39 -56	; "__inherited"
	551	[445]	CALL     	37 3 0
	552	[446]	SETLIST  	35 0 1	; 1
	553	[446]	SETTABLE 	34 -37 35	; "cond" -
	554	[447]	NEWTABLE 	35 0 0
	555	[448]	SELF     	36 7 -18	; "chain"
	556	[448]	LOADK    	38 -56	; "__inherited"
	557	[448]	NEWTABLE 	39 2 0
	558	[449]	LOADK    	40 -20	; "call"
	559	[449]	NEWTABLE 	41 2 0
	560	[451]	MOVE     	42 7
	561	[453]	MOVE     	43 10
	562	[453]	SETLIST  	41 2 1	; 1
	563	[454]	SETLIST  	39 2 1	; 1
	564	[448]	CALL     	36 4 0
	565	[455]	SETLIST  	35 0 1	; 1
	566	[455]	SETTABLE 	34 -41 35	; "then" -
	567	[442]	CALL     	33 2 2
	568	[456]	TEST     	33 0 1
	569	[456]	JMP      	1	; to 571
	570	[456]	GETUPVAL 	33 10	; NOOP
	571	[457]	GETUPVAL 	34 6	; build
	572	[457]	GETTABLE 	34 34 -55	; "group"
	573	[463]	CLOSURE  	35 4	; 0x7fcaf1c09b30
	574	[463]	MOVE     	0 4
	575	[463]	GETUPVAL 	0 6	; build
	576	[463]	MOVE     	0 10
	577	[463]	CALL     	35 1 0
	578	[457]	CALL     	34 0 2
	579	[468]	CLOSURE  	35 5	; 0x7fcaf1c08df0
	580	[468]	MOVE     	0 2
	581	[468]	MOVE     	0 10
	582	[468]	CALL     	35 1 0
	583	[469]	SETLIST  	22 0 1	; 1
	584	[470]	GETUPVAL 	23 6	; build
	585	[470]	GETTABLE 	23 23 -55	; "group"
	586	[470]	NEWTABLE 	24 1 0
	587	[471]	GETUPVAL 	25 6	; build
	588	[471]	GETTABLE 	25 25 -55	; "group"
	589	[481]	CLOSURE  	26 6	; 0x7fcaf1c08e70
	590	[481]	GETUPVAL 	0 4	; ntype
	591	[481]	MOVE     	0 4
	592	[481]	GETUPVAL 	0 6	; build
	593	[481]	CALL     	26 1 0
	594	[471]	CALL     	25 0 2
	595	[482]	GETUPVAL 	26 6	; build
	596	[482]	GETTABLE 	26 26 -57	; "do"
	597	[482]	MOVE     	27 22
	598	[482]	CALL     	26 2 0
	599	[483]	SETLIST  	24 0 1	; 1
	600	[470]	CALL     	23 2 2
	601	[483]	MOVE     	21 23
	602	[485]	RETURN   	21 2
	603	[486]	RETURN   	0 1

function <./moonscript/transform/class.lua:118,120> (7 instructions, 28 bytes at 0x7fcaf1c08a50)
0+ params, 5 slots, 2 upvalues, 1 local, 0 constants, 0 functions
	1	[119]	GETUPVAL 	1 0	; transform_super
	2	[119]	GETUPVAL 	2 1	; cls_name
	3	[119]	LOADBOOL 	3 1 0
	4	[119]	VARARG   	4 0
	5	[119]	TAILCALL 	1 0 0
	6	[119]	RETURN   	1 0
	7	[120]	RETURN   	0 1

function <./moonscript/transform/class.lua:122,124> (7 instructions, 28 bytes at 0x7fcaf1c08c30)
0+ params, 5 slots, 2 upvalues, 1 local, 0 constants, 0 functions
	1	[123]	GETUPVAL 	1 0	; transform_super
	2	[123]	GETUPVAL 	2 1	; cls_name
	3	[123]	LOADBOOL 	3 0 0
	4	[123]	VARARG   	4 0
	5	[123]	TAILCALL 	1 0 0
	6	[123]	RETURN   	1 0
	7	[124]	RETURN   	0 1

function <./moonscript/transform/class.lua:395,399> (8 instructions, 32 bytes at 0x7fcaf1c09530)
1 param, 4 slots, 1 upvalue, 1 local, 1 constant, 0 functions
	1	[396]	GETUPVAL 	1 0	; name
	2	[396]	TEST     	1 0 0
	3	[396]	JMP      	4	; to 8
	4	[397]	SELF     	1 0 -1	; "put_name"
	5	[397]	GETUPVAL 	3 0	; name
	6	[397]	TAILCALL 	1 3 0
	7	[397]	RETURN   	1 0
	8	[399]	RETURN   	0 1

function <./moonscript/transform/class.lua:434,441> (19 instructions, 76 bytes at 0x7fcaf1c09670)
0 params, 4 slots, 4 upvalues, 0 locals, 4 constants, 0 functions
	1	[435]	GETUPVAL 	0 0	; statements
	2	[435]	LEN      	0 0
	3	[435]	LT       	0 -1 0	; 0 -
	4	[435]	JMP      	14	; to 19
	5	[436]	NEWTABLE 	0 1 0
	6	[437]	GETUPVAL 	1 1	; build
	7	[437]	GETTABLE 	1 1 -2	; "assign_one"
	8	[437]	GETUPVAL 	2 2	; LocalName
	9	[437]	LOADK    	3 -3	; "self"
	10	[437]	CALL     	2 2 2
	11	[437]	GETUPVAL 	3 3	; cls_name
	12	[437]	CALL     	1 3 2
	13	[438]	GETUPVAL 	2 1	; build
	14	[438]	GETTABLE 	2 2 -4	; "group"
	15	[438]	GETUPVAL 	3 0	; statements
	16	[438]	CALL     	2 2 0
	17	[439]	SETLIST  	0 0 1	; 1
	18	[439]	RETURN   	0 2
	19	[441]	RETURN   	0 1

function <./moonscript/transform/class.lua:457,463> (12 instructions, 48 bytes at 0x7fcaf1c09b30)
0 params, 4 slots, 3 upvalues, 0 locals, 1 constant, 0 functions
	1	[458]	GETUPVAL 	0 0	; name
	2	[458]	TEST     	0 0 0
	3	[458]	JMP      	8	; to 12
	4	[459]	NEWTABLE 	0 0 0
	5	[460]	GETUPVAL 	1 1	; build
	6	[460]	GETTABLE 	1 1 -1	; "assign_one"
	7	[460]	GETUPVAL 	2 0	; name
	8	[460]	GETUPVAL 	3 2	; cls_name
	9	[460]	CALL     	1 3 0
	10	[461]	SETLIST  	0 0 1	; 1
	11	[461]	RETURN   	0 2
	12	[463]	RETURN   	0 1

function <./moonscript/transform/class.lua:464,468> (8 instructions, 32 bytes at 0x7fcaf1c08df0)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[465]	GETUPVAL 	0 0	; ret
	2	[465]	TEST     	0 0 0
	3	[465]	JMP      	4	; to 8
	4	[466]	GETUPVAL 	0 0	; ret
	5	[466]	GETUPVAL 	1 1	; cls_name
	6	[466]	TAILCALL 	0 2 0
	7	[466]	RETURN   	0 0
	8	[468]	RETURN   	0 1

function <./moonscript/transform/class.lua:471,481> (17 instructions, 68 bytes at 0x7fcaf1c08e70)
0 params, 5 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[472]	GETUPVAL 	0 0	; ntype
	2	[472]	GETUPVAL 	1 1	; name
	3	[472]	CALL     	0 2 2
	4	[472]	EQ       	0 0 -1	; - "value"
	5	[472]	JMP      	11	; to 17
	6	[473]	NEWTABLE 	0 0 0
	7	[474]	GETUPVAL 	1 2	; build
	8	[474]	GETTABLE 	1 1 -2	; "declare"
	9	[474]	NEWTABLE 	2 0 1
	10	[475]	NEWTABLE 	3 1 0
	11	[477]	GETUPVAL 	4 1	; name
	12	[477]	SETLIST  	3 1 1	; 1
	13	[477]	SETTABLE 	2 -3 3	; "names" -
	14	[474]	CALL     	1 2 0
	15	[479]	SETLIST  	0 0 1	; 1
	16	[479]	RETURN   	0 2
	17	[481]	RETURN   	0 1
-----------------------

main <./moonscript/transform/destructure.lua:0,0> (59 instructions, 236 bytes at 0x7f8fe24068d0)
0+ params, 13 slots, 0 upvalues, 13 locals, 17 constants, 5 functions
	1	[3]	GETGLOBAL	3 -1	; require
	2	[3]	LOADK    	4 -2	; "moonscript.types"
	3	[3]	CALL     	3 2 2
	4	[4]	GETTABLE 	4 3 -3	; "ntype"
	5	[4]	GETTABLE 	5 3 -4	; "mtype"
	6	[4]	GETTABLE 	2 3 -5	; "build"
	7	[4]	MOVE     	1 5
	8	[4]	MOVE     	0 4
	9	[6]	LOADNIL  	3 3
	10	[7]	GETGLOBAL	4 -1	; require
	11	[7]	LOADK    	5 -6	; "moonscript.transform.names"
	12	[7]	CALL     	4 2 2
	13	[7]	GETTABLE 	3 4 -7	; "NameProxy"
	14	[8]	LOADNIL  	4 4
	15	[9]	GETGLOBAL	5 -8	; table
	16	[9]	GETTABLE 	4 5 -9	; "insert"
	17	[10]	LOADNIL  	5 5
	18	[11]	GETGLOBAL	6 -1	; require
	19	[11]	LOADK    	7 -10	; "moonscript.util"
	20	[11]	CALL     	6 2 2
	21	[11]	GETTABLE 	5 6 -11	; "unpack"
	22	[12]	LOADNIL  	6 6
	23	[13]	GETGLOBAL	7 -1	; require
	24	[13]	LOADK    	8 -12	; "moonscript.errors"
	25	[13]	CALL     	7 2 2
	26	[13]	GETTABLE 	6 7 -13	; "user_error"
	27	[14]	LOADNIL  	7 7
	28	[32]	CLOSURE  	7 0	; 0x7f8fe2406b60
	29	[33]	LOADNIL  	8 8
	30	[42]	CLOSURE  	8 1	; 0x7f8fe24065f0
	31	[42]	MOVE     	0 0
	32	[43]	LOADNIL  	9 9
	33	[103]	CLOSURE  	9 2	; 0x7f8fe2407730
	34	[103]	MOVE     	0 0
	35	[103]	MOVE     	0 7
	36	[103]	MOVE     	0 4
	37	[103]	MOVE     	0 9
	38	[103]	MOVE     	0 6
	39	[104]	LOADNIL  	10 10
	40	[149]	CLOSURE  	10 3	; 0x7f8fe2407080
	41	[149]	MOVE     	0 9
	42	[149]	MOVE     	0 3
	43	[149]	MOVE     	0 2
	44	[149]	MOVE     	0 4
	45	[149]	MOVE     	0 5
	46	[150]	LOADNIL  	11 11
	47	[227]	CLOSURE  	11 4	; 0x7f8fe24086c0
	48	[227]	MOVE     	0 5
	49	[227]	MOVE     	0 0
	50	[227]	MOVE     	0 4
	51	[227]	MOVE     	0 10
	52	[227]	MOVE     	0 2
	53	[228]	NEWTABLE 	12 0 4
	54	[229]	SETTABLE 	12 -14 8	; "has_destructure" -
	55	[230]	SETTABLE 	12 -15 11	; "split_assign" -
	56	[231]	SETTABLE 	12 -16 10	; "build_assign" -
	57	[232]	SETTABLE 	12 -17 9	; "extract_assign_names" -
	58	[233]	RETURN   	12 2
	59	[233]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:15,32> (21 instructions, 84 bytes at 0x7f8fe2406b60)
0+ params, 14 slots, 0 upvalues, 14 locals, 1 constant, 0 functions
	1	[17]	NEWTABLE 	1 0 0
	2	[18]	LOADK    	2 -1	; 1
	3	[19]	NEWTABLE 	3 0 0
	4	[19]	VARARG   	4 0
	5	[21]	SETLIST  	3 0 1	; 1
	6	[22]	LOADK    	4 -1	; 1
	7	[22]	LEN      	5 3
	8	[22]	LOADK    	6 -1	; 1
	9	[22]	FORPREP  	4 9	; to 19
	10	[23]	GETTABLE 	8 3 7
	11	[24]	LOADK    	9 -1	; 1
	12	[24]	LEN      	10 8
	13	[24]	LOADK    	11 -1	; 1
	14	[24]	FORPREP  	9 3	; to 18
	15	[25]	GETTABLE 	13 8 12
	16	[26]	SETTABLE 	1 2 13
	17	[27]	ADD      	2 2 -1	; - 1
	18	[24]	FORLOOP  	9 -4	; to 15
	19	[22]	FORLOOP  	4 -10	; to 10
	20	[30]	RETURN   	1 2
	21	[32]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:34,42> (16 instructions, 64 bytes at 0x7f8fe24065f0)
1 param, 8 slots, 1 upvalue, 6 locals, 2 constants, 0 functions
	1	[35]	LOADK    	1 -1	; 1
	2	[35]	LEN      	2 0
	3	[35]	LOADK    	3 -1	; 1
	4	[35]	FORPREP  	1 8	; to 13
	5	[36]	GETTABLE 	5 0 4
	6	[37]	GETUPVAL 	6 0	; ntype
	7	[37]	MOVE     	7 5
	8	[37]	CALL     	6 2 2
	9	[37]	EQ       	0 6 -2	; - "table"
	10	[37]	JMP      	2	; to 13
	11	[38]	LOADBOOL 	6 1 0
	12	[38]	RETURN   	6 2
	13	[35]	FORLOOP  	1 -9	; to 5
	14	[41]	LOADBOOL 	1 0 0
	15	[41]	RETURN   	1 2
	16	[42]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:44,103> (106 instructions, 424 bytes at 0x7f8fe2407730)
3 params, 18 slots, 5 upvalues, 17 locals, 15 constants, 0 functions
	1	[45]	EQ       	0 1 -1	; - nil
	2	[45]	JMP      	2	; to 5
	3	[46]	NEWTABLE 	3 0 0
	4	[46]	MOVE     	1 3
	5	[48]	EQ       	0 2 -1	; - nil
	6	[48]	JMP      	2	; to 9
	7	[49]	NEWTABLE 	3 0 0
	8	[49]	MOVE     	2 3
	9	[51]	LOADK    	3 -2	; 1
	10	[52]	GETTABLE 	4 0 -3	; 2
	11	[53]	LOADK    	5 -2	; 1
	12	[53]	LEN      	6 4
	13	[53]	LOADK    	7 -2	; 1
	14	[53]	FORPREP  	5 89	; to 104
	15	[54]	GETTABLE 	9 4 8
	16	[55]	LOADNIL  	10 11
	17	[56]	LEN      	12 9
	18	[56]	EQ       	0 12 -2	; - 1
	19	[56]	JMP      	12	; to 32
	20	[57]	NEWTABLE 	12 2 0
	21	[58]	LOADK    	13 -4	; "index"
	22	[58]	NEWTABLE 	14 2 0
	23	[60]	LOADK    	15 -5	; "number"
	24	[62]	MOVE     	16 3
	25	[62]	SETLIST  	14 2 1	; 1
	26	[63]	SETLIST  	12 2 1	; 1
	27	[64]	ADD      	3 3 -2	; - 1
	28	[65]	GETTABLE 	13 9 -2	; 1
	29	[65]	MOVE     	11 12
	30	[65]	MOVE     	10 13
	31	[65]	JMP      	29	; to 61
	32	[67]	GETTABLE 	12 9 -2	; 1
	33	[68]	LOADNIL  	13 13
	34	[69]	GETUPVAL 	14 0	; ntype
	35	[69]	MOVE     	15 12
	36	[69]	CALL     	14 2 2
	37	[69]	EQ       	0 14 -6	; - "key_literal"
	38	[69]	JMP      	14	; to 53
	39	[70]	GETTABLE 	14 12 -3	; 2
	40	[71]	GETUPVAL 	15 0	; ntype
	41	[71]	MOVE     	16 14
	42	[71]	CALL     	15 2 2
	43	[71]	EQ       	0 15 -7	; - "colon"
	44	[71]	JMP      	2	; to 47
	45	[72]	MOVE     	13 14
	46	[72]	JMP      	11	; to 58
	47	[74]	NEWTABLE 	15 2 0
	48	[75]	LOADK    	16 -8	; "dot"
	49	[77]	MOVE     	17 14
	50	[77]	SETLIST  	15 2 1	; 1
	51	[77]	MOVE     	13 15
	52	[78]	JMP      	5	; to 58
	53	[80]	NEWTABLE 	14 2 0
	54	[81]	LOADK    	15 -4	; "index"
	55	[83]	MOVE     	16 12
	56	[83]	SETLIST  	14 2 1	; 1
	57	[83]	MOVE     	13 14
	58	[85]	GETTABLE 	14 9 -3	; 2
	59	[85]	MOVE     	11 13
	60	[85]	MOVE     	10 14
	61	[87]	GETUPVAL 	12 1	; join
	62	[87]	MOVE     	13 2
	63	[87]	NEWTABLE 	14 1 0
	64	[89]	MOVE     	15 11
	65	[89]	SETLIST  	14 1 1	; 1
	66	[87]	CALL     	12 3 2
	67	[89]	MOVE     	11 12
	68	[90]	GETUPVAL 	12 0	; ntype
	69	[90]	MOVE     	13 10
	70	[90]	CALL     	12 2 2
	71	[91]	EQ       	1 -9 12	; "value" -
	72	[91]	JMP      	6	; to 79
	73	[91]	EQ       	1 -10 12	; "ref" -
	74	[91]	JMP      	4	; to 79
	75	[91]	EQ       	1 -11 12	; "chain" -
	76	[91]	JMP      	2	; to 79
	77	[91]	EQ       	0 -12 12	; "self" -
	78	[91]	JMP      	8	; to 87
	79	[92]	GETUPVAL 	13 2	; insert
	80	[92]	MOVE     	14 1
	81	[92]	NEWTABLE 	15 2 0
	82	[93]	MOVE     	16 10
	83	[95]	MOVE     	17 11
	84	[95]	SETLIST  	15 2 1	; 1
	85	[92]	CALL     	13 3 1
	86	[95]	JMP      	17	; to 104
	87	[96]	EQ       	0 -13 12	; "table" -
	88	[96]	JMP      	6	; to 95
	89	[97]	GETUPVAL 	13 3	; extract_assign_names
	90	[97]	MOVE     	14 10
	91	[97]	MOVE     	15 1
	92	[97]	MOVE     	16 11
	93	[97]	CALL     	13 4 1
	94	[97]	JMP      	9	; to 104
	95	[99]	GETUPVAL 	13 4	; user_error
	96	[99]	LOADK    	14 -14	; "Can't destructure value of type: "
	97	[99]	GETGLOBAL	15 -15	; tostring
	98	[99]	GETUPVAL 	16 0	; ntype
	99	[99]	MOVE     	17 10
	100	[99]	CALL     	16 2 0
	101	[99]	CALL     	15 0 2
	102	[99]	CONCAT   	14 14 15
	103	[99]	CALL     	13 2 1
	104	[53]	FORLOOP  	5 -90	; to 15
	105	[102]	RETURN   	1 2
	106	[103]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:105,149> (80 instructions, 320 bytes at 0x7f8fe2407080)
3 params, 18 slots, 5 upvalues, 14 locals, 11 constants, 0 functions
	1	[106]	GETUPVAL 	3 0	; extract_assign_names
	2	[106]	MOVE     	4 1
	3	[106]	CALL     	3 2 2
	4	[107]	NEWTABLE 	4 0 0
	5	[108]	NEWTABLE 	5 0 0
	6	[109]	NEWTABLE 	6 3 0
	7	[110]	LOADK    	7 -1	; "assign"
	8	[111]	MOVE     	8 4
	9	[113]	MOVE     	9 5
	10	[113]	SETLIST  	6 3 1	; 1
	11	[114]	LOADNIL  	7 7
	12	[115]	SELF     	8 0 -2	; "is_local"
	13	[115]	MOVE     	10 2
	14	[115]	CALL     	8 3 2
	15	[115]	TEST     	8 0 1
	16	[115]	JMP      	3	; to 20
	17	[115]	LEN      	8 3
	18	[115]	EQ       	0 8 -3	; - 1
	19	[115]	JMP      	2	; to 22
	20	[116]	MOVE     	7 2
	21	[116]	JMP      	20	; to 42
	22	[119]	GETUPVAL 	8 1	; NameProxy
	23	[119]	LOADK    	9 -4	; "obj"
	24	[119]	CALL     	8 2 2
	25	[119]	MOVE     	7 8
	26	[120]	GETUPVAL 	8 2	; build
	27	[120]	GETTABLE 	8 8 -5	; "do"
	28	[120]	NEWTABLE 	9 2 0
	29	[121]	GETUPVAL 	10 2	; build
	30	[121]	GETTABLE 	10 10 -6	; "assign_one"
	31	[121]	MOVE     	11 7
	32	[121]	MOVE     	12 2
	33	[121]	CALL     	10 3 2
	34	[121]	NEWTABLE 	11 3 0
	35	[123]	LOADK    	12 -1	; "assign"
	36	[124]	MOVE     	13 4
	37	[126]	MOVE     	14 5
	38	[126]	SETLIST  	11 3 1	; 1
	39	[127]	SETLIST  	9 2 1	; 1
	40	[120]	CALL     	8 2 2
	41	[127]	MOVE     	6 8
	42	[131]	LOADK    	8 -3	; 1
	43	[131]	LEN      	9 3
	44	[131]	LOADK    	10 -3	; 1
	45	[131]	FORPREP  	8 22	; to 68
	46	[132]	GETTABLE 	12 3 11
	47	[133]	GETUPVAL 	13 3	; insert
	48	[133]	MOVE     	14 4
	49	[133]	GETTABLE 	15 12 -3	; 1
	50	[133]	CALL     	13 3 1
	51	[134]	LOADNIL  	13 13
	52	[135]	TEST     	7 0 0
	53	[135]	JMP      	9	; to 63
	54	[136]	GETUPVAL 	14 1	; NameProxy
	55	[136]	GETTABLE 	14 14 -7	; "chain"
	56	[136]	MOVE     	15 7
	57	[136]	GETUPVAL 	16 4	; unpack
	58	[136]	GETTABLE 	17 12 -8	; 2
	59	[136]	CALL     	16 2 0
	60	[136]	CALL     	14 0 2
	61	[136]	MOVE     	13 14
	62	[136]	JMP      	1	; to 64
	63	[138]	LOADK    	13 -9	; "nil"
	64	[140]	GETUPVAL 	14 3	; insert
	65	[140]	MOVE     	15 5
	66	[140]	MOVE     	16 13
	67	[140]	CALL     	14 3 1
	68	[131]	FORLOOP  	8 -23	; to 46
	69	[142]	GETUPVAL 	8 2	; build
	70	[142]	GETTABLE 	8 8 -10	; "group"
	71	[142]	NEWTABLE 	9 2 0
	72	[142]	NEWTABLE 	10 2 0
	73	[144]	LOADK    	11 -11	; "declare"
	74	[146]	MOVE     	12 4
	75	[146]	SETLIST  	10 2 1	; 1
	76	[148]	MOVE     	11 6
	77	[148]	SETLIST  	9 2 1	; 1
	78	[142]	TAILCALL 	8 2 0
	79	[148]	RETURN   	8 0
	80	[149]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:151,227> (104 instructions, 416 bytes at 0x7f8fe24086c0)
2 params, 20 slots, 5 upvalues, 28 locals, 8 constants, 2 functions
	1	[152]	GETUPVAL 	2 0	; unpack
	2	[152]	MOVE     	3 1
	3	[152]	LOADK    	4 -1	; 2
	4	[152]	CALL     	2 3 3
	5	[153]	NEWTABLE 	4 0 0
	6	[154]	LEN      	5 2
	7	[155]	LEN      	6 3
	8	[156]	LOADK    	7 -2	; 1
	9	[157]	GETGLOBAL	8 -3	; ipairs
	10	[157]	MOVE     	9 2
	11	[157]	CALL     	8 2 4
	12	[157]	JMP      	34	; to 47
	13	[158]	GETUPVAL 	13 1	; ntype
	14	[158]	MOVE     	14 12
	15	[158]	CALL     	13 2 2
	16	[158]	EQ       	0 13 -4	; - "table"
	17	[158]	JMP      	29	; to 47
	18	[159]	LT       	0 7 11
	19	[159]	JMP      	18	; to 38
	20	[160]	SUB      	13 11 -2	; - 1
	21	[161]	GETUPVAL 	14 2	; insert
	22	[161]	MOVE     	15 4
	23	[161]	NEWTABLE 	16 2 0
	24	[162]	LOADK    	17 -5	; "assign"
	25	[171]	CLOSURE  	18 0	; 0x7f8fe2408cc0
	26	[171]	MOVE     	0 7
	27	[171]	MOVE     	0 13
	28	[171]	MOVE     	0 2
	29	[171]	CALL     	18 1 2
	30	[180]	CLOSURE  	19 1	; 0x7f8fe2409090
	31	[180]	MOVE     	0 7
	32	[180]	MOVE     	0 13
	33	[180]	MOVE     	0 3
	34	[180]	CALL     	19 1 0
	35	[181]	SETLIST  	16 0 1	; 1
	36	[161]	CALL     	14 3 1
	37	[181]	CLOSE    	13
	38	[183]	GETUPVAL 	13 2	; insert
	39	[183]	MOVE     	14 4
	40	[183]	GETUPVAL 	15 3	; build_assign
	41	[183]	MOVE     	16 0
	42	[183]	MOVE     	17 12
	43	[183]	GETTABLE 	18 3 11
	44	[183]	CALL     	15 4 0
	45	[183]	CALL     	13 0 1
	46	[184]	ADD      	7 11 -2	; - 1
	47	[157]	TFORLOOP 	8 2
	48	[185]	JMP      	-36	; to 13
	49	[187]	LE       	1 7 5
	50	[187]	JMP      	2	; to 53
	51	[187]	LE       	0 7 6
	52	[187]	JMP      	46	; to 99
	53	[188]	LOADNIL  	8 8
	54	[189]	LT       	0 5 7
	55	[189]	JMP      	5	; to 61
	56	[190]	NEWTABLE 	9 1 0
	57	[192]	LOADK    	10 -6	; "_"
	58	[192]	SETLIST  	9 1 1	; 1
	59	[192]	MOVE     	8 9
	60	[192]	JMP      	11	; to 72
	61	[195]	NEWTABLE 	9 0 0
	62	[196]	LOADK    	10 -2	; 1
	63	[197]	MOVE     	11 7
	64	[197]	MOVE     	12 5
	65	[197]	LOADK    	13 -2	; 1
	66	[197]	FORPREP  	11 3	; to 70
	67	[198]	GETTABLE 	15 2 14
	68	[198]	SETTABLE 	9 10 15
	69	[199]	ADD      	10 10 -2	; - 1
	70	[197]	FORLOOP  	11 -4	; to 67
	71	[201]	MOVE     	8 9
	72	[204]	LOADNIL  	9 9
	73	[205]	LT       	0 6 7
	74	[205]	JMP      	5	; to 80
	75	[206]	NEWTABLE 	10 1 0
	76	[208]	LOADK    	11 -7	; "nil"
	77	[208]	SETLIST  	10 1 1	; 1
	78	[208]	MOVE     	9 10
	79	[208]	JMP      	11	; to 91
	80	[211]	NEWTABLE 	10 0 0
	81	[212]	LOADK    	11 -2	; 1
	82	[213]	MOVE     	12 7
	83	[213]	MOVE     	13 6
	84	[213]	LOADK    	14 -2	; 1
	85	[213]	FORPREP  	12 3	; to 89
	86	[214]	GETTABLE 	16 3 15
	87	[214]	SETTABLE 	10 11 16
	88	[215]	ADD      	11 11 -2	; - 1
	89	[213]	FORLOOP  	12 -4	; to 86
	90	[217]	MOVE     	9 10
	91	[220]	GETUPVAL 	10 2	; insert
	92	[220]	MOVE     	11 4
	93	[220]	NEWTABLE 	12 3 0
	94	[221]	LOADK    	13 -5	; "assign"
	95	[222]	MOVE     	14 8
	96	[224]	MOVE     	15 9
	97	[224]	SETLIST  	12 3 1	; 1
	98	[220]	CALL     	10 3 1
	99	[226]	GETUPVAL 	8 4	; build
	100	[226]	GETTABLE 	8 8 -8	; "group"
	101	[226]	MOVE     	9 4
	102	[226]	TAILCALL 	8 2 0
	103	[226]	RETURN   	8 0
	104	[227]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:163,171> (13 instructions, 52 bytes at 0x7f8fe2408cc0)
0 params, 7 slots, 3 upvalues, 6 locals, 1 constant, 0 functions
	1	[164]	NEWTABLE 	0 0 0
	2	[165]	LOADK    	1 -1	; 1
	3	[166]	GETUPVAL 	2 0	; start
	4	[166]	GETUPVAL 	3 1	; stop
	5	[166]	LOADK    	4 -1	; 1
	6	[166]	FORPREP  	2 4	; to 11
	7	[167]	GETUPVAL 	6 2	; names
	8	[167]	GETTABLE 	6 6 5
	9	[167]	SETTABLE 	0 1 6
	10	[168]	ADD      	1 1 -1	; - 1
	11	[166]	FORLOOP  	2 -5	; to 7
	12	[170]	RETURN   	0 2
	13	[171]	RETURN   	0 1

function <./moonscript/transform/destructure.lua:172,180> (13 instructions, 52 bytes at 0x7f8fe2409090)
0 params, 7 slots, 3 upvalues, 6 locals, 1 constant, 0 functions
	1	[173]	NEWTABLE 	0 0 0
	2	[174]	LOADK    	1 -1	; 1
	3	[175]	GETUPVAL 	2 0	; start
	4	[175]	GETUPVAL 	3 1	; stop
	5	[175]	LOADK    	4 -1	; 1
	6	[175]	FORPREP  	2 4	; to 11
	7	[176]	GETUPVAL 	6 2	; values
	8	[176]	GETTABLE 	6 6 5
	9	[176]	SETTABLE 	0 1 6
	10	[177]	ADD      	1 1 -1	; - 1
	11	[175]	FORLOOP  	2 -5	; to 7
	12	[179]	RETURN   	0 2
	13	[180]	RETURN   	0 1
-----------------------

main <./moonscript/transform/comprehension.lua:0,0> (14 instructions, 56 bytes at 0x7f86f04068f0)
0+ params, 4 slots, 0 upvalues, 3 locals, 5 constants, 2 functions
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.types"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "is_value"
	5	[3]	LOADNIL  	1 1
	6	[46]	CLOSURE  	1 0	; 0x7f86f0406ac0
	7	[47]	LOADNIL  	2 2
	8	[50]	CLOSURE  	2 1	; 0x7f86f0407130
	9	[50]	MOVE     	0 0
	10	[51]	NEWTABLE 	3 0 2
	11	[52]	SETTABLE 	3 -4 1	; "construct_comprehension" -
	12	[53]	SETTABLE 	3 -5 2	; "comprehension_has_value" -
	13	[54]	RETURN   	3 2
	14	[54]	RETURN   	0 1

function <./moonscript/transform/comprehension.lua:4,46> (69 instructions, 276 bytes at 0x7f86f0406ac0)
2 params, 18 slots, 0 upvalues, 18 locals, 10 constants, 0 functions
	1	[5]	MOVE     	2 0
	2	[6]	LEN      	3 1
	3	[6]	LOADK    	4 -1	; 1
	4	[6]	LOADK    	5 -2	; -1
	5	[6]	FORPREP  	3 60	; to 66
	6	[7]	GETTABLE 	7 1 6
	7	[8]	GETTABLE 	8 7 -1	; 1
	8	[9]	MOVE     	9 8
	9	[10]	EQ       	0 -3 9	; "for" -
	10	[10]	JMP      	14	; to 25
	11	[11]	LOADNIL  	10 12
	12	[12]	GETTABLE 	13 7 -1	; 1
	13	[12]	GETTABLE 	14 7 -4	; 2
	14	[12]	GETTABLE 	12 7 -5	; 3
	15	[12]	MOVE     	11 14
	16	[12]	MOVE     	10 13
	17	[13]	NEWTABLE 	13 4 0
	18	[14]	LOADK    	14 -3	; "for"
	19	[15]	MOVE     	15 11
	20	[16]	MOVE     	16 12
	21	[18]	MOVE     	17 2
	22	[18]	SETLIST  	13 4 1	; 1
	23	[18]	MOVE     	2 13
	24	[18]	JMP      	37	; to 62
	25	[19]	EQ       	0 -6 9	; "foreach" -
	26	[19]	JMP      	16	; to 43
	27	[20]	LOADNIL  	10 12
	28	[21]	GETTABLE 	13 7 -1	; 1
	29	[21]	GETTABLE 	14 7 -4	; 2
	30	[21]	GETTABLE 	12 7 -5	; 3
	31	[21]	MOVE     	11 14
	32	[21]	MOVE     	10 13
	33	[22]	NEWTABLE 	13 4 0
	34	[23]	LOADK    	14 -6	; "foreach"
	35	[24]	MOVE     	15 11
	36	[24]	NEWTABLE 	16 1 0
	37	[27]	MOVE     	17 12
	38	[27]	SETLIST  	16 1 1	; 1
	39	[29]	MOVE     	17 2
	40	[29]	SETLIST  	13 4 1	; 1
	41	[29]	MOVE     	2 13
	42	[29]	JMP      	19	; to 62
	43	[30]	EQ       	0 -7 9	; "when" -
	44	[30]	JMP      	11	; to 56
	45	[31]	LOADNIL  	10 11
	46	[32]	GETTABLE 	12 7 -1	; 1
	47	[32]	GETTABLE 	11 7 -4	; 2
	48	[32]	MOVE     	10 12
	49	[33]	NEWTABLE 	12 3 0
	50	[34]	LOADK    	13 -8	; "if"
	51	[35]	MOVE     	14 11
	52	[37]	MOVE     	15 2
	53	[37]	SETLIST  	12 3 1	; 1
	54	[37]	MOVE     	2 12
	55	[37]	JMP      	6	; to 62
	56	[39]	GETGLOBAL	10 -9	; error
	57	[39]	LOADK    	11 -10	; "Unknown comprehension clause: "
	58	[39]	MOVE     	12 8
	59	[39]	CONCAT   	11 11 12
	60	[39]	CALL     	10 2 2
	61	[39]	MOVE     	2 10
	62	[41]	NEWTABLE 	10 1 0
	63	[43]	MOVE     	11 2
	64	[43]	SETLIST  	10 1 1	; 1
	65	[43]	MOVE     	2 10
	66	[6]	FORLOOP  	3 -61	; to 6
	67	[45]	GETTABLE 	3 2 -1	; 1
	68	[45]	RETURN   	3 2
	69	[46]	RETURN   	0 1

function <./moonscript/transform/comprehension.lua:48,50> (5 instructions, 20 bytes at 0x7f86f0407130)
1 param, 3 slots, 1 upvalue, 1 local, 1 constant, 0 functions
	1	[49]	GETUPVAL 	1 0	; is_value
	2	[49]	GETTABLE 	2 0 -1	; 2
	3	[49]	TAILCALL 	1 2 0
	4	[49]	RETURN   	1 0
	5	[50]	RETURN   	0 1
-----------------------

main <./moonscript/transform/names.lua:0,0> (69 instructions, 276 bytes at 0x7fbe9cc068d0)
0+ params, 10 slots, 0 upvalues, 9 locals, 19 constants, 10 functions
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.types"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "build"
	5	[3]	LOADNIL  	1 1
	6	[4]	GETGLOBAL	2 -1	; require
	7	[4]	LOADK    	3 -4	; "moonscript.util"
	8	[4]	CALL     	2 2 2
	9	[4]	GETTABLE 	1 2 -5	; "unpack"
	10	[5]	LOADNIL  	2 3
	11	[8]	NEWTABLE 	4 0 1
	12	[11]	CLOSURE  	5 0	; 0x7fbe9ce04470
	13	[11]	SETTABLE 	4 -6 5	; "get_name" -
	14	[13]	SETTABLE 	4 -7 4	; "__index" -
	15	[14]	GETGLOBAL	5 -8	; setmetatable
	16	[14]	NEWTABLE 	6 0 3
	17	[18]	CLOSURE  	7 1	; 0x7fbe9ce04830
	18	[18]	SETTABLE 	6 -9 7	; "__init" -
	19	[19]	SETTABLE 	6 -10 4	; "__base" -
	20	[20]	SETTABLE 	6 -11 -12	; "__name" "LocalName"
	21	[21]	NEWTABLE 	7 0 2
	22	[22]	SETTABLE 	7 -7 4	; "__index" -
	23	[27]	CLOSURE  	8 2	; 0x7fbe9ce04120
	24	[27]	MOVE     	0 4
	25	[27]	SETTABLE 	7 -13 8	; "__call" -
	26	[14]	CALL     	5 3 2
	27	[28]	MOVE     	3 5
	28	[29]	SETTABLE 	4 -14 3	; "__class" -
	29	[30]	MOVE     	2 3
	30	[30]	CLOSE    	3
	31	[32]	LOADNIL  	3 4
	32	[35]	NEWTABLE 	5 0 4
	33	[44]	CLOSURE  	6 3	; 0x7fbe9ce04b20
	34	[44]	SETTABLE 	5 -6 6	; "get_name" -
	35	[61]	CLOSURE  	6 4	; 0x7fbe9ce04aa0
	36	[61]	MOVE     	0 0
	37	[61]	SETTABLE 	5 -15 6	; "chain" -
	38	[76]	CLOSURE  	6 5	; 0x7fbe9ce05360
	39	[76]	MOVE     	0 0
	40	[76]	SETTABLE 	5 -16 6	; "index" -
	41	[83]	CLOSURE  	6 6	; 0x7fbe9ce05aa0
	42	[83]	SETTABLE 	5 -17 6	; "__tostring" -
	43	[85]	SETTABLE 	5 -7 5	; "__index" -
	44	[86]	GETGLOBAL	6 -8	; setmetatable
	45	[86]	NEWTABLE 	7 0 3
	46	[90]	CLOSURE  	8 7	; 0x7fbe9ce04770
	47	[90]	SETTABLE 	7 -9 8	; "__init" -
	48	[91]	SETTABLE 	7 -10 5	; "__base" -
	49	[92]	SETTABLE 	7 -11 -18	; "__name" "NameProxy"
	50	[93]	NEWTABLE 	8 0 2
	51	[94]	SETTABLE 	8 -7 5	; "__index" -
	52	[99]	CLOSURE  	9 8	; 0x7fbe9ce060f0
	53	[99]	MOVE     	0 5
	54	[99]	SETTABLE 	8 -13 9	; "__call" -
	55	[86]	CALL     	6 3 2
	56	[100]	MOVE     	4 6
	57	[101]	SETTABLE 	5 -14 4	; "__class" -
	58	[102]	MOVE     	3 4
	59	[102]	CLOSE    	4
	60	[104]	LOADNIL  	4 4
	61	[113]	CLOSURE  	4 9	; 0x7fbe9ce043c0
	62	[113]	MOVE     	0 2
	63	[113]	MOVE     	0 3
	64	[114]	NEWTABLE 	5 0 3
	65	[115]	SETTABLE 	5 -18 3	; "NameProxy" -
	66	[116]	SETTABLE 	5 -12 2	; "LocalName" -
	67	[117]	SETTABLE 	5 -19 4	; "is_name_proxy" -
	68	[118]	RETURN   	5 2
	69	[118]	RETURN   	0 1

function <./moonscript/transform/names.lua:9,11> (3 instructions, 12 bytes at 0x7fbe9ce04470)
1 param, 2 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[10]	GETTABLE 	1 0 -1	; "name"
	2	[10]	RETURN   	1 2
	3	[11]	RETURN   	0 1

function <./moonscript/transform/names.lua:15,18> (3 instructions, 12 bytes at 0x7fbe9ce04830)
2 params, 2 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[16]	SETTABLE 	0 -1 1	; "name" -
	2	[17]	SETTABLE 	0 -2 -3	; 1 "temp_name"
	3	[18]	RETURN   	0 1

function <./moonscript/transform/names.lua:23,27> (10 instructions, 40 bytes at 0x7fbe9ce04120)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[24]	GETGLOBAL	2 -1	; setmetatable
	2	[24]	NEWTABLE 	3 0 0
	3	[24]	GETUPVAL 	4 0	; _base_0
	4	[24]	CALL     	2 3 2
	5	[25]	GETTABLE 	3 0 -2	; "__init"
	6	[25]	MOVE     	4 2
	7	[25]	VARARG   	5 0
	8	[25]	CALL     	3 0 1
	9	[26]	RETURN   	2 2
	10	[27]	RETURN   	0 1

function <./moonscript/transform/names.lua:36,44> (14 instructions, 56 bytes at 0x7fbe9ce04b20)
3 params, 7 slots, 0 upvalues, 3 locals, 4 constants, 0 functions
	1	[37]	EQ       	0 2 -1	; - nil
	2	[37]	JMP      	1	; to 4
	3	[38]	LOADBOOL 	2 1 0
	4	[40]	GETTABLE 	3 0 -2	; "name"
	5	[40]	TEST     	3 0 1
	6	[40]	JMP      	5	; to 12
	7	[41]	SELF     	3 1 -3	; "free_name"
	8	[41]	GETTABLE 	5 0 -4	; "prefix"
	9	[41]	MOVE     	6 2
	10	[41]	CALL     	3 4 2
	11	[41]	SETTABLE 	0 -2 3	; "name" -
	12	[43]	GETTABLE 	3 0 -2	; "name"
	13	[43]	RETURN   	3 2
	14	[44]	RETURN   	0 1

function <./moonscript/transform/names.lua:45,61> (28 instructions, 112 bytes at 0x7fbe9ce04aa0)
1+ param, 11 slots, 1 upvalue, 8 locals, 6 constants, 0 functions
	1	[46]	NEWTABLE 	2 0 1
	2	[47]	SETTABLE 	2 -1 0	; "base" -
	3	[47]	VARARG   	3 0
	4	[49]	SETLIST  	2 0 1	; 1
	5	[50]	GETGLOBAL	3 -2	; ipairs
	6	[50]	MOVE     	4 2
	7	[50]	CALL     	3 2 4
	8	[50]	JMP      	12	; to 21
	9	[51]	GETGLOBAL	8 -3	; type
	10	[51]	MOVE     	9 7
	11	[51]	CALL     	8 2 2
	12	[51]	EQ       	0 8 -4	; - "string"
	13	[51]	JMP      	6	; to 20
	14	[52]	NEWTABLE 	8 2 0
	15	[53]	LOADK    	9 -5	; "dot"
	16	[55]	MOVE     	10 7
	17	[55]	SETLIST  	8 2 1	; 1
	18	[55]	SETTABLE 	2 6 8
	19	[55]	JMP      	1	; to 21
	20	[57]	SETTABLE 	2 6 7
	21	[50]	TFORLOOP 	3 2
	22	[58]	JMP      	-14	; to 9
	23	[60]	GETUPVAL 	3 0	; build
	24	[60]	GETTABLE 	3 3 -6	; "chain"
	25	[60]	MOVE     	4 2
	26	[60]	TAILCALL 	3 2 0
	27	[60]	RETURN   	3 0
	28	[61]	RETURN   	0 1

function <./moonscript/transform/names.lua:62,76> (22 instructions, 88 bytes at 0x7fbe9ce05360)
2 params, 7 slots, 1 upvalue, 2 locals, 6 constants, 0 functions
	1	[63]	GETGLOBAL	2 -1	; type
	2	[63]	MOVE     	3 1
	3	[63]	CALL     	2 2 2
	4	[63]	EQ       	0 2 -2	; - "string"
	5	[63]	JMP      	5	; to 11
	6	[64]	NEWTABLE 	2 2 0
	7	[65]	LOADK    	3 -3	; "ref"
	8	[67]	MOVE     	4 1
	9	[67]	SETLIST  	2 2 1	; 1
	10	[67]	MOVE     	1 2
	11	[69]	GETUPVAL 	2 0	; build
	12	[69]	GETTABLE 	2 2 -4	; "chain"
	13	[69]	NEWTABLE 	3 1 1
	14	[70]	SETTABLE 	3 -5 0	; "base" -
	15	[70]	NEWTABLE 	4 2 0
	16	[72]	LOADK    	5 -6	; "index"
	17	[74]	MOVE     	6 1
	18	[74]	SETLIST  	4 2 1	; 1
	19	[75]	SETLIST  	3 1 1	; 1
	20	[69]	TAILCALL 	2 2 0
	21	[75]	RETURN   	2 0
	22	[76]	RETURN   	0 1

function <./moonscript/transform/names.lua:77,83> (15 instructions, 60 bytes at 0x7fbe9ce05aa0)
1 param, 4 slots, 0 upvalues, 1 local, 5 constants, 0 functions
	1	[78]	GETTABLE 	1 0 -1	; "name"
	2	[78]	TEST     	1 0 0
	3	[78]	JMP      	6	; to 10
	4	[79]	LOADK    	1 -2	; "name<%s>"
	5	[79]	SELF     	1 1 -3	; "format"
	6	[79]	GETTABLE 	3 0 -1	; "name"
	7	[79]	TAILCALL 	1 3 0
	8	[79]	RETURN   	1 0
	9	[79]	JMP      	5	; to 15
	10	[81]	LOADK    	1 -4	; "name<prefix(%s)>"
	11	[81]	SELF     	1 1 -3	; "format"
	12	[81]	GETTABLE 	3 0 -5	; "prefix"
	13	[81]	TAILCALL 	1 3 0
	14	[81]	RETURN   	1 0
	15	[83]	RETURN   	0 1

function <./moonscript/transform/names.lua:87,90> (3 instructions, 12 bytes at 0x7fbe9ce04770)
2 params, 2 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[88]	SETTABLE 	0 -1 1	; "prefix" -
	2	[89]	SETTABLE 	0 -2 -3	; 1 "temp_name"
	3	[90]	RETURN   	0 1

function <./moonscript/transform/names.lua:95,99> (10 instructions, 40 bytes at 0x7fbe9ce060f0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[96]	GETGLOBAL	2 -1	; setmetatable
	2	[96]	NEWTABLE 	3 0 0
	3	[96]	GETUPVAL 	4 0	; _base_0
	4	[96]	CALL     	2 3 2
	5	[97]	GETTABLE 	3 0 -2	; "__init"
	6	[97]	MOVE     	4 2
	7	[97]	VARARG   	5 0
	8	[97]	CALL     	3 0 1
	9	[98]	RETURN   	2 2
	10	[99]	RETURN   	0 1

function <./moonscript/transform/names.lua:105,113> (17 instructions, 68 bytes at 0x7fbe9ce043c0)
1 param, 3 slots, 2 upvalues, 2 locals, 3 constants, 0 functions
	1	[106]	GETGLOBAL	1 -1	; type
	2	[106]	MOVE     	2 0
	3	[106]	CALL     	1 2 2
	4	[106]	EQ       	1 1 -2	; - "table"
	5	[106]	JMP      	2	; to 8
	6	[107]	LOADBOOL 	1 0 0
	7	[107]	RETURN   	1 2
	8	[109]	GETTABLE 	1 0 -3	; "__class"
	9	[110]	GETUPVAL 	2 0	; LocalName
	10	[110]	EQ       	1 2 1
	11	[110]	JMP      	3	; to 15
	12	[110]	GETUPVAL 	2 1	; NameProxy
	13	[110]	EQ       	0 2 1
	14	[110]	JMP      	2	; to 17
	15	[111]	LOADBOOL 	2 1 0
	16	[111]	RETURN   	2 2
	17	[113]	RETURN   	0 1
-----------------------

main <./moonscript/transform/transformer.lua:0,0> (40 instructions, 160 bytes at 0x7f8fdb4068d0)
0+ params, 8 slots, 0 upvalues, 4 locals, 15 constants, 7 functions
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.types"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "ntype"
	5	[3]	LOADNIL  	1 2
	6	[6]	NEWTABLE 	3 0 5
	7	[18]	CLOSURE  	4 0	; 0x7f8fdb406bd0
	8	[18]	MOVE     	0 0
	9	[18]	SETTABLE 	3 -4 4	; "transform_once" -
	10	[38]	CLOSURE  	4 1	; 0x7f8fdb4072d0
	11	[38]	MOVE     	0 0
	12	[38]	SETTABLE 	3 -5 4	; "transform" -
	13	[43]	CLOSURE  	4 2	; 0x7f8fdb407660
	14	[43]	SETTABLE 	3 -6 4	; "bind" -
	15	[46]	CLOSURE  	4 3	; 0x7f8fdb4078f0
	16	[46]	SETTABLE 	3 -7 4	; "__call" -
	17	[49]	CLOSURE  	4 4	; 0x7f8fdb407b60
	18	[49]	MOVE     	0 0
	19	[49]	SETTABLE 	3 -8 4	; "can_transform" -
	20	[51]	SETTABLE 	3 -9 3	; "__index" -
	21	[52]	GETGLOBAL	4 -10	; setmetatable
	22	[52]	NEWTABLE 	5 0 3
	23	[58]	CLOSURE  	6 5	; 0x7f8fdb407250
	24	[58]	SETTABLE 	5 -11 6	; "__init" -
	25	[59]	SETTABLE 	5 -12 3	; "__base" -
	26	[60]	SETTABLE 	5 -13 -14	; "__name" "Transformer"
	27	[61]	NEWTABLE 	6 0 2
	28	[62]	SETTABLE 	6 -9 3	; "__index" -
	29	[67]	CLOSURE  	7 6	; 0x7f8fdb4065c0
	30	[67]	MOVE     	0 3
	31	[67]	SETTABLE 	6 -7 7	; "__call" -
	32	[52]	CALL     	4 3 2
	33	[68]	MOVE     	2 4
	34	[69]	SETTABLE 	3 -15 2	; "__class" -
	35	[70]	MOVE     	1 2
	36	[70]	CLOSE    	2
	37	[72]	NEWTABLE 	2 0 1
	38	[73]	SETTABLE 	2 -14 1	; "Transformer" -
	39	[74]	RETURN   	2 2
	40	[74]	RETURN   	0 1

function <./moonscript/transform/transformer.lua:7,18> (26 instructions, 104 bytes at 0x7f8fdb406bd0)
3+ params, 9 slots, 1 upvalue, 5 locals, 3 constants, 0 functions
	1	[8]	GETTABLE 	4 0 -1	; "seen_nodes"
	2	[8]	GETTABLE 	4 4 2
	3	[8]	TEST     	4 0 0
	4	[8]	JMP      	1	; to 6
	5	[9]	RETURN   	2 2
	6	[11]	GETTABLE 	4 0 -1	; "seen_nodes"
	7	[11]	SETTABLE 	4 2 -2	; - true
	8	[12]	GETTABLE 	4 0 -3	; "transformers"
	9	[12]	GETUPVAL 	5 0	; ntype
	10	[12]	MOVE     	6 2
	11	[12]	CALL     	5 2 2
	12	[12]	GETTABLE 	4 4 5
	13	[13]	TEST     	4 0 0
	14	[13]	JMP      	10	; to 25
	15	[14]	MOVE     	5 4
	16	[14]	MOVE     	6 1
	17	[14]	MOVE     	7 2
	18	[14]	VARARG   	8 0
	19	[14]	CALL     	5 0 2
	20	[14]	TEST     	5 0 1
	21	[14]	JMP      	1	; to 23
	22	[14]	MOVE     	5 2
	23	[14]	RETURN   	5 2
	24	[14]	JMP      	1	; to 26
	25	[16]	RETURN   	2 2
	26	[18]	RETURN   	0 1

function <./moonscript/transform/transformer.lua:19,38> (32 instructions, 128 bytes at 0x7f8fdb4072d0)
3+ params, 10 slots, 1 upvalue, 6 locals, 3 constants, 0 functions
	1	[20]	GETTABLE 	4 0 -1	; "seen_nodes"
	2	[20]	GETTABLE 	4 4 2
	3	[20]	TEST     	4 0 0
	4	[20]	JMP      	1	; to 6
	5	[21]	RETURN   	2 2
	6	[23]	GETTABLE 	4 0 -1	; "seen_nodes"
	7	[23]	SETTABLE 	4 2 -2	; - true
	8	[25]	GETTABLE 	4 0 -3	; "transformers"
	9	[25]	GETUPVAL 	5 0	; ntype
	10	[25]	MOVE     	6 2
	11	[25]	CALL     	5 2 2
	12	[25]	GETTABLE 	4 4 5
	13	[26]	LOADNIL  	5 5
	14	[27]	TEST     	4 0 0
	15	[27]	JMP      	9	; to 25
	16	[28]	MOVE     	6 4
	17	[28]	MOVE     	7 1
	18	[28]	MOVE     	8 2
	19	[28]	VARARG   	9 0
	20	[28]	CALL     	6 0 2
	21	[28]	TESTSET  	5 6 1
	22	[28]	JMP      	1	; to 24
	23	[28]	MOVE     	5 2
	24	[28]	JMP      	1	; to 26
	25	[30]	MOVE     	5 2
	26	[32]	EQ       	0 5 2
	27	[32]	JMP      	1	; to 29
	28	[33]	RETURN   	2 2
	29	[35]	MOVE     	2 5
	30	[35]	JMP      	-23	; to 8
	31	[37]	RETURN   	2 2
	32	[38]	RETURN   	0 1

function <./moonscript/transform/transformer.lua:39,43> (5 instructions, 20 bytes at 0x7f8fdb407660)
2 params, 3 slots, 0 upvalues, 2 locals, 0 constants, 1 function
	1	[42]	CLOSURE  	2 0	; 0x7f8fdb4077d0
	2	[42]	MOVE     	0 0
	3	[42]	MOVE     	0 1
	4	[42]	RETURN   	2 2
	5	[43]	RETURN   	0 1

function <./moonscript/transform/transformer.lua:40,42> (7 instructions, 28 bytes at 0x7f8fdb4077d0)
0+ params, 5 slots, 2 upvalues, 1 local, 1 constant, 0 functions
	1	[41]	GETUPVAL 	1 0	; self
	2	[41]	SELF     	1 1 -1	; "transform"
	3	[41]	GETUPVAL 	3 1	; scope
	4	[41]	VARARG   	4 0
	5	[41]	TAILCALL 	1 0 0
	6	[41]	RETURN   	1 0
	7	[42]	RETURN   	0 1

function <./moonscript/transform/transformer.lua:44,46> (5 instructions, 20 bytes at 0x7f8fdb4078f0)
1+ param, 5 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[45]	SELF     	2 0 -1	; "transform"
	2	[45]	VARARG   	4 0
	3	[45]	TAILCALL 	2 0 0
	4	[45]	RETURN   	2 0
	5	[46]	RETURN   	0 1

function <./moonscript/transform/transformer.lua:47,49> (11 instructions, 44 bytes at 0x7f8fdb407b60)
2 params, 5 slots, 1 upvalue, 2 locals, 2 constants, 0 functions
	1	[48]	GETTABLE 	2 0 -1	; "transformers"
	2	[48]	GETUPVAL 	3 0	; ntype
	3	[48]	MOVE     	4 1
	4	[48]	CALL     	3 2 2
	5	[48]	GETTABLE 	2 2 3
	6	[48]	EQ       	0 2 -2	; - nil
	7	[48]	JMP      	1	; to 9
	8	[48]	LOADBOOL 	2 0 1
	9	[48]	LOADBOOL 	2 1 0
	10	[48]	RETURN   	2 2
	11	[49]	RETURN   	0 1

function <./moonscript/transform/transformer.lua:53,58> (8 instructions, 32 bytes at 0x7f8fdb407250)
2 params, 5 slots, 0 upvalues, 2 locals, 5 constants, 0 functions
	1	[54]	SETTABLE 	0 -1 1	; "transformers" -
	2	[55]	GETGLOBAL	2 -3	; setmetatable
	3	[55]	NEWTABLE 	3 0 0
	4	[55]	NEWTABLE 	4 0 1
	5	[56]	SETTABLE 	4 -4 -5	; "__mode" "k"
	6	[55]	CALL     	2 3 2
	7	[57]	SETTABLE 	0 -2 2	; "seen_nodes" -
	8	[58]	RETURN   	0 1

function <./moonscript/transform/transformer.lua:63,67> (10 instructions, 40 bytes at 0x7f8fdb4065c0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[64]	GETGLOBAL	2 -1	; setmetatable
	2	[64]	NEWTABLE 	3 0 0
	3	[64]	GETUPVAL 	4 0	; _base_0
	4	[64]	CALL     	2 3 2
	5	[65]	GETTABLE 	3 0 -2	; "__init"
	6	[65]	MOVE     	4 2
	7	[65]	VARARG   	5 0
	8	[65]	CALL     	3 0 1
	9	[66]	RETURN   	2 2
	10	[67]	RETURN   	0 1
-----------------------

main <./moonscript/transform/value.lua:0,0> (116 instructions, 464 bytes at 0x7fe3214068d0)
0+ params, 18 slots, 0 upvalues, 18 locals, 41 constants, 13 functions
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.transform.transformer"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "Transformer"
	5	[3]	LOADNIL  	1 3
	6	[5]	GETGLOBAL	4 -1	; require
	7	[5]	LOADK    	5 -4	; "moonscript.types"
	8	[5]	CALL     	4 2 2
	9	[6]	GETTABLE 	5 4 -5	; "build"
	10	[6]	GETTABLE 	6 4 -6	; "ntype"
	11	[6]	GETTABLE 	3 4 -7	; "smart_node"
	12	[6]	MOVE     	2 6
	13	[6]	MOVE     	1 5
	14	[8]	LOADNIL  	4 4
	15	[9]	GETGLOBAL	5 -1	; require
	16	[9]	LOADK    	6 -8	; "moonscript.transform.names"
	17	[9]	CALL     	5 2 2
	18	[9]	GETTABLE 	4 5 -9	; "NameProxy"
	19	[10]	LOADNIL  	5 6
	20	[12]	GETGLOBAL	7 -1	; require
	21	[12]	LOADK    	8 -10	; "moonscript.transform.accumulator"
	22	[12]	CALL     	7 2 2
	23	[13]	GETTABLE 	8 7 -11	; "Accumulator"
	24	[13]	GETTABLE 	6 7 -12	; "default_accumulator"
	25	[13]	MOVE     	5 8
	26	[15]	LOADNIL  	7 7
	27	[16]	GETGLOBAL	8 -1	; require
	28	[16]	LOADK    	9 -13	; "moonscript.data"
	29	[16]	CALL     	8 2 2
	30	[16]	GETTABLE 	7 8 -14	; "lua_keywords"
	31	[17]	LOADNIL  	8 11
	32	[19]	GETGLOBAL	12 -1	; require
	33	[19]	LOADK    	13 -15	; "moonscript.transform.statements"
	34	[19]	CALL     	12 2 2
	35	[20]	GETTABLE 	13 12 -16	; "Run"
	36	[20]	GETTABLE 	14 12 -17	; "transform_last_stm"
	37	[20]	GETTABLE 	15 12 -18	; "implicitly_return"
	38	[20]	GETTABLE 	11 12 -19	; "chain_is_stub"
	39	[20]	MOVE     	10 15
	40	[20]	MOVE     	9 14
	41	[20]	MOVE     	8 13
	42	[22]	LOADNIL  	12 12
	43	[23]	GETGLOBAL	13 -1	; require
	44	[23]	LOADK    	14 -20	; "moonscript.transform.comprehension"
	45	[23]	CALL     	13 2 2
	46	[23]	GETTABLE 	12 13 -21	; "construct_comprehension"
	47	[24]	LOADNIL  	13 13
	48	[25]	GETGLOBAL	14 -22	; table
	49	[25]	GETTABLE 	13 14 -23	; "insert"
	50	[26]	LOADNIL  	14 14
	51	[27]	GETGLOBAL	15 -1	; require
	52	[27]	LOADK    	16 -24	; "moonscript.util"
	53	[27]	CALL     	15 2 2
	54	[27]	GETTABLE 	14 15 -25	; "unpack"
	55	[28]	MOVE     	15 0
	56	[28]	NEWTABLE 	16 0 16
	57	[29]	SETTABLE 	16 -26 6	; "for" -
	58	[30]	SETTABLE 	16 -27 6	; "while" -
	59	[31]	SETTABLE 	16 -28 6	; "foreach" -
	60	[34]	CLOSURE  	17 0	; 0x7fe321407070
	61	[34]	MOVE     	0 1
	62	[34]	SETTABLE 	16 -29 17	; "do" -
	63	[37]	CLOSURE  	17 1	; 0x7fe321407150
	64	[37]	SETTABLE 	16 -30 17	; "decorated" -
	65	[42]	CLOSURE  	17 2	; 0x7fe321407790
	66	[42]	MOVE     	0 1
	67	[42]	SETTABLE 	16 -31 17	; "class" -
	68	[81]	CLOSURE  	17 3	; 0x7fe321407ae0
	69	[81]	MOVE     	0 1
	70	[81]	MOVE     	0 13
	71	[81]	SETTABLE 	16 -32 17	; "string" -
	72	[90]	CLOSURE  	17 4	; 0x7fe321408170
	73	[90]	MOVE     	0 5
	74	[90]	SETTABLE 	16 -33 17	; "comprehension" -
	75	[134]	CLOSURE  	17 5	; 0x7fe321408aa0
	76	[134]	MOVE     	0 14
	77	[134]	MOVE     	0 4
	78	[134]	MOVE     	0 1
	79	[134]	MOVE     	0 12
	80	[134]	SETTABLE 	16 -34 17	; "tblcomprehension" -
	81	[145]	CLOSURE  	17 6	; 0x7fe321407990
	82	[145]	MOVE     	0 3
	83	[145]	MOVE     	0 9
	84	[145]	MOVE     	0 10
	85	[145]	MOVE     	0 8
	86	[145]	MOVE     	0 14
	87	[145]	SETTABLE 	16 -35 17	; "fndef" -
	88	[150]	CLOSURE  	17 7	; 0x7fe321409690
	89	[150]	MOVE     	0 1
	90	[150]	SETTABLE 	16 -36 17	; "if" -
	91	[155]	CLOSURE  	17 8	; 0x7fe321409ce0
	92	[155]	MOVE     	0 1
	93	[155]	SETTABLE 	16 -37 17	; "unless" -
	94	[160]	CLOSURE  	17 9	; 0x7fe32140a160
	95	[160]	MOVE     	0 1
	96	[160]	SETTABLE 	16 -38 17	; "with" -
	97	[165]	CLOSURE  	17 10	; 0x7fe32140a280
	98	[165]	MOVE     	0 1
	99	[165]	SETTABLE 	16 -39 17	; "switch" -
	100	[235]	CLOSURE  	17 11	; 0x7fe32140a530
	101	[235]	MOVE     	0 2
	102	[235]	MOVE     	0 7
	103	[235]	MOVE     	0 11
	104	[235]	MOVE     	0 4
	105	[235]	MOVE     	0 1
	106	[235]	SETTABLE 	16 -40 17	; "chain" -
	107	[264]	CLOSURE  	17 12	; 0x7fe32140a820
	108	[264]	MOVE     	0 14
	109	[264]	MOVE     	0 3
	110	[264]	MOVE     	0 1
	111	[264]	MOVE     	0 8
	112	[264]	MOVE     	0 13
	113	[264]	SETTABLE 	16 -41 17	; "block_exp" -
	114	[28]	TAILCALL 	15 2 0
	115	[265]	RETURN   	15 0
	116	[265]	RETURN   	0 1

function <./moonscript/transform/value.lua:32,34> (6 instructions, 24 bytes at 0x7fe321407070)
2 params, 4 slots, 1 upvalue, 2 locals, 2 constants, 0 functions
	1	[33]	GETUPVAL 	2 0	; build
	2	[33]	GETTABLE 	2 2 -1	; "block_exp"
	3	[33]	GETTABLE 	3 1 -2	; 2
	4	[33]	TAILCALL 	2 2 0
	5	[33]	RETURN   	2 0
	6	[34]	RETURN   	0 1

function <./moonscript/transform/value.lua:35,37> (6 instructions, 24 bytes at 0x7fe321407150)
2 params, 4 slots, 0 upvalues, 2 locals, 2 constants, 0 functions
	1	[36]	GETTABLE 	2 0 -1	; "transform"
	2	[36]	GETTABLE 	2 2 -2	; "statement"
	3	[36]	MOVE     	3 1
	4	[36]	TAILCALL 	2 2 0
	5	[36]	RETURN   	2 0
	6	[37]	RETURN   	0 1

function <./moonscript/transform/value.lua:38,42> (8 instructions, 32 bytes at 0x7fe321407790)
2 params, 5 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[39]	GETUPVAL 	2 0	; build
	2	[39]	GETTABLE 	2 2 -1	; "block_exp"
	3	[39]	NEWTABLE 	3 1 0
	4	[41]	MOVE     	4 1
	5	[41]	SETLIST  	3 1 1	; 1
	6	[39]	TAILCALL 	2 2 0
	7	[41]	RETURN   	2 0
	8	[42]	RETURN   	0 1

function <./moonscript/transform/value.lua:43,81> (42 instructions, 168 bytes at 0x7fe321407ae0)
2 params, 13 slots, 2 upvalues, 9 locals, 8 constants, 1 function
	1	[44]	GETTABLE 	2 1 -1	; 2
	2	[45]	LOADNIL  	3 3
	3	[64]	CLOSURE  	3 0	; 0x7fe3214081f0
	4	[64]	MOVE     	0 2
	5	[64]	GETUPVAL 	0 0	; build
	6	[65]	LEN      	4 1
	7	[65]	LE       	0 4 -2	; - 3
	8	[65]	JMP      	11	; to 20
	9	[66]	GETGLOBAL	4 -3	; type
	10	[66]	GETTABLE 	5 1 -2	; 3
	11	[66]	CALL     	4 2 2
	12	[66]	EQ       	0 4 -4	; - "string"
	13	[66]	JMP      	2	; to 16
	14	[67]	RETURN   	1 2
	15	[67]	JMP      	4	; to 20
	16	[69]	MOVE     	4 3
	17	[69]	GETTABLE 	5 1 -2	; 3
	18	[69]	TAILCALL 	4 2 0
	19	[69]	RETURN   	4 0
	20	[72]	NEWTABLE 	4 1 0
	21	[73]	LOADK    	5 -5	; "exp"
	22	[74]	MOVE     	6 3
	23	[74]	GETTABLE 	7 1 -2	; 3
	24	[74]	CALL     	6 2 0
	25	[75]	SETLIST  	4 0 1	; 1
	26	[76]	LOADK    	5 -6	; 4
	27	[76]	LEN      	6 1
	28	[76]	LOADK    	7 -7	; 1
	29	[76]	FORPREP  	5 10	; to 40
	30	[77]	GETUPVAL 	9 1	; insert
	31	[77]	MOVE     	10 4
	32	[77]	LOADK    	11 -8	; ".."
	33	[77]	CALL     	9 3 1
	34	[78]	GETUPVAL 	9 1	; insert
	35	[78]	MOVE     	10 4
	36	[78]	MOVE     	11 3
	37	[78]	GETTABLE 	12 1 8
	38	[78]	CALL     	11 2 0
	39	[78]	CALL     	9 0 1
	40	[76]	FORLOOP  	5 -11	; to 30
	41	[80]	RETURN   	4 2
	42	[81]	RETURN   	0 1

function <./moonscript/transform/value.lua:46,64> (30 instructions, 120 bytes at 0x7fe3214081f0)
1 param, 7 slots, 2 upvalues, 1 local, 9 constants, 0 functions
	1	[47]	GETGLOBAL	1 -1	; type
	2	[47]	MOVE     	2 0
	3	[47]	CALL     	1 2 2
	4	[47]	EQ       	1 1 -2	; - "string"
	5	[47]	JMP      	2	; to 8
	6	[47]	EQ       	0 0 -3	; - nil
	7	[47]	JMP      	9	; to 17
	8	[48]	NEWTABLE 	1 3 0
	9	[49]	LOADK    	2 -2	; "string"
	10	[50]	GETUPVAL 	3 0	; delim
	11	[51]	TESTSET  	4 0 1
	12	[51]	JMP      	1	; to 14
	13	[52]	LOADK    	4 -4	; ""
	14	[52]	SETLIST  	1 3 1	; 1
	15	[52]	RETURN   	1 2
	16	[52]	JMP      	13	; to 30
	17	[54]	GETUPVAL 	1 1	; build
	18	[54]	GETTABLE 	1 1 -5	; "chain"
	19	[54]	NEWTABLE 	2 1 1
	20	[55]	SETTABLE 	2 -6 -7	; "base" "tostring"
	21	[55]	NEWTABLE 	3 2 0
	22	[57]	LOADK    	4 -8	; "call"
	23	[57]	NEWTABLE 	5 1 0
	24	[60]	GETTABLE 	6 0 -9	; 2
	25	[60]	SETLIST  	5 1 1	; 1
	26	[61]	SETLIST  	3 2 1	; 1
	27	[62]	SETLIST  	2 1 1	; 1
	28	[54]	TAILCALL 	1 2 0
	29	[62]	RETURN   	1 0
	30	[64]	RETURN   	0 1

function <./moonscript/transform/value.lua:82,90> (14 instructions, 56 bytes at 0x7fe321408170)
2 params, 6 slots, 1 upvalue, 3 locals, 3 constants, 1 function
	1	[83]	GETUPVAL 	2 0	; Accumulator
	2	[83]	CALL     	2 1 2
	3	[84]	GETTABLE 	3 0 -1	; "transform"
	4	[84]	GETTABLE 	3 3 -2	; "statement"
	5	[84]	MOVE     	4 1
	6	[88]	CLOSURE  	5 0	; 0x7fe3214073e0
	7	[88]	MOVE     	0 2
	8	[84]	CALL     	3 3 2
	9	[88]	MOVE     	1 3
	10	[89]	SELF     	3 2 -3	; "wrap"
	11	[89]	MOVE     	5 1
	12	[89]	TAILCALL 	3 3 0
	13	[89]	RETURN   	3 0
	14	[90]	RETURN   	0 1

function <./moonscript/transform/value.lua:84,88> (8 instructions, 32 bytes at 0x7fe3214073e0)
1 param, 5 slots, 1 upvalue, 1 local, 1 constant, 0 functions
	1	[85]	GETUPVAL 	1 0	; a
	2	[85]	SELF     	1 1 -1	; "mutate_body"
	3	[85]	NEWTABLE 	3 1 0
	4	[87]	MOVE     	4 0
	5	[87]	SETLIST  	3 1 1	; 1
	6	[85]	TAILCALL 	1 3 0
	7	[87]	RETURN   	1 0
	8	[88]	RETURN   	0 1

function <./moonscript/transform/value.lua:91,134> (88 instructions, 352 bytes at 0x7fe321408aa0)
2 params, 17 slots, 4 upvalues, 12 locals, 13 constants, 0 functions
	1	[92]	GETUPVAL 	2 0	; unpack
	2	[92]	MOVE     	3 1
	3	[92]	LOADK    	4 -1	; 2
	4	[92]	CALL     	2 3 3
	5	[93]	GETUPVAL 	4 0	; unpack
	6	[93]	MOVE     	5 2
	7	[93]	CALL     	4 2 3
	8	[94]	GETUPVAL 	6 1	; NameProxy
	9	[94]	LOADK    	7 -2	; "tbl"
	10	[94]	CALL     	6 2 2
	11	[95]	LOADNIL  	7 7
	12	[96]	TEST     	5 0 0
	13	[96]	JMP      	19	; to 33
	14	[97]	GETUPVAL 	8 2	; build
	15	[97]	GETTABLE 	8 8 -3	; "chain"
	16	[97]	NEWTABLE 	9 1 1
	17	[98]	SETTABLE 	9 -4 6	; "base" -
	18	[98]	NEWTABLE 	10 2 0
	19	[100]	LOADK    	11 -5	; "index"
	20	[102]	MOVE     	12 4
	21	[102]	SETLIST  	10 2 1	; 1
	22	[103]	SETLIST  	9 1 1	; 1
	23	[97]	CALL     	8 2 2
	24	[104]	NEWTABLE 	9 0 0
	25	[105]	GETUPVAL 	10 2	; build
	26	[105]	GETTABLE 	10 10 -6	; "assign_one"
	27	[105]	MOVE     	11 8
	28	[105]	MOVE     	12 5
	29	[105]	CALL     	10 3 0
	30	[106]	SETLIST  	9 0 1	; 1
	31	[106]	MOVE     	7 9
	32	[106]	JMP      	37	; to 70
	33	[108]	GETUPVAL 	8 1	; NameProxy
	34	[108]	LOADK    	9 -7	; "key"
	35	[108]	CALL     	8 2 2
	36	[108]	GETUPVAL 	9 1	; NameProxy
	37	[108]	LOADK    	10 -8	; "val"
	38	[108]	CALL     	9 2 2
	39	[109]	GETUPVAL 	10 2	; build
	40	[109]	GETTABLE 	10 10 -3	; "chain"
	41	[109]	NEWTABLE 	11 1 1
	42	[110]	SETTABLE 	11 -4 6	; "base" -
	43	[110]	NEWTABLE 	12 2 0
	44	[112]	LOADK    	13 -5	; "index"
	45	[114]	MOVE     	14 8
	46	[114]	SETLIST  	12 2 1	; 1
	47	[115]	SETLIST  	11 1 1	; 1
	48	[109]	CALL     	10 2 2
	49	[116]	NEWTABLE 	11 1 0
	50	[117]	GETUPVAL 	12 2	; build
	51	[117]	GETTABLE 	12 12 -9	; "assign"
	52	[117]	NEWTABLE 	13 0 2
	53	[118]	NEWTABLE 	14 2 0
	54	[119]	MOVE     	15 8
	55	[121]	MOVE     	16 9
	56	[121]	SETLIST  	14 2 1	; 1
	57	[121]	SETTABLE 	13 -10 14	; "names" -
	58	[122]	NEWTABLE 	14 1 0
	59	[124]	MOVE     	15 4
	60	[124]	SETLIST  	14 1 1	; 1
	61	[124]	SETTABLE 	13 -11 14	; "values" -
	62	[117]	CALL     	12 2 2
	63	[126]	GETUPVAL 	13 2	; build
	64	[126]	GETTABLE 	13 13 -6	; "assign_one"
	65	[126]	MOVE     	14 10
	66	[126]	MOVE     	15 9
	67	[126]	CALL     	13 3 0
	68	[127]	SETLIST  	11 0 1	; 1
	69	[127]	MOVE     	7 11
	70	[129]	GETUPVAL 	8 2	; build
	71	[129]	GETTABLE 	8 8 -12	; "block_exp"
	72	[129]	NEWTABLE 	9 3 0
	73	[130]	GETUPVAL 	10 2	; build
	74	[130]	GETTABLE 	10 10 -6	; "assign_one"
	75	[130]	MOVE     	11 6
	76	[130]	GETUPVAL 	12 2	; build
	77	[130]	GETTABLE 	12 12 -13	; "table"
	78	[130]	CALL     	12 1 0
	79	[130]	CALL     	10 0 2
	80	[131]	GETUPVAL 	11 3	; construct_comprehension
	81	[131]	MOVE     	12 7
	82	[131]	MOVE     	13 3
	83	[131]	CALL     	11 3 2
	84	[133]	MOVE     	12 6
	85	[133]	SETLIST  	9 3 1	; 1
	86	[129]	TAILCALL 	8 2 0
	87	[133]	RETURN   	8 0
	88	[134]	RETURN   	0 1

function <./moonscript/transform/value.lua:135,145> (21 instructions, 84 bytes at 0x7fe321407990)
2 params, 6 slots, 5 upvalues, 2 locals, 1 constant, 1 function
	1	[136]	GETUPVAL 	2 0	; smart_node
	2	[136]	MOVE     	3 1
	3	[136]	CALL     	2 2 1
	4	[137]	GETUPVAL 	2 1	; transform_last_stm
	5	[137]	GETTABLE 	3 1 -1	; "body"
	6	[137]	GETUPVAL 	4 2	; implicitly_return
	7	[137]	MOVE     	5 0
	8	[137]	CALL     	4 2 0
	9	[137]	CALL     	2 0 2
	10	[137]	SETTABLE 	1 -1 2	; "body" -
	11	[138]	NEWTABLE 	2 1 0
	12	[139]	GETUPVAL 	3 3	; Run
	13	[141]	CLOSURE  	4 0	; 0x7fe321407600
	14	[139]	CALL     	3 2 2
	15	[142]	GETUPVAL 	4 4	; unpack
	16	[142]	GETTABLE 	5 1 -1	; "body"
	17	[142]	CALL     	4 2 0
	18	[143]	SETLIST  	2 0 1	; 1
	19	[143]	SETTABLE 	1 -1 2	; "body" -
	20	[144]	RETURN   	1 2
	21	[145]	RETURN   	0 1

function <./moonscript/transform/value.lua:139,141> (6 instructions, 24 bytes at 0x7fe321407600)
1 param, 5 slots, 0 upvalues, 1 local, 2 constants, 1 function
	1	[140]	SELF     	1 0 -1	; "listen"
	2	[140]	LOADK    	3 -2	; "varargs"
	3	[140]	CLOSURE  	4 0	; 0x7fe3214099c0
	4	[140]	TAILCALL 	1 4 0
	5	[140]	RETURN   	1 0
	6	[141]	RETURN   	0 1

function <./moonscript/transform/value.lua:140,140> (1 instruction, 4 bytes at 0x7fe3214099c0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[140]	RETURN   	0 1

function <./moonscript/transform/value.lua:146,150> (8 instructions, 32 bytes at 0x7fe321409690)
2 params, 5 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[147]	GETUPVAL 	2 0	; build
	2	[147]	GETTABLE 	2 2 -1	; "block_exp"
	3	[147]	NEWTABLE 	3 1 0
	4	[149]	MOVE     	4 1
	5	[149]	SETLIST  	3 1 1	; 1
	6	[147]	TAILCALL 	2 2 0
	7	[149]	RETURN   	2 0
	8	[150]	RETURN   	0 1

function <./moonscript/transform/value.lua:151,155> (8 instructions, 32 bytes at 0x7fe321409ce0)
2 params, 5 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[152]	GETUPVAL 	2 0	; build
	2	[152]	GETTABLE 	2 2 -1	; "block_exp"
	3	[152]	NEWTABLE 	3 1 0
	4	[154]	MOVE     	4 1
	5	[154]	SETLIST  	3 1 1	; 1
	6	[152]	TAILCALL 	2 2 0
	7	[154]	RETURN   	2 0
	8	[155]	RETURN   	0 1

function <./moonscript/transform/value.lua:156,160> (8 instructions, 32 bytes at 0x7fe32140a160)
2 params, 5 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[157]	GETUPVAL 	2 0	; build
	2	[157]	GETTABLE 	2 2 -1	; "block_exp"
	3	[157]	NEWTABLE 	3 1 0
	4	[159]	MOVE     	4 1
	5	[159]	SETLIST  	3 1 1	; 1
	6	[157]	TAILCALL 	2 2 0
	7	[159]	RETURN   	2 0
	8	[160]	RETURN   	0 1

function <./moonscript/transform/value.lua:161,165> (8 instructions, 32 bytes at 0x7fe32140a280)
2 params, 5 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[162]	GETUPVAL 	2 0	; build
	2	[162]	GETTABLE 	2 2 -1	; "block_exp"
	3	[162]	NEWTABLE 	3 1 0
	4	[164]	MOVE     	4 1
	5	[164]	SETLIST  	3 1 1	; 1
	6	[162]	TAILCALL 	2 2 0
	7	[164]	RETURN   	2 0
	8	[165]	RETURN   	0 1

function <./moonscript/transform/value.lua:166,235> (132 instructions, 528 bytes at 0x7fe32140a530)
2 params, 20 slots, 5 upvalues, 11 locals, 24 constants, 0 functions
	1	[167]	LOADK    	2 -1	; 2
	2	[167]	LEN      	3 1
	3	[167]	LOADK    	4 -2	; 1
	4	[167]	FORPREP  	2 20	; to 25
	5	[168]	GETTABLE 	6 1 5
	6	[169]	GETUPVAL 	7 0	; ntype
	7	[169]	MOVE     	8 6
	8	[169]	CALL     	7 2 2
	9	[169]	EQ       	0 7 -3	; - "dot"
	10	[169]	JMP      	14	; to 25
	11	[169]	GETUPVAL 	7 1	; lua_keywords
	12	[169]	GETTABLE 	8 6 -1	; 2
	13	[169]	GETTABLE 	7 7 8
	14	[169]	TEST     	7 0 0
	15	[169]	JMP      	9	; to 25
	16	[170]	NEWTABLE 	7 2 0
	17	[171]	LOADK    	8 -4	; "index"
	18	[171]	NEWTABLE 	9 3 0
	19	[173]	LOADK    	10 -5	; "string"
	20	[174]	LOADK    	11 -6	; "\""
	21	[176]	GETTABLE 	12 6 -1	; 2
	22	[176]	SETLIST  	9 3 1	; 1
	23	[177]	SETLIST  	7 2 1	; 1
	24	[177]	SETTABLE 	1 5 7
	25	[167]	FORLOOP  	2 -21	; to 5
	26	[180]	GETUPVAL 	2 0	; ntype
	27	[180]	GETTABLE 	3 1 -1	; 2
	28	[180]	CALL     	2 2 2
	29	[180]	EQ       	0 2 -5	; - "string"
	30	[180]	JMP      	5	; to 36
	31	[181]	NEWTABLE 	2 2 0
	32	[182]	LOADK    	3 -7	; "parens"
	33	[184]	GETTABLE 	4 1 -1	; 2
	34	[184]	SETLIST  	2 2 1	; 1
	35	[184]	SETTABLE 	1 -1 2	; 2 -
	36	[186]	GETUPVAL 	2 2	; chain_is_stub
	37	[186]	MOVE     	3 1
	38	[186]	CALL     	2 2 2
	39	[186]	TEST     	2 0 0
	40	[186]	JMP      	91	; to 132
	41	[187]	GETUPVAL 	2 3	; NameProxy
	42	[187]	LOADK    	3 -8	; "base"
	43	[187]	CALL     	2 2 2
	44	[188]	GETUPVAL 	3 3	; NameProxy
	45	[188]	LOADK    	4 -9	; "fn"
	46	[188]	CALL     	3 2 2
	47	[189]	GETGLOBAL	4 -10	; table
	48	[189]	GETTABLE 	4 4 -11	; "remove"
	49	[189]	MOVE     	5 1
	50	[189]	CALL     	4 2 2
	51	[190]	GETUPVAL 	5 0	; ntype
	52	[190]	GETTABLE 	6 1 -1	; 2
	53	[190]	CALL     	5 2 2
	54	[190]	EQ       	0 5 -12	; - "ref"
	55	[190]	JMP      	4	; to 60
	56	[190]	GETTABLE 	5 1 -1	; 2
	57	[190]	GETTABLE 	5 5 -1	; 2
	58	[190]	EQ       	1 5 -13	; - "super"
	59	[190]	JMP      	1	; to 61
	60	[190]	LOADBOOL 	5 0 1
	61	[190]	LOADBOOL 	5 1 0
	62	[191]	GETUPVAL 	6 4	; build
	63	[191]	GETTABLE 	6 6 -14	; "block_exp"
	64	[191]	NEWTABLE 	7 2 0
	65	[192]	GETUPVAL 	8 4	; build
	66	[192]	GETTABLE 	8 8 -15	; "assign"
	67	[192]	NEWTABLE 	9 0 2
	68	[193]	NEWTABLE 	10 1 0
	69	[195]	MOVE     	11 2
	70	[195]	SETLIST  	10 1 1	; 1
	71	[195]	SETTABLE 	9 -16 10	; "names" -
	72	[196]	NEWTABLE 	10 1 0
	73	[198]	MOVE     	11 1
	74	[198]	SETLIST  	10 1 1	; 1
	75	[198]	SETTABLE 	9 -17 10	; "values" -
	76	[192]	CALL     	8 2 2
	77	[200]	GETUPVAL 	9 4	; build
	78	[200]	GETTABLE 	9 9 -15	; "assign"
	79	[200]	NEWTABLE 	10 0 2
	80	[201]	NEWTABLE 	11 1 0
	81	[203]	MOVE     	12 3
	82	[203]	SETLIST  	11 1 1	; 1
	83	[203]	SETTABLE 	10 -16 11	; "names" -
	84	[204]	NEWTABLE 	11 0 0
	85	[205]	GETUPVAL 	12 4	; build
	86	[205]	GETTABLE 	12 12 -18	; "chain"
	87	[205]	NEWTABLE 	13 1 1
	88	[206]	SETTABLE 	13 -8 2	; "base" -
	89	[206]	NEWTABLE 	14 2 0
	90	[208]	LOADK    	15 -3	; "dot"
	91	[210]	GETTABLE 	16 4 -1	; 2
	92	[210]	SETLIST  	14 2 1	; 1
	93	[211]	SETLIST  	13 1 1	; 1
	94	[205]	CALL     	12 2 0
	95	[212]	SETLIST  	11 0 1	; 1
	96	[212]	SETTABLE 	10 -17 11	; "values" -
	97	[200]	CALL     	9 2 2
	98	[214]	GETUPVAL 	10 4	; build
	99	[214]	GETTABLE 	10 10 -19	; "fndef"
	100	[214]	NEWTABLE 	11 0 2
	101	[215]	NEWTABLE 	12 1 0
	102	[215]	NEWTABLE 	13 1 0
	103	[218]	LOADK    	14 -21	; "..."
	104	[218]	SETLIST  	13 1 1	; 1
	105	[219]	SETLIST  	12 1 1	; 1
	106	[219]	SETTABLE 	11 -20 12	; "args" -
	107	[220]	NEWTABLE 	12 0 0
	108	[221]	GETUPVAL 	13 4	; build
	109	[221]	GETTABLE 	13 13 -18	; "chain"
	110	[221]	NEWTABLE 	14 1 1
	111	[222]	SETTABLE 	14 -8 3	; "base" -
	112	[222]	NEWTABLE 	15 2 0
	113	[224]	LOADK    	16 -23	; "call"
	114	[224]	NEWTABLE 	17 2 0
	115	[226]	TEST     	5 0 0
	116	[226]	JMP      	3	; to 120
	117	[226]	LOADK    	18 -24	; "self"
	118	[226]	TEST     	18 0 1
	119	[226]	JMP      	1	; to 121
	120	[226]	MOVE     	18 2
	121	[228]	LOADK    	19 -21	; "..."
	122	[228]	SETLIST  	17 2 1	; 1
	123	[229]	SETLIST  	15 2 1	; 1
	124	[230]	SETLIST  	14 1 1	; 1
	125	[221]	CALL     	13 2 0
	126	[231]	SETLIST  	12 0 1	; 1
	127	[231]	SETTABLE 	11 -22 12	; "body" -
	128	[214]	CALL     	10 2 0
	129	[233]	SETLIST  	7 0 1	; 1
	130	[191]	TAILCALL 	6 2 0
	131	[233]	RETURN   	6 0
	132	[235]	RETURN   	0 1

function <./moonscript/transform/value.lua:236,264> (41 instructions, 164 bytes at 0x7fe32140a820)
2 params, 12 slots, 5 upvalues, 5 locals, 7 constants, 1 function
	1	[237]	GETUPVAL 	2 0	; unpack
	2	[237]	MOVE     	3 1
	3	[237]	LOADK    	4 -1	; 2
	4	[237]	CALL     	2 3 2
	5	[238]	LOADNIL  	3 3
	6	[239]	NEWTABLE 	4 0 0
	7	[240]	GETUPVAL 	5 1	; smart_node
	8	[240]	GETUPVAL 	6 2	; build
	9	[240]	GETTABLE 	6 6 -2	; "fndef"
	10	[240]	NEWTABLE 	7 0 1
	11	[241]	NEWTABLE 	8 1 0
	12	[242]	GETUPVAL 	9 3	; Run
	13	[250]	CLOSURE  	10 0	; 0x7fe32140ae20
	14	[250]	GETUPVAL 	0 4	; insert
	15	[250]	MOVE     	0 4
	16	[250]	MOVE     	0 3
	17	[242]	CALL     	9 2 2
	18	[251]	GETUPVAL 	10 0	; unpack
	19	[251]	MOVE     	11 2
	20	[251]	CALL     	10 2 0
	21	[252]	SETLIST  	8 0 1	; 1
	22	[252]	SETTABLE 	7 -3 8	; "body" -
	23	[240]	CALL     	6 2 0
	24	[240]	CALL     	5 0 2
	25	[253]	MOVE     	3 5
	26	[254]	GETUPVAL 	5 2	; build
	27	[254]	GETTABLE 	5 5 -4	; "chain"
	28	[254]	NEWTABLE 	6 1 1
	29	[255]	NEWTABLE 	7 2 0
	30	[256]	LOADK    	8 -6	; "parens"
	31	[258]	MOVE     	9 3
	32	[258]	SETLIST  	7 2 1	; 1
	33	[258]	SETTABLE 	6 -5 7	; "base" -
	34	[258]	NEWTABLE 	7 2 0
	35	[260]	LOADK    	8 -7	; "call"
	36	[262]	MOVE     	9 4
	37	[262]	SETLIST  	7 2 1	; 1
	38	[263]	SETLIST  	6 1 1	; 1
	39	[254]	TAILCALL 	5 2 0
	40	[263]	RETURN   	5 0
	41	[264]	RETURN   	0 1

function <./moonscript/transform/value.lua:242,250> (10 instructions, 40 bytes at 0x7fe32140ae20)
1 param, 5 slots, 3 upvalues, 1 local, 2 constants, 1 function
	1	[243]	SELF     	1 0 -1	; "listen"
	2	[243]	LOADK    	3 -2	; "varargs"
	3	[249]	CLOSURE  	4 0	; 0x7fe32140b4f0
	4	[249]	GETUPVAL 	0 0	; insert
	5	[249]	GETUPVAL 	0 1	; arg_list
	6	[249]	GETUPVAL 	0 2	; fn
	7	[249]	MOVE     	0 0
	8	[243]	TAILCALL 	1 4 0
	9	[249]	RETURN   	1 0
	10	[250]	RETURN   	0 1

function <./moonscript/transform/value.lua:243,249> (17 instructions, 68 bytes at 0x7fe32140b4f0)
0 params, 4 slots, 4 upvalues, 0 locals, 4 constants, 0 functions
	1	[244]	GETUPVAL 	0 0	; insert
	2	[244]	GETUPVAL 	1 1	; arg_list
	3	[244]	LOADK    	2 -1	; "..."
	4	[244]	CALL     	0 3 1
	5	[245]	GETUPVAL 	0 0	; insert
	6	[245]	GETUPVAL 	1 2	; fn
	7	[245]	GETTABLE 	1 1 -2	; "args"
	8	[245]	NEWTABLE 	2 1 0
	9	[247]	LOADK    	3 -1	; "..."
	10	[247]	SETLIST  	2 1 1	; 1
	11	[245]	CALL     	0 3 1
	12	[248]	GETUPVAL 	0 3	; self
	13	[248]	SELF     	0 0 -3	; "unlisten"
	14	[248]	LOADK    	2 -4	; "varargs"
	15	[248]	TAILCALL 	0 3 0
	16	[248]	RETURN   	0 0
	17	[249]	RETURN   	0 1
-----------------------

main <./moonscript/transform/statement.lua:0,0> (193 instructions, 772 bytes at 0x7fa2d5c068d0)
0+ params, 27 slots, 0 upvalues, 25 locals, 48 constants, 22 functions
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.transform.transformer"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "Transformer"
	5	[3]	LOADNIL  	1 3
	6	[5]	GETGLOBAL	4 -1	; require
	7	[5]	LOADK    	5 -4	; "moonscript.transform.names"
	8	[5]	CALL     	4 2 2
	9	[6]	GETTABLE 	5 4 -5	; "NameProxy"
	10	[6]	GETTABLE 	6 4 -6	; "LocalName"
	11	[6]	GETTABLE 	3 4 -7	; "is_name_proxy"
	12	[6]	MOVE     	2 6
	13	[6]	MOVE     	1 5
	14	[8]	LOADNIL  	4 7
	15	[10]	GETGLOBAL	8 -1	; require
	16	[10]	LOADK    	9 -8	; "moonscript.transform.statements"
	17	[10]	CALL     	8 2 2
	18	[11]	GETTABLE 	9 8 -9	; "Run"
	19	[11]	GETTABLE 	10 8 -10	; "transform_last_stm"
	20	[11]	GETTABLE 	11 8 -11	; "implicitly_return"
	21	[11]	GETTABLE 	7 8 -12	; "last_stm"
	22	[11]	MOVE     	6 11
	23	[11]	MOVE     	5 10
	24	[11]	MOVE     	4 9
	25	[13]	GETGLOBAL	8 -1	; require
	26	[13]	LOADK    	9 -13	; "moonscript.types"
	27	[13]	CALL     	8 2 2
	28	[14]	LOADNIL  	9 15
	29	[15]	GETTABLE 	16 8 -14	; "build"
	30	[15]	GETTABLE 	17 8 -15	; "ntype"
	31	[15]	GETTABLE 	18 8 -16	; "is_value"
	32	[15]	GETTABLE 	19 8 -17	; "smart_node"
	33	[15]	GETTABLE 	20 8 -18	; "value_is_singular"
	34	[15]	GETTABLE 	21 8 -19	; "is_slice"
	35	[15]	GETTABLE 	15 8 -20	; "NOOP"
	36	[15]	MOVE     	14 21
	37	[15]	MOVE     	13 20
	38	[15]	MOVE     	12 19
	39	[15]	MOVE     	11 18
	40	[15]	MOVE     	10 17
	41	[15]	MOVE     	9 16
	42	[16]	LOADNIL  	16 16
	43	[17]	GETGLOBAL	17 -21	; table
	44	[17]	GETTABLE 	16 17 -22	; "insert"
	45	[18]	GETGLOBAL	17 -1	; require
	46	[18]	LOADK    	18 -23	; "moonscript.transform.destructure"
	47	[18]	CALL     	17 2 2
	48	[19]	LOADNIL  	18 18
	49	[20]	GETGLOBAL	19 -1	; require
	50	[20]	LOADK    	20 -24	; "moonscript.transform.comprehension"
	51	[20]	CALL     	19 2 2
	52	[20]	GETTABLE 	18 19 -25	; "construct_comprehension"
	53	[21]	LOADNIL  	19 19
	54	[22]	GETGLOBAL	20 -1	; require
	55	[22]	LOADK    	21 -26	; "moonscript.util"
	56	[22]	CALL     	20 2 2
	57	[22]	GETTABLE 	19 20 -27	; "unpack"
	58	[23]	LOADNIL  	20 20
	59	[95]	CLOSURE  	20 0	; 0x7fa2d5c07180
	60	[95]	MOVE     	0 4
	61	[95]	MOVE     	0 1
	62	[95]	MOVE     	0 9
	63	[95]	MOVE     	0 7
	64	[95]	MOVE     	0 8
	65	[95]	MOVE     	0 10
	66	[96]	LOADNIL  	21 21
	67	[138]	CLOSURE  	21 1	; 0x7fa2d5c085c0
	68	[138]	MOVE     	0 10
	69	[138]	MOVE     	0 16
	70	[138]	MOVE     	0 21
	71	[139]	LOADNIL  	22 22
	72	[162]	CLOSURE  	22 2	; 0x7fa2d5c089b0
	73	[162]	MOVE     	0 10
	74	[162]	MOVE     	0 19
	75	[162]	MOVE     	0 16
	76	[163]	MOVE     	23 0
	77	[163]	NEWTABLE 	24 0 18
	78	[168]	CLOSURE  	25 3	; 0x7fa2d5c079b0
	79	[168]	SETTABLE 	24 -28 25	; "transform" -
	80	[171]	CLOSURE  	25 4	; 0x7fa2d5c098a0
	81	[171]	MOVE     	0 5
	82	[171]	MOVE     	0 6
	83	[171]	SETTABLE 	24 -29 25	; "root_stms" -
	84	[196]	CLOSURE  	25 5	; 0x7fa2d5c09af0
	85	[196]	MOVE     	0 10
	86	[196]	MOVE     	0 8
	87	[196]	MOVE     	0 6
	88	[196]	MOVE     	0 9
	89	[196]	MOVE     	0 5
	90	[196]	SETTABLE 	24 -30 25	; "return" -
	91	[233]	CLOSURE  	25 6	; 0x7fa2d5c09f60
	92	[233]	MOVE     	0 21
	93	[233]	MOVE     	0 10
	94	[233]	SETTABLE 	24 -31 25	; "declare_glob" -
	95	[308]	CLOSURE  	25 7	; 0x7fa2d5c0a890
	96	[308]	MOVE     	0 19
	97	[308]	MOVE     	0 10
	98	[308]	MOVE     	0 9
	99	[308]	MOVE     	0 8
	100	[308]	MOVE     	0 11
	101	[308]	MOVE     	0 17
	102	[308]	SETTABLE 	24 -32 25	; "assign" -
	103	[320]	CLOSURE  	25 8	; 0x7fa2d5c0b7d0
	104	[320]	MOVE     	0 9
	105	[320]	SETTABLE 	24 -33 25	; "continue" -
	106	[349]	CLOSURE  	25 9	; 0x7fa2d5c06740
	107	[349]	MOVE     	0 12
	108	[349]	MOVE     	0 9
	109	[349]	SETTABLE 	24 -34 25	; "export" -
	110	[368]	CLOSURE  	25 10	; 0x7fa2d5c0b650
	111	[368]	MOVE     	0 19
	112	[368]	MOVE     	0 13
	113	[368]	MOVE     	0 9
	114	[368]	SETTABLE 	24 -35 25	; "update" -
	115	[409]	CLOSURE  	25 11	; 0x7fa2d5c080c0
	116	[409]	MOVE     	0 19
	117	[409]	MOVE     	0 10
	118	[409]	SETTABLE 	24 -36 25	; "import" -
	119	[418]	CLOSURE  	25 12	; 0x7fa2d5c08040
	120	[418]	MOVE     	0 19
	121	[418]	MOVE     	0 18
	122	[418]	SETTABLE 	24 -37 25	; "comprehension" -
	123	[424]	CLOSURE  	25 13	; 0x7fa2d5c0bd90
	124	[424]	MOVE     	0 5
	125	[424]	SETTABLE 	24 -38 25	; "do" -
	126	[485]	CLOSURE  	25 14	; 0x7fa2d5c0c3b0
	127	[485]	MOVE     	0 19
	128	[485]	MOVE     	0 10
	129	[485]	MOVE     	0 9
	130	[485]	SETTABLE 	24 -39 25	; "decorated" -
	131	[516]	CLOSURE  	25 15	; 0x7fa2d5c0cb30
	132	[516]	MOVE     	0 10
	133	[516]	MOVE     	0 17
	134	[516]	MOVE     	0 9
	135	[516]	MOVE     	0 19
	136	[516]	SETTABLE 	24 -40 25	; "unless" -
	137	[558]	CLOSURE  	25 16	; 0x7fa2d5c0cbf0
	138	[558]	MOVE     	0 10
	139	[558]	MOVE     	0 19
	140	[558]	MOVE     	0 17
	141	[558]	MOVE     	0 1
	142	[558]	MOVE     	0 9
	143	[558]	MOVE     	0 22
	144	[558]	MOVE     	0 12
	145	[558]	MOVE     	0 5
	146	[558]	SETTABLE 	24 -41 25	; "if" -
	147	[606]	CLOSURE  	25 17	; 0x7fa2d5c066c0
	148	[606]	MOVE     	0 19
	149	[606]	MOVE     	0 7
	150	[606]	MOVE     	0 8
	151	[606]	MOVE     	0 10
	152	[606]	MOVE     	0 1
	153	[606]	MOVE     	0 9
	154	[606]	MOVE     	0 15
	155	[606]	MOVE     	0 4
	156	[606]	SETTABLE 	24 -42 25	; "with" -
	157	[711]	CLOSURE  	25 18	; 0x7fa2d5c0de90
	158	[711]	MOVE     	0 12
	159	[711]	MOVE     	0 19
	160	[711]	MOVE     	0 10
	161	[711]	MOVE     	0 1
	162	[711]	MOVE     	0 16
	163	[711]	MOVE     	0 17
	164	[711]	MOVE     	0 9
	165	[711]	MOVE     	0 14
	166	[711]	MOVE     	0 3
	167	[711]	MOVE     	0 2
	168	[711]	MOVE     	0 15
	169	[711]	MOVE     	0 20
	170	[711]	SETTABLE 	24 -43 25	; "foreach" -
	171	[715]	CLOSURE  	25 19	; 0x7fa2d5c0e760
	172	[715]	MOVE     	0 12
	173	[715]	MOVE     	0 20
	174	[715]	SETTABLE 	24 -44 25	; "while" -
	175	[719]	CLOSURE  	25 20	; 0x7fa2d5c0ed20
	176	[719]	MOVE     	0 12
	177	[719]	MOVE     	0 20
	178	[719]	SETTABLE 	24 -45 25	; "for" -
	179	[778]	CLOSURE  	25 21	; 0x7fa2d5c0f080
	180	[778]	MOVE     	0 19
	181	[778]	MOVE     	0 1
	182	[778]	MOVE     	0 16
	183	[778]	MOVE     	0 13
	184	[778]	MOVE     	0 5
	185	[778]	MOVE     	0 9
	186	[778]	SETTABLE 	24 -46 25	; "switch" -
	187	[779]	GETGLOBAL	25 -1	; require
	188	[779]	LOADK    	26 -48	; "moonscript.transform.class"
	189	[779]	CALL     	25 2 2
	190	[779]	SETTABLE 	24 -47 25	; "class" -
	191	[163]	TAILCALL 	23 2 0
	192	[780]	RETURN   	23 0
	193	[780]	RETURN   	0 1

function <./moonscript/transform/statement.lua:24,95> (21 instructions, 84 bytes at 0x7fa2d5c07180)
1 param, 7 slots, 6 upvalues, 2 locals, 1 constant, 2 functions
	1	[26]	NEWTABLE 	2 2 0
	2	[27]	GETUPVAL 	3 0	; Run
	3	[35]	CLOSURE  	4 0	; 0x7fa2d5c07730
	4	[35]	MOVE     	0 1
	5	[35]	GETUPVAL 	0 1	; NameProxy
	6	[27]	CALL     	3 2 2
	7	[36]	GETUPVAL 	4 2	; build
	8	[36]	GETTABLE 	4 4 -1	; "group"
	9	[36]	MOVE     	5 0
	10	[36]	CALL     	4 2 2
	11	[37]	GETUPVAL 	5 0	; Run
	12	[93]	CLOSURE  	6 1	; 0x7fa2d5c075e0
	13	[93]	MOVE     	0 1
	14	[93]	GETUPVAL 	0 3	; last_stm
	15	[93]	MOVE     	0 0
	16	[93]	GETUPVAL 	0 4	; types
	17	[93]	GETUPVAL 	0 5	; ntype
	18	[37]	CALL     	5 2 0
	19	[94]	SETLIST  	2 0 1	; 1
	20	[94]	RETURN   	2 2
	21	[95]	RETURN   	0 1

function <./moonscript/transform/statement.lua:27,35> (9 instructions, 36 bytes at 0x7fa2d5c07730)
1 param, 5 slots, 2 upvalues, 1 local, 2 constants, 1 function
	1	[28]	SELF     	1 0 -1	; "listen"
	2	[28]	LOADK    	3 -2	; "continue"
	3	[34]	CLOSURE  	4 0	; 0x7fa2d5c07a70
	4	[34]	GETUPVAL 	0 0	; continue_name
	5	[34]	GETUPVAL 	0 1	; NameProxy
	6	[34]	MOVE     	0 0
	7	[28]	TAILCALL 	1 4 0
	8	[34]	RETURN   	1 0
	9	[35]	RETURN   	0 1

function <./moonscript/transform/statement.lua:28,34> (14 instructions, 56 bytes at 0x7fa2d5c07a70)
0 params, 3 slots, 3 upvalues, 0 locals, 2 constants, 0 functions
	1	[29]	GETUPVAL 	0 0	; continue_name
	2	[29]	TEST     	0 0 1
	3	[29]	JMP      	8	; to 12
	4	[30]	GETUPVAL 	0 1	; NameProxy
	5	[30]	LOADK    	1 -1	; "continue"
	6	[30]	CALL     	0 2 2
	7	[30]	SETUPVAL 	0 0	; continue_name
	8	[31]	GETUPVAL 	0 2	; self
	9	[31]	SELF     	0 0 -2	; "put_name"
	10	[31]	GETUPVAL 	2 0	; continue_name
	11	[31]	CALL     	0 3 1
	12	[33]	GETUPVAL 	0 0	; continue_name
	13	[33]	RETURN   	0 2
	14	[34]	RETURN   	0 1

function <./moonscript/transform/statement.lua:37,93> (26 instructions, 104 bytes at 0x7fa2d5c075e0)
1 param, 7 slots, 5 upvalues, 3 locals, 3 constants, 1 function
	1	[38]	GETUPVAL 	1 0	; continue_name
	2	[38]	TEST     	1 0 1
	3	[38]	JMP      	1	; to 5
	4	[39]	RETURN   	0 1
	5	[41]	GETUPVAL 	1 1	; last_stm
	6	[41]	GETUPVAL 	2 2	; body
	7	[41]	CALL     	1 2 2
	8	[42]	GETUPVAL 	2 3	; types
	9	[42]	GETTABLE 	2 2 -1	; "terminating"
	10	[42]	TESTSET  	3 1 0
	11	[42]	JMP      	3	; to 15
	12	[42]	GETUPVAL 	3 4	; ntype
	13	[42]	MOVE     	4 1
	14	[42]	CALL     	3 2 2
	15	[42]	GETTABLE 	2 2 3
	16	[43]	SELF     	3 0 -2	; "put_name"
	17	[43]	GETUPVAL 	5 0	; continue_name
	18	[43]	LOADNIL  	6 6
	19	[43]	CALL     	3 4 1
	20	[44]	SELF     	3 0 -3	; "splice"
	21	[92]	CLOSURE  	5 0	; 0x7fa2d5c08460
	22	[92]	MOVE     	0 2
	23	[92]	GETUPVAL 	0 0	; continue_name
	24	[44]	TAILCALL 	3 3 0
	25	[92]	RETURN   	3 0
	26	[93]	RETURN   	0 1

function <./moonscript/transform/statement.lua:44,92> (51 instructions, 204 bytes at 0x7fa2d5c08460)
1 param, 13 slots, 2 upvalues, 1 local, 8 constants, 0 functions
	1	[45]	GETUPVAL 	1 0	; enclose_lines
	2	[45]	TEST     	1 0 0
	3	[45]	JMP      	7	; to 11
	4	[46]	NEWTABLE 	1 2 0
	5	[47]	LOADK    	2 -1	; "do"
	6	[47]	NEWTABLE 	3 1 0
	7	[50]	MOVE     	4 0
	8	[50]	SETLIST  	3 1 1	; 1
	9	[51]	SETLIST  	1 2 1	; 1
	10	[51]	MOVE     	0 1
	11	[53]	NEWTABLE 	1 3 0
	12	[53]	NEWTABLE 	2 3 0
	13	[55]	LOADK    	3 -2	; "assign"
	14	[55]	NEWTABLE 	4 1 0
	15	[58]	GETUPVAL 	5 1	; continue_name
	16	[58]	SETLIST  	4 1 1	; 1
	17	[58]	NEWTABLE 	5 1 0
	18	[61]	LOADK    	6 -3	; "false"
	19	[61]	SETLIST  	5 1 1	; 1
	20	[62]	SETLIST  	2 3 1	; 1
	21	[62]	NEWTABLE 	3 3 0
	22	[64]	LOADK    	4 -4	; "repeat"
	23	[65]	LOADK    	5 -5	; "true"
	24	[65]	NEWTABLE 	6 2 0
	25	[67]	MOVE     	7 0
	26	[67]	NEWTABLE 	8 3 0
	27	[69]	LOADK    	9 -2	; "assign"
	28	[69]	NEWTABLE 	10 1 0
	29	[72]	GETUPVAL 	11 1	; continue_name
	30	[72]	SETLIST  	10 1 1	; 1
	31	[72]	NEWTABLE 	11 1 0
	32	[75]	LOADK    	12 -5	; "true"
	33	[75]	SETLIST  	11 1 1	; 1
	34	[76]	SETLIST  	8 3 1	; 1
	35	[77]	SETLIST  	6 2 1	; 1
	36	[78]	SETLIST  	3 3 1	; 1
	37	[78]	NEWTABLE 	4 3 0
	38	[80]	LOADK    	5 -6	; "if"
	39	[80]	NEWTABLE 	6 2 0
	40	[82]	LOADK    	7 -7	; "not"
	41	[84]	GETUPVAL 	8 1	; continue_name
	42	[84]	SETLIST  	6 2 1	; 1
	43	[84]	NEWTABLE 	7 1 0
	44	[85]	NEWTABLE 	8 1 0
	45	[88]	LOADK    	9 -8	; "break"
	46	[88]	SETLIST  	8 1 1	; 1
	47	[89]	SETLIST  	7 1 1	; 1
	48	[90]	SETLIST  	4 3 1	; 1
	49	[91]	SETLIST  	1 3 1	; 1
	50	[91]	RETURN   	1 2
	51	[92]	RETURN   	0 1

function <./moonscript/transform/statement.lua:97,138> (74 instructions, 296 bytes at 0x7fa2d5c085c0)
4 params, 20 slots, 3 upvalues, 17 locals, 13 constants, 0 functions
	1	[98]	EQ       	0 1 -1	; - nil
	2	[98]	JMP      	1	; to 4
	3	[99]	GETTABLE 	1 0 -2	; "current_stms"
	4	[101]	EQ       	0 2 -1	; - nil
	5	[101]	JMP      	2	; to 8
	6	[102]	GETTABLE 	4 0 -3	; "current_stm_i"
	7	[102]	ADD      	2 4 -4	; - 1
	8	[104]	EQ       	0 3 -1	; - nil
	9	[104]	JMP      	2	; to 12
	10	[105]	NEWTABLE 	4 0 0
	11	[105]	MOVE     	3 4
	12	[107]	MOVE     	4 2
	13	[107]	LEN      	5 1
	14	[107]	LOADK    	6 -4	; 1
	15	[107]	FORPREP  	4 56	; to 72
	16	[108]	LOADBOOL 	8 0 0
	17	[110]	GETTABLE 	9 1 7
	18	[111]	EQ       	0 9 -1	; - nil
	19	[111]	JMP      	2	; to 22
	20	[112]	LOADBOOL 	8 1 0
	21	[113]	JMP      	47	; to 69
	22	[115]	GETTABLE 	10 0 -5	; "transform"
	23	[115]	GETTABLE 	10 10 -6	; "statement"
	24	[115]	MOVE     	11 9
	25	[115]	CALL     	10 2 2
	26	[115]	MOVE     	9 10
	27	[116]	SETTABLE 	1 7 9
	28	[117]	GETTABLE 	10 9 -4	; 1
	29	[118]	EQ       	1 -7 10	; "assign" -
	30	[118]	JMP      	2	; to 33
	31	[118]	EQ       	0 -8 10	; "declare" -
	32	[118]	JMP      	27	; to 60
	33	[119]	GETTABLE 	11 9 -9	; 2
	34	[120]	LOADK    	12 -4	; 1
	35	[120]	LEN      	13 11
	36	[120]	LOADK    	14 -4	; 1
	37	[120]	FORPREP  	12 20	; to 58
	38	[121]	GETTABLE 	16 11 15
	39	[122]	GETUPVAL 	17 0	; ntype
	40	[122]	MOVE     	18 16
	41	[122]	CALL     	17 2 2
	42	[122]	EQ       	0 17 -10	; - "ref"
	43	[122]	JMP      	5	; to 49
	44	[123]	GETUPVAL 	17 1	; insert
	45	[123]	MOVE     	18 3
	46	[123]	MOVE     	19 16
	47	[123]	CALL     	17 3 1
	48	[123]	JMP      	9	; to 58
	49	[124]	GETGLOBAL	17 -11	; type
	50	[124]	MOVE     	18 16
	51	[124]	CALL     	17 2 2
	52	[124]	EQ       	0 17 -12	; - "string"
	53	[124]	JMP      	4	; to 58
	54	[125]	GETUPVAL 	17 1	; insert
	55	[125]	MOVE     	18 3
	56	[125]	MOVE     	19 16
	57	[125]	CALL     	17 3 1
	58	[120]	FORLOOP  	12 -21	; to 38
	59	[127]	JMP      	8	; to 68
	60	[128]	EQ       	0 -13 10	; "group" -
	61	[128]	JMP      	6	; to 68
	62	[129]	GETUPVAL 	11 2	; extract_declarations
	63	[129]	MOVE     	12 0
	64	[129]	GETTABLE 	13 9 -9	; 2
	65	[129]	LOADK    	14 -4	; 1
	66	[129]	MOVE     	15 3
	67	[129]	CALL     	11 5 1
	68	[131]	LOADBOOL 	8 1 0
	69	[133]	TEST     	8 0 1
	70	[133]	JMP      	1	; to 72
	71	[134]	JMP      	1	; to 73
	72	[107]	FORLOOP  	4 -57	; to 16
	73	[137]	RETURN   	3 2
	74	[138]	RETURN   	0 1

function <./moonscript/transform/statement.lua:140,162> (43 instructions, 172 bytes at 0x7fa2d5c089b0)
1 param, 19 slots, 3 upvalues, 7 locals, 8 constants, 0 functions
	1	[141]	LOADK    	1 -1	; 4
	2	[141]	LEN      	2 0
	3	[141]	LOADK    	3 -2	; 1
	4	[141]	FORPREP  	1 36	; to 41
	5	[142]	GETTABLE 	5 0 4
	6	[143]	GETUPVAL 	6 0	; ntype
	7	[143]	MOVE     	7 5
	8	[143]	CALL     	6 2 2
	9	[143]	EQ       	0 6 -3	; - "elseif"
	10	[143]	JMP      	30	; to 41
	11	[143]	GETUPVAL 	6 0	; ntype
	12	[143]	GETTABLE 	7 5 -4	; 2
	13	[143]	CALL     	6 2 2
	14	[143]	EQ       	0 6 -5	; - "assign"
	15	[143]	JMP      	25	; to 41
	16	[144]	NEWTABLE 	6 0 0
	17	[145]	GETUPVAL 	7 1	; unpack
	18	[145]	MOVE     	8 0
	19	[145]	LOADK    	9 -2	; 1
	20	[145]	SUB      	10 4 -2	; - 1
	21	[145]	CALL     	7 4 0
	22	[146]	SETLIST  	6 0 1	; 1
	23	[147]	GETUPVAL 	7 2	; insert
	24	[147]	MOVE     	8 6
	25	[147]	NEWTABLE 	9 2 0
	26	[148]	LOADK    	10 -6	; "else"
	27	[148]	NEWTABLE 	11 1 0
	28	[149]	NEWTABLE 	12 3 0
	29	[151]	LOADK    	13 -7	; "if"
	30	[152]	GETTABLE 	14 5 -4	; 2
	31	[153]	GETTABLE 	15 5 -8	; 3
	32	[154]	GETUPVAL 	16 1	; unpack
	33	[154]	MOVE     	17 0
	34	[154]	ADD      	18 4 -2	; - 1
	35	[154]	CALL     	16 3 0
	36	[155]	SETLIST  	12 0 1	; 1
	37	[156]	SETLIST  	11 1 1	; 1
	38	[157]	SETLIST  	9 2 1	; 1
	39	[147]	CALL     	7 3 1
	40	[158]	RETURN   	6 2
	41	[141]	FORLOOP  	1 -37	; to 5
	42	[161]	RETURN   	0 2
	43	[162]	RETURN   	0 1

function <./moonscript/transform/statement.lua:164,168> (10 instructions, 40 bytes at 0x7fa2d5c079b0)
2 params, 7 slots, 0 upvalues, 5 locals, 3 constants, 0 functions
	1	[166]	GETTABLE 	5 1 -1	; 1
	2	[166]	GETTABLE 	6 1 -2	; 2
	3	[166]	GETTABLE 	4 1 -3	; 3
	4	[166]	MOVE     	3 6
	5	[166]	MOVE     	2 5
	6	[167]	MOVE     	5 4
	7	[167]	MOVE     	6 3
	8	[167]	TAILCALL 	5 2 0
	9	[167]	RETURN   	5 0
	10	[168]	RETURN   	0 1

function <./moonscript/transform/statement.lua:169,171> (8 instructions, 32 bytes at 0x7fa2d5c098a0)
2 params, 6 slots, 2 upvalues, 2 locals, 0 constants, 0 functions
	1	[170]	GETUPVAL 	2 0	; transform_last_stm
	2	[170]	MOVE     	3 1
	3	[170]	GETUPVAL 	4 1	; implicitly_return
	4	[170]	MOVE     	5 0
	5	[170]	CALL     	4 2 0
	6	[170]	TAILCALL 	2 0 0
	7	[170]	RETURN   	2 0
	8	[171]	RETURN   	0 1

function <./moonscript/transform/statement.lua:172,196> (55 instructions, 220 bytes at 0x7fa2d5c09af0)
2 params, 9 slots, 5 upvalues, 5 locals, 11 constants, 1 function
	1	[173]	GETTABLE 	2 1 -1	; 2
	2	[174]	GETUPVAL 	3 0	; ntype
	3	[174]	MOVE     	4 2
	4	[174]	CALL     	3 2 2
	5	[175]	EQ       	0 3 -2	; - "explist"
	6	[175]	JMP      	8	; to 15
	7	[175]	LEN      	4 2
	8	[175]	EQ       	0 4 -1	; - 2
	9	[175]	JMP      	5	; to 15
	10	[176]	GETTABLE 	2 2 -1	; 2
	11	[177]	GETUPVAL 	4 0	; ntype
	12	[177]	MOVE     	5 2
	13	[177]	CALL     	4 2 2
	14	[177]	MOVE     	3 4
	15	[179]	GETUPVAL 	4 1	; types
	16	[179]	GETTABLE 	4 4 -3	; "cascading"
	17	[179]	GETTABLE 	4 4 3
	18	[179]	TEST     	4 0 0
	19	[179]	JMP      	6	; to 26
	20	[180]	GETUPVAL 	4 2	; implicitly_return
	21	[180]	MOVE     	5 0
	22	[180]	CALL     	4 2 2
	23	[180]	MOVE     	5 2
	24	[180]	TAILCALL 	4 2 0
	25	[180]	RETURN   	4 0
	26	[182]	EQ       	1 3 -4	; - "chain"
	27	[182]	JMP      	4	; to 32
	28	[182]	EQ       	1 3 -5	; - "comprehension"
	29	[182]	JMP      	2	; to 32
	30	[182]	EQ       	0 3 -6	; - "tblcomprehension"
	31	[182]	JMP      	21	; to 53
	32	[183]	GETGLOBAL	4 -7	; require
	33	[183]	LOADK    	5 -8	; "moonscript.transform.value"
	34	[183]	CALL     	4 2 2
	35	[184]	SELF     	5 4 -9	; "transform_once"
	36	[184]	MOVE     	7 0
	37	[184]	MOVE     	8 2
	38	[184]	CALL     	5 4 2
	39	[184]	MOVE     	2 5
	40	[185]	GETUPVAL 	5 0	; ntype
	41	[185]	MOVE     	6 2
	42	[185]	CALL     	5 2 2
	43	[185]	EQ       	0 5 -10	; - "block_exp"
	44	[185]	JMP      	8	; to 53
	45	[186]	GETUPVAL 	5 3	; build
	46	[186]	GETTABLE 	5 5 -11	; "group"
	47	[186]	GETUPVAL 	6 4	; transform_last_stm
	48	[186]	GETTABLE 	7 2 -1	; 2
	49	[191]	CLOSURE  	8 0	; 0x7fa2d5c09ea0
	50	[186]	CALL     	6 3 0
	51	[186]	TAILCALL 	5 0 0
	52	[191]	RETURN   	5 0
	53	[194]	SETTABLE 	1 -1 2	; 2 -
	54	[195]	RETURN   	1 2
	55	[196]	RETURN   	0 1

function <./moonscript/transform/statement.lua:186,191> (6 instructions, 24 bytes at 0x7fa2d5c09ea0)
1 param, 4 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[187]	NEWTABLE 	1 2 0
	2	[188]	LOADK    	2 -1	; "return"
	3	[190]	MOVE     	3 0
	4	[190]	SETLIST  	1 2 1	; 1
	5	[190]	RETURN   	1 2
	6	[191]	RETURN   	0 1

function <./moonscript/transform/statement.lua:197,233> (45 instructions, 180 bytes at 0x7fa2d5c09f60)
2 params, 15 slots, 2 upvalues, 13 locals, 7 constants, 0 functions
	1	[198]	GETUPVAL 	2 0	; extract_declarations
	2	[198]	MOVE     	3 0
	3	[198]	CALL     	2 2 2
	4	[199]	GETTABLE 	3 1 -1	; 2
	5	[199]	EQ       	0 3 -2	; - "^"
	6	[199]	JMP      	33	; to 40
	7	[201]	NEWTABLE 	3 0 0
	8	[202]	LOADK    	4 -3	; 1
	9	[203]	LOADK    	5 -3	; 1
	10	[203]	LEN      	6 2
	11	[203]	LOADK    	7 -3	; 1
	12	[203]	FORPREP  	5 25	; to 38
	13	[204]	LOADBOOL 	9 0 0
	14	[206]	GETTABLE 	10 2 8
	15	[207]	LOADNIL  	11 11
	16	[208]	GETUPVAL 	12 1	; ntype
	17	[208]	MOVE     	13 10
	18	[208]	CALL     	12 2 2
	19	[208]	EQ       	0 12 -4	; - "ref"
	20	[208]	JMP      	2	; to 23
	21	[209]	GETTABLE 	11 10 -1	; 2
	22	[209]	JMP      	1	; to 24
	23	[211]	MOVE     	11 10
	24	[213]	SELF     	12 11 -5	; "match"
	25	[213]	LOADK    	14 -6	; "^%u"
	26	[213]	CALL     	12 3 2
	27	[213]	TEST     	12 0 1
	28	[213]	JMP      	2	; to 31
	29	[214]	LOADBOOL 	9 1 0
	30	[215]	JMP      	4	; to 35
	31	[217]	MOVE     	12 10
	32	[218]	SETTABLE 	3 4 12
	33	[219]	ADD      	4 4 -3	; - 1
	34	[220]	LOADBOOL 	9 1 0
	35	[222]	TEST     	9 0 1
	36	[222]	JMP      	1	; to 38
	37	[223]	JMP      	1	; to 39
	38	[203]	FORLOOP  	5 -26	; to 13
	39	[226]	MOVE     	2 3
	40	[229]	NEWTABLE 	3 2 0
	41	[230]	LOADK    	4 -7	; "declare"
	42	[232]	MOVE     	5 2
	43	[232]	SETLIST  	3 2 1	; 1
	44	[232]	RETURN   	3 2
	45	[233]	RETURN   	0 1

function <./moonscript/transform/statement.lua:234,308> (142 instructions, 568 bytes at 0x7fa2d5c0a890)
2 params, 18 slots, 6 upvalues, 18 locals, 22 constants, 1 function
	1	[235]	GETUPVAL 	2 0	; unpack
	2	[235]	MOVE     	3 1
	3	[235]	LOADK    	4 -1	; 2
	4	[235]	CALL     	2 3 3
	5	[236]	LEN      	4 3
	6	[237]	LEN      	5 3
	7	[238]	EQ       	0 5 -2	; - 1
	8	[238]	JMP      	75	; to 84
	9	[238]	EQ       	0 4 -2	; - 1
	10	[238]	JMP      	73	; to 84
	11	[239]	GETTABLE 	6 3 -2	; 1
	12	[240]	GETTABLE 	7 2 -2	; 1
	13	[241]	GETUPVAL 	8 1	; ntype
	14	[241]	MOVE     	9 6
	15	[241]	CALL     	8 2 2
	16	[242]	EQ       	0 8 -3	; - "chain"
	17	[242]	JMP      	12	; to 30
	18	[243]	GETGLOBAL	9 -4	; require
	19	[243]	LOADK    	10 -5	; "moonscript.transform.value"
	20	[243]	CALL     	9 2 2
	21	[244]	SELF     	10 9 -6	; "transform_once"
	22	[244]	MOVE     	12 0
	23	[244]	MOVE     	13 6
	24	[244]	CALL     	10 4 2
	25	[244]	MOVE     	6 10
	26	[245]	GETUPVAL 	10 1	; ntype
	27	[245]	MOVE     	11 6
	28	[245]	CALL     	10 2 2
	29	[245]	MOVE     	8 10
	30	[247]	GETUPVAL 	9 1	; ntype
	31	[247]	MOVE     	10 6
	32	[247]	CALL     	9 2 2
	33	[248]	EQ       	0 -7 9	; "block_exp" -
	34	[248]	JMP      	25	; to 60
	35	[249]	GETTABLE 	10 6 -1	; 2
	36	[250]	LEN      	11 10
	37	[251]	GETUPVAL 	12 2	; build
	38	[251]	GETTABLE 	12 12 -8	; "assign_one"
	39	[251]	MOVE     	13 7
	40	[251]	GETTABLE 	14 10 11
	41	[251]	CALL     	12 3 2
	42	[251]	SETTABLE 	10 11 12
	43	[252]	GETUPVAL 	12 2	; build
	44	[252]	GETTABLE 	12 12 -9	; "group"
	45	[252]	NEWTABLE 	13 2 0
	46	[252]	NEWTABLE 	14 2 0
	47	[254]	LOADK    	15 -10	; "declare"
	48	[254]	NEWTABLE 	16 1 0
	49	[257]	MOVE     	17 7
	50	[257]	SETLIST  	16 1 1	; 1
	51	[258]	SETLIST  	14 2 1	; 1
	52	[258]	NEWTABLE 	15 2 0
	53	[260]	LOADK    	16 -11	; "do"
	54	[262]	MOVE     	17 10
	55	[262]	SETLIST  	15 2 1	; 1
	56	[263]	SETLIST  	13 2 1	; 1
	57	[252]	TAILCALL 	12 2 0
	58	[263]	RETURN   	12 0
	59	[263]	JMP      	24	; to 84
	60	[264]	EQ       	1 -12 9	; "comprehension" -
	61	[264]	JMP      	8	; to 70
	62	[264]	EQ       	1 -13 9	; "tblcomprehension" -
	63	[264]	JMP      	6	; to 70
	64	[264]	EQ       	1 -14 9	; "foreach" -
	65	[264]	JMP      	4	; to 70
	66	[264]	EQ       	1 -15 9	; "for" -
	67	[264]	JMP      	2	; to 70
	68	[264]	EQ       	0 -16 9	; "while" -
	69	[264]	JMP      	13	; to 83
	70	[265]	GETGLOBAL	10 -4	; require
	71	[265]	LOADK    	11 -5	; "moonscript.transform.value"
	72	[265]	CALL     	10 2 2
	73	[266]	GETUPVAL 	11 2	; build
	74	[266]	GETTABLE 	11 11 -8	; "assign_one"
	75	[266]	MOVE     	12 7
	76	[266]	SELF     	13 10 -6	; "transform_once"
	77	[266]	MOVE     	15 0
	78	[266]	MOVE     	16 6
	79	[266]	CALL     	13 4 0
	80	[266]	TAILCALL 	11 0 0
	81	[266]	RETURN   	11 0
	82	[266]	JMP      	1	; to 84
	83	[268]	SETTABLE 	3 -2 6	; 1 -
	84	[271]	LOADNIL  	6 6
	85	[272]	EQ       	0 4 -2	; - 1
	86	[272]	JMP      	40	; to 127
	87	[273]	GETTABLE 	7 3 -2	; 1
	88	[274]	GETUPVAL 	8 1	; ntype
	89	[274]	MOVE     	9 7
	90	[274]	CALL     	8 2 2
	91	[275]	EQ       	0 8 -17	; - "decorated"
	92	[275]	JMP      	9	; to 102
	93	[276]	GETTABLE 	9 0 -18	; "transform"
	94	[276]	GETTABLE 	9 9 -19	; "statement"
	95	[276]	MOVE     	10 7
	96	[276]	CALL     	9 2 2
	97	[276]	MOVE     	7 9
	98	[277]	GETUPVAL 	9 1	; ntype
	99	[277]	MOVE     	10 7
	100	[277]	CALL     	9 2 2
	101	[277]	MOVE     	8 9
	102	[279]	GETUPVAL 	9 3	; types
	103	[279]	GETTABLE 	9 9 -20	; "cascading"
	104	[279]	GETTABLE 	9 9 8
	105	[279]	TEST     	9 0 0
	106	[279]	JMP      	20	; to 127
	107	[280]	LOADNIL  	9 9
	108	[293]	CLOSURE  	9 0	; 0x7fa2d5c0af10
	109	[293]	GETUPVAL 	0 4	; is_value
	110	[293]	MOVE     	0 2
	111	[294]	GETUPVAL 	10 2	; build
	112	[294]	GETTABLE 	10 10 -9	; "group"
	113	[294]	NEWTABLE 	11 1 0
	114	[294]	NEWTABLE 	12 2 0
	115	[296]	LOADK    	13 -10	; "declare"
	116	[298]	MOVE     	14 2
	117	[298]	SETLIST  	12 2 1	; 1
	118	[299]	GETTABLE 	13 0 -18	; "transform"
	119	[299]	GETTABLE 	13 13 -19	; "statement"
	120	[299]	MOVE     	14 7
	121	[299]	MOVE     	15 9
	122	[299]	MOVE     	16 1
	123	[299]	CALL     	13 4 0
	124	[300]	SETLIST  	11 0 1	; 1
	125	[294]	CALL     	10 2 2
	126	[300]	MOVE     	6 10
	127	[303]	TESTSET  	1 6 1
	128	[303]	JMP      	0	; to 129
	129	[304]	GETUPVAL 	7 5	; destructure
	130	[304]	GETTABLE 	7 7 -21	; "has_destructure"
	131	[304]	MOVE     	8 2
	132	[304]	CALL     	7 2 2
	133	[304]	TEST     	7 0 0
	134	[304]	JMP      	6	; to 141
	135	[305]	GETUPVAL 	7 5	; destructure
	136	[305]	GETTABLE 	7 7 -22	; "split_assign"
	137	[305]	MOVE     	8 0
	138	[305]	MOVE     	9 1
	139	[305]	TAILCALL 	7 3 0
	140	[305]	RETURN   	7 0
	141	[307]	RETURN   	1 2
	142	[308]	RETURN   	0 1

function <./moonscript/transform/statement.lua:281,293> (16 instructions, 64 bytes at 0x7fa2d5c0af10)
1 param, 6 slots, 2 upvalues, 1 local, 1 constant, 0 functions
	1	[282]	GETUPVAL 	1 0	; is_value
	2	[282]	MOVE     	2 0
	3	[282]	CALL     	1 2 2
	4	[282]	TEST     	1 0 0
	5	[282]	JMP      	9	; to 15
	6	[283]	NEWTABLE 	1 3 0
	7	[284]	LOADK    	2 -1	; "assign"
	8	[285]	GETUPVAL 	3 1	; names
	9	[285]	NEWTABLE 	4 1 0
	10	[288]	MOVE     	5 0
	11	[288]	SETLIST  	4 1 1	; 1
	12	[289]	SETLIST  	1 3 1	; 1
	13	[289]	RETURN   	1 2
	14	[289]	JMP      	1	; to 16
	15	[291]	RETURN   	0 2
	16	[293]	RETURN   	0 1

function <./moonscript/transform/statement.lua:309,320> (23 instructions, 92 bytes at 0x7fa2d5c0b7d0)
2 params, 8 slots, 1 upvalue, 3 locals, 8 constants, 0 functions
	1	[310]	SELF     	2 0 -1	; "send"
	2	[310]	LOADK    	4 -2	; "continue"
	3	[310]	CALL     	2 3 2
	4	[311]	TEST     	2 0 1
	5	[311]	JMP      	3	; to 9
	6	[312]	GETGLOBAL	3 -3	; error
	7	[312]	LOADK    	4 -4	; "continue must be inside of a loop"
	8	[312]	CALL     	3 2 1
	9	[314]	GETUPVAL 	3 0	; build
	10	[314]	GETTABLE 	3 3 -5	; "group"
	11	[314]	NEWTABLE 	4 2 0
	12	[315]	GETUPVAL 	5 0	; build
	13	[315]	GETTABLE 	5 5 -6	; "assign_one"
	14	[315]	MOVE     	6 2
	15	[315]	LOADK    	7 -7	; "true"
	16	[315]	CALL     	5 3 2
	17	[315]	NEWTABLE 	6 1 0
	18	[318]	LOADK    	7 -8	; "break"
	19	[318]	SETLIST  	6 1 1	; 1
	20	[319]	SETLIST  	4 2 1	; 1
	21	[314]	TAILCALL 	3 2 0
	22	[319]	RETURN   	3 0
	23	[320]	RETURN   	0 1

function <./moonscript/transform/statement.lua:321,349> (45 instructions, 180 bytes at 0x7fa2d5c06740)
2 params, 9 slots, 2 upvalues, 3 locals, 9 constants, 0 functions
	1	[322]	LEN      	2 1
	2	[322]	LT       	0 -1 2	; 2 -
	3	[322]	JMP      	39	; to 43
	4	[323]	GETTABLE 	2 1 -1	; 2
	5	[323]	EQ       	0 2 -2	; - "class"
	6	[323]	JMP      	17	; to 24
	7	[324]	GETUPVAL 	2 0	; smart_node
	8	[324]	GETTABLE 	3 1 -3	; 3
	9	[324]	CALL     	2 2 2
	10	[325]	GETUPVAL 	3 1	; build
	11	[325]	GETTABLE 	3 3 -4	; "group"
	12	[325]	NEWTABLE 	4 2 0
	13	[325]	NEWTABLE 	5 2 0
	14	[327]	LOADK    	6 -5	; "export"
	15	[327]	NEWTABLE 	7 1 0
	16	[330]	GETTABLE 	8 2 -6	; "name"
	17	[330]	SETLIST  	7 1 1	; 1
	18	[331]	SETLIST  	5 2 1	; 1
	19	[333]	MOVE     	6 2
	20	[333]	SETLIST  	4 2 1	; 1
	21	[325]	TAILCALL 	3 2 0
	22	[333]	RETURN   	3 0
	23	[333]	JMP      	21	; to 45
	24	[335]	GETUPVAL 	2 1	; build
	25	[335]	GETTABLE 	2 2 -4	; "group"
	26	[335]	NEWTABLE 	3 1 0
	27	[335]	NEWTABLE 	4 2 0
	28	[337]	LOADK    	5 -5	; "export"
	29	[339]	GETTABLE 	6 1 -1	; 2
	30	[339]	SETLIST  	4 2 1	; 1
	31	[340]	GETUPVAL 	5 1	; build
	32	[340]	GETTABLE 	5 5 -7	; "assign"
	33	[340]	NEWTABLE 	6 0 2
	34	[341]	GETTABLE 	7 1 -1	; 2
	35	[341]	SETTABLE 	6 -8 7	; "names" -
	36	[342]	GETTABLE 	7 1 -3	; 3
	37	[342]	SETTABLE 	6 -9 7	; "values" -
	38	[340]	CALL     	5 2 0
	39	[344]	SETLIST  	3 0 1	; 1
	40	[335]	TAILCALL 	2 2 0
	41	[344]	RETURN   	2 0
	42	[345]	JMP      	2	; to 45
	43	[347]	LOADNIL  	2 2
	44	[347]	RETURN   	2 2
	45	[349]	RETURN   	0 1

function <./moonscript/transform/statement.lua:350,368> (36 instructions, 144 bytes at 0x7fa2d5c0b650)
2 params, 13 slots, 3 upvalues, 6 locals, 8 constants, 0 functions
	1	[351]	GETUPVAL 	2 0	; unpack
	2	[351]	MOVE     	3 1
	3	[351]	LOADK    	4 -1	; 2
	4	[351]	CALL     	2 3 4
	5	[352]	SELF     	5 3 -2	; "match"
	6	[352]	LOADK    	7 -3	; "^(.+)=$"
	7	[352]	CALL     	5 3 2
	8	[353]	TEST     	5 0 1
	9	[353]	JMP      	5	; to 15
	10	[354]	GETGLOBAL	6 -4	; error
	11	[354]	LOADK    	7 -5	; "Unknown op: "
	12	[354]	MOVE     	8 3
	13	[354]	CONCAT   	7 7 8
	14	[354]	CALL     	6 2 1
	15	[356]	GETUPVAL 	6 1	; value_is_singular
	16	[356]	MOVE     	7 4
	17	[356]	CALL     	6 2 2
	18	[356]	TEST     	6 0 1
	19	[356]	JMP      	5	; to 25
	20	[357]	NEWTABLE 	6 2 0
	21	[358]	LOADK    	7 -6	; "parens"
	22	[360]	MOVE     	8 4
	23	[360]	SETLIST  	6 2 1	; 1
	24	[360]	MOVE     	4 6
	25	[362]	GETUPVAL 	6 2	; build
	26	[362]	GETTABLE 	6 6 -7	; "assign_one"
	27	[362]	MOVE     	7 2
	28	[362]	NEWTABLE 	8 4 0
	29	[363]	LOADK    	9 -8	; "exp"
	30	[364]	MOVE     	10 2
	31	[365]	MOVE     	11 5
	32	[367]	MOVE     	12 4
	33	[367]	SETLIST  	8 4 1	; 1
	34	[362]	TAILCALL 	6 3 0
	35	[367]	RETURN   	6 0
	36	[368]	RETURN   	0 1

function <./moonscript/transform/statement.lua:369,409> (49 instructions, 196 bytes at 0x7fa2d5c080c0)
2 params, 17 slots, 2 upvalues, 15 locals, 7 constants, 0 functions
	1	[370]	GETUPVAL 	2 0	; unpack
	2	[370]	MOVE     	3 1
	3	[370]	LOADK    	4 -1	; 2
	4	[370]	CALL     	2 3 3
	5	[371]	LOADNIL  	4 4
	6	[373]	NEWTABLE 	5 0 0
	7	[374]	LOADK    	6 -2	; 1
	8	[375]	LOADK    	7 -2	; 1
	9	[375]	LEN      	8 2
	10	[375]	LOADK    	9 -2	; 1
	11	[375]	FORPREP  	7 19	; to 31
	12	[376]	GETTABLE 	11 2 10
	13	[377]	LOADNIL  	12 12
	14	[378]	GETUPVAL 	13 1	; ntype
	15	[378]	MOVE     	14 11
	16	[378]	CALL     	13 2 2
	17	[378]	EQ       	0 13 -3	; - "colon"
	18	[378]	JMP      	2	; to 21
	19	[379]	GETTABLE 	12 11 -1	; 2
	20	[379]	JMP      	1	; to 22
	21	[381]	MOVE     	12 11
	22	[383]	NEWTABLE 	13 2 0
	23	[383]	NEWTABLE 	14 2 0
	24	[385]	LOADK    	15 -4	; "key_literal"
	25	[387]	MOVE     	16 11
	26	[387]	SETLIST  	14 2 1	; 1
	27	[389]	MOVE     	15 12
	28	[389]	SETLIST  	13 2 1	; 1
	29	[390]	SETTABLE 	5 6 13
	30	[391]	ADD      	6 6 -2	; - 1
	31	[375]	FORLOOP  	7 -20	; to 12
	32	[393]	MOVE     	4 5
	33	[395]	NEWTABLE 	5 2 0
	34	[396]	LOADK    	6 -5	; "table"
	35	[398]	MOVE     	7 4
	36	[398]	SETLIST  	5 2 1	; 1
	37	[399]	NEWTABLE 	6 3 1
	38	[400]	LOADK    	7 -6	; "assign"
	39	[400]	NEWTABLE 	8 1 0
	40	[403]	MOVE     	9 5
	41	[403]	SETLIST  	8 1 1	; 1
	42	[403]	NEWTABLE 	9 1 0
	43	[406]	MOVE     	10 3
	44	[406]	SETLIST  	9 1 1	; 1
	45	[407]	GETTABLE 	10 1 -7	; -1
	46	[407]	SETTABLE 	6 -7 10	; -1 -
	47	[408]	SETLIST  	6 3 1	; 1
	48	[408]	RETURN   	6 2
	49	[409]	RETURN   	0 1

function <./moonscript/transform/statement.lua:410,418> (15 instructions, 60 bytes at 0x7fa2d5c08040)
3 params, 8 slots, 2 upvalues, 5 locals, 1 constant, 1 function
	1	[411]	GETUPVAL 	3 0	; unpack
	2	[411]	MOVE     	4 1
	3	[411]	LOADK    	5 -1	; 2
	4	[411]	CALL     	3 3 3
	5	[412]	TEST     	2 0 1
	6	[412]	JMP      	1	; to 8
	7	[416]	CLOSURE  	2 0	; 0x7fa2d5c0bf50
	8	[417]	GETUPVAL 	5 1	; construct_comprehension
	9	[417]	MOVE     	6 2
	10	[417]	MOVE     	7 3
	11	[417]	CALL     	6 2 2
	12	[417]	MOVE     	7 4
	13	[417]	TAILCALL 	5 3 0
	14	[417]	RETURN   	5 0
	15	[418]	RETURN   	0 1

function <./moonscript/transform/statement.lua:412,416> (5 instructions, 20 bytes at 0x7fa2d5c0bf50)
1 param, 3 slots, 0 upvalues, 1 local, 0 constants, 0 functions
	1	[413]	NEWTABLE 	1 1 0
	2	[415]	MOVE     	2 0
	3	[415]	SETLIST  	1 1 1	; 1
	4	[415]	RETURN   	1 2
	5	[416]	RETURN   	0 1

function <./moonscript/transform/statement.lua:419,424> (9 instructions, 36 bytes at 0x7fa2d5c0bd90)
3 params, 6 slots, 1 upvalue, 3 locals, 1 constant, 0 functions
	1	[420]	TEST     	2 0 0
	2	[420]	JMP      	5	; to 8
	3	[421]	GETUPVAL 	3 0	; transform_last_stm
	4	[421]	GETTABLE 	4 1 -1	; 2
	5	[421]	MOVE     	5 2
	6	[421]	CALL     	3 3 2
	7	[421]	SETTABLE 	1 -1 3	; 2 -
	8	[423]	RETURN   	1 2
	9	[424]	RETURN   	0 1

function <./moonscript/transform/statement.lua:425,485> (80 instructions, 320 bytes at 0x7fa2d5c0c3b0)
2 params, 13 slots, 3 upvalues, 8 locals, 12 constants, 1 function
	1	[426]	GETUPVAL 	2 0	; unpack
	2	[426]	MOVE     	3 1
	3	[426]	LOADK    	4 -1	; 2
	4	[426]	CALL     	2 3 3
	5	[427]	LOADNIL  	4 4
	6	[428]	GETTABLE 	5 3 -2	; 1
	7	[429]	EQ       	0 -3 5	; "if" -
	8	[429]	JMP      	23	; to 32
	9	[430]	GETUPVAL 	6 0	; unpack
	10	[430]	MOVE     	7 3
	11	[430]	LOADK    	8 -1	; 2
	12	[430]	CALL     	6 3 3
	13	[431]	TEST     	7 0 0
	14	[431]	JMP      	7	; to 22
	15	[432]	NEWTABLE 	8 2 0
	16	[433]	LOADK    	9 -4	; "else"
	17	[433]	NEWTABLE 	10 1 0
	18	[436]	MOVE     	11 7
	19	[436]	SETLIST  	10 1 1	; 1
	20	[437]	SETLIST  	8 2 1	; 1
	21	[437]	MOVE     	7 8
	22	[439]	NEWTABLE 	8 4 0
	23	[440]	LOADK    	9 -3	; "if"
	24	[441]	MOVE     	10 6
	25	[441]	NEWTABLE 	11 1 0
	26	[444]	MOVE     	12 2
	27	[444]	SETLIST  	11 1 1	; 1
	28	[446]	MOVE     	12 7
	29	[446]	SETLIST  	8 4 1	; 1
	30	[446]	MOVE     	4 8
	31	[446]	JMP      	26	; to 58
	32	[447]	EQ       	0 -5 5	; "unless" -
	33	[447]	JMP      	9	; to 43
	34	[448]	NEWTABLE 	6 3 0
	35	[449]	LOADK    	7 -5	; "unless"
	36	[450]	GETTABLE 	8 3 -1	; 2
	37	[450]	NEWTABLE 	9 1 0
	38	[453]	MOVE     	10 2
	39	[453]	SETLIST  	9 1 1	; 1
	40	[454]	SETLIST  	6 3 1	; 1
	41	[454]	MOVE     	4 6
	42	[454]	JMP      	15	; to 58
	43	[455]	EQ       	0 -6 5	; "comprehension" -
	44	[455]	JMP      	7	; to 52
	45	[456]	NEWTABLE 	6 3 0
	46	[457]	LOADK    	7 -6	; "comprehension"
	47	[458]	MOVE     	8 2
	48	[460]	GETTABLE 	9 3 -1	; 2
	49	[460]	SETLIST  	6 3 1	; 1
	50	[460]	MOVE     	4 6
	51	[460]	JMP      	6	; to 58
	52	[462]	GETGLOBAL	6 -7	; error
	53	[462]	LOADK    	7 -8	; "Unknown decorator "
	54	[462]	GETTABLE 	8 3 -2	; 1
	55	[462]	CONCAT   	7 7 8
	56	[462]	CALL     	6 2 2
	57	[462]	MOVE     	4 6
	58	[464]	GETUPVAL 	6 1	; ntype
	59	[464]	MOVE     	7 2
	60	[464]	CALL     	6 2 2
	61	[464]	EQ       	0 6 -9	; - "assign"
	62	[464]	JMP      	16	; to 79
	63	[465]	GETUPVAL 	6 2	; build
	64	[465]	GETTABLE 	6 6 -10	; "group"
	65	[465]	NEWTABLE 	7 2 0
	66	[466]	GETUPVAL 	8 2	; build
	67	[466]	GETTABLE 	8 8 -11	; "declare"
	68	[466]	NEWTABLE 	9 0 1
	69	[479]	CLOSURE  	10 0	; 0x7fa2d5c0ca30
	70	[479]	MOVE     	0 2
	71	[479]	GETUPVAL 	0 1	; ntype
	72	[479]	CALL     	10 1 2
	73	[479]	SETTABLE 	9 -12 10	; "names" -
	74	[466]	CALL     	8 2 2
	75	[482]	MOVE     	9 4
	76	[482]	SETLIST  	7 2 1	; 1
	77	[465]	CALL     	6 2 2
	78	[482]	MOVE     	4 6
	79	[484]	RETURN   	4 2
	80	[485]	RETURN   	0 1

function <./moonscript/transform/statement.lua:467,479> (19 instructions, 76 bytes at 0x7fa2d5c0ca30)
0 params, 10 slots, 2 upvalues, 8 locals, 3 constants, 0 functions
	1	[468]	NEWTABLE 	0 0 0
	2	[469]	LOADK    	1 -1	; 1
	3	[470]	GETUPVAL 	2 0	; stm
	4	[470]	GETTABLE 	2 2 -2	; 2
	5	[471]	LOADK    	3 -1	; 1
	6	[471]	LEN      	4 2
	7	[471]	LOADK    	5 -1	; 1
	8	[471]	FORPREP  	3 8	; to 17
	9	[472]	GETTABLE 	7 2 6
	10	[473]	GETUPVAL 	8 1	; ntype
	11	[473]	MOVE     	9 7
	12	[473]	CALL     	8 2 2
	13	[473]	EQ       	0 8 -3	; - "ref"
	14	[473]	JMP      	2	; to 17
	15	[474]	SETTABLE 	0 1 7
	16	[475]	ADD      	1 1 -1	; - 1
	17	[471]	FORLOOP  	3 -9	; to 9
	18	[478]	RETURN   	0 2
	19	[479]	RETURN   	0 1

function <./moonscript/transform/statement.lua:486,516> (51 instructions, 204 bytes at 0x7fa2d5c0cb30)
2 params, 12 slots, 4 upvalues, 3 locals, 11 constants, 0 functions
	1	[487]	GETTABLE 	2 1 -1	; 2
	2	[488]	GETUPVAL 	3 0	; ntype
	3	[488]	MOVE     	4 2
	4	[488]	CALL     	3 2 2
	5	[488]	EQ       	0 3 -2	; - "assign"
	6	[488]	JMP      	29	; to 36
	7	[489]	GETUPVAL 	3 1	; destructure
	8	[489]	GETTABLE 	3 3 -3	; "has_destructure"
	9	[489]	GETTABLE 	4 2 -1	; 2
	10	[489]	CALL     	3 2 2
	11	[489]	TEST     	3 0 0
	12	[489]	JMP      	3	; to 16
	13	[490]	GETGLOBAL	3 -4	; error
	14	[490]	LOADK    	4 -5	; "destructure not allowed in unless assignment"
	15	[490]	CALL     	3 2 1
	16	[492]	GETUPVAL 	3 2	; build
	17	[492]	GETTABLE 	3 3 -6	; "do"
	18	[492]	NEWTABLE 	4 2 0
	19	[493]	MOVE     	5 2
	20	[493]	NEWTABLE 	6 2 0
	21	[495]	LOADK    	7 -7	; "if"
	22	[495]	NEWTABLE 	8 2 0
	23	[497]	LOADK    	9 -8	; "not"
	24	[498]	GETTABLE 	10 2 -1	; 2
	25	[499]	GETTABLE 	10 10 -9	; 1
	26	[499]	SETLIST  	8 2 1	; 1
	27	[500]	GETUPVAL 	9 3	; unpack
	28	[500]	MOVE     	10 1
	29	[500]	LOADK    	11 -10	; 3
	30	[500]	CALL     	9 3 0
	31	[501]	SETLIST  	6 0 1	; 1
	32	[502]	SETLIST  	4 2 1	; 1
	33	[492]	TAILCALL 	3 2 0
	34	[502]	RETURN   	3 0
	35	[502]	JMP      	15	; to 51
	36	[504]	NEWTABLE 	3 2 0
	37	[505]	LOADK    	4 -7	; "if"
	38	[505]	NEWTABLE 	5 2 0
	39	[507]	LOADK    	6 -8	; "not"
	40	[507]	NEWTABLE 	7 2 0
	41	[509]	LOADK    	8 -11	; "parens"
	42	[511]	MOVE     	9 2
	43	[511]	SETLIST  	7 2 1	; 1
	44	[512]	SETLIST  	5 2 1	; 1
	45	[513]	GETUPVAL 	6 3	; unpack
	46	[513]	MOVE     	7 1
	47	[513]	LOADK    	8 -10	; 3
	48	[513]	CALL     	6 3 0
	49	[514]	SETLIST  	3 0 1	; 1
	50	[514]	RETURN   	3 2
	51	[516]	RETURN   	0 1

function <./moonscript/transform/statement.lua:517,558> (100 instructions, 400 bytes at 0x7fa2d5c0cbf0)
3 params, 16 slots, 8 upvalues, 13 locals, 13 constants, 0 functions
	1	[518]	GETUPVAL 	3 0	; ntype
	2	[518]	GETTABLE 	4 1 -1	; 2
	3	[518]	CALL     	3 2 2
	4	[518]	EQ       	0 3 -2	; - "assign"
	5	[518]	JMP      	66	; to 72
	6	[519]	GETUPVAL 	3 1	; unpack
	7	[519]	MOVE     	4 1
	8	[519]	LOADK    	5 -1	; 2
	9	[519]	CALL     	3 3 3
	10	[520]	GETUPVAL 	5 2	; destructure
	11	[520]	GETTABLE 	5 5 -3	; "has_destructure"
	12	[520]	GETTABLE 	6 3 -1	; 2
	13	[520]	CALL     	5 2 2
	14	[520]	TEST     	5 0 0
	15	[520]	JMP      	39	; to 55
	16	[521]	GETUPVAL 	5 3	; NameProxy
	17	[521]	LOADK    	6 -4	; "des"
	18	[521]	CALL     	5 2 2
	19	[522]	NEWTABLE 	6 1 0
	20	[523]	GETUPVAL 	7 2	; destructure
	21	[523]	GETTABLE 	7 7 -5	; "build_assign"
	22	[523]	MOVE     	8 0
	23	[523]	GETTABLE 	9 3 -1	; 2
	24	[523]	GETTABLE 	9 9 -6	; 1
	25	[523]	MOVE     	10 5
	26	[523]	CALL     	7 4 2
	27	[524]	GETUPVAL 	8 4	; build
	28	[524]	GETTABLE 	8 8 -7	; "group"
	29	[524]	GETTABLE 	9 1 -8	; 3
	30	[524]	CALL     	8 2 0
	31	[525]	SETLIST  	6 0 1	; 1
	32	[525]	MOVE     	4 6
	33	[526]	GETUPVAL 	6 4	; build
	34	[526]	GETTABLE 	6 6 -9	; "do"
	35	[526]	NEWTABLE 	7 2 0
	36	[527]	GETUPVAL 	8 4	; build
	37	[527]	GETTABLE 	8 8 -10	; "assign_one"
	38	[527]	MOVE     	9 5
	39	[527]	GETTABLE 	10 3 -8	; 3
	40	[527]	GETTABLE 	10 10 -6	; 1
	41	[527]	CALL     	8 3 2
	42	[527]	NEWTABLE 	9 3 0
	43	[529]	LOADK    	10 -11	; "if"
	44	[530]	MOVE     	11 5
	45	[531]	MOVE     	12 4
	46	[532]	GETUPVAL 	13 1	; unpack
	47	[532]	MOVE     	14 1
	48	[532]	LOADK    	15 -12	; 4
	49	[532]	CALL     	13 3 0
	50	[533]	SETLIST  	9 0 1	; 1
	51	[534]	SETLIST  	7 2 1	; 1
	52	[526]	TAILCALL 	6 2 0
	53	[534]	RETURN   	6 0
	54	[534]	JMP      	17	; to 72
	55	[536]	GETTABLE 	5 3 -1	; 2
	56	[536]	GETTABLE 	5 5 -6	; 1
	57	[537]	GETUPVAL 	6 4	; build
	58	[537]	GETTABLE 	6 6 -9	; "do"
	59	[537]	NEWTABLE 	7 2 0
	60	[538]	MOVE     	8 3
	61	[538]	NEWTABLE 	9 2 0
	62	[540]	LOADK    	10 -11	; "if"
	63	[541]	MOVE     	11 5
	64	[542]	GETUPVAL 	12 1	; unpack
	65	[542]	MOVE     	13 1
	66	[542]	LOADK    	14 -8	; 3
	67	[542]	CALL     	12 3 0
	68	[543]	SETLIST  	9 0 1	; 1
	69	[544]	SETLIST  	7 2 1	; 1
	70	[537]	TAILCALL 	6 2 0
	71	[544]	RETURN   	6 0
	72	[547]	GETUPVAL 	3 5	; expand_elseif_assign
	73	[547]	MOVE     	4 1
	74	[547]	CALL     	3 2 2
	75	[547]	MOVE     	1 3
	76	[548]	TEST     	2 0 0
	77	[548]	JMP      	21	; to 99
	78	[549]	GETUPVAL 	3 6	; smart_node
	79	[549]	MOVE     	4 1
	80	[549]	CALL     	3 2 1
	81	[550]	GETUPVAL 	3 7	; transform_last_stm
	82	[550]	GETTABLE 	4 1 -13	; "then"
	83	[550]	MOVE     	5 2
	84	[550]	CALL     	3 3 2
	85	[550]	SETTABLE 	1 -13 3	; "then" -
	86	[551]	LOADK    	3 -12	; 4
	87	[551]	LEN      	4 1
	88	[551]	LOADK    	5 -6	; 1
	89	[551]	FORPREP  	3 8	; to 98
	90	[552]	GETTABLE 	7 1 6
	91	[553]	GETTABLE 	8 1 6
	92	[553]	LEN      	8 8
	93	[554]	GETUPVAL 	9 7	; transform_last_stm
	94	[554]	GETTABLE 	10 7 8
	95	[554]	MOVE     	11 2
	96	[554]	CALL     	9 3 2
	97	[554]	SETTABLE 	7 8 9
	98	[551]	FORLOOP  	3 -9	; to 90
	99	[557]	RETURN   	1 2
	100	[558]	RETURN   	0 1

function <./moonscript/transform/statement.lua:559,606> (102 instructions, 408 bytes at 0x7fa2d5c066c0)
3 params, 15 slots, 8 upvalues, 13 locals, 11 constants, 1 function
	1	[560]	GETUPVAL 	3 0	; unpack
	2	[560]	MOVE     	4 1
	3	[560]	LOADK    	5 -1	; 2
	4	[560]	CALL     	3 3 3
	5	[561]	LOADBOOL 	5 1 0
	6	[562]	LOADNIL  	6 7
	7	[564]	GETUPVAL 	8 1	; last_stm
	8	[564]	MOVE     	9 4
	9	[564]	CALL     	8 2 2
	10	[565]	TEST     	8 0 0
	11	[565]	JMP      	9	; to 21
	12	[566]	GETUPVAL 	9 2	; types
	13	[566]	GETTABLE 	9 9 -2	; "terminating"
	14	[566]	GETUPVAL 	10 3	; ntype
	15	[566]	MOVE     	11 8
	16	[566]	CALL     	10 2 2
	17	[566]	GETTABLE 	9 9 10
	18	[566]	TEST     	9 0 0
	19	[566]	JMP      	1	; to 21
	20	[567]	LOADBOOL 	2 0 0
	21	[571]	GETUPVAL 	8 3	; ntype
	22	[571]	MOVE     	9 3
	23	[571]	CALL     	8 2 2
	24	[571]	EQ       	0 8 -3	; - "assign"
	25	[571]	JMP      	28	; to 54
	26	[572]	GETUPVAL 	8 0	; unpack
	27	[572]	MOVE     	9 3
	28	[572]	LOADK    	10 -1	; 2
	29	[572]	CALL     	8 3 3
	30	[573]	GETTABLE 	10 8 -4	; 1
	31	[574]	GETUPVAL 	11 3	; ntype
	32	[574]	MOVE     	12 10
	33	[574]	CALL     	11 2 2
	34	[574]	EQ       	0 11 -5	; - "ref"
	35	[574]	JMP      	5	; to 41
	36	[575]	MOVE     	6 10
	37	[576]	MOVE     	7 3
	38	[577]	GETTABLE 	3 9 -4	; 1
	39	[578]	LOADBOOL 	5 0 0
	40	[578]	JMP      	20	; to 61
	41	[580]	GETUPVAL 	11 4	; NameProxy
	42	[580]	LOADK    	12 -6	; "with"
	43	[580]	CALL     	11 2 2
	44	[580]	MOVE     	6 11
	45	[581]	GETTABLE 	3 9 -4	; 1
	46	[582]	SETTABLE 	9 -4 6	; 1 -
	47	[583]	NEWTABLE 	11 3 0
	48	[584]	LOADK    	12 -3	; "assign"
	49	[585]	MOVE     	13 8
	50	[587]	MOVE     	14 9
	51	[587]	SETLIST  	11 3 1	; 1
	52	[587]	MOVE     	7 11
	53	[588]	JMP      	7	; to 61
	54	[589]	SELF     	8 0 -7	; "is_local"
	55	[589]	MOVE     	10 3
	56	[589]	CALL     	8 3 2
	57	[589]	TEST     	8 0 0
	58	[589]	JMP      	2	; to 61
	59	[590]	MOVE     	6 3
	60	[591]	LOADBOOL 	5 0 0
	61	[593]	TEST     	6 0 1
	62	[593]	JMP      	4	; to 67
	63	[593]	GETUPVAL 	8 4	; NameProxy
	64	[593]	LOADK    	9 -6	; "with"
	65	[593]	CALL     	8 2 2
	66	[593]	MOVE     	6 8
	67	[594]	GETUPVAL 	8 5	; build
	68	[594]	GETTABLE 	8 8 -8	; "do"
	69	[594]	NEWTABLE 	9 3 0
	70	[595]	TEST     	5 0 0
	71	[595]	JMP      	7	; to 79
	72	[595]	GETUPVAL 	10 5	; build
	73	[595]	GETTABLE 	10 10 -9	; "assign_one"
	74	[595]	MOVE     	11 6
	75	[595]	MOVE     	12 3
	76	[595]	CALL     	10 3 2
	77	[595]	TEST     	10 0 1
	78	[595]	JMP      	1	; to 80
	79	[595]	GETUPVAL 	10 6	; NOOP
	80	[596]	TESTSET  	11 7 1
	81	[596]	JMP      	1	; to 83
	82	[596]	GETUPVAL 	11 6	; NOOP
	83	[597]	GETUPVAL 	12 7	; Run
	84	[599]	CLOSURE  	13 0	; 0x7fa2d5c0d530
	85	[599]	MOVE     	0 6
	86	[597]	CALL     	12 2 2
	87	[600]	GETUPVAL 	13 0	; unpack
	88	[600]	MOVE     	14 4
	89	[600]	CALL     	13 2 0
	90	[601]	SETLIST  	9 0 1	; 1
	91	[594]	CALL     	8 2 2
	92	[602]	TEST     	2 0 0
	93	[602]	JMP      	7	; to 101
	94	[603]	GETGLOBAL	9 -10	; table
	95	[603]	GETTABLE 	9 9 -11	; "insert"
	96	[603]	GETTABLE 	10 8 -1	; 2
	97	[603]	MOVE     	11 2
	98	[603]	MOVE     	12 6
	99	[603]	CALL     	11 2 0
	100	[603]	CALL     	9 0 1
	101	[605]	RETURN   	8 2
	102	[606]	RETURN   	0 1

function <./moonscript/transform/statement.lua:597,599> (6 instructions, 24 bytes at 0x7fa2d5c0d530)
1 param, 5 slots, 1 upvalue, 1 local, 2 constants, 0 functions
	1	[598]	SELF     	1 0 -1	; "set"
	2	[598]	LOADK    	3 -2	; "scope_var"
	3	[598]	GETUPVAL 	4 0	; scope_name
	4	[598]	TAILCALL 	1 4 0
	5	[598]	RETURN   	1 0
	6	[599]	RETURN   	0 1

function <./moonscript/transform/statement.lua:607,711> (213 instructions, 852 bytes at 0x7fa2d5c0de90)
3 params, 25 slots, 12 upvalues, 29 locals, 30 constants, 0 functions
	1	[608]	GETUPVAL 	3 0	; smart_node
	2	[608]	MOVE     	4 1
	3	[608]	CALL     	3 2 1
	4	[609]	GETUPVAL 	3 1	; unpack
	5	[609]	GETTABLE 	4 1 -1	; "iter"
	6	[609]	CALL     	3 2 2
	7	[610]	NEWTABLE 	4 0 0
	8	[612]	NEWTABLE 	5 0 0
	9	[613]	LOADK    	6 -2	; 1
	10	[614]	GETGLOBAL	7 -3	; ipairs
	11	[614]	GETTABLE 	8 1 -4	; "names"
	12	[614]	CALL     	7 2 4
	13	[614]	JMP      	21	; to 35
	14	[615]	GETUPVAL 	12 2	; ntype
	15	[615]	MOVE     	13 11
	16	[615]	CALL     	12 2 2
	17	[615]	EQ       	0 12 -5	; - "table"
	18	[615]	JMP      	14	; to 33
	19	[617]	GETUPVAL 	12 3	; NameProxy
	20	[617]	LOADK    	13 -6	; "des"
	21	[617]	CALL     	12 2 2
	22	[618]	GETUPVAL 	13 4	; insert
	23	[618]	MOVE     	14 4
	24	[618]	GETUPVAL 	15 5	; destructure
	25	[618]	GETTABLE 	15 15 -7	; "build_assign"
	26	[618]	MOVE     	16 0
	27	[618]	MOVE     	17 11
	28	[618]	MOVE     	18 12
	29	[618]	CALL     	15 4 0
	30	[618]	CALL     	13 0 1
	31	[619]	SETTABLE 	5 6 12
	32	[620]	JMP      	1	; to 34
	33	[622]	SETTABLE 	5 6 11
	34	[624]	ADD      	6 6 -2	; - 1
	35	[614]	TFORLOOP 	7 2
	36	[624]	JMP      	-23	; to 14
	37	[626]	SETTABLE 	1 -4 5	; "names" -
	38	[628]	GETGLOBAL	5 -8	; next
	39	[628]	MOVE     	6 4
	40	[628]	CALL     	5 2 2
	41	[628]	TEST     	5 0 0
	42	[628]	JMP      	8	; to 51
	43	[629]	GETUPVAL 	5 4	; insert
	44	[629]	MOVE     	6 4
	45	[629]	GETUPVAL 	7 6	; build
	46	[629]	GETTABLE 	7 7 -9	; "group"
	47	[629]	GETTABLE 	8 1 -10	; "body"
	48	[629]	CALL     	7 2 0
	49	[629]	CALL     	5 0 1
	50	[630]	SETTABLE 	1 -10 4	; "body" -
	51	[632]	GETUPVAL 	5 2	; ntype
	52	[632]	MOVE     	6 3
	53	[632]	CALL     	5 2 2
	54	[632]	EQ       	0 5 -11	; - "unpack"
	55	[632]	JMP      	153	; to 209
	56	[633]	GETTABLE 	5 3 -12	; 2
	57	[634]	GETUPVAL 	6 3	; NameProxy
	58	[634]	LOADK    	7 -13	; "index"
	59	[634]	CALL     	6 2 2
	60	[635]	SELF     	7 0 -14	; "is_local"
	61	[635]	MOVE     	9 5
	62	[635]	CALL     	7 3 2
	63	[635]	TEST     	7 0 0
	64	[635]	JMP      	2	; to 67
	65	[635]	TESTSET  	7 5 1
	66	[635]	JMP      	3	; to 70
	67	[635]	GETUPVAL 	7 3	; NameProxy
	68	[635]	LOADK    	8 -15	; "list"
	69	[635]	CALL     	7 2 2
	70	[636]	LOADNIL  	8 9
	71	[638]	GETUPVAL 	10 7	; is_slice
	72	[638]	MOVE     	11 5
	73	[638]	CALL     	10 2 2
	74	[638]	TEST     	10 0 0
	75	[638]	JMP      	56	; to 132
	76	[639]	LEN      	10 5
	77	[639]	GETTABLE 	10 5 10
	78	[640]	GETGLOBAL	11 -5	; table
	79	[640]	GETTABLE 	11 11 -16	; "remove"
	80	[640]	MOVE     	12 5
	81	[640]	CALL     	11 2 1
	82	[641]	GETGLOBAL	11 -5	; table
	83	[641]	GETTABLE 	11 11 -16	; "remove"
	84	[641]	MOVE     	12 10
	85	[641]	LOADK    	13 -2	; 1
	86	[641]	CALL     	11 3 1
	87	[642]	SELF     	11 0 -14	; "is_local"
	88	[642]	MOVE     	13 5
	89	[642]	CALL     	11 3 2
	90	[642]	TEST     	11 0 0
	91	[642]	JMP      	1	; to 93
	92	[643]	MOVE     	7 5
	93	[645]	GETTABLE 	11 10 -12	; 2
	94	[645]	TEST     	11 0 0
	95	[645]	JMP      	29	; to 125
	96	[645]	GETTABLE 	11 10 -12	; 2
	97	[645]	EQ       	1 11 -17	; - ""
	98	[645]	JMP      	26	; to 125
	99	[646]	GETUPVAL 	11 3	; NameProxy
	100	[646]	LOADK    	12 -18	; "max"
	101	[646]	CALL     	11 2 2
	102	[647]	GETUPVAL 	12 6	; build
	103	[647]	GETTABLE 	12 12 -19	; "assign_one"
	104	[647]	MOVE     	13 11
	105	[647]	GETTABLE 	14 10 -12	; 2
	106	[647]	CALL     	12 3 2
	107	[647]	MOVE     	8 12
	108	[648]	NEWTABLE 	12 10 0
	109	[649]	LOADK    	13 -20	; "exp"
	110	[650]	MOVE     	14 11
	111	[651]	LOADK    	15 -21	; "<"
	112	[652]	LOADK    	16 -22	; 0
	113	[653]	LOADK    	17 -23	; "and"
	114	[653]	NEWTABLE 	18 2 0
	115	[655]	LOADK    	19 -24	; "length"
	116	[657]	MOVE     	20 7
	117	[657]	SETLIST  	18 2 1	; 1
	118	[658]	LOADK    	19 -25	; "+"
	119	[659]	MOVE     	20 11
	120	[660]	LOADK    	21 -26	; "or"
	121	[662]	MOVE     	22 11
	122	[662]	SETLIST  	12 10 1	; 1
	123	[662]	SETTABLE 	10 -12 12	; 2 -
	124	[662]	JMP      	5	; to 130
	125	[664]	NEWTABLE 	11 2 0
	126	[665]	LOADK    	12 -24	; "length"
	127	[667]	MOVE     	13 7
	128	[667]	SETLIST  	11 2 1	; 1
	129	[667]	SETTABLE 	10 -12 11	; 2 -
	130	[669]	MOVE     	9 10
	131	[669]	JMP      	8	; to 140
	132	[671]	NEWTABLE 	10 2 0
	133	[672]	LOADK    	11 -2	; 1
	134	[672]	NEWTABLE 	12 2 0
	135	[674]	LOADK    	13 -24	; "length"
	136	[676]	MOVE     	14 7
	137	[676]	SETLIST  	12 2 1	; 1
	138	[677]	SETLIST  	10 2 1	; 1
	139	[677]	MOVE     	9 10
	140	[679]	LOADNIL  	10 10
	141	[681]	NEWTABLE 	11 0 0
	142	[682]	LOADK    	12 -2	; 1
	143	[683]	GETTABLE 	13 1 -4	; "names"
	144	[684]	LOADK    	14 -2	; 1
	145	[684]	LEN      	15 13
	146	[684]	LOADK    	16 -2	; 1
	147	[684]	FORPREP  	14 16	; to 164
	148	[685]	GETTABLE 	18 13 17
	149	[686]	GETUPVAL 	19 8	; is_name_proxy
	150	[686]	MOVE     	20 18
	151	[686]	CALL     	19 2 2
	152	[686]	TEST     	19 0 0
	153	[686]	JMP      	2	; to 156
	154	[686]	TESTSET  	19 18 1
	155	[686]	JMP      	6	; to 162
	156	[686]	GETUPVAL 	19 9	; LocalName
	157	[686]	MOVE     	20 18
	158	[686]	CALL     	19 2 2
	159	[686]	TEST     	19 0 1
	160	[686]	JMP      	1	; to 162
	161	[686]	MOVE     	19 18
	162	[686]	SETTABLE 	11 12 19
	163	[687]	ADD      	12 12 -2	; - 1
	164	[684]	FORLOOP  	14 -17	; to 148
	165	[689]	MOVE     	10 11
	166	[691]	GETUPVAL 	11 6	; build
	167	[691]	GETTABLE 	11 11 -9	; "group"
	168	[691]	NEWTABLE 	12 2 0
	169	[692]	EQ       	1 7 5
	170	[692]	JMP      	7	; to 178
	171	[692]	GETUPVAL 	13 6	; build
	172	[692]	GETTABLE 	13 13 -19	; "assign_one"
	173	[692]	MOVE     	14 7
	174	[692]	MOVE     	15 5
	175	[692]	CALL     	13 3 2
	176	[692]	TEST     	13 0 1
	177	[692]	JMP      	1	; to 179
	178	[692]	GETUPVAL 	13 10	; NOOP
	179	[693]	TESTSET  	14 8 1
	180	[693]	JMP      	1	; to 182
	181	[693]	GETUPVAL 	14 10	; NOOP
	182	[694]	GETUPVAL 	15 6	; build
	183	[694]	GETTABLE 	15 15 -27	; "for"
	184	[694]	NEWTABLE 	16 0 3
	185	[695]	SETTABLE 	16 -28 6	; "name" -
	186	[696]	SETTABLE 	16 -29 9	; "bounds" -
	187	[697]	NEWTABLE 	17 1 0
	188	[697]	NEWTABLE 	18 3 0
	189	[699]	LOADK    	19 -30	; "assign"
	190	[700]	MOVE     	20 10
	191	[700]	NEWTABLE 	21 0 0
	192	[702]	GETUPVAL 	22 3	; NameProxy
	193	[702]	GETTABLE 	22 22 -13	; "index"
	194	[702]	MOVE     	23 7
	195	[702]	MOVE     	24 6
	196	[702]	CALL     	22 3 0
	197	[703]	SETLIST  	21 0 1	; 1
	198	[704]	SETLIST  	18 3 1	; 1
	199	[705]	GETUPVAL 	19 6	; build
	200	[705]	GETTABLE 	19 19 -9	; "group"
	201	[705]	GETTABLE 	20 1 -10	; "body"
	202	[705]	CALL     	19 2 0
	203	[706]	SETLIST  	17 0 1	; 1
	204	[706]	SETTABLE 	16 -10 17	; "body" -
	205	[694]	CALL     	15 2 0
	206	[708]	SETLIST  	12 0 1	; 1
	207	[691]	TAILCALL 	11 2 0
	208	[708]	RETURN   	11 0
	209	[710]	GETUPVAL 	5 11	; with_continue_listener
	210	[710]	GETTABLE 	6 1 -10	; "body"
	211	[710]	CALL     	5 2 2
	212	[710]	SETTABLE 	1 -10 5	; "body" -
	213	[711]	RETURN   	0 1

function <./moonscript/transform/statement.lua:712,715> (8 instructions, 32 bytes at 0x7fa2d5c0e760)
2 params, 4 slots, 2 upvalues, 2 locals, 1 constant, 0 functions
	1	[713]	GETUPVAL 	2 0	; smart_node
	2	[713]	MOVE     	3 1
	3	[713]	CALL     	2 2 1
	4	[714]	GETUPVAL 	2 1	; with_continue_listener
	5	[714]	GETTABLE 	3 1 -1	; "body"
	6	[714]	CALL     	2 2 2
	7	[714]	SETTABLE 	1 -1 2	; "body" -
	8	[715]	RETURN   	0 1

function <./moonscript/transform/statement.lua:716,719> (8 instructions, 32 bytes at 0x7fa2d5c0ed20)
2 params, 4 slots, 2 upvalues, 2 locals, 1 constant, 0 functions
	1	[717]	GETUPVAL 	2 0	; smart_node
	2	[717]	MOVE     	3 1
	3	[717]	CALL     	2 2 1
	4	[718]	GETUPVAL 	2 1	; with_continue_listener
	5	[718]	GETTABLE 	3 1 -1	; "body"
	6	[718]	CALL     	2 2 2
	7	[718]	SETTABLE 	1 -1 2	; "body" -
	8	[719]	RETURN   	0 1

function <./moonscript/transform/statement.lua:720,778> (57 instructions, 228 bytes at 0x7fa2d5c0f080)
3 params, 18 slots, 6 upvalues, 15 locals, 7 constants, 1 function
	1	[721]	GETUPVAL 	3 0	; unpack
	2	[721]	MOVE     	4 1
	3	[721]	LOADK    	5 -1	; 2
	4	[721]	CALL     	3 3 3
	5	[722]	GETUPVAL 	5 1	; NameProxy
	6	[722]	LOADK    	6 -2	; "exp"
	7	[722]	CALL     	5 2 2
	8	[723]	LOADNIL  	6 6
	9	[758]	CLOSURE  	6 0	; 0x7fa2d5c0f500
	10	[758]	GETUPVAL 	0 0	; unpack
	11	[758]	GETUPVAL 	0 2	; insert
	12	[758]	GETUPVAL 	0 3	; value_is_singular
	13	[758]	MOVE     	0 5
	14	[758]	MOVE     	0 2
	15	[758]	GETUPVAL 	0 4	; transform_last_stm
	16	[759]	LOADBOOL 	7 1 0
	17	[760]	NEWTABLE 	8 1 0
	18	[762]	LOADK    	9 -3	; "if"
	19	[762]	SETLIST  	8 1 1	; 1
	20	[763]	LOADK    	9 -4	; 1
	21	[763]	LEN      	10 4
	22	[763]	LOADK    	11 -4	; 1
	23	[763]	FORPREP  	9 20	; to 44
	24	[764]	GETTABLE 	13 4 12
	25	[765]	MOVE     	14 6
	26	[765]	MOVE     	15 13
	27	[765]	CALL     	14 2 2
	28	[766]	TEST     	7 0 0
	29	[766]	JMP      	10	; to 40
	30	[767]	LOADBOOL 	7 0 0
	31	[768]	GETUPVAL 	15 2	; insert
	32	[768]	MOVE     	16 8
	33	[768]	GETTABLE 	17 14 -1	; 2
	34	[768]	CALL     	15 3 1
	35	[769]	GETUPVAL 	15 2	; insert
	36	[769]	MOVE     	16 8
	37	[769]	GETTABLE 	17 14 -5	; 3
	38	[769]	CALL     	15 3 1
	39	[769]	JMP      	4	; to 44
	40	[771]	GETUPVAL 	15 2	; insert
	41	[771]	MOVE     	16 8
	42	[771]	MOVE     	17 14
	43	[771]	CALL     	15 3 1
	44	[763]	FORLOOP  	9 -21	; to 24
	45	[774]	GETUPVAL 	9 5	; build
	46	[774]	GETTABLE 	9 9 -6	; "group"
	47	[774]	NEWTABLE 	10 2 0
	48	[775]	GETUPVAL 	11 5	; build
	49	[775]	GETTABLE 	11 11 -7	; "assign_one"
	50	[775]	MOVE     	12 5
	51	[775]	MOVE     	13 3
	52	[775]	CALL     	11 3 2
	53	[777]	MOVE     	12 8
	54	[777]	SETLIST  	10 2 1	; 1
	55	[774]	TAILCALL 	9 2 0
	56	[777]	RETURN   	9 0
	57	[778]	RETURN   	0 1

function <./moonscript/transform/statement.lua:724,758> (72 instructions, 288 bytes at 0x7fa2d5c0f500)
1 param, 18 slots, 6 upvalues, 11 locals, 9 constants, 0 functions
	1	[725]	GETUPVAL 	1 0	; unpack
	2	[725]	MOVE     	2 0
	3	[725]	CALL     	1 2 4
	4	[726]	NEWTABLE 	4 0 0
	5	[727]	GETUPVAL 	5 1	; insert
	6	[727]	MOVE     	6 4
	7	[727]	EQ       	0 1 -1	; - "case"
	8	[727]	JMP      	3	; to 12
	9	[727]	LOADK    	7 -2	; "elseif"
	10	[727]	TEST     	7 0 1
	11	[727]	JMP      	1	; to 13
	12	[727]	LOADK    	7 -3	; "else"
	13	[727]	CALL     	5 3 1
	14	[728]	EQ       	1 1 -3	; - "else"
	15	[728]	JMP      	42	; to 58
	16	[729]	NEWTABLE 	5 0 0
	17	[730]	GETGLOBAL	6 -4	; ipairs
	18	[730]	MOVE     	7 2
	19	[730]	CALL     	6 2 4
	20	[730]	JMP      	30	; to 51
	21	[731]	EQ       	0 9 -5	; - 1
	22	[731]	JMP      	5	; to 28
	23	[732]	GETUPVAL 	11 1	; insert
	24	[732]	MOVE     	12 5
	25	[732]	LOADK    	13 -6	; "exp"
	26	[732]	CALL     	11 3 1
	27	[732]	JMP      	4	; to 32
	28	[734]	GETUPVAL 	11 1	; insert
	29	[734]	MOVE     	12 5
	30	[734]	LOADK    	13 -7	; "or"
	31	[734]	CALL     	11 3 1
	32	[736]	GETUPVAL 	11 2	; value_is_singular
	33	[736]	MOVE     	12 10
	34	[736]	CALL     	11 2 2
	35	[736]	TEST     	11 0 1
	36	[736]	JMP      	5	; to 42
	37	[737]	NEWTABLE 	11 2 0
	38	[738]	LOADK    	12 -8	; "parens"
	39	[740]	MOVE     	13 10
	40	[740]	SETLIST  	11 2 1	; 1
	41	[740]	MOVE     	10 11
	42	[742]	GETUPVAL 	11 1	; insert
	43	[742]	MOVE     	12 5
	44	[742]	NEWTABLE 	13 4 0
	45	[743]	LOADK    	14 -6	; "exp"
	46	[744]	MOVE     	15 10
	47	[745]	LOADK    	16 -9	; "=="
	48	[747]	GETUPVAL 	17 3	; exp_name
	49	[747]	SETLIST  	13 4 1	; 1
	50	[742]	CALL     	11 3 1
	51	[730]	TFORLOOP 	6 2
	52	[747]	JMP      	-32	; to 21
	53	[749]	GETUPVAL 	6 1	; insert
	54	[749]	MOVE     	7 4
	55	[749]	MOVE     	8 5
	56	[749]	CALL     	6 3 1
	57	[749]	JMP      	1	; to 59
	58	[751]	MOVE     	3 2
	59	[753]	GETUPVAL 	5 4	; ret
	60	[753]	TEST     	5 0 0
	61	[753]	JMP      	5	; to 67
	62	[754]	GETUPVAL 	5 5	; transform_last_stm
	63	[754]	MOVE     	6 3
	64	[754]	GETUPVAL 	7 4	; ret
	65	[754]	CALL     	5 3 2
	66	[754]	MOVE     	3 5
	67	[756]	GETUPVAL 	5 1	; insert
	68	[756]	MOVE     	6 4
	69	[756]	MOVE     	7 3
	70	[756]	CALL     	5 3 1
	71	[757]	RETURN   	4 2
	72	[758]	RETURN   	0 1
-----------------------

main <./moonscript/transform/accumulator.lua:0,0> (74 instructions, 296 bytes at 0x7fb4144068d0)
0+ params, 15 slots, 0 upvalues, 12 locals, 29 constants, 7 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "moonscript.types"
	3	[1]	CALL     	0 2 2
	4	[2]	LOADNIL  	1 3
	5	[3]	GETTABLE 	4 0 -3	; "build"
	6	[3]	GETTABLE 	5 0 -4	; "ntype"
	7	[3]	GETTABLE 	3 0 -5	; "NOOP"
	8	[3]	MOVE     	2 5
	9	[3]	MOVE     	1 4
	10	[4]	LOADNIL  	4 4
	11	[5]	GETGLOBAL	5 -1	; require
	12	[5]	LOADK    	6 -6	; "moonscript.transform.names"
	13	[5]	CALL     	5 2 2
	14	[5]	GETTABLE 	4 5 -7	; "NameProxy"
	15	[6]	LOADNIL  	5 5
	16	[7]	GETGLOBAL	6 -8	; table
	17	[7]	GETTABLE 	5 6 -9	; "insert"
	18	[8]	LOADNIL  	6 6
	19	[18]	CLOSURE  	6 0	; 0x7fb4144070f0
	20	[18]	MOVE     	0 2
	21	[18]	MOVE     	0 6
	22	[19]	LOADNIL  	7 7
	23	[20]	GETGLOBAL	8 -1	; require
	24	[20]	LOADK    	9 -10	; "moonscript.transform.statements"
	25	[20]	CALL     	8 2 2
	26	[20]	GETTABLE 	7 8 -11	; "transform_last_stm"
	27	[21]	LOADNIL  	8 9
	28	[24]	NEWTABLE 	10 0 4
	29	[25]	NEWTABLE 	11 0 3
	30	[26]	SETTABLE 	11 -13 -14	; "for" 4
	31	[27]	SETTABLE 	11 -15 -16	; "while" 3
	32	[28]	SETTABLE 	11 -17 -14	; "foreach" 4
	33	[29]	SETTABLE 	10 -12 11	; "body_idx" -
	34	[34]	CLOSURE  	11 1	; 0x7fb414407070
	35	[34]	MOVE     	0 2
	36	[34]	SETTABLE 	10 -18 11	; "convert" -
	37	[45]	CLOSURE  	11 2	; 0x7fb414407840
	38	[45]	MOVE     	0 1
	39	[45]	MOVE     	0 3
	40	[45]	SETTABLE 	10 -19 11	; "wrap" -
	41	[81]	CLOSURE  	11 3	; 0x7fb414408160
	42	[81]	MOVE     	0 6
	43	[81]	MOVE     	0 0
	44	[81]	MOVE     	0 7
	45	[81]	MOVE     	0 1
	46	[81]	MOVE     	0 4
	47	[81]	MOVE     	0 5
	48	[81]	SETTABLE 	10 -20 11	; "mutate_body" -
	49	[83]	SETTABLE 	10 -21 10	; "__index" -
	50	[84]	GETGLOBAL	11 -22	; setmetatable
	51	[84]	NEWTABLE 	12 0 3
	52	[89]	CLOSURE  	13 4	; 0x7fb414408460
	53	[89]	MOVE     	0 4
	54	[89]	SETTABLE 	12 -23 13	; "__init" -
	55	[90]	SETTABLE 	12 -24 10	; "__base" -
	56	[91]	SETTABLE 	12 -25 -26	; "__name" "Accumulator"
	57	[92]	NEWTABLE 	13 0 2
	58	[93]	SETTABLE 	13 -21 10	; "__index" -
	59	[98]	CLOSURE  	14 5	; 0x7fb414408c20
	60	[98]	MOVE     	0 10
	61	[98]	SETTABLE 	13 -27 14	; "__call" -
	62	[84]	CALL     	11 3 2
	63	[99]	MOVE     	9 11
	64	[100]	SETTABLE 	10 -28 9	; "__class" -
	65	[101]	MOVE     	8 9
	66	[101]	CLOSE    	9
	67	[103]	LOADNIL  	9 9
	68	[106]	CLOSURE  	9 6	; 0x7fb4144067c0
	69	[106]	MOVE     	0 8
	70	[107]	NEWTABLE 	10 0 2
	71	[108]	SETTABLE 	10 -26 8	; "Accumulator" -
	72	[109]	SETTABLE 	10 -29 9	; "default_accumulator" -
	73	[110]	RETURN   	10 2
	74	[110]	RETURN   	0 1

function <./moonscript/transform/accumulator.lua:9,18> (18 instructions, 72 bytes at 0x7fb4144070f0)
1 param, 3 slots, 2 upvalues, 1 local, 3 constants, 0 functions
	1	[10]	LEN      	1 0
	2	[10]	EQ       	1 1 -1	; - 1
	3	[10]	JMP      	2	; to 6
	4	[11]	LOADBOOL 	1 0 0
	5	[11]	RETURN   	1 2
	6	[13]	GETUPVAL 	1 0	; ntype
	7	[13]	MOVE     	2 0
	8	[13]	CALL     	1 2 2
	9	[13]	EQ       	0 -2 1	; "group" -
	10	[13]	JMP      	5	; to 16
	11	[14]	GETUPVAL 	1 1	; is_singular
	12	[14]	GETTABLE 	2 0 -3	; 2
	13	[14]	TAILCALL 	1 2 0
	14	[14]	RETURN   	1 0
	15	[14]	JMP      	2	; to 18
	16	[16]	GETTABLE 	1 0 -1	; 1
	17	[16]	RETURN   	1 2
	18	[18]	RETURN   	0 1

function <./moonscript/transform/accumulator.lua:30,34> (14 instructions, 56 bytes at 0x7fb414407070)
2 params, 6 slots, 1 upvalue, 3 locals, 3 constants, 0 functions
	1	[31]	GETTABLE 	2 0 -1	; "body_idx"
	2	[31]	GETUPVAL 	3 0	; ntype
	3	[31]	MOVE     	4 1
	4	[31]	CALL     	3 2 2
	5	[31]	GETTABLE 	2 2 3
	6	[32]	SELF     	3 0 -2	; "mutate_body"
	7	[32]	GETTABLE 	5 1 2
	8	[32]	CALL     	3 3 2
	9	[32]	SETTABLE 	1 2 3
	10	[33]	SELF     	3 0 -3	; "wrap"
	11	[33]	MOVE     	5 1
	12	[33]	TAILCALL 	3 3 0
	13	[33]	RETURN   	3 0
	14	[34]	RETURN   	0 1

function <./moonscript/transform/accumulator.lua:35,45> (29 instructions, 116 bytes at 0x7fb414407840)
3 params, 9 slots, 2 upvalues, 3 locals, 7 constants, 0 functions
	1	[36]	EQ       	0 2 -1	; - nil
	2	[36]	JMP      	1	; to 4
	3	[37]	LOADK    	2 -2	; "block_exp"
	4	[39]	GETUPVAL 	3 0	; build
	5	[39]	GETTABLE 	3 3 2
	6	[39]	NEWTABLE 	4 4 0
	7	[40]	GETUPVAL 	5 0	; build
	8	[40]	GETTABLE 	5 5 -3	; "assign_one"
	9	[40]	GETTABLE 	6 0 -4	; "accum_name"
	10	[40]	GETUPVAL 	7 0	; build
	11	[40]	GETTABLE 	7 7 -5	; "table"
	12	[40]	CALL     	7 1 0
	13	[40]	CALL     	5 0 2
	14	[41]	GETUPVAL 	6 0	; build
	15	[41]	GETTABLE 	6 6 -3	; "assign_one"
	16	[41]	GETTABLE 	7 0 -6	; "len_name"
	17	[41]	LOADK    	8 -7	; 1
	18	[41]	CALL     	6 3 2
	19	[42]	MOVE     	7 1
	20	[43]	EQ       	0 2 -2	; - "block_exp"
	21	[43]	JMP      	3	; to 25
	22	[43]	GETTABLE 	8 0 -4	; "accum_name"
	23	[43]	TEST     	8 0 1
	24	[43]	JMP      	1	; to 26
	25	[43]	GETUPVAL 	8 1	; NOOP
	26	[44]	SETLIST  	4 4 1	; 1
	27	[39]	TAILCALL 	3 2 0
	28	[44]	RETURN   	3 0
	29	[45]	RETURN   	0 1

function <./moonscript/transform/accumulator.lua:46,81> (51 instructions, 204 bytes at 0x7fb414408160)
2 params, 11 slots, 6 upvalues, 5 locals, 10 constants, 1 function
	1	[47]	GETUPVAL 	2 0	; is_singular
	2	[47]	MOVE     	3 1
	3	[47]	CALL     	2 2 2
	4	[48]	LOADNIL  	3 3
	5	[49]	TEST     	2 0 0
	6	[49]	JMP      	10	; to 17
	7	[49]	GETUPVAL 	4 1	; types
	8	[49]	GETTABLE 	4 4 -1	; "is_value"
	9	[49]	MOVE     	5 2
	10	[49]	CALL     	4 2 2
	11	[49]	TEST     	4 0 0
	12	[49]	JMP      	4	; to 17
	13	[50]	NEWTABLE 	4 0 0
	14	[50]	MOVE     	1 4
	15	[51]	MOVE     	3 2
	16	[51]	JMP      	9	; to 26
	17	[53]	GETUPVAL 	4 2	; transform_last_stm
	18	[53]	MOVE     	5 1
	19	[67]	CLOSURE  	6 0	; 0x7fb414407e60
	20	[67]	GETUPVAL 	0 1	; types
	21	[67]	GETUPVAL 	0 3	; build
	22	[67]	MOVE     	0 0
	23	[53]	CALL     	4 3 2
	24	[67]	MOVE     	1 4
	25	[68]	GETTABLE 	3 0 -2	; "value_name"
	26	[70]	NEWTABLE 	4 2 0
	27	[71]	GETUPVAL 	5 3	; build
	28	[71]	GETTABLE 	5 5 -3	; "assign_one"
	29	[71]	GETUPVAL 	6 4	; NameProxy
	30	[71]	GETTABLE 	6 6 -4	; "index"
	31	[71]	GETTABLE 	7 0 -5	; "accum_name"
	32	[71]	GETTABLE 	8 0 -6	; "len_name"
	33	[71]	CALL     	6 3 2
	34	[71]	MOVE     	7 3
	35	[71]	CALL     	5 3 2
	36	[71]	NEWTABLE 	6 4 0
	37	[73]	LOADK    	7 -7	; "update"
	38	[74]	GETTABLE 	8 0 -6	; "len_name"
	39	[75]	LOADK    	9 -8	; "+="
	40	[77]	LOADK    	10 -9	; 1
	41	[77]	SETLIST  	6 4 1	; 1
	42	[78]	SETLIST  	4 2 1	; 1
	43	[79]	GETUPVAL 	5 5	; insert
	44	[79]	MOVE     	6 1
	45	[79]	GETUPVAL 	7 3	; build
	46	[79]	GETTABLE 	7 7 -10	; "group"
	47	[79]	MOVE     	8 4
	48	[79]	CALL     	7 2 0
	49	[79]	CALL     	5 0 1
	50	[80]	RETURN   	1 2
	51	[81]	RETURN   	0 1

function <./moonscript/transform/accumulator.lua:53,67> (29 instructions, 116 bytes at 0x7fb414407e60)
1 param, 7 slots, 3 upvalues, 1 local, 5 constants, 0 functions
	1	[54]	GETUPVAL 	1 0	; types
	2	[54]	GETTABLE 	1 1 -1	; "is_value"
	3	[54]	MOVE     	2 0
	4	[54]	CALL     	1 2 2
	5	[54]	TEST     	1 0 0
	6	[54]	JMP      	8	; to 15
	7	[55]	GETUPVAL 	1 1	; build
	8	[55]	GETTABLE 	1 1 -2	; "assign_one"
	9	[55]	GETUPVAL 	2 2	; self
	10	[55]	GETTABLE 	2 2 -3	; "value_name"
	11	[55]	MOVE     	3 0
	12	[55]	TAILCALL 	1 3 0
	13	[55]	RETURN   	1 0
	14	[55]	JMP      	14	; to 29
	15	[57]	GETUPVAL 	1 1	; build
	16	[57]	GETTABLE 	1 1 -4	; "group"
	17	[57]	NEWTABLE 	2 2 0
	18	[57]	NEWTABLE 	3 2 0
	19	[59]	LOADK    	4 -5	; "declare"
	20	[59]	NEWTABLE 	5 1 0
	21	[61]	GETUPVAL 	6 2	; self
	22	[62]	GETTABLE 	6 6 -3	; "value_name"
	23	[62]	SETLIST  	5 1 1	; 1
	24	[63]	SETLIST  	3 2 1	; 1
	25	[65]	MOVE     	4 0
	26	[65]	SETLIST  	2 2 1	; 1
	27	[57]	TAILCALL 	1 2 0
	28	[65]	RETURN   	1 0
	29	[67]	RETURN   	0 1

function <./moonscript/transform/accumulator.lua:85,89> (13 instructions, 52 bytes at 0x7fb414408460)
2 params, 4 slots, 1 upvalue, 2 locals, 6 constants, 0 functions
	1	[86]	GETUPVAL 	2 0	; NameProxy
	2	[86]	LOADK    	3 -2	; "accum"
	3	[86]	CALL     	2 2 2
	4	[86]	SETTABLE 	0 -1 2	; "accum_name" -
	5	[87]	GETUPVAL 	2 0	; NameProxy
	6	[87]	LOADK    	3 -4	; "value"
	7	[87]	CALL     	2 2 2
	8	[87]	SETTABLE 	0 -3 2	; "value_name" -
	9	[88]	GETUPVAL 	2 0	; NameProxy
	10	[88]	LOADK    	3 -6	; "len"
	11	[88]	CALL     	2 2 2
	12	[88]	SETTABLE 	0 -5 2	; "len_name" -
	13	[89]	RETURN   	0 1

function <./moonscript/transform/accumulator.lua:94,98> (10 instructions, 40 bytes at 0x7fb414408c20)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[95]	GETGLOBAL	2 -1	; setmetatable
	2	[95]	NEWTABLE 	3 0 0
	3	[95]	GETUPVAL 	4 0	; _base_0
	4	[95]	CALL     	2 3 2
	5	[96]	GETTABLE 	3 0 -2	; "__init"
	6	[96]	MOVE     	4 2
	7	[96]	VARARG   	5 0
	8	[96]	CALL     	3 0 1
	9	[97]	RETURN   	2 2
	10	[98]	RETURN   	0 1

function <./moonscript/transform/accumulator.lua:104,106> (7 instructions, 28 bytes at 0x7fb4144067c0)
2 params, 5 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[105]	GETUPVAL 	2 0	; Accumulator
	2	[105]	CALL     	2 1 2
	3	[105]	SELF     	2 2 -1	; "convert"
	4	[105]	MOVE     	4 1
	5	[105]	TAILCALL 	2 3 0
	6	[105]	RETURN   	2 0
	7	[106]	RETURN   	0 1
-----------------------

main <./moonscript/transform/statements.lua:0,0> (64 instructions, 256 bytes at 0x7f8b134068d0)
0+ params, 13 slots, 0 upvalues, 13 locals, 21 constants, 7 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "moonscript.types"
	3	[1]	CALL     	0 2 2
	4	[2]	LOADNIL  	1 4
	5	[3]	GETTABLE 	5 0 -3	; "ntype"
	6	[3]	GETTABLE 	6 0 -4	; "mtype"
	7	[3]	GETTABLE 	7 0 -5	; "is_value"
	8	[3]	GETTABLE 	4 0 -6	; "NOOP"
	9	[3]	MOVE     	3 7
	10	[3]	MOVE     	2 6
	11	[3]	MOVE     	1 5
	12	[4]	LOADNIL  	5 5
	13	[5]	GETGLOBAL	6 -1	; require
	14	[5]	LOADK    	7 -7	; "moonscript.transform.comprehension"
	15	[5]	CALL     	6 2 2
	16	[5]	GETTABLE 	5 6 -8	; "comprehension_has_value"
	17	[6]	LOADNIL  	6 7
	18	[9]	NEWTABLE 	8 0 1
	19	[12]	CLOSURE  	9 0	; 0x7f8b13406ab0
	20	[12]	SETTABLE 	8 -9 9	; "call" -
	21	[14]	SETTABLE 	8 -10 8	; "__index" -
	22	[15]	GETGLOBAL	9 -11	; setmetatable
	23	[15]	NEWTABLE 	10 0 3
	24	[19]	CLOSURE  	11 1	; 0x7f8b13407330
	25	[19]	SETTABLE 	10 -12 11	; "__init" -
	26	[20]	SETTABLE 	10 -13 8	; "__base" -
	27	[21]	SETTABLE 	10 -14 -15	; "__name" "Run"
	28	[22]	NEWTABLE 	11 0 2
	29	[23]	SETTABLE 	11 -10 8	; "__index" -
	30	[28]	CLOSURE  	12 2	; 0x7f8b13407520
	31	[28]	MOVE     	0 8
	32	[28]	SETTABLE 	11 -16 12	; "__call" -
	33	[15]	CALL     	9 3 2
	34	[29]	MOVE     	7 9
	35	[30]	SETTABLE 	8 -17 7	; "__class" -
	36	[31]	MOVE     	6 7
	37	[31]	CLOSE    	7
	38	[33]	LOADNIL  	7 7
	39	[47]	CLOSURE  	7 3	; 0x7f8b13407050
	40	[47]	MOVE     	0 2
	41	[47]	MOVE     	0 6
	42	[47]	MOVE     	0 1
	43	[47]	MOVE     	0 7
	44	[48]	LOADNIL  	8 8
	45	[71]	CLOSURE  	8 4	; 0x7f8b134071d0
	46	[71]	MOVE     	0 7
	47	[72]	LOADNIL  	9 9
	48	[76]	CLOSURE  	9 5	; 0x7f8b134087e0
	49	[76]	MOVE     	0 1
	50	[77]	LOADNIL  	10 10
	51	[108]	CLOSURE  	10 6	; 0x7f8b13408b90
	52	[108]	MOVE     	0 1
	53	[108]	MOVE     	0 0
	54	[108]	MOVE     	0 3
	55	[108]	MOVE     	0 4
	56	[108]	MOVE     	0 5
	57	[109]	NEWTABLE 	11 0 5
	58	[110]	SETTABLE 	11 -15 6	; "Run" -
	59	[111]	SETTABLE 	11 -18 7	; "last_stm" -
	60	[112]	SETTABLE 	11 -19 8	; "transform_last_stm" -
	61	[113]	SETTABLE 	11 -20 9	; "chain_is_stub" -
	62	[114]	SETTABLE 	11 -21 10	; "implicitly_return" -
	63	[115]	RETURN   	11 2
	64	[115]	RETURN   	0 1

function <./moonscript/transform/statements.lua:10,12> (5 instructions, 20 bytes at 0x7f8b13406ab0)
2 params, 4 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[11]	GETTABLE 	2 0 -1	; "fn"
	2	[11]	MOVE     	3 1
	3	[11]	TAILCALL 	2 2 0
	4	[11]	RETURN   	2 0
	5	[12]	RETURN   	0 1

function <./moonscript/transform/statements.lua:16,19> (3 instructions, 12 bytes at 0x7f8b13407330)
2 params, 2 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[17]	SETTABLE 	0 -1 1	; "fn" -
	2	[18]	SETTABLE 	0 -2 -3	; 1 "run"
	3	[19]	RETURN   	0 1

function <./moonscript/transform/statements.lua:24,28> (10 instructions, 40 bytes at 0x7f8b13407520)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[25]	GETGLOBAL	2 -1	; setmetatable
	2	[25]	NEWTABLE 	3 0 0
	3	[25]	GETUPVAL 	4 0	; _base_0
	4	[25]	CALL     	2 3 2
	5	[26]	GETTABLE 	3 0 -2	; "__init"
	6	[26]	MOVE     	4 2
	7	[26]	VARARG   	5 0
	8	[26]	CALL     	3 0 1
	9	[27]	RETURN   	2 2
	10	[28]	RETURN   	0 1

function <./moonscript/transform/statements.lua:34,47> (31 instructions, 124 bytes at 0x7f8b13407050)
1 param, 9 slots, 4 upvalues, 7 locals, 5 constants, 0 functions
	1	[35]	LOADK    	1 -1	; 0
	2	[36]	LEN      	2 0
	3	[36]	LOADK    	3 -2	; 1
	4	[36]	LOADK    	4 -3	; -1
	5	[36]	FORPREP  	2 20	; to 26
	6	[37]	GETTABLE 	6 0 5
	7	[38]	TEST     	6 0 0
	8	[38]	JMP      	17	; to 26
	9	[38]	GETUPVAL 	7 0	; mtype
	10	[38]	MOVE     	8 6
	11	[38]	CALL     	7 2 2
	12	[38]	GETUPVAL 	8 1	; Run
	13	[38]	EQ       	1 7 8
	14	[38]	JMP      	11	; to 26
	15	[39]	GETUPVAL 	7 2	; ntype
	16	[39]	MOVE     	8 6
	17	[39]	CALL     	7 2 2
	18	[39]	EQ       	0 7 -4	; - "group"
	19	[39]	JMP      	4	; to 24
	20	[40]	GETUPVAL 	7 3	; last_stm
	21	[40]	GETTABLE 	8 6 -5	; 2
	22	[40]	TAILCALL 	7 2 0
	23	[40]	RETURN   	7 0
	24	[42]	MOVE     	1 5
	25	[43]	JMP      	1	; to 27
	26	[36]	FORLOOP  	2 -21	; to 6
	27	[46]	GETTABLE 	2 0 1
	28	[46]	MOVE     	3 1
	29	[46]	MOVE     	4 0
	30	[46]	RETURN   	2 4
	31	[47]	RETURN   	0 1

function <./moonscript/transform/statements.lua:49,71> (15 instructions, 60 bytes at 0x7f8b134071d0)
2 params, 7 slots, 1 upvalue, 5 locals, 2 constants, 1 function
	1	[50]	GETUPVAL 	2 0	; last_stm
	2	[50]	MOVE     	3 0
	3	[50]	CALL     	2 2 4
	4	[51]	EQ       	1 4 0
	5	[51]	JMP      	3	; to 9
	6	[52]	GETGLOBAL	5 -1	; error
	7	[52]	LOADK    	6 -2	; "cannot transform last node in group"
	8	[52]	CALL     	5 2 1
	9	[70]	CLOSURE  	5 0	; 0x7f8b13408090
	10	[70]	MOVE     	0 0
	11	[70]	MOVE     	0 3
	12	[70]	MOVE     	0 1
	13	[70]	TAILCALL 	5 1 0
	14	[70]	RETURN   	5 0
	15	[71]	RETURN   	0 1

function <./moonscript/transform/statements.lua:54,70> (22 instructions, 88 bytes at 0x7f8b13408090)
0 params, 11 slots, 3 upvalues, 7 locals, 3 constants, 0 functions
	1	[55]	NEWTABLE 	0 0 0
	2	[56]	LOADK    	1 -1	; 1
	3	[57]	GETGLOBAL	2 -2	; ipairs
	4	[57]	GETUPVAL 	3 0	; stms
	5	[57]	CALL     	2 2 4
	6	[57]	JMP      	12	; to 19
	7	[58]	GETUPVAL 	7 1	; last_idx
	8	[58]	EQ       	0 5 7
	9	[58]	JMP      	7	; to 17
	10	[59]	NEWTABLE 	7 3 0
	11	[60]	LOADK    	8 -3	; "transform"
	12	[61]	MOVE     	9 6
	13	[63]	GETUPVAL 	10 2	; fn
	14	[63]	SETLIST  	7 3 1	; 1
	15	[63]	SETTABLE 	0 1 7
	16	[63]	JMP      	1	; to 18
	17	[65]	SETTABLE 	0 1 6
	18	[67]	ADD      	1 1 -1	; - 1
	19	[57]	TFORLOOP 	2 2
	20	[67]	JMP      	-14	; to 7
	21	[69]	RETURN   	0 2
	22	[70]	RETURN   	0 1

function <./moonscript/transform/statements.lua:73,76> (13 instructions, 52 bytes at 0x7f8b134087e0)
1 param, 4 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[74]	LEN      	1 0
	2	[74]	GETTABLE 	1 0 1
	3	[75]	TESTSET  	2 1 0
	4	[75]	JMP      	7	; to 12
	5	[75]	GETUPVAL 	2 0	; ntype
	6	[75]	MOVE     	3 1
	7	[75]	CALL     	2 2 2
	8	[75]	EQ       	1 2 -1	; - "colon"
	9	[75]	JMP      	1	; to 11
	10	[75]	LOADBOOL 	2 0 1
	11	[75]	LOADBOOL 	2 1 0
	12	[75]	RETURN   	2 2
	13	[76]	RETURN   	0 1

function <./moonscript/transform/statements.lua:78,108> (13 instructions, 52 bytes at 0x7f8b13408b90)
1 param, 3 slots, 5 upvalues, 3 locals, 0 constants, 1 function
	1	[79]	LOADBOOL 	1 1 0
	2	[80]	LOADNIL  	2 2
	3	[106]	CLOSURE  	2 0	; 0x7f8b13408eb0
	4	[106]	GETUPVAL 	0 0	; ntype
	5	[106]	MOVE     	0 0
	6	[106]	GETUPVAL 	0 1	; types
	7	[106]	MOVE     	0 1
	8	[106]	MOVE     	0 2
	9	[106]	GETUPVAL 	0 2	; is_value
	10	[106]	GETUPVAL 	0 3	; NOOP
	11	[106]	GETUPVAL 	0 4	; comprehension_has_value
	12	[107]	RETURN   	2 2
	13	[108]	RETURN   	0 1

function <./moonscript/transform/statements.lua:81,106> (68 instructions, 272 bytes at 0x7f8b13408eb0)
1 param, 5 slots, 8 upvalues, 2 locals, 9 constants, 0 functions
	1	[82]	GETUPVAL 	1 0	; ntype
	2	[82]	MOVE     	2 0
	3	[82]	CALL     	1 2 2
	4	[83]	EQ       	0 1 -1	; - "decorated"
	5	[83]	JMP      	10	; to 16
	6	[84]	GETUPVAL 	2 1	; scope
	7	[84]	GETTABLE 	2 2 -2	; "transform"
	8	[84]	GETTABLE 	2 2 -3	; "statement"
	9	[84]	MOVE     	3 0
	10	[84]	CALL     	2 2 2
	11	[84]	MOVE     	0 2
	12	[85]	GETUPVAL 	2 0	; ntype
	13	[85]	MOVE     	3 0
	14	[85]	CALL     	2 2 2
	15	[85]	MOVE     	1 2
	16	[87]	GETUPVAL 	2 2	; types
	17	[87]	GETTABLE 	2 2 -4	; "cascading"
	18	[87]	GETTABLE 	2 2 1
	19	[87]	TEST     	2 0 0
	20	[87]	JMP      	10	; to 31
	21	[88]	LOADBOOL 	2 0 0
	22	[88]	SETUPVAL 	2 3	; is_top
	23	[89]	GETUPVAL 	2 1	; scope
	24	[89]	GETTABLE 	2 2 -2	; "transform"
	25	[89]	GETTABLE 	2 2 -3	; "statement"
	26	[89]	MOVE     	3 0
	27	[89]	GETUPVAL 	4 4	; fn
	28	[89]	TAILCALL 	2 3 0
	29	[89]	RETURN   	2 0
	30	[89]	JMP      	37	; to 68
	31	[90]	GETUPVAL 	2 2	; types
	32	[90]	GETTABLE 	2 2 -5	; "manual_return"
	33	[90]	GETTABLE 	2 2 1
	34	[90]	TEST     	2 0 1
	35	[90]	JMP      	5	; to 41
	36	[90]	GETUPVAL 	2 5	; is_value
	37	[90]	MOVE     	3 0
	38	[90]	CALL     	2 2 2
	39	[90]	TEST     	2 0 1
	40	[90]	JMP      	13	; to 54
	41	[91]	GETUPVAL 	2 3	; is_top
	42	[91]	TEST     	2 0 0
	43	[91]	JMP      	8	; to 52
	44	[91]	EQ       	0 1 -6	; - "return"
	45	[91]	JMP      	6	; to 52
	46	[91]	GETTABLE 	2 0 -7	; 2
	47	[91]	EQ       	0 2 -8	; - ""
	48	[91]	JMP      	3	; to 52
	49	[92]	GETUPVAL 	2 6	; NOOP
	50	[92]	RETURN   	2 2
	51	[92]	JMP      	16	; to 68
	52	[94]	RETURN   	0 2
	53	[95]	JMP      	14	; to 68
	54	[97]	EQ       	0 1 -9	; - "comprehension"
	55	[97]	JMP      	7	; to 63
	56	[97]	GETUPVAL 	2 7	; comprehension_has_value
	57	[97]	MOVE     	3 0
	58	[97]	CALL     	2 2 2
	59	[97]	TEST     	2 0 1
	60	[97]	JMP      	2	; to 63
	61	[98]	RETURN   	0 2
	62	[98]	JMP      	5	; to 68
	63	[100]	NEWTABLE 	2 2 0
	64	[101]	LOADK    	3 -6	; "return"
	65	[103]	MOVE     	4 0
	66	[103]	SETLIST  	2 2 1	; 1
	67	[103]	RETURN   	2 2
	68	[106]	RETURN   	0 1
-----------------------

main <./moonscript/parse.lua:0,0> (190 instructions, 760 bytes at 0x7f856f4068a0)
0+ params, 73 slots, 0 upvalues, 58 locals, 61 constants, 4 functions
	1	[1]	LOADBOOL 	0 0 0
	2	[2]	GETGLOBAL	1 -1	; require
	3	[2]	LOADK    	2 -2	; "lpeg"
	4	[2]	CALL     	1 2 2
	5	[3]	GETTABLE 	2 1 -3	; "setmaxstack"
	6	[3]	LOADK    	3 -4	; 10000
	7	[3]	CALL     	2 2 1
	8	[4]	LOADK    	2 -5	; "Failed to parse:%s\n [%d] >>    %s"
	9	[5]	LOADNIL  	3 3
	10	[6]	GETGLOBAL	4 -1	; require
	11	[6]	LOADK    	5 -6	; "moonscript.data"
	12	[6]	CALL     	4 2 2
	13	[6]	GETTABLE 	3 4 -7	; "Stack"
	14	[7]	LOADNIL  	4 6
	15	[9]	GETGLOBAL	7 -1	; require
	16	[9]	LOADK    	8 -8	; "moonscript.util"
	17	[9]	CALL     	7 2 2
	18	[10]	GETTABLE 	8 7 -9	; "trim"
	19	[10]	GETTABLE 	9 7 -10	; "pos_to_line"
	20	[10]	GETTABLE 	6 7 -11	; "get_line"
	21	[10]	MOVE     	5 9
	22	[10]	MOVE     	4 8
	23	[12]	LOADNIL  	7 7
	24	[13]	GETGLOBAL	8 -1	; require
	25	[13]	LOADK    	9 -8	; "moonscript.util"
	26	[13]	CALL     	8 2 2
	27	[13]	GETTABLE 	7 8 -12	; "unpack"
	28	[14]	LOADNIL  	8 8
	29	[15]	GETGLOBAL	9 -1	; require
	30	[15]	LOADK    	10 -13	; "moonscript.parse.env"
	31	[15]	CALL     	9 2 2
	32	[15]	GETTABLE 	8 9 -14	; "wrap_env"
	33	[16]	LOADNIL  	9 18
	34	[17]	GETTABLE 	19 1 -15	; "R"
	35	[17]	GETTABLE 	20 1 -16	; "S"
	36	[17]	GETTABLE 	21 1 -17	; "V"
	37	[17]	GETTABLE 	22 1 -18	; "P"
	38	[17]	GETTABLE 	23 1 -19	; "C"
	39	[17]	GETTABLE 	24 1 -20	; "Ct"
	40	[17]	GETTABLE 	25 1 -21	; "Cmt"
	41	[17]	GETTABLE 	26 1 -22	; "Cg"
	42	[17]	GETTABLE 	27 1 -23	; "Cb"
	43	[17]	GETTABLE 	18 1 -24	; "Cc"
	44	[17]	MOVE     	17 27
	45	[17]	MOVE     	16 26
	46	[17]	MOVE     	15 25
	47	[17]	MOVE     	14 24
	48	[17]	MOVE     	13 23
	49	[17]	MOVE     	12 22
	50	[17]	MOVE     	11 21
	51	[17]	MOVE     	10 20
	52	[17]	MOVE     	9 19
	53	[18]	LOADNIL  	19 31
	54	[20]	GETGLOBAL	32 -1	; require
	55	[20]	LOADK    	33 -25	; "moonscript.parse.literals"
	56	[20]	CALL     	32 2 2
	57	[21]	GETTABLE 	33 32 -26	; "White"
	58	[21]	GETTABLE 	34 32 -27	; "Break"
	59	[21]	GETTABLE 	35 32 -28	; "Stop"
	60	[21]	GETTABLE 	36 32 -29	; "Comment"
	61	[21]	GETTABLE 	37 32 -30	; "Space"
	62	[21]	GETTABLE 	38 32 -31	; "SomeSpace"
	63	[21]	GETTABLE 	39 32 -32	; "SpaceBreak"
	64	[21]	GETTABLE 	40 32 -33	; "EmptyLine"
	65	[21]	GETTABLE 	41 32 -34	; "AlphaNum"
	66	[21]	GETTABLE 	42 32 -35	; "Num"
	67	[21]	GETTABLE 	43 32 -36	; "Shebang"
	68	[21]	GETTABLE 	44 32 -37	; "L"
	69	[21]	GETTABLE 	31 32 -38	; "Name"
	70	[21]	MOVE     	30 44
	71	[21]	MOVE     	29 43
	72	[21]	MOVE     	28 42
	73	[21]	MOVE     	27 41
	74	[21]	MOVE     	26 40
	75	[21]	MOVE     	25 39
	76	[21]	MOVE     	24 38
	77	[21]	MOVE     	23 37
	78	[21]	MOVE     	22 36
	79	[21]	MOVE     	21 35
	80	[21]	MOVE     	20 34
	81	[21]	MOVE     	19 33
	82	[23]	MUL      	32 23 31
	83	[29]	CLOSURE  	33 0	; 0x7f856f406d20
	84	[29]	DIV      	33 28 33
	85	[29]	MUL      	28 23 33
	86	[30]	LOADNIL  	33 52
	87	[32]	GETGLOBAL	53 -1	; require
	88	[32]	LOADK    	54 -39	; "moonscript.parse.util"
	89	[32]	CALL     	53 2 2
	90	[33]	GETTABLE 	54 53 -40	; "Indent"
	91	[33]	GETTABLE 	55 53 -41	; "Cut"
	92	[33]	GETTABLE 	56 53 -42	; "ensure"
	93	[33]	GETTABLE 	57 53 -43	; "extract_line"
	94	[33]	GETTABLE 	58 53 -44	; "mark"
	95	[33]	GETTABLE 	59 53 -45	; "pos"
	96	[33]	GETTABLE 	60 53 -46	; "flatten_or_mark"
	97	[33]	GETTABLE 	61 53 -47	; "is_assignable"
	98	[33]	GETTABLE 	62 53 -48	; "check_assignable"
	99	[33]	GETTABLE 	63 53 -49	; "format_assign"
	100	[33]	GETTABLE 	64 53 -50	; "format_single_assign"
	101	[33]	GETTABLE 	65 53 -51	; "sym"
	102	[33]	GETTABLE 	66 53 -52	; "symx"
	103	[33]	GETTABLE 	67 53 -53	; "simple_string"
	104	[33]	GETTABLE 	68 53 -54	; "wrap_func_arg"
	105	[33]	GETTABLE 	69 53 -55	; "join_chain"
	106	[33]	GETTABLE 	70 53 -56	; "wrap_decorator"
	107	[33]	GETTABLE 	71 53 -57	; "check_lua_string"
	108	[33]	GETTABLE 	72 53 -58	; "self_assign"
	109	[33]	GETTABLE 	52 53 -59	; "got"
	110	[33]	MOVE     	51 72
	111	[33]	MOVE     	50 71
	112	[33]	MOVE     	49 70
	113	[33]	MOVE     	48 69
	114	[33]	MOVE     	47 68
	115	[33]	MOVE     	46 67
	116	[33]	MOVE     	45 66
	117	[33]	MOVE     	44 65
	118	[33]	MOVE     	43 64
	119	[33]	MOVE     	42 63
	120	[33]	MOVE     	41 62
	121	[33]	MOVE     	40 61
	122	[33]	MOVE     	39 60
	123	[33]	MOVE     	38 59
	124	[33]	MOVE     	37 58
	125	[33]	MOVE     	36 57
	126	[33]	MOVE     	35 56
	127	[33]	MOVE     	34 55
	128	[33]	MOVE     	33 54
	129	[35]	MOVE     	53 8
	130	[35]	MOVE     	54 0
	131	[204]	CLOSURE  	55 1	; 0x7f856f407020
	132	[204]	MOVE     	0 3
	133	[204]	MOVE     	0 15
	134	[204]	MOVE     	0 23
	135	[204]	MOVE     	0 27
	136	[204]	MOVE     	0 13
	137	[204]	MOVE     	0 32
	138	[204]	MOVE     	0 4
	139	[204]	MOVE     	0 31
	140	[204]	MOVE     	0 37
	141	[204]	MOVE     	0 18
	142	[204]	MOVE     	0 12
	143	[204]	MOVE     	0 29
	144	[204]	MOVE     	0 14
	145	[204]	MOVE     	0 20
	146	[204]	MOVE     	0 33
	147	[204]	MOVE     	0 30
	148	[204]	MOVE     	0 21
	149	[204]	MOVE     	0 38
	150	[204]	MOVE     	0 42
	151	[204]	MOVE     	0 49
	152	[204]	MOVE     	0 26
	153	[204]	MOVE     	0 25
	154	[204]	MOVE     	0 44
	155	[204]	MOVE     	0 35
	156	[204]	MOVE     	0 43
	157	[204]	MOVE     	0 10
	158	[204]	MOVE     	0 41
	159	[204]	MOVE     	0 39
	160	[204]	MOVE     	0 24
	161	[204]	MOVE     	0 28
	162	[204]	MOVE     	0 48
	163	[204]	MOVE     	0 46
	164	[204]	MOVE     	0 16
	165	[204]	MOVE     	0 17
	166	[204]	MOVE     	0 50
	167	[204]	MOVE     	0 45
	168	[204]	MOVE     	0 19
	169	[204]	MOVE     	0 47
	170	[204]	MOVE     	0 34
	171	[204]	MOVE     	0 1
	172	[204]	MOVE     	0 51
	173	[35]	CALL     	53 3 2
	174	[205]	LOADNIL  	54 54
	175	[238]	CLOSURE  	54 2	; 0x7f856f409b10
	176	[238]	MOVE     	0 53
	177	[238]	MOVE     	0 19
	178	[238]	MOVE     	0 7
	179	[238]	MOVE     	0 5
	180	[238]	MOVE     	0 6
	181	[238]	MOVE     	0 2
	182	[238]	MOVE     	0 4
	183	[239]	NEWTABLE 	55 0 3
	184	[240]	SETTABLE 	55 -43 36	; "extract_line" -
	185	[241]	SETTABLE 	55 -60 53	; "build_grammar" -
	186	[244]	CLOSURE  	56 3	; 0x7f856f40b4c0
	187	[244]	MOVE     	0 54
	188	[244]	SETTABLE 	55 -61 56	; "string" -
	189	[245]	RETURN   	55 2
	190	[245]	RETURN   	0 1

function <./moonscript/parse.lua:24,29> (6 instructions, 24 bytes at 0x7f856f406d20)
1 param, 4 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[25]	NEWTABLE 	1 2 0
	2	[26]	LOADK    	2 -1	; "number"
	3	[28]	MOVE     	3 0
	4	[28]	SETLIST  	1 2 1	; 1
	5	[28]	RETURN   	1 2
	6	[29]	RETURN   	0 1

function <./moonscript/parse.lua:35,204> (1831 instructions, 7324 bytes at 0x7f856f407020)
1 param, 30 slots, 41 upvalues, 21 locals, 205 constants, 10 functions
	1	[36]	GETUPVAL 	1 0	; Stack
	2	[36]	LOADK    	2 -1	; 0
	3	[36]	CALL     	1 2 2
	4	[37]	GETUPVAL 	2 0	; Stack
	5	[37]	LOADK    	3 -1	; 0
	6	[37]	CALL     	2 2 2
	7	[38]	NEWTABLE 	3 0 1
	8	[39]	SETTABLE 	3 -2 -1	; "last_pos" 0
	9	[41]	LOADNIL  	4 4
	10	[45]	CLOSURE  	4 0	; 0x7f856f4072d0
	11	[45]	MOVE     	0 3
	12	[45]	MOVE     	0 1
	13	[46]	LOADNIL  	5 5
	14	[53]	CLOSURE  	5 1	; 0x7f856f407ad0
	15	[53]	MOVE     	0 1
	16	[54]	LOADNIL  	6 6
	17	[58]	CLOSURE  	6 2	; 0x7f856f407f90
	18	[58]	MOVE     	0 1
	19	[59]	LOADNIL  	7 7
	20	[63]	CLOSURE  	7 3	; 0x7f856f4084d0
	21	[63]	MOVE     	0 1
	22	[64]	LOADNIL  	8 8
	23	[71]	CLOSURE  	8 4	; 0x7f856f407210
	24	[71]	MOVE     	0 2
	25	[72]	LOADNIL  	9 9
	26	[76]	CLOSURE  	9 5	; 0x7f856f408d10
	27	[76]	MOVE     	0 2
	28	[77]	LOADNIL  	10 10
	29	[81]	CLOSURE  	10 6	; 0x7f856f4090f0
	30	[81]	MOVE     	0 2
	31	[82]	GETUPVAL 	11 1	; Cmt
	32	[82]	LOADK    	12 -3	; ""
	33	[82]	MOVE     	13 9
	34	[82]	CALL     	11 3 2
	35	[83]	GETUPVAL 	12 1	; Cmt
	36	[83]	LOADK    	13 -3	; ""
	37	[83]	MOVE     	14 10
	38	[83]	CALL     	12 3 2
	39	[84]	NEWTABLE 	13 0 0
	40	[85]	LOADNIL  	14 14
	41	[89]	CLOSURE  	14 7	; 0x7f856f408450
	42	[89]	MOVE     	0 13
	43	[89]	GETUPVAL 	0 2	; Space
	44	[89]	GETUPVAL 	0 3	; AlphaNum
	45	[90]	LOADNIL  	15 15
	46	[98]	CLOSURE  	15 8	; 0x7f856f4097f0
	47	[98]	GETUPVAL 	0 2	; Space
	48	[98]	GETUPVAL 	0 4	; C
	49	[98]	MOVE     	0 13
	50	[98]	GETUPVAL 	0 3	; AlphaNum
	51	[99]	GETUPVAL 	16 1	; Cmt
	52	[99]	GETUPVAL 	17 5	; SpaceName
	53	[104]	CLOSURE  	18 9	; 0x7f856f409c30
	54	[104]	MOVE     	0 13
	55	[99]	CALL     	16 3 2
	56	[104]	GETUPVAL 	17 6	; trim
	57	[104]	DIV      	16 16 17
	58	[105]	GETUPVAL 	17 2	; Space
	59	[105]	MUL      	17 17 -4	; - "@"
	60	[105]	GETUPVAL 	18 7	; _Name
	61	[105]	GETUPVAL 	19 8	; mark
	62	[105]	LOADK    	20 -5	; "self_class"
	63	[105]	CALL     	19 2 2
	64	[105]	DIV      	18 18 19
	65	[105]	GETUPVAL 	19 9	; Cc
	66	[105]	LOADK    	20 -6	; "self.__class"
	67	[105]	CALL     	19 2 2
	68	[105]	ADD      	18 18 19
	69	[105]	MUL      	18 -4 18	; "@" -
	70	[105]	GETUPVAL 	19 7	; _Name
	71	[105]	GETUPVAL 	20 8	; mark
	72	[105]	LOADK    	21 -7	; "self"
	73	[105]	CALL     	20 2 2
	74	[105]	DIV      	19 19 20
	75	[105]	ADD      	18 18 19
	76	[105]	GETUPVAL 	19 9	; Cc
	77	[105]	LOADK    	20 -7	; "self"
	78	[105]	CALL     	19 2 2
	79	[105]	ADD      	18 18 19
	80	[105]	MUL      	17 17 18
	81	[106]	GETUPVAL 	18 2	; Space
	82	[106]	GETUPVAL 	19 7	; _Name
	83	[106]	MUL      	18 18 19
	84	[106]	GETUPVAL 	19 8	; mark
	85	[106]	LOADK    	20 -8	; "key_literal"
	86	[106]	CALL     	19 2 2
	87	[106]	DIV      	18 18 19
	88	[106]	ADD      	18 17 18
	89	[107]	GETUPVAL 	19 2	; Space
	90	[107]	GETUPVAL 	20 10	; P
	91	[107]	LOADK    	21 -9	; "..."
	92	[107]	CALL     	20 2 2
	93	[107]	MUL      	19 19 20
	94	[107]	GETUPVAL 	20 6	; trim
	95	[107]	DIV      	19 19 20
	96	[108]	GETUPVAL 	20 10	; P
	97	[108]	NEWTABLE 	21 1 36
	98	[109]	TESTSET  	22 0 1
	99	[109]	JMP      	1	; to 101
	100	[109]	GETGLOBAL	22 -10	; File
	101	[110]	GETUPVAL 	23 11	; Shebang
	102	[110]	POW      	23 23 -11	; - -1
	103	[110]	GETGLOBAL	24 -12	; Block
	104	[110]	GETUPVAL 	25 12	; Ct
	105	[110]	LOADK    	26 -3	; ""
	106	[110]	CALL     	25 2 2
	107	[110]	ADD      	24 24 25
	108	[110]	MUL      	23 23 24
	109	[110]	SETTABLE 	21 -10 23	; "File" -
	110	[111]	GETUPVAL 	23 12	; Ct
	111	[111]	GETGLOBAL	24 -13	; Line
	112	[111]	GETUPVAL 	25 13	; Break
	113	[111]	POW      	25 25 -14	; - 1
	114	[111]	GETGLOBAL	26 -13	; Line
	115	[111]	MUL      	25 25 26
	116	[111]	POW      	25 25 -1	; - 0
	117	[111]	MUL      	24 24 25
	118	[111]	CALL     	23 2 2
	119	[111]	SETTABLE 	21 -12 23	; "Block" -
	120	[112]	GETUPVAL 	23 1	; Cmt
	121	[112]	GETUPVAL 	24 14	; Indent
	122	[112]	MOVE     	25 4
	123	[112]	CALL     	23 3 2
	124	[112]	SETTABLE 	21 -15 23	; "CheckIndent" -
	125	[113]	GETGLOBAL	23 -15	; CheckIndent
	126	[113]	GETGLOBAL	24 -16	; Statement
	127	[113]	MUL      	23 23 24
	128	[113]	GETUPVAL 	24 2	; Space
	129	[113]	GETUPVAL 	25 15	; L
	130	[113]	GETUPVAL 	26 16	; Stop
	131	[113]	CALL     	25 2 2
	132	[113]	MUL      	24 24 25
	133	[113]	ADD      	23 23 24
	134	[113]	SETTABLE 	21 -13 23	; "Line" -
	135	[114]	GETUPVAL 	23 17	; pos
	136	[114]	GETGLOBAL	24 -17	; Import
	137	[114]	GETGLOBAL	25 -18	; While
	138	[114]	ADD      	24 24 25
	139	[114]	GETGLOBAL	25 -19	; With
	140	[114]	ADD      	24 24 25
	141	[114]	GETGLOBAL	25 -20	; For
	142	[114]	ADD      	24 24 25
	143	[114]	GETGLOBAL	25 -21	; ForEach
	144	[114]	ADD      	24 24 25
	145	[114]	GETGLOBAL	25 -22	; Switch
	146	[114]	ADD      	24 24 25
	147	[114]	GETGLOBAL	25 -23	; Return
	148	[114]	ADD      	24 24 25
	149	[114]	GETGLOBAL	25 -24	; Local
	150	[114]	ADD      	24 24 25
	151	[114]	GETGLOBAL	25 -25	; Export
	152	[114]	ADD      	24 24 25
	153	[114]	GETGLOBAL	25 -26	; BreakLoop
	154	[114]	ADD      	24 24 25
	155	[114]	GETUPVAL 	25 12	; Ct
	156	[114]	GETGLOBAL	26 -27	; ExpList
	157	[114]	CALL     	25 2 2
	158	[114]	GETGLOBAL	26 -28	; Update
	159	[114]	GETGLOBAL	27 -29	; Assign
	160	[114]	ADD      	26 26 27
	161	[114]	POW      	26 26 -11	; - -1
	162	[114]	MUL      	25 25 26
	163	[114]	GETUPVAL 	26 18	; format_assign
	164	[114]	DIV      	25 25 26
	165	[114]	ADD      	24 24 25
	166	[114]	CALL     	23 2 2
	167	[114]	GETUPVAL 	24 2	; Space
	168	[114]	MUL      	23 23 24
	169	[114]	MOVE     	24 14
	170	[114]	LOADK    	25 -30	; "if"
	171	[114]	CALL     	24 2 2
	172	[114]	GETGLOBAL	25 -31	; Exp
	173	[114]	MUL      	24 24 25
	174	[114]	MOVE     	25 14
	175	[114]	LOADK    	26 -32	; "else"
	176	[114]	CALL     	25 2 2
	177	[114]	GETGLOBAL	26 -31	; Exp
	178	[114]	MUL      	25 25 26
	179	[114]	POW      	25 25 -11	; - -1
	180	[114]	MUL      	24 24 25
	181	[114]	GETUPVAL 	25 2	; Space
	182	[114]	MUL      	24 24 25
	183	[114]	GETUPVAL 	25 8	; mark
	184	[114]	LOADK    	26 -30	; "if"
	185	[114]	CALL     	25 2 2
	186	[114]	DIV      	24 24 25
	187	[114]	MOVE     	25 14
	188	[114]	LOADK    	26 -33	; "unless"
	189	[114]	CALL     	25 2 2
	190	[114]	GETGLOBAL	26 -31	; Exp
	191	[114]	MUL      	25 25 26
	192	[114]	GETUPVAL 	26 8	; mark
	193	[114]	LOADK    	27 -33	; "unless"
	194	[114]	CALL     	26 2 2
	195	[114]	DIV      	25 25 26
	196	[114]	ADD      	24 24 25
	197	[114]	GETGLOBAL	25 -34	; CompInner
	198	[114]	GETUPVAL 	26 8	; mark
	199	[114]	LOADK    	27 -35	; "comprehension"
	200	[114]	CALL     	26 2 2
	201	[114]	DIV      	25 25 26
	202	[114]	ADD      	24 24 25
	203	[114]	GETUPVAL 	25 2	; Space
	204	[114]	MUL      	24 24 25
	205	[114]	POW      	24 24 -11	; - -1
	206	[114]	MUL      	23 23 24
	207	[114]	GETUPVAL 	24 19	; wrap_decorator
	208	[114]	DIV      	23 23 24
	209	[114]	SETTABLE 	21 -16 23	; "Statement" -
	210	[115]	GETUPVAL 	23 2	; Space
	211	[115]	POW      	23 23 -11	; - -1
	212	[115]	GETUPVAL 	24 13	; Break
	213	[115]	MUL      	23 23 24
	214	[115]	GETUPVAL 	24 20	; EmptyLine
	215	[115]	POW      	24 24 -1	; - 0
	216	[115]	MUL      	23 23 24
	217	[115]	GETGLOBAL	24 -37	; InBlock
	218	[115]	MUL      	23 23 24
	219	[115]	GETUPVAL 	24 12	; Ct
	220	[115]	GETGLOBAL	25 -16	; Statement
	221	[115]	CALL     	24 2 2
	222	[115]	ADD      	23 23 24
	223	[115]	SETTABLE 	21 -36 23	; "Body" -
	224	[116]	GETUPVAL 	23 15	; L
	225	[116]	GETUPVAL 	24 1	; Cmt
	226	[116]	GETUPVAL 	25 14	; Indent
	227	[116]	MOVE     	26 5
	228	[116]	CALL     	24 3 0
	229	[116]	CALL     	23 0 2
	230	[116]	SETTABLE 	21 -38 23	; "Advance" -
	231	[117]	GETUPVAL 	23 1	; Cmt
	232	[117]	GETUPVAL 	24 14	; Indent
	233	[117]	MOVE     	25 6
	234	[117]	CALL     	23 3 2
	235	[117]	SETTABLE 	21 -39 23	; "PushIndent" -
	236	[118]	GETUPVAL 	23 1	; Cmt
	237	[118]	GETUPVAL 	24 9	; Cc
	238	[118]	LOADK    	25 -11	; -1
	239	[118]	CALL     	24 2 2
	240	[118]	MOVE     	25 6
	241	[118]	CALL     	23 3 2
	242	[118]	SETTABLE 	21 -40 23	; "PreventIndent" -
	243	[119]	GETUPVAL 	23 1	; Cmt
	244	[119]	LOADK    	24 -3	; ""
	245	[119]	MOVE     	25 7
	246	[119]	CALL     	23 3 2
	247	[119]	SETTABLE 	21 -41 23	; "PopIndent" -
	248	[120]	GETGLOBAL	23 -38	; Advance
	249	[120]	GETGLOBAL	24 -12	; Block
	250	[120]	MUL      	23 23 24
	251	[120]	GETGLOBAL	24 -41	; PopIndent
	252	[120]	MUL      	23 23 24
	253	[120]	SETTABLE 	21 -37 23	; "InBlock" -
	254	[121]	MOVE     	23 14
	255	[121]	LOADK    	24 -42	; "local"
	256	[121]	CALL     	23 2 2
	257	[121]	MOVE     	24 15
	258	[121]	LOADK    	25 -43	; "*"
	259	[121]	CALL     	24 2 2
	260	[121]	MOVE     	25 15
	261	[121]	LOADK    	26 -44	; "^"
	262	[121]	CALL     	25 2 2
	263	[121]	ADD      	24 24 25
	264	[121]	GETUPVAL 	25 8	; mark
	265	[121]	LOADK    	26 -45	; "declare_glob"
	266	[121]	CALL     	25 2 2
	267	[121]	DIV      	24 24 25
	268	[121]	GETUPVAL 	25 12	; Ct
	269	[121]	GETGLOBAL	26 -46	; NameList
	270	[121]	CALL     	25 2 2
	271	[121]	GETUPVAL 	26 8	; mark
	272	[121]	LOADK    	27 -47	; "declare_with_shadows"
	273	[121]	CALL     	26 2 2
	274	[121]	DIV      	25 25 26
	275	[121]	ADD      	24 24 25
	276	[121]	MUL      	23 23 24
	277	[121]	SETTABLE 	21 -24 23	; "Local" -
	278	[122]	MOVE     	23 14
	279	[122]	LOADK    	24 -48	; "import"
	280	[122]	CALL     	23 2 2
	281	[122]	GETUPVAL 	24 12	; Ct
	282	[122]	GETGLOBAL	25 -49	; ImportNameList
	283	[122]	CALL     	24 2 2
	284	[122]	MUL      	23 23 24
	285	[122]	GETUPVAL 	24 21	; SpaceBreak
	286	[122]	POW      	24 24 -1	; - 0
	287	[122]	MUL      	23 23 24
	288	[122]	MOVE     	24 14
	289	[122]	LOADK    	25 -50	; "from"
	290	[122]	CALL     	24 2 2
	291	[122]	MUL      	23 23 24
	292	[122]	GETGLOBAL	24 -31	; Exp
	293	[122]	MUL      	23 23 24
	294	[122]	GETUPVAL 	24 8	; mark
	295	[122]	LOADK    	25 -48	; "import"
	296	[122]	CALL     	24 2 2
	297	[122]	DIV      	23 23 24
	298	[122]	SETTABLE 	21 -17 23	; "Import" -
	299	[123]	GETUPVAL 	23 22	; sym
	300	[123]	LOADK    	24 -52	; "\\"
	301	[123]	CALL     	23 2 2
	302	[123]	GETUPVAL 	24 12	; Ct
	303	[123]	GETUPVAL 	25 9	; Cc
	304	[123]	LOADK    	26 -53	; "colon"
	305	[123]	CALL     	25 2 2
	306	[123]	MUL      	25 25 16
	307	[123]	CALL     	24 2 2
	308	[123]	MUL      	23 23 24
	309	[123]	ADD      	23 23 16
	310	[123]	SETTABLE 	21 -51 23	; "ImportName" -
	311	[124]	GETUPVAL 	23 21	; SpaceBreak
	312	[124]	POW      	23 23 -1	; - 0
	313	[124]	GETGLOBAL	24 -51	; ImportName
	314	[124]	MUL      	23 23 24
	315	[124]	GETUPVAL 	24 21	; SpaceBreak
	316	[124]	POW      	24 24 -14	; - 1
	317	[124]	GETUPVAL 	25 22	; sym
	318	[124]	LOADK    	26 -54	; ","
	319	[124]	CALL     	25 2 2
	320	[124]	GETUPVAL 	26 21	; SpaceBreak
	321	[124]	POW      	26 26 -1	; - 0
	322	[124]	MUL      	25 25 26
	323	[124]	ADD      	24 24 25
	324	[124]	GETGLOBAL	25 -51	; ImportName
	325	[124]	MUL      	24 24 25
	326	[124]	POW      	24 24 -1	; - 0
	327	[124]	MUL      	23 23 24
	328	[124]	SETTABLE 	21 -49 23	; "ImportNameList" -
	329	[125]	GETUPVAL 	23 12	; Ct
	330	[125]	MOVE     	24 14
	331	[125]	LOADK    	25 -55	; "break"
	332	[125]	CALL     	24 2 2
	333	[125]	GETUPVAL 	25 6	; trim
	334	[125]	DIV      	24 24 25
	335	[125]	CALL     	23 2 2
	336	[125]	GETUPVAL 	24 12	; Ct
	337	[125]	MOVE     	25 14
	338	[125]	LOADK    	26 -56	; "continue"
	339	[125]	CALL     	25 2 2
	340	[125]	GETUPVAL 	26 6	; trim
	341	[125]	DIV      	25 25 26
	342	[125]	CALL     	24 2 2
	343	[125]	ADD      	23 23 24
	344	[125]	SETTABLE 	21 -26 23	; "BreakLoop" -
	345	[126]	MOVE     	23 14
	346	[126]	LOADK    	24 -57	; "return"
	347	[126]	CALL     	23 2 2
	348	[126]	GETGLOBAL	24 -58	; ExpListLow
	349	[126]	GETUPVAL 	25 8	; mark
	350	[126]	LOADK    	26 -59	; "explist"
	351	[126]	CALL     	25 2 2
	352	[126]	DIV      	24 24 25
	353	[126]	GETUPVAL 	25 4	; C
	354	[126]	LOADK    	26 -3	; ""
	355	[126]	CALL     	25 2 2
	356	[126]	ADD      	24 24 25
	357	[126]	MUL      	23 23 24
	358	[126]	GETUPVAL 	24 8	; mark
	359	[126]	LOADK    	25 -57	; "return"
	360	[126]	CALL     	24 2 2
	361	[126]	DIV      	23 23 24
	362	[126]	SETTABLE 	21 -23 23	; "Return" -
	363	[127]	GETUPVAL 	23 12	; Ct
	364	[127]	GETGLOBAL	24 -27	; ExpList
	365	[127]	CALL     	23 2 2
	366	[127]	GETGLOBAL	24 -29	; Assign
	367	[127]	POW      	24 24 -11	; - -1
	368	[127]	MUL      	23 23 24
	369	[127]	GETUPVAL 	24 18	; format_assign
	370	[127]	DIV      	23 23 24
	371	[127]	SETTABLE 	21 -60 23	; "WithExp" -
	372	[128]	MOVE     	23 14
	373	[128]	LOADK    	24 -61	; "with"
	374	[128]	CALL     	23 2 2
	375	[128]	MUL      	23 23 11
	376	[128]	GETUPVAL 	24 23	; ensure
	377	[128]	GETGLOBAL	25 -60	; WithExp
	378	[128]	MOVE     	26 12
	379	[128]	CALL     	24 3 2
	380	[128]	MUL      	23 23 24
	381	[128]	MOVE     	24 14
	382	[128]	LOADK    	25 -62	; "do"
	383	[128]	CALL     	24 2 2
	384	[128]	POW      	24 24 -11	; - -1
	385	[128]	MUL      	23 23 24
	386	[128]	GETGLOBAL	24 -36	; Body
	387	[128]	MUL      	23 23 24
	388	[128]	GETUPVAL 	24 8	; mark
	389	[128]	LOADK    	25 -61	; "with"
	390	[128]	CALL     	24 2 2
	391	[128]	DIV      	23 23 24
	392	[128]	SETTABLE 	21 -19 23	; "With" -
	393	[129]	MOVE     	23 14
	394	[129]	LOADK    	24 -63	; "switch"
	395	[129]	CALL     	23 2 2
	396	[129]	MUL      	23 23 11
	397	[129]	GETUPVAL 	24 23	; ensure
	398	[129]	GETGLOBAL	25 -31	; Exp
	399	[129]	MOVE     	26 12
	400	[129]	CALL     	24 3 2
	401	[129]	MUL      	23 23 24
	402	[129]	MOVE     	24 14
	403	[129]	LOADK    	25 -62	; "do"
	404	[129]	CALL     	24 2 2
	405	[129]	POW      	24 24 -11	; - -1
	406	[129]	MUL      	23 23 24
	407	[129]	GETUPVAL 	24 2	; Space
	408	[129]	POW      	24 24 -11	; - -1
	409	[129]	MUL      	23 23 24
	410	[129]	GETUPVAL 	24 13	; Break
	411	[129]	MUL      	23 23 24
	412	[129]	GETGLOBAL	24 -64	; SwitchBlock
	413	[129]	MUL      	23 23 24
	414	[129]	GETUPVAL 	24 8	; mark
	415	[129]	LOADK    	25 -63	; "switch"
	416	[129]	CALL     	24 2 2
	417	[129]	DIV      	23 23 24
	418	[129]	SETTABLE 	21 -22 23	; "Switch" -
	419	[130]	GETUPVAL 	23 20	; EmptyLine
	420	[130]	POW      	23 23 -1	; - 0
	421	[130]	GETGLOBAL	24 -38	; Advance
	422	[130]	MUL      	23 23 24
	423	[130]	GETUPVAL 	24 12	; Ct
	424	[130]	GETGLOBAL	25 -65	; SwitchCase
	425	[130]	GETUPVAL 	26 13	; Break
	426	[130]	POW      	26 26 -14	; - 1
	427	[130]	GETGLOBAL	27 -65	; SwitchCase
	428	[130]	MUL      	26 26 27
	429	[130]	POW      	26 26 -1	; - 0
	430	[130]	MUL      	25 25 26
	431	[130]	GETUPVAL 	26 13	; Break
	432	[130]	POW      	26 26 -14	; - 1
	433	[130]	GETGLOBAL	27 -66	; SwitchElse
	434	[130]	MUL      	26 26 27
	435	[130]	POW      	26 26 -11	; - -1
	436	[130]	MUL      	25 25 26
	437	[130]	CALL     	24 2 2
	438	[130]	MUL      	23 23 24
	439	[130]	GETGLOBAL	24 -41	; PopIndent
	440	[130]	MUL      	23 23 24
	441	[130]	SETTABLE 	21 -64 23	; "SwitchBlock" -
	442	[131]	MOVE     	23 14
	443	[131]	LOADK    	24 -67	; "when"
	444	[131]	CALL     	23 2 2
	445	[131]	GETUPVAL 	24 12	; Ct
	446	[131]	GETGLOBAL	25 -27	; ExpList
	447	[131]	CALL     	24 2 2
	448	[131]	MUL      	23 23 24
	449	[131]	MOVE     	24 14
	450	[131]	LOADK    	25 -68	; "then"
	451	[131]	CALL     	24 2 2
	452	[131]	POW      	24 24 -11	; - -1
	453	[131]	MUL      	23 23 24
	454	[131]	GETGLOBAL	24 -36	; Body
	455	[131]	MUL      	23 23 24
	456	[131]	GETUPVAL 	24 8	; mark
	457	[131]	LOADK    	25 -69	; "case"
	458	[131]	CALL     	24 2 2
	459	[131]	DIV      	23 23 24
	460	[131]	SETTABLE 	21 -65 23	; "SwitchCase" -
	461	[132]	MOVE     	23 14
	462	[132]	LOADK    	24 -32	; "else"
	463	[132]	CALL     	23 2 2
	464	[132]	GETGLOBAL	24 -36	; Body
	465	[132]	MUL      	23 23 24
	466	[132]	GETUPVAL 	24 8	; mark
	467	[132]	LOADK    	25 -32	; "else"
	468	[132]	CALL     	24 2 2
	469	[132]	DIV      	23 23 24
	470	[132]	SETTABLE 	21 -66 23	; "SwitchElse" -
	471	[133]	GETGLOBAL	23 -31	; Exp
	472	[133]	GETGLOBAL	24 -29	; Assign
	473	[133]	POW      	24 24 -11	; - -1
	474	[133]	MUL      	23 23 24
	475	[133]	GETUPVAL 	24 24	; format_single_assign
	476	[133]	DIV      	23 23 24
	477	[133]	SETTABLE 	21 -70 23	; "IfCond" -
	478	[134]	GETUPVAL 	23 13	; Break
	479	[134]	GETUPVAL 	24 20	; EmptyLine
	480	[134]	POW      	24 24 -1	; - 0
	481	[134]	MUL      	23 23 24
	482	[134]	GETGLOBAL	24 -15	; CheckIndent
	483	[134]	MUL      	23 23 24
	484	[134]	POW      	23 23 -11	; - -1
	485	[134]	MOVE     	24 14
	486	[134]	LOADK    	25 -32	; "else"
	487	[134]	CALL     	24 2 2
	488	[134]	MUL      	23 23 24
	489	[134]	GETGLOBAL	24 -36	; Body
	490	[134]	MUL      	23 23 24
	491	[134]	GETUPVAL 	24 8	; mark
	492	[134]	LOADK    	25 -32	; "else"
	493	[134]	CALL     	24 2 2
	494	[134]	DIV      	23 23 24
	495	[134]	SETTABLE 	21 -71 23	; "IfElse" -
	496	[135]	GETUPVAL 	23 13	; Break
	497	[135]	GETUPVAL 	24 20	; EmptyLine
	498	[135]	POW      	24 24 -1	; - 0
	499	[135]	MUL      	23 23 24
	500	[135]	GETGLOBAL	24 -15	; CheckIndent
	501	[135]	MUL      	23 23 24
	502	[135]	POW      	23 23 -11	; - -1
	503	[135]	MOVE     	24 14
	504	[135]	LOADK    	25 -73	; "elseif"
	505	[135]	CALL     	24 2 2
	506	[135]	MUL      	23 23 24
	507	[135]	GETUPVAL 	24 17	; pos
	508	[135]	GETGLOBAL	25 -70	; IfCond
	509	[135]	CALL     	24 2 2
	510	[135]	MUL      	23 23 24
	511	[135]	MOVE     	24 14
	512	[135]	LOADK    	25 -68	; "then"
	513	[135]	CALL     	24 2 2
	514	[135]	POW      	24 24 -11	; - -1
	515	[135]	MUL      	23 23 24
	516	[135]	GETGLOBAL	24 -36	; Body
	517	[135]	MUL      	23 23 24
	518	[135]	GETUPVAL 	24 8	; mark
	519	[135]	LOADK    	25 -73	; "elseif"
	520	[135]	CALL     	24 2 2
	521	[135]	DIV      	23 23 24
	522	[135]	SETTABLE 	21 -72 23	; "IfElseIf" -
	523	[136]	MOVE     	23 14
	524	[136]	LOADK    	24 -30	; "if"
	525	[136]	CALL     	23 2 2
	526	[136]	GETGLOBAL	24 -70	; IfCond
	527	[136]	MUL      	23 23 24
	528	[136]	MOVE     	24 14
	529	[136]	LOADK    	25 -68	; "then"
	530	[136]	CALL     	24 2 2
	531	[136]	POW      	24 24 -11	; - -1
	532	[136]	MUL      	23 23 24
	533	[136]	GETGLOBAL	24 -36	; Body
	534	[136]	MUL      	23 23 24
	535	[136]	GETGLOBAL	24 -72	; IfElseIf
	536	[136]	POW      	24 24 -1	; - 0
	537	[136]	MUL      	23 23 24
	538	[136]	GETGLOBAL	24 -71	; IfElse
	539	[136]	POW      	24 24 -11	; - -1
	540	[136]	MUL      	23 23 24
	541	[136]	GETUPVAL 	24 8	; mark
	542	[136]	LOADK    	25 -30	; "if"
	543	[136]	CALL     	24 2 2
	544	[136]	DIV      	23 23 24
	545	[136]	SETTABLE 	21 -74 23	; "If" -
	546	[137]	MOVE     	23 14
	547	[137]	LOADK    	24 -33	; "unless"
	548	[137]	CALL     	23 2 2
	549	[137]	GETGLOBAL	24 -70	; IfCond
	550	[137]	MUL      	23 23 24
	551	[137]	MOVE     	24 14
	552	[137]	LOADK    	25 -68	; "then"
	553	[137]	CALL     	24 2 2
	554	[137]	POW      	24 24 -11	; - -1
	555	[137]	MUL      	23 23 24
	556	[137]	GETGLOBAL	24 -36	; Body
	557	[137]	MUL      	23 23 24
	558	[137]	GETGLOBAL	24 -72	; IfElseIf
	559	[137]	POW      	24 24 -1	; - 0
	560	[137]	MUL      	23 23 24
	561	[137]	GETGLOBAL	24 -71	; IfElse
	562	[137]	POW      	24 24 -11	; - -1
	563	[137]	MUL      	23 23 24
	564	[137]	GETUPVAL 	24 8	; mark
	565	[137]	LOADK    	25 -33	; "unless"
	566	[137]	CALL     	24 2 2
	567	[137]	DIV      	23 23 24
	568	[137]	SETTABLE 	21 -75 23	; "Unless" -
	569	[138]	MOVE     	23 14
	570	[138]	LOADK    	24 -76	; "while"
	571	[138]	CALL     	23 2 2
	572	[138]	MUL      	23 23 11
	573	[138]	GETUPVAL 	24 23	; ensure
	574	[138]	GETGLOBAL	25 -31	; Exp
	575	[138]	MOVE     	26 12
	576	[138]	CALL     	24 3 2
	577	[138]	MUL      	23 23 24
	578	[138]	MOVE     	24 14
	579	[138]	LOADK    	25 -62	; "do"
	580	[138]	CALL     	24 2 2
	581	[138]	POW      	24 24 -11	; - -1
	582	[138]	MUL      	23 23 24
	583	[138]	GETGLOBAL	24 -36	; Body
	584	[138]	MUL      	23 23 24
	585	[138]	GETUPVAL 	24 8	; mark
	586	[138]	LOADK    	25 -76	; "while"
	587	[138]	CALL     	24 2 2
	588	[138]	DIV      	23 23 24
	589	[138]	SETTABLE 	21 -18 23	; "While" -
	590	[139]	MOVE     	23 14
	591	[139]	LOADK    	24 -77	; "for"
	592	[139]	CALL     	23 2 2
	593	[139]	MUL      	23 23 11
	594	[139]	GETUPVAL 	24 23	; ensure
	595	[139]	GETUPVAL 	25 22	; sym
	596	[139]	LOADK    	26 -78	; "="
	597	[139]	CALL     	25 2 2
	598	[139]	MUL      	25 16 25
	599	[139]	GETUPVAL 	26 12	; Ct
	600	[139]	GETGLOBAL	27 -31	; Exp
	601	[139]	GETUPVAL 	28 22	; sym
	602	[139]	LOADK    	29 -54	; ","
	603	[139]	CALL     	28 2 2
	604	[139]	MUL      	27 27 28
	605	[139]	GETGLOBAL	28 -31	; Exp
	606	[139]	MUL      	27 27 28
	607	[139]	GETUPVAL 	28 22	; sym
	608	[139]	LOADK    	29 -54	; ","
	609	[139]	CALL     	28 2 2
	610	[139]	GETGLOBAL	29 -31	; Exp
	611	[139]	MUL      	28 28 29
	612	[139]	POW      	28 28 -11	; - -1
	613	[139]	MUL      	27 27 28
	614	[139]	CALL     	26 2 2
	615	[139]	MUL      	25 25 26
	616	[139]	MOVE     	26 12
	617	[139]	CALL     	24 3 2
	618	[139]	MUL      	23 23 24
	619	[139]	MOVE     	24 14
	620	[139]	LOADK    	25 -62	; "do"
	621	[139]	CALL     	24 2 2
	622	[139]	POW      	24 24 -11	; - -1
	623	[139]	MUL      	23 23 24
	624	[139]	GETGLOBAL	24 -36	; Body
	625	[139]	MUL      	23 23 24
	626	[139]	GETUPVAL 	24 8	; mark
	627	[139]	LOADK    	25 -77	; "for"
	628	[139]	CALL     	24 2 2
	629	[139]	DIV      	23 23 24
	630	[139]	SETTABLE 	21 -20 23	; "For" -
	631	[140]	MOVE     	23 14
	632	[140]	LOADK    	24 -77	; "for"
	633	[140]	CALL     	23 2 2
	634	[140]	GETUPVAL 	24 12	; Ct
	635	[140]	GETGLOBAL	25 -79	; AssignableNameList
	636	[140]	CALL     	24 2 2
	637	[140]	MUL      	23 23 24
	638	[140]	MOVE     	24 14
	639	[140]	LOADK    	25 -80	; "in"
	640	[140]	CALL     	24 2 2
	641	[140]	MUL      	23 23 24
	642	[140]	MUL      	23 23 11
	643	[140]	GETUPVAL 	24 23	; ensure
	644	[140]	GETUPVAL 	25 12	; Ct
	645	[140]	GETUPVAL 	26 22	; sym
	646	[140]	LOADK    	27 -43	; "*"
	647	[140]	CALL     	26 2 2
	648	[140]	GETGLOBAL	27 -31	; Exp
	649	[140]	MUL      	26 26 27
	650	[140]	GETUPVAL 	27 8	; mark
	651	[140]	LOADK    	28 -81	; "unpack"
	652	[140]	CALL     	27 2 2
	653	[140]	DIV      	26 26 27
	654	[140]	GETGLOBAL	27 -27	; ExpList
	655	[140]	ADD      	26 26 27
	656	[140]	CALL     	25 2 2
	657	[140]	MOVE     	26 12
	658	[140]	CALL     	24 3 2
	659	[140]	MUL      	23 23 24
	660	[140]	MOVE     	24 14
	661	[140]	LOADK    	25 -62	; "do"
	662	[140]	CALL     	24 2 2
	663	[140]	POW      	24 24 -11	; - -1
	664	[140]	MUL      	23 23 24
	665	[140]	GETGLOBAL	24 -36	; Body
	666	[140]	MUL      	23 23 24
	667	[140]	GETUPVAL 	24 8	; mark
	668	[140]	LOADK    	25 -82	; "foreach"
	669	[140]	CALL     	24 2 2
	670	[140]	DIV      	23 23 24
	671	[140]	SETTABLE 	21 -21 23	; "ForEach" -
	672	[141]	MOVE     	23 14
	673	[141]	LOADK    	24 -62	; "do"
	674	[141]	CALL     	23 2 2
	675	[141]	GETGLOBAL	24 -36	; Body
	676	[141]	MUL      	23 23 24
	677	[141]	GETUPVAL 	24 8	; mark
	678	[141]	LOADK    	25 -62	; "do"
	679	[141]	CALL     	24 2 2
	680	[141]	DIV      	23 23 24
	681	[141]	SETTABLE 	21 -83 23	; "Do" -
	682	[142]	GETUPVAL 	23 22	; sym
	683	[142]	LOADK    	24 -85	; "["
	684	[142]	CALL     	23 2 2
	685	[142]	GETGLOBAL	24 -31	; Exp
	686	[142]	MUL      	23 23 24
	687	[142]	GETGLOBAL	24 -34	; CompInner
	688	[142]	MUL      	23 23 24
	689	[142]	GETUPVAL 	24 22	; sym
	690	[142]	LOADK    	25 -86	; "]"
	691	[142]	CALL     	24 2 2
	692	[142]	MUL      	23 23 24
	693	[142]	GETUPVAL 	24 8	; mark
	694	[142]	LOADK    	25 -35	; "comprehension"
	695	[142]	CALL     	24 2 2
	696	[142]	DIV      	23 23 24
	697	[142]	SETTABLE 	21 -84 23	; "Comprehension" -
	698	[143]	GETUPVAL 	23 22	; sym
	699	[143]	LOADK    	24 -88	; "{"
	700	[143]	CALL     	23 2 2
	701	[143]	GETUPVAL 	24 12	; Ct
	702	[143]	GETGLOBAL	25 -31	; Exp
	703	[143]	GETUPVAL 	26 22	; sym
	704	[143]	LOADK    	27 -54	; ","
	705	[143]	CALL     	26 2 2
	706	[143]	GETGLOBAL	27 -31	; Exp
	707	[143]	MUL      	26 26 27
	708	[143]	POW      	26 26 -11	; - -1
	709	[143]	MUL      	25 25 26
	710	[143]	CALL     	24 2 2
	711	[143]	MUL      	23 23 24
	712	[143]	GETGLOBAL	24 -34	; CompInner
	713	[143]	MUL      	23 23 24
	714	[143]	GETUPVAL 	24 22	; sym
	715	[143]	LOADK    	25 -89	; "}"
	716	[143]	CALL     	24 2 2
	717	[143]	MUL      	23 23 24
	718	[143]	GETUPVAL 	24 8	; mark
	719	[143]	LOADK    	25 -90	; "tblcomprehension"
	720	[143]	CALL     	24 2 2
	721	[143]	DIV      	23 23 24
	722	[143]	SETTABLE 	21 -87 23	; "TblComprehension" -
	723	[144]	GETUPVAL 	23 12	; Ct
	724	[144]	GETGLOBAL	24 -91	; CompForEach
	725	[144]	GETGLOBAL	25 -92	; CompFor
	726	[144]	ADD      	24 24 25
	727	[144]	GETGLOBAL	25 -93	; CompClause
	728	[144]	POW      	25 25 -1	; - 0
	729	[144]	MUL      	24 24 25
	730	[144]	CALL     	23 2 2
	731	[144]	SETTABLE 	21 -34 23	; "CompInner" -
	732	[145]	MOVE     	23 14
	733	[145]	LOADK    	24 -77	; "for"
	734	[145]	CALL     	23 2 2
	735	[145]	GETUPVAL 	24 12	; Ct
	736	[145]	GETGLOBAL	25 -79	; AssignableNameList
	737	[145]	CALL     	24 2 2
	738	[145]	MUL      	23 23 24
	739	[145]	MOVE     	24 14
	740	[145]	LOADK    	25 -80	; "in"
	741	[145]	CALL     	24 2 2
	742	[145]	MUL      	23 23 24
	743	[145]	GETUPVAL 	24 22	; sym
	744	[145]	LOADK    	25 -43	; "*"
	745	[145]	CALL     	24 2 2
	746	[145]	GETGLOBAL	25 -31	; Exp
	747	[145]	MUL      	24 24 25
	748	[145]	GETUPVAL 	25 8	; mark
	749	[145]	LOADK    	26 -81	; "unpack"
	750	[145]	CALL     	25 2 2
	751	[145]	DIV      	24 24 25
	752	[145]	GETGLOBAL	25 -31	; Exp
	753	[145]	ADD      	24 24 25
	754	[145]	MUL      	23 23 24
	755	[145]	GETUPVAL 	24 8	; mark
	756	[145]	LOADK    	25 -82	; "foreach"
	757	[145]	CALL     	24 2 2
	758	[145]	DIV      	23 23 24
	759	[145]	SETTABLE 	21 -91 23	; "CompForEach" -
	760	[146]	MOVE     	23 14
	761	[146]	MUL      	24 -77 16	; "for" -
	762	[146]	GETUPVAL 	25 22	; sym
	763	[146]	LOADK    	26 -78	; "="
	764	[146]	CALL     	25 2 2
	765	[146]	MUL      	24 24 25
	766	[146]	GETUPVAL 	25 12	; Ct
	767	[146]	GETGLOBAL	26 -31	; Exp
	768	[146]	GETUPVAL 	27 22	; sym
	769	[146]	LOADK    	28 -54	; ","
	770	[146]	CALL     	27 2 2
	771	[146]	MUL      	26 26 27
	772	[146]	GETGLOBAL	27 -31	; Exp
	773	[146]	MUL      	26 26 27
	774	[146]	GETUPVAL 	27 22	; sym
	775	[146]	LOADK    	28 -54	; ","
	776	[146]	CALL     	27 2 2
	777	[146]	GETGLOBAL	28 -31	; Exp
	778	[146]	MUL      	27 27 28
	779	[146]	POW      	27 27 -11	; - -1
	780	[146]	MUL      	26 26 27
	781	[146]	CALL     	25 2 2
	782	[146]	MUL      	24 24 25
	783	[146]	GETUPVAL 	25 8	; mark
	784	[146]	LOADK    	26 -77	; "for"
	785	[146]	CALL     	25 2 2
	786	[146]	DIV      	24 24 25
	787	[146]	CALL     	23 2 2
	788	[146]	SETTABLE 	21 -92 23	; "CompFor" -
	789	[147]	GETGLOBAL	23 -92	; CompFor
	790	[147]	GETGLOBAL	24 -91	; CompForEach
	791	[147]	ADD      	23 23 24
	792	[147]	MOVE     	24 14
	793	[147]	LOADK    	25 -67	; "when"
	794	[147]	CALL     	24 2 2
	795	[147]	GETGLOBAL	25 -31	; Exp
	796	[147]	MUL      	24 24 25
	797	[147]	GETUPVAL 	25 8	; mark
	798	[147]	LOADK    	26 -67	; "when"
	799	[147]	CALL     	25 2 2
	800	[147]	DIV      	24 24 25
	801	[147]	ADD      	23 23 24
	802	[147]	SETTABLE 	21 -93 23	; "CompClause" -
	803	[148]	GETUPVAL 	23 22	; sym
	804	[148]	LOADK    	24 -78	; "="
	805	[148]	CALL     	23 2 2
	806	[148]	GETUPVAL 	24 12	; Ct
	807	[148]	GETGLOBAL	25 -19	; With
	808	[148]	GETGLOBAL	26 -74	; If
	809	[148]	ADD      	25 25 26
	810	[148]	GETGLOBAL	26 -22	; Switch
	811	[148]	ADD      	25 25 26
	812	[148]	CALL     	24 2 2
	813	[148]	GETUPVAL 	25 12	; Ct
	814	[148]	GETGLOBAL	26 -94	; TableBlock
	815	[148]	GETGLOBAL	27 -58	; ExpListLow
	816	[148]	ADD      	26 26 27
	817	[148]	CALL     	25 2 2
	818	[148]	ADD      	24 24 25
	819	[148]	MUL      	23 23 24
	820	[148]	GETUPVAL 	24 8	; mark
	821	[148]	LOADK    	25 -95	; "assign"
	822	[148]	CALL     	24 2 2
	823	[148]	DIV      	23 23 24
	824	[148]	SETTABLE 	21 -29 23	; "Assign" -
	825	[149]	GETUPVAL 	23 22	; sym
	826	[149]	LOADK    	24 -96	; "..="
	827	[149]	CALL     	23 2 2
	828	[149]	GETUPVAL 	24 22	; sym
	829	[149]	LOADK    	25 -97	; "+="
	830	[149]	CALL     	24 2 2
	831	[149]	ADD      	23 23 24
	832	[149]	GETUPVAL 	24 22	; sym
	833	[149]	LOADK    	25 -98	; "-="
	834	[149]	CALL     	24 2 2
	835	[149]	ADD      	23 23 24
	836	[149]	GETUPVAL 	24 22	; sym
	837	[149]	LOADK    	25 -99	; "*="
	838	[149]	CALL     	24 2 2
	839	[149]	ADD      	23 23 24
	840	[149]	GETUPVAL 	24 22	; sym
	841	[149]	LOADK    	25 -100	; "/="
	842	[149]	CALL     	24 2 2
	843	[149]	ADD      	23 23 24
	844	[149]	GETUPVAL 	24 22	; sym
	845	[149]	LOADK    	25 -101	; "%="
	846	[149]	CALL     	24 2 2
	847	[149]	ADD      	23 23 24
	848	[149]	GETUPVAL 	24 22	; sym
	849	[149]	LOADK    	25 -102	; "or="
	850	[149]	CALL     	24 2 2
	851	[149]	ADD      	23 23 24
	852	[149]	GETUPVAL 	24 22	; sym
	853	[149]	LOADK    	25 -103	; "and="
	854	[149]	CALL     	24 2 2
	855	[149]	ADD      	23 23 24
	856	[149]	GETUPVAL 	24 22	; sym
	857	[149]	LOADK    	25 -104	; "&="
	858	[149]	CALL     	24 2 2
	859	[149]	ADD      	23 23 24
	860	[149]	GETUPVAL 	24 22	; sym
	861	[149]	LOADK    	25 -105	; "|="
	862	[149]	CALL     	24 2 2
	863	[149]	ADD      	23 23 24
	864	[149]	GETUPVAL 	24 22	; sym
	865	[149]	LOADK    	25 -106	; ">>="
	866	[149]	CALL     	24 2 2
	867	[149]	ADD      	23 23 24
	868	[149]	GETUPVAL 	24 22	; sym
	869	[149]	LOADK    	25 -107	; "<<="
	870	[149]	CALL     	24 2 2
	871	[149]	ADD      	23 23 24
	872	[149]	GETUPVAL 	24 6	; trim
	873	[149]	DIV      	23 23 24
	874	[149]	GETGLOBAL	24 -31	; Exp
	875	[149]	MUL      	23 23 24
	876	[149]	GETUPVAL 	24 8	; mark
	877	[149]	LOADK    	25 -108	; "update"
	878	[149]	CALL     	24 2 2
	879	[149]	DIV      	23 23 24
	880	[149]	SETTABLE 	21 -28 23	; "Update" -
	881	[150]	GETUPVAL 	23 2	; Space
	882	[150]	GETUPVAL 	24 4	; C
	883	[150]	GETUPVAL 	25 25	; S
	884	[150]	LOADK    	26 -110	; "+-*/%^><|&"
	885	[150]	CALL     	25 2 0
	886	[150]	CALL     	24 0 2
	887	[150]	MUL      	23 23 24
	888	[150]	SETTABLE 	21 -109 23	; "CharOperators" -
	889	[151]	MOVE     	23 15
	890	[151]	LOADK    	24 -112	; "or"
	891	[151]	CALL     	23 2 2
	892	[151]	MOVE     	24 15
	893	[151]	LOADK    	25 -113	; "and"
	894	[151]	CALL     	24 2 2
	895	[151]	ADD      	23 23 24
	896	[151]	MOVE     	24 15
	897	[151]	LOADK    	25 -114	; "<="
	898	[151]	CALL     	24 2 2
	899	[151]	ADD      	23 23 24
	900	[151]	MOVE     	24 15
	901	[151]	LOADK    	25 -115	; ">="
	902	[151]	CALL     	24 2 2
	903	[151]	ADD      	23 23 24
	904	[151]	MOVE     	24 15
	905	[151]	LOADK    	25 -116	; "~="
	906	[151]	CALL     	24 2 2
	907	[151]	ADD      	23 23 24
	908	[151]	MOVE     	24 15
	909	[151]	LOADK    	25 -117	; "!="
	910	[151]	CALL     	24 2 2
	911	[151]	ADD      	23 23 24
	912	[151]	MOVE     	24 15
	913	[151]	LOADK    	25 -118	; "=="
	914	[151]	CALL     	24 2 2
	915	[151]	ADD      	23 23 24
	916	[151]	MOVE     	24 15
	917	[151]	LOADK    	25 -119	; ".."
	918	[151]	CALL     	24 2 2
	919	[151]	ADD      	23 23 24
	920	[151]	MOVE     	24 15
	921	[151]	LOADK    	25 -120	; "<<"
	922	[151]	CALL     	24 2 2
	923	[151]	ADD      	23 23 24
	924	[151]	MOVE     	24 15
	925	[151]	LOADK    	25 -121	; ">>"
	926	[151]	CALL     	24 2 2
	927	[151]	ADD      	23 23 24
	928	[151]	MOVE     	24 15
	929	[151]	LOADK    	25 -122	; "//"
	930	[151]	CALL     	24 2 2
	931	[151]	ADD      	23 23 24
	932	[151]	SETTABLE 	21 -111 23	; "WordOperators" -
	933	[152]	GETGLOBAL	23 -111	; WordOperators
	934	[152]	GETGLOBAL	24 -109	; CharOperators
	935	[152]	ADD      	23 23 24
	936	[152]	GETUPVAL 	24 21	; SpaceBreak
	937	[152]	POW      	24 24 -1	; - 0
	938	[152]	MUL      	23 23 24
	939	[152]	SETTABLE 	21 -123 23	; "BinaryOperator" -
	940	[153]	GETUPVAL 	23 1	; Cmt
	941	[153]	GETGLOBAL	24 -125	; Chain
	942	[153]	GETUPVAL 	25 26	; check_assignable
	943	[153]	CALL     	23 3 2
	944	[153]	ADD      	23 23 16
	945	[153]	ADD      	23 23 17
	946	[153]	SETTABLE 	21 -124 23	; "Assignable" -
	947	[154]	GETUPVAL 	23 12	; Ct
	948	[154]	GETGLOBAL	24 -126	; Value
	949	[154]	GETGLOBAL	25 -123	; BinaryOperator
	950	[154]	GETGLOBAL	26 -126	; Value
	951	[154]	MUL      	25 25 26
	952	[154]	POW      	25 25 -1	; - 0
	953	[154]	MUL      	24 24 25
	954	[154]	CALL     	23 2 2
	955	[154]	GETUPVAL 	24 27	; flatten_or_mark
	956	[154]	LOADK    	25 -127	; "exp"
	957	[154]	CALL     	24 2 2
	958	[154]	DIV      	23 23 24
	959	[154]	SETTABLE 	21 -31 23	; "Exp" -
	960	[155]	GETGLOBAL	23 -74	; If
	961	[155]	GETGLOBAL	24 -75	; Unless
	962	[155]	ADD      	23 23 24
	963	[155]	GETGLOBAL	24 -22	; Switch
	964	[155]	ADD      	23 23 24
	965	[155]	GETGLOBAL	24 -19	; With
	966	[155]	ADD      	23 23 24
	967	[155]	GETGLOBAL	24 -129	; ClassDecl
	968	[155]	ADD      	23 23 24
	969	[155]	GETGLOBAL	24 -21	; ForEach
	970	[155]	ADD      	23 23 24
	971	[155]	GETGLOBAL	24 -20	; For
	972	[155]	ADD      	23 23 24
	973	[155]	GETGLOBAL	24 -18	; While
	974	[155]	ADD      	23 23 24
	975	[155]	GETUPVAL 	24 1	; Cmt
	976	[155]	GETGLOBAL	25 -83	; Do
	977	[155]	MOVE     	26 8
	978	[155]	CALL     	24 3 2
	979	[155]	ADD      	23 23 24
	980	[155]	GETUPVAL 	24 22	; sym
	981	[155]	LOADK    	25 -130	; "-"
	982	[155]	CALL     	24 2 2
	983	[155]	GETUPVAL 	25 28	; SomeSpace
	984	[155]	UNM      	25 25
	985	[155]	MUL      	24 24 25
	986	[155]	GETGLOBAL	25 -31	; Exp
	987	[155]	MUL      	24 24 25
	988	[155]	GETUPVAL 	25 8	; mark
	989	[155]	LOADK    	26 -131	; "minus"
	990	[155]	CALL     	25 2 2
	991	[155]	DIV      	24 24 25
	992	[155]	ADD      	23 23 24
	993	[155]	GETUPVAL 	24 22	; sym
	994	[155]	LOADK    	25 -132	; "#"
	995	[155]	CALL     	24 2 2
	996	[155]	GETGLOBAL	25 -31	; Exp
	997	[155]	MUL      	24 24 25
	998	[155]	GETUPVAL 	25 8	; mark
	999	[155]	LOADK    	26 -133	; "length"
	1000	[155]	CALL     	25 2 2
	1001	[155]	DIV      	24 24 25
	1002	[155]	ADD      	23 23 24
	1003	[155]	GETUPVAL 	24 22	; sym
	1004	[155]	LOADK    	25 -134	; "~"
	1005	[155]	CALL     	24 2 2
	1006	[155]	GETGLOBAL	25 -31	; Exp
	1007	[155]	MUL      	24 24 25
	1008	[155]	GETUPVAL 	25 8	; mark
	1009	[155]	LOADK    	26 -135	; "bitnot"
	1010	[155]	CALL     	25 2 2
	1011	[155]	DIV      	24 24 25
	1012	[155]	ADD      	23 23 24
	1013	[155]	MOVE     	24 14
	1014	[155]	LOADK    	25 -136	; "not"
	1015	[155]	CALL     	24 2 2
	1016	[155]	GETGLOBAL	25 -31	; Exp
	1017	[155]	MUL      	24 24 25
	1018	[155]	GETUPVAL 	25 8	; mark
	1019	[155]	LOADK    	26 -136	; "not"
	1020	[155]	CALL     	25 2 2
	1021	[155]	DIV      	24 24 25
	1022	[155]	ADD      	23 23 24
	1023	[155]	GETGLOBAL	24 -87	; TblComprehension
	1024	[155]	ADD      	23 23 24
	1025	[155]	GETGLOBAL	24 -137	; TableLit
	1026	[155]	ADD      	23 23 24
	1027	[155]	GETGLOBAL	24 -84	; Comprehension
	1028	[155]	ADD      	23 23 24
	1029	[155]	GETGLOBAL	24 -138	; FunLit
	1030	[155]	ADD      	23 23 24
	1031	[155]	GETUPVAL 	24 29	; Num
	1032	[155]	ADD      	23 23 24
	1033	[155]	SETTABLE 	21 -128 23	; "SimpleValue" -
	1034	[156]	GETGLOBAL	23 -125	; Chain
	1035	[156]	GETGLOBAL	24 -140	; Callable
	1036	[156]	ADD      	23 23 24
	1037	[156]	GETUPVAL 	24 12	; Ct
	1038	[156]	GETGLOBAL	25 -141	; InvokeArgs
	1039	[156]	POW      	25 25 -11	; - -1
	1040	[156]	CALL     	24 2 2
	1041	[156]	MUL      	23 23 24
	1042	[156]	GETUPVAL 	24 30	; join_chain
	1043	[156]	DIV      	23 23 24
	1044	[156]	SETTABLE 	21 -139 23	; "ChainValue" -
	1045	[157]	GETUPVAL 	23 17	; pos
	1046	[157]	GETGLOBAL	24 -128	; SimpleValue
	1047	[157]	GETUPVAL 	25 12	; Ct
	1048	[157]	GETGLOBAL	26 -142	; KeyValueList
	1049	[157]	CALL     	25 2 2
	1050	[157]	GETUPVAL 	26 8	; mark
	1051	[157]	LOADK    	27 -143	; "table"
	1052	[157]	CALL     	26 2 2
	1053	[157]	DIV      	25 25 26
	1054	[157]	ADD      	24 24 25
	1055	[157]	GETGLOBAL	25 -139	; ChainValue
	1056	[157]	ADD      	24 24 25
	1057	[157]	GETGLOBAL	25 -144	; String
	1058	[157]	ADD      	24 24 25
	1059	[157]	CALL     	23 2 2
	1060	[157]	SETTABLE 	21 -126 23	; "Value" -
	1061	[158]	GETGLOBAL	23 -31	; Exp
	1062	[158]	SETTABLE 	21 -145 23	; "SliceValue" -
	1063	[159]	GETUPVAL 	23 2	; Space
	1064	[159]	GETGLOBAL	24 -146	; DoubleString
	1065	[159]	MUL      	23 23 24
	1066	[159]	GETUPVAL 	24 2	; Space
	1067	[159]	GETGLOBAL	25 -147	; SingleString
	1068	[159]	MUL      	24 24 25
	1069	[159]	ADD      	23 23 24
	1070	[159]	GETGLOBAL	24 -148	; LuaString
	1071	[159]	ADD      	23 23 24
	1072	[159]	SETTABLE 	21 -144 23	; "String" -
	1073	[160]	GETUPVAL 	23 31	; simple_string
	1074	[160]	LOADK    	24 -149	; "'"
	1075	[160]	CALL     	23 2 2
	1076	[160]	SETTABLE 	21 -147 23	; "SingleString" -
	1077	[161]	GETUPVAL 	23 31	; simple_string
	1078	[161]	LOADK    	24 -150	; "\""
	1079	[161]	LOADBOOL 	25 1 0
	1080	[161]	CALL     	23 3 2
	1081	[161]	SETTABLE 	21 -146 23	; "DoubleString" -
	1082	[162]	GETUPVAL 	23 32	; Cg
	1083	[162]	GETGLOBAL	24 -151	; LuaStringOpen
	1084	[162]	LOADK    	25 -152	; "string_open"
	1085	[162]	CALL     	23 3 2
	1086	[162]	GETUPVAL 	24 33	; Cb
	1087	[162]	LOADK    	25 -152	; "string_open"
	1088	[162]	CALL     	24 2 2
	1089	[162]	MUL      	23 23 24
	1090	[162]	GETUPVAL 	24 13	; Break
	1091	[162]	POW      	24 24 -11	; - -1
	1092	[162]	MUL      	23 23 24
	1093	[162]	GETUPVAL 	24 4	; C
	1094	[162]	GETUPVAL 	25 1	; Cmt
	1095	[162]	GETUPVAL 	26 4	; C
	1096	[162]	GETGLOBAL	27 -153	; LuaStringClose
	1097	[162]	CALL     	26 2 2
	1098	[162]	GETUPVAL 	27 33	; Cb
	1099	[162]	LOADK    	28 -152	; "string_open"
	1100	[162]	CALL     	27 2 2
	1101	[162]	MUL      	26 26 27
	1102	[162]	GETUPVAL 	27 34	; check_lua_string
	1103	[162]	CALL     	25 3 2
	1104	[162]	SUB      	25 -14 25	; 1 -
	1105	[162]	POW      	25 25 -1	; - 0
	1106	[162]	CALL     	24 2 2
	1107	[162]	MUL      	23 23 24
	1108	[162]	GETGLOBAL	24 -153	; LuaStringClose
	1109	[162]	MUL      	23 23 24
	1110	[162]	GETUPVAL 	24 8	; mark
	1111	[162]	LOADK    	25 -154	; "string"
	1112	[162]	CALL     	24 2 2
	1113	[162]	DIV      	23 23 24
	1114	[162]	SETTABLE 	21 -148 23	; "LuaString" -
	1115	[163]	GETUPVAL 	23 22	; sym
	1116	[163]	LOADK    	24 -85	; "["
	1117	[163]	CALL     	23 2 2
	1118	[163]	GETUPVAL 	24 10	; P
	1119	[163]	LOADK    	25 -78	; "="
	1120	[163]	CALL     	24 2 2
	1121	[163]	POW      	24 24 -1	; - 0
	1122	[163]	MUL      	23 23 24
	1123	[163]	MUL      	23 23 -85	; - "["
	1124	[163]	GETUPVAL 	24 6	; trim
	1125	[163]	DIV      	23 23 24
	1126	[163]	SETTABLE 	21 -151 23	; "LuaStringOpen" -
	1127	[164]	GETUPVAL 	23 10	; P
	1128	[164]	LOADK    	24 -78	; "="
	1129	[164]	CALL     	23 2 2
	1130	[164]	POW      	23 23 -1	; - 0
	1131	[164]	MUL      	23 -86 23	; "]" -
	1132	[164]	MUL      	23 23 -86	; - "]"
	1133	[164]	SETTABLE 	21 -153 23	; "LuaStringClose" -
	1134	[165]	GETUPVAL 	23 17	; pos
	1135	[165]	GETUPVAL 	24 8	; mark
	1136	[165]	LOADK    	25 -155	; "ref"
	1137	[165]	CALL     	24 2 2
	1138	[165]	DIV      	24 16 24
	1139	[165]	CALL     	23 2 2
	1140	[165]	ADD      	23 23 17
	1141	[165]	ADD      	23 23 19
	1142	[165]	GETGLOBAL	24 -156	; Parens
	1143	[165]	GETUPVAL 	25 8	; mark
	1144	[165]	LOADK    	26 -157	; "parens"
	1145	[165]	CALL     	25 2 2
	1146	[165]	DIV      	24 24 25
	1147	[165]	ADD      	23 23 24
	1148	[165]	SETTABLE 	21 -140 23	; "Callable" -
	1149	[166]	GETUPVAL 	23 22	; sym
	1150	[166]	LOADK    	24 -158	; "("
	1151	[166]	CALL     	23 2 2
	1152	[166]	GETUPVAL 	24 21	; SpaceBreak
	1153	[166]	POW      	24 24 -1	; - 0
	1154	[166]	MUL      	23 23 24
	1155	[166]	GETGLOBAL	24 -31	; Exp
	1156	[166]	MUL      	23 23 24
	1157	[166]	GETUPVAL 	24 21	; SpaceBreak
	1158	[166]	POW      	24 24 -1	; - 0
	1159	[166]	MUL      	23 23 24
	1160	[166]	GETUPVAL 	24 22	; sym
	1161	[166]	LOADK    	25 -159	; ")"
	1162	[166]	CALL     	24 2 2
	1163	[166]	MUL      	23 23 24
	1164	[166]	SETTABLE 	21 -156 23	; "Parens" -
	1165	[167]	GETUPVAL 	23 35	; symx
	1166	[167]	LOADK    	24 -158	; "("
	1167	[167]	CALL     	23 2 2
	1168	[167]	GETUPVAL 	24 21	; SpaceBreak
	1169	[167]	POW      	24 24 -1	; - 0
	1170	[167]	MUL      	23 23 24
	1171	[167]	GETUPVAL 	24 12	; Ct
	1172	[167]	GETGLOBAL	25 -161	; FnArgsExpList
	1173	[167]	POW      	25 25 -11	; - -1
	1174	[167]	CALL     	24 2 2
	1175	[167]	MUL      	23 23 24
	1176	[167]	GETUPVAL 	24 21	; SpaceBreak
	1177	[167]	POW      	24 24 -1	; - 0
	1178	[167]	MUL      	23 23 24
	1179	[167]	GETUPVAL 	24 22	; sym
	1180	[167]	LOADK    	25 -159	; ")"
	1181	[167]	CALL     	24 2 2
	1182	[167]	MUL      	23 23 24
	1183	[167]	GETUPVAL 	24 22	; sym
	1184	[167]	LOADK    	25 -162	; "!"
	1185	[167]	CALL     	24 2 2
	1186	[167]	GETUPVAL 	25 10	; P
	1187	[167]	LOADK    	26 -78	; "="
	1188	[167]	CALL     	25 2 2
	1189	[167]	UNM      	25 25
	1190	[167]	MUL      	24 24 25
	1191	[167]	GETUPVAL 	25 12	; Ct
	1192	[167]	LOADK    	26 -3	; ""
	1193	[167]	CALL     	25 2 2
	1194	[167]	MUL      	24 24 25
	1195	[167]	ADD      	23 23 24
	1196	[167]	SETTABLE 	21 -160 23	; "FnArgs" -
	1197	[168]	GETGLOBAL	23 -31	; Exp
	1198	[168]	GETUPVAL 	24 13	; Break
	1199	[168]	GETUPVAL 	25 22	; sym
	1200	[168]	LOADK    	26 -54	; ","
	1201	[168]	CALL     	25 2 2
	1202	[168]	ADD      	24 24 25
	1203	[168]	GETUPVAL 	25 36	; White
	1204	[168]	MUL      	24 24 25
	1205	[168]	GETGLOBAL	25 -31	; Exp
	1206	[168]	MUL      	24 24 25
	1207	[168]	POW      	24 24 -1	; - 0
	1208	[168]	MUL      	23 23 24
	1209	[168]	SETTABLE 	21 -161 23	; "FnArgsExpList" -
	1210	[169]	GETGLOBAL	23 -140	; Callable
	1211	[169]	GETGLOBAL	24 -144	; String
	1212	[169]	ADD      	23 23 24
	1213	[169]	GETUPVAL 	24 25	; S
	1214	[169]	LOADK    	25 -163	; ".\\"
	1215	[169]	CALL     	24 2 2
	1216	[169]	UNM      	24 24
	1217	[169]	ADD      	23 23 24
	1218	[169]	GETGLOBAL	24 -164	; ChainItems
	1219	[169]	MUL      	23 23 24
	1220	[169]	GETUPVAL 	24 8	; mark
	1221	[169]	LOADK    	25 -165	; "chain"
	1222	[169]	CALL     	24 2 2
	1223	[169]	DIV      	23 23 24
	1224	[169]	GETUPVAL 	24 2	; Space
	1225	[169]	GETGLOBAL	25 -166	; DotChainItem
	1226	[169]	GETGLOBAL	26 -164	; ChainItems
	1227	[169]	POW      	26 26 -11	; - -1
	1228	[169]	MUL      	25 25 26
	1229	[169]	GETGLOBAL	26 -167	; ColonChain
	1230	[169]	ADD      	25 25 26
	1231	[169]	MUL      	24 24 25
	1232	[169]	GETUPVAL 	25 8	; mark
	1233	[169]	LOADK    	26 -165	; "chain"
	1234	[169]	CALL     	25 2 2
	1235	[169]	DIV      	24 24 25
	1236	[169]	ADD      	23 23 24
	1237	[169]	SETTABLE 	21 -125 23	; "Chain" -
	1238	[170]	GETGLOBAL	23 -168	; ChainItem
	1239	[170]	POW      	23 23 -14	; - 1
	1240	[170]	GETGLOBAL	24 -167	; ColonChain
	1241	[170]	POW      	24 24 -11	; - -1
	1242	[170]	MUL      	23 23 24
	1243	[170]	GETGLOBAL	24 -167	; ColonChain
	1244	[170]	ADD      	23 23 24
	1245	[170]	SETTABLE 	21 -164 23	; "ChainItems" -
	1246	[171]	GETGLOBAL	23 -169	; Invoke
	1247	[171]	GETGLOBAL	24 -166	; DotChainItem
	1248	[171]	ADD      	23 23 24
	1249	[171]	GETGLOBAL	24 -170	; Slice
	1250	[171]	ADD      	23 23 24
	1251	[171]	GETUPVAL 	24 35	; symx
	1252	[171]	LOADK    	25 -85	; "["
	1253	[171]	CALL     	24 2 2
	1254	[171]	GETGLOBAL	25 -31	; Exp
	1255	[171]	MUL      	24 24 25
	1256	[171]	GETUPVAL 	25 8	; mark
	1257	[171]	LOADK    	26 -171	; "index"
	1258	[171]	CALL     	25 2 2
	1259	[171]	DIV      	24 24 25
	1260	[171]	GETUPVAL 	25 22	; sym
	1261	[171]	LOADK    	26 -86	; "]"
	1262	[171]	CALL     	25 2 2
	1263	[171]	MUL      	24 24 25
	1264	[171]	ADD      	23 23 24
	1265	[171]	SETTABLE 	21 -168 23	; "ChainItem" -
	1266	[172]	GETUPVAL 	23 35	; symx
	1267	[172]	LOADK    	24 -172	; "."
	1268	[172]	CALL     	23 2 2
	1269	[172]	GETUPVAL 	24 7	; _Name
	1270	[172]	MUL      	23 23 24
	1271	[172]	GETUPVAL 	24 8	; mark
	1272	[172]	LOADK    	25 -173	; "dot"
	1273	[172]	CALL     	24 2 2
	1274	[172]	DIV      	23 23 24
	1275	[172]	SETTABLE 	21 -166 23	; "DotChainItem" -
	1276	[173]	GETUPVAL 	23 35	; symx
	1277	[173]	LOADK    	24 -52	; "\\"
	1278	[173]	CALL     	23 2 2
	1279	[173]	GETUPVAL 	24 7	; _Name
	1280	[173]	MUL      	23 23 24
	1281	[173]	GETUPVAL 	24 8	; mark
	1282	[173]	LOADK    	25 -53	; "colon"
	1283	[173]	CALL     	24 2 2
	1284	[173]	DIV      	23 23 24
	1285	[173]	SETTABLE 	21 -174 23	; "ColonChainItem" -
	1286	[174]	GETGLOBAL	23 -174	; ColonChainItem
	1287	[174]	GETGLOBAL	24 -169	; Invoke
	1288	[174]	GETGLOBAL	25 -164	; ChainItems
	1289	[174]	POW      	25 25 -11	; - -1
	1290	[174]	MUL      	24 24 25
	1291	[174]	POW      	24 24 -11	; - -1
	1292	[174]	MUL      	23 23 24
	1293	[174]	SETTABLE 	21 -167 23	; "ColonChain" -
	1294	[175]	GETUPVAL 	23 35	; symx
	1295	[175]	LOADK    	24 -85	; "["
	1296	[175]	CALL     	23 2 2
	1297	[175]	GETGLOBAL	24 -145	; SliceValue
	1298	[175]	GETUPVAL 	25 9	; Cc
	1299	[175]	LOADK    	26 -14	; 1
	1300	[175]	CALL     	25 2 2
	1301	[175]	ADD      	24 24 25
	1302	[175]	MUL      	23 23 24
	1303	[175]	GETUPVAL 	24 22	; sym
	1304	[175]	LOADK    	25 -54	; ","
	1305	[175]	CALL     	24 2 2
	1306	[175]	MUL      	23 23 24
	1307	[175]	GETGLOBAL	24 -145	; SliceValue
	1308	[175]	GETUPVAL 	25 9	; Cc
	1309	[175]	LOADK    	26 -3	; ""
	1310	[175]	CALL     	25 2 2
	1311	[175]	ADD      	24 24 25
	1312	[175]	MUL      	23 23 24
	1313	[175]	GETUPVAL 	24 22	; sym
	1314	[175]	LOADK    	25 -54	; ","
	1315	[175]	CALL     	24 2 2
	1316	[175]	GETGLOBAL	25 -145	; SliceValue
	1317	[175]	MUL      	24 24 25
	1318	[175]	POW      	24 24 -11	; - -1
	1319	[175]	MUL      	23 23 24
	1320	[175]	GETUPVAL 	24 22	; sym
	1321	[175]	LOADK    	25 -86	; "]"
	1322	[175]	CALL     	24 2 2
	1323	[175]	MUL      	23 23 24
	1324	[175]	GETUPVAL 	24 8	; mark
	1325	[175]	LOADK    	25 -175	; "slice"
	1326	[175]	CALL     	24 2 2
	1327	[175]	DIV      	23 23 24
	1328	[175]	SETTABLE 	21 -170 23	; "Slice" -
	1329	[176]	GETGLOBAL	23 -160	; FnArgs
	1330	[176]	GETUPVAL 	24 8	; mark
	1331	[176]	LOADK    	25 -176	; "call"
	1332	[176]	CALL     	24 2 2
	1333	[176]	DIV      	23 23 24
	1334	[176]	GETGLOBAL	24 -147	; SingleString
	1335	[176]	GETUPVAL 	25 37	; wrap_func_arg
	1336	[176]	DIV      	24 24 25
	1337	[176]	ADD      	23 23 24
	1338	[176]	GETGLOBAL	24 -146	; DoubleString
	1339	[176]	GETUPVAL 	25 37	; wrap_func_arg
	1340	[176]	DIV      	24 24 25
	1341	[176]	ADD      	23 23 24
	1342	[176]	GETUPVAL 	24 15	; L
	1343	[176]	GETUPVAL 	25 10	; P
	1344	[176]	LOADK    	26 -85	; "["
	1345	[176]	CALL     	25 2 0
	1346	[176]	CALL     	24 0 2
	1347	[176]	GETGLOBAL	25 -148	; LuaString
	1348	[176]	MUL      	24 24 25
	1349	[176]	GETUPVAL 	25 37	; wrap_func_arg
	1350	[176]	DIV      	24 24 25
	1351	[176]	ADD      	23 23 24
	1352	[176]	SETTABLE 	21 -169 23	; "Invoke" -
	1353	[177]	GETGLOBAL	23 -178	; KeyValue
	1354	[177]	GETUPVAL 	24 12	; Ct
	1355	[177]	GETGLOBAL	25 -31	; Exp
	1356	[177]	CALL     	24 2 2
	1357	[177]	ADD      	23 23 24
	1358	[177]	SETTABLE 	21 -177 23	; "TableValue" -
	1359	[178]	GETUPVAL 	23 22	; sym
	1360	[178]	LOADK    	24 -88	; "{"
	1361	[178]	CALL     	23 2 2
	1362	[178]	GETUPVAL 	24 12	; Ct
	1363	[178]	GETGLOBAL	25 -179	; TableValueList
	1364	[178]	POW      	25 25 -11	; - -1
	1365	[178]	GETUPVAL 	26 22	; sym
	1366	[178]	LOADK    	27 -54	; ","
	1367	[178]	CALL     	26 2 2
	1368	[178]	POW      	26 26 -11	; - -1
	1369	[178]	MUL      	25 25 26
	1370	[178]	GETUPVAL 	26 21	; SpaceBreak
	1371	[178]	GETGLOBAL	27 -180	; TableLitLine
	1372	[178]	MUL      	26 26 27
	1373	[178]	GETUPVAL 	27 22	; sym
	1374	[178]	LOADK    	28 -54	; ","
	1375	[178]	CALL     	27 2 2
	1376	[178]	POW      	27 27 -11	; - -1
	1377	[178]	GETUPVAL 	28 21	; SpaceBreak
	1378	[178]	MUL      	27 27 28
	1379	[178]	GETGLOBAL	28 -180	; TableLitLine
	1380	[178]	MUL      	27 27 28
	1381	[178]	POW      	27 27 -1	; - 0
	1382	[178]	MUL      	26 26 27
	1383	[178]	GETUPVAL 	27 22	; sym
	1384	[178]	LOADK    	28 -54	; ","
	1385	[178]	CALL     	27 2 2
	1386	[178]	POW      	27 27 -11	; - -1
	1387	[178]	MUL      	26 26 27
	1388	[178]	POW      	26 26 -11	; - -1
	1389	[178]	MUL      	25 25 26
	1390	[178]	CALL     	24 2 2
	1391	[178]	MUL      	23 23 24
	1392	[178]	GETUPVAL 	24 36	; White
	1393	[178]	MUL      	23 23 24
	1394	[178]	GETUPVAL 	24 22	; sym
	1395	[178]	LOADK    	25 -89	; "}"
	1396	[178]	CALL     	24 2 2
	1397	[178]	MUL      	23 23 24
	1398	[178]	GETUPVAL 	24 8	; mark
	1399	[178]	LOADK    	25 -143	; "table"
	1400	[178]	CALL     	24 2 2
	1401	[178]	DIV      	23 23 24
	1402	[178]	SETTABLE 	21 -137 23	; "TableLit" -
	1403	[179]	GETGLOBAL	23 -177	; TableValue
	1404	[179]	GETUPVAL 	24 22	; sym
	1405	[179]	LOADK    	25 -54	; ","
	1406	[179]	CALL     	24 2 2
	1407	[179]	GETGLOBAL	25 -177	; TableValue
	1408	[179]	MUL      	24 24 25
	1409	[179]	POW      	24 24 -1	; - 0
	1410	[179]	MUL      	23 23 24
	1411	[179]	SETTABLE 	21 -179 23	; "TableValueList" -
	1412	[180]	GETGLOBAL	23 -39	; PushIndent
	1413	[180]	GETGLOBAL	24 -179	; TableValueList
	1414	[180]	GETGLOBAL	25 -41	; PopIndent
	1415	[180]	MUL      	24 24 25
	1416	[180]	GETGLOBAL	25 -41	; PopIndent
	1417	[180]	GETUPVAL 	26 38	; Cut
	1418	[180]	MUL      	25 25 26
	1419	[180]	ADD      	24 24 25
	1420	[180]	MUL      	23 23 24
	1421	[180]	GETUPVAL 	24 2	; Space
	1422	[180]	ADD      	23 23 24
	1423	[180]	SETTABLE 	21 -180 23	; "TableLitLine" -
	1424	[181]	GETUPVAL 	23 12	; Ct
	1425	[181]	GETGLOBAL	24 -182	; KeyValueLine
	1426	[181]	GETUPVAL 	25 21	; SpaceBreak
	1427	[181]	POW      	25 25 -14	; - 1
	1428	[181]	GETGLOBAL	26 -182	; KeyValueLine
	1429	[181]	MUL      	25 25 26
	1430	[181]	POW      	25 25 -1	; - 0
	1431	[181]	MUL      	24 24 25
	1432	[181]	CALL     	23 2 2
	1433	[181]	SETTABLE 	21 -181 23	; "TableBlockInner" -
	1434	[182]	GETUPVAL 	23 21	; SpaceBreak
	1435	[182]	POW      	23 23 -14	; - 1
	1436	[182]	GETGLOBAL	24 -38	; Advance
	1437	[182]	MUL      	23 23 24
	1438	[182]	GETUPVAL 	24 23	; ensure
	1439	[182]	GETGLOBAL	25 -181	; TableBlockInner
	1440	[182]	GETGLOBAL	26 -41	; PopIndent
	1441	[182]	CALL     	24 3 2
	1442	[182]	MUL      	23 23 24
	1443	[182]	GETUPVAL 	24 8	; mark
	1444	[182]	LOADK    	25 -143	; "table"
	1445	[182]	CALL     	24 2 2
	1446	[182]	DIV      	23 23 24
	1447	[182]	SETTABLE 	21 -94 23	; "TableBlock" -
	1448	[183]	MOVE     	23 14
	1449	[183]	LOADK    	24 -183	; "class"
	1450	[183]	CALL     	23 2 2
	1451	[183]	GETUPVAL 	24 10	; P
	1452	[183]	LOADK    	25 -184	; ":"
	1453	[183]	CALL     	24 2 2
	1454	[183]	UNM      	24 24
	1455	[183]	MUL      	23 23 24
	1456	[183]	GETGLOBAL	24 -124	; Assignable
	1457	[183]	GETUPVAL 	25 9	; Cc
	1458	[183]	LOADNIL  	26 26
	1459	[183]	CALL     	25 2 2
	1460	[183]	ADD      	24 24 25
	1461	[183]	MUL      	23 23 24
	1462	[183]	MOVE     	24 14
	1463	[183]	LOADK    	25 -185	; "extends"
	1464	[183]	CALL     	24 2 2
	1465	[183]	GETGLOBAL	25 -40	; PreventIndent
	1466	[183]	MUL      	24 24 25
	1467	[183]	GETUPVAL 	25 23	; ensure
	1468	[183]	GETGLOBAL	26 -31	; Exp
	1469	[183]	GETGLOBAL	27 -41	; PopIndent
	1470	[183]	CALL     	25 3 2
	1471	[183]	MUL      	24 24 25
	1472	[183]	GETUPVAL 	25 4	; C
	1473	[183]	LOADK    	26 -3	; ""
	1474	[183]	CALL     	25 2 2
	1475	[183]	ADD      	24 24 25
	1476	[183]	POW      	24 24 -11	; - -1
	1477	[183]	MUL      	23 23 24
	1478	[183]	GETGLOBAL	24 -186	; ClassBlock
	1479	[183]	GETUPVAL 	25 12	; Ct
	1480	[183]	LOADK    	26 -3	; ""
	1481	[183]	CALL     	25 2 2
	1482	[183]	ADD      	24 24 25
	1483	[183]	MUL      	23 23 24
	1484	[183]	GETUPVAL 	24 8	; mark
	1485	[183]	LOADK    	25 -183	; "class"
	1486	[183]	CALL     	24 2 2
	1487	[183]	DIV      	23 23 24
	1488	[183]	SETTABLE 	21 -129 23	; "ClassDecl" -
	1489	[184]	GETUPVAL 	23 21	; SpaceBreak
	1490	[184]	POW      	23 23 -14	; - 1
	1491	[184]	GETGLOBAL	24 -38	; Advance
	1492	[184]	MUL      	23 23 24
	1493	[184]	GETUPVAL 	24 12	; Ct
	1494	[184]	GETGLOBAL	25 -187	; ClassLine
	1495	[184]	GETUPVAL 	26 21	; SpaceBreak
	1496	[184]	POW      	26 26 -14	; - 1
	1497	[184]	GETGLOBAL	27 -187	; ClassLine
	1498	[184]	MUL      	26 26 27
	1499	[184]	POW      	26 26 -1	; - 0
	1500	[184]	MUL      	25 25 26
	1501	[184]	CALL     	24 2 2
	1502	[184]	MUL      	23 23 24
	1503	[184]	GETGLOBAL	24 -41	; PopIndent
	1504	[184]	MUL      	23 23 24
	1505	[184]	SETTABLE 	21 -186 23	; "ClassBlock" -
	1506	[185]	GETGLOBAL	23 -15	; CheckIndent
	1507	[185]	GETGLOBAL	24 -142	; KeyValueList
	1508	[185]	GETUPVAL 	25 8	; mark
	1509	[185]	LOADK    	26 -188	; "props"
	1510	[185]	CALL     	25 2 2
	1511	[185]	DIV      	24 24 25
	1512	[185]	GETGLOBAL	25 -16	; Statement
	1513	[185]	GETUPVAL 	26 8	; mark
	1514	[185]	LOADK    	27 -189	; "stm"
	1515	[185]	CALL     	26 2 2
	1516	[185]	DIV      	25 25 26
	1517	[185]	ADD      	24 24 25
	1518	[185]	GETGLOBAL	25 -31	; Exp
	1519	[185]	GETUPVAL 	26 8	; mark
	1520	[185]	LOADK    	27 -189	; "stm"
	1521	[185]	CALL     	26 2 2
	1522	[185]	DIV      	25 25 26
	1523	[185]	ADD      	24 24 25
	1524	[185]	GETUPVAL 	25 22	; sym
	1525	[185]	LOADK    	26 -54	; ","
	1526	[185]	CALL     	25 2 2
	1527	[185]	POW      	25 25 -11	; - -1
	1528	[185]	MUL      	24 24 25
	1529	[185]	MUL      	23 23 24
	1530	[185]	SETTABLE 	21 -187 23	; "ClassLine" -
	1531	[186]	MOVE     	23 14
	1532	[186]	LOADK    	24 -190	; "export"
	1533	[186]	CALL     	23 2 2
	1534	[186]	GETUPVAL 	24 9	; Cc
	1535	[186]	LOADK    	25 -183	; "class"
	1536	[186]	CALL     	24 2 2
	1537	[186]	GETGLOBAL	25 -129	; ClassDecl
	1538	[186]	MUL      	24 24 25
	1539	[186]	MOVE     	25 15
	1540	[186]	LOADK    	26 -43	; "*"
	1541	[186]	CALL     	25 2 2
	1542	[186]	ADD      	24 24 25
	1543	[186]	MOVE     	25 15
	1544	[186]	LOADK    	26 -44	; "^"
	1545	[186]	CALL     	25 2 2
	1546	[186]	ADD      	24 24 25
	1547	[186]	GETUPVAL 	25 12	; Ct
	1548	[186]	GETGLOBAL	26 -46	; NameList
	1549	[186]	CALL     	25 2 2
	1550	[186]	GETUPVAL 	26 22	; sym
	1551	[186]	LOADK    	27 -78	; "="
	1552	[186]	CALL     	26 2 2
	1553	[186]	GETUPVAL 	27 12	; Ct
	1554	[186]	GETGLOBAL	28 -58	; ExpListLow
	1555	[186]	CALL     	27 2 2
	1556	[186]	MUL      	26 26 27
	1557	[186]	POW      	26 26 -11	; - -1
	1558	[186]	MUL      	25 25 26
	1559	[186]	ADD      	24 24 25
	1560	[186]	MUL      	23 23 24
	1561	[186]	GETUPVAL 	24 8	; mark
	1562	[186]	LOADK    	25 -190	; "export"
	1563	[186]	CALL     	24 2 2
	1564	[186]	DIV      	23 23 24
	1565	[186]	SETTABLE 	21 -25 23	; "Export" -
	1566	[187]	GETUPVAL 	23 22	; sym
	1567	[187]	LOADK    	24 -184	; ":"
	1568	[187]	CALL     	23 2 2
	1569	[187]	GETUPVAL 	24 28	; SomeSpace
	1570	[187]	UNM      	24 24
	1571	[187]	MUL      	23 23 24
	1572	[187]	MUL      	23 23 16
	1573	[187]	GETUPVAL 	24 39	; lpeg
	1574	[187]	GETTABLE 	24 24 -191	; "Cp"
	1575	[187]	CALL     	24 1 2
	1576	[187]	MUL      	23 23 24
	1577	[187]	GETUPVAL 	24 40	; self_assign
	1578	[187]	DIV      	23 23 24
	1579	[187]	GETUPVAL 	24 12	; Ct
	1580	[187]	GETUPVAL 	25 22	; sym
	1581	[187]	LOADK    	26 -85	; "["
	1582	[187]	CALL     	25 2 2
	1583	[187]	GETGLOBAL	26 -31	; Exp
	1584	[187]	MUL      	25 25 26
	1585	[187]	GETUPVAL 	26 22	; sym
	1586	[187]	LOADK    	27 -86	; "]"
	1587	[187]	CALL     	26 2 2
	1588	[187]	MUL      	25 25 26
	1589	[187]	ADD      	25 18 25
	1590	[187]	GETUPVAL 	26 2	; Space
	1591	[187]	GETGLOBAL	27 -146	; DoubleString
	1592	[187]	MUL      	26 26 27
	1593	[187]	ADD      	25 25 26
	1594	[187]	GETUPVAL 	26 2	; Space
	1595	[187]	GETGLOBAL	27 -147	; SingleString
	1596	[187]	MUL      	26 26 27
	1597	[187]	ADD      	25 25 26
	1598	[187]	GETUPVAL 	26 35	; symx
	1599	[187]	LOADK    	27 -184	; ":"
	1600	[187]	CALL     	26 2 2
	1601	[187]	MUL      	25 25 26
	1602	[187]	GETGLOBAL	26 -31	; Exp
	1603	[187]	GETGLOBAL	27 -94	; TableBlock
	1604	[187]	ADD      	26 26 27
	1605	[187]	GETUPVAL 	27 21	; SpaceBreak
	1606	[187]	POW      	27 27 -14	; - 1
	1607	[187]	GETGLOBAL	28 -31	; Exp
	1608	[187]	MUL      	27 27 28
	1609	[187]	ADD      	26 26 27
	1610	[187]	MUL      	25 25 26
	1611	[187]	CALL     	24 2 2
	1612	[187]	ADD      	23 23 24
	1613	[187]	SETTABLE 	21 -178 23	; "KeyValue" -
	1614	[188]	GETGLOBAL	23 -178	; KeyValue
	1615	[188]	GETUPVAL 	24 22	; sym
	1616	[188]	LOADK    	25 -54	; ","
	1617	[188]	CALL     	24 2 2
	1618	[188]	GETGLOBAL	25 -178	; KeyValue
	1619	[188]	MUL      	24 24 25
	1620	[188]	POW      	24 24 -1	; - 0
	1621	[188]	MUL      	23 23 24
	1622	[188]	SETTABLE 	21 -142 23	; "KeyValueList" -
	1623	[189]	GETGLOBAL	23 -15	; CheckIndent
	1624	[189]	GETGLOBAL	24 -142	; KeyValueList
	1625	[189]	MUL      	23 23 24
	1626	[189]	GETUPVAL 	24 22	; sym
	1627	[189]	LOADK    	25 -54	; ","
	1628	[189]	CALL     	24 2 2
	1629	[189]	POW      	24 24 -11	; - -1
	1630	[189]	MUL      	23 23 24
	1631	[189]	SETTABLE 	21 -182 23	; "KeyValueLine" -
	1632	[190]	GETUPVAL 	23 22	; sym
	1633	[190]	LOADK    	24 -158	; "("
	1634	[190]	CALL     	23 2 2
	1635	[190]	GETUPVAL 	24 36	; White
	1636	[190]	MUL      	23 23 24
	1637	[190]	GETUPVAL 	24 12	; Ct
	1638	[190]	GETGLOBAL	25 -193	; FnArgDefList
	1639	[190]	POW      	25 25 -11	; - -1
	1640	[190]	CALL     	24 2 2
	1641	[190]	MUL      	23 23 24
	1642	[190]	MOVE     	24 14
	1643	[190]	LOADK    	25 -194	; "using"
	1644	[190]	CALL     	24 2 2
	1645	[190]	GETUPVAL 	25 12	; Ct
	1646	[190]	GETGLOBAL	26 -46	; NameList
	1647	[190]	GETUPVAL 	27 2	; Space
	1648	[190]	MUL      	27 27 -195	; - "nil"
	1649	[190]	ADD      	26 26 27
	1650	[190]	CALL     	25 2 2
	1651	[190]	MUL      	24 24 25
	1652	[190]	GETUPVAL 	25 12	; Ct
	1653	[190]	LOADK    	26 -3	; ""
	1654	[190]	CALL     	25 2 2
	1655	[190]	ADD      	24 24 25
	1656	[190]	MUL      	23 23 24
	1657	[190]	GETUPVAL 	24 36	; White
	1658	[190]	MUL      	23 23 24
	1659	[190]	GETUPVAL 	24 22	; sym
	1660	[190]	LOADK    	25 -159	; ")"
	1661	[190]	CALL     	24 2 2
	1662	[190]	MUL      	23 23 24
	1663	[190]	GETUPVAL 	24 12	; Ct
	1664	[190]	LOADK    	25 -3	; ""
	1665	[190]	CALL     	24 2 2
	1666	[190]	GETUPVAL 	25 12	; Ct
	1667	[190]	LOADK    	26 -3	; ""
	1668	[190]	CALL     	25 2 2
	1669	[190]	MUL      	24 24 25
	1670	[190]	ADD      	23 23 24
	1671	[190]	SETTABLE 	21 -192 23	; "FnArgsDef" -
	1672	[191]	GETGLOBAL	23 -196	; FnArgDef
	1673	[191]	GETUPVAL 	24 22	; sym
	1674	[191]	LOADK    	25 -54	; ","
	1675	[191]	CALL     	24 2 2
	1676	[191]	GETUPVAL 	25 13	; Break
	1677	[191]	ADD      	24 24 25
	1678	[191]	GETUPVAL 	25 36	; White
	1679	[191]	MUL      	24 24 25
	1680	[191]	GETGLOBAL	25 -196	; FnArgDef
	1681	[191]	MUL      	24 24 25
	1682	[191]	POW      	24 24 -1	; - 0
	1683	[191]	MUL      	23 23 24
	1684	[191]	GETUPVAL 	24 22	; sym
	1685	[191]	LOADK    	25 -54	; ","
	1686	[191]	CALL     	24 2 2
	1687	[191]	GETUPVAL 	25 13	; Break
	1688	[191]	ADD      	24 24 25
	1689	[191]	GETUPVAL 	25 36	; White
	1690	[191]	MUL      	24 24 25
	1691	[191]	GETUPVAL 	25 12	; Ct
	1692	[191]	MOVE     	26 19
	1693	[191]	CALL     	25 2 2
	1694	[191]	MUL      	24 24 25
	1695	[191]	POW      	24 24 -1	; - 0
	1696	[191]	MUL      	23 23 24
	1697	[191]	GETUPVAL 	24 12	; Ct
	1698	[191]	MOVE     	25 19
	1699	[191]	CALL     	24 2 2
	1700	[191]	ADD      	23 23 24
	1701	[191]	SETTABLE 	21 -193 23	; "FnArgDefList" -
	1702	[192]	GETUPVAL 	23 12	; Ct
	1703	[192]	ADD      	24 16 17
	1704	[192]	GETUPVAL 	25 22	; sym
	1705	[192]	LOADK    	26 -78	; "="
	1706	[192]	CALL     	25 2 2
	1707	[192]	GETGLOBAL	26 -31	; Exp
	1708	[192]	MUL      	25 25 26
	1709	[192]	POW      	25 25 -11	; - -1
	1710	[192]	MUL      	24 24 25
	1711	[192]	CALL     	23 2 2
	1712	[192]	SETTABLE 	21 -196 23	; "FnArgDef" -
	1713	[193]	GETGLOBAL	23 -192	; FnArgsDef
	1714	[193]	GETUPVAL 	24 22	; sym
	1715	[193]	LOADK    	25 -197	; "->"
	1716	[193]	CALL     	24 2 2
	1717	[193]	GETUPVAL 	25 9	; Cc
	1718	[193]	LOADK    	26 -198	; "slim"
	1719	[193]	CALL     	25 2 2
	1720	[193]	MUL      	24 24 25
	1721	[193]	GETUPVAL 	25 22	; sym
	1722	[193]	LOADK    	26 -199	; "=>"
	1723	[193]	CALL     	25 2 2
	1724	[193]	GETUPVAL 	26 9	; Cc
	1725	[193]	LOADK    	27 -200	; "fat"
	1726	[193]	CALL     	26 2 2
	1727	[193]	MUL      	25 25 26
	1728	[193]	ADD      	24 24 25
	1729	[193]	MUL      	23 23 24
	1730	[193]	GETGLOBAL	24 -36	; Body
	1731	[193]	GETUPVAL 	25 12	; Ct
	1732	[193]	LOADK    	26 -3	; ""
	1733	[193]	CALL     	25 2 2
	1734	[193]	ADD      	24 24 25
	1735	[193]	MUL      	23 23 24
	1736	[193]	GETUPVAL 	24 8	; mark
	1737	[193]	LOADK    	25 -201	; "fndef"
	1738	[193]	CALL     	24 2 2
	1739	[193]	DIV      	23 23 24
	1740	[193]	SETTABLE 	21 -138 23	; "FunLit" -
	1741	[194]	GETUPVAL 	23 22	; sym
	1742	[194]	LOADK    	24 -54	; ","
	1743	[194]	CALL     	23 2 2
	1744	[194]	MUL      	23 23 16
	1745	[194]	POW      	23 23 -1	; - 0
	1746	[194]	MUL      	23 16 23
	1747	[194]	SETTABLE 	21 -46 23	; "NameList" -
	1748	[195]	GETGLOBAL	23 -137	; TableLit
	1749	[195]	ADD      	23 16 23
	1750	[195]	SETTABLE 	21 -202 23	; "NameOrDestructure" -
	1751	[196]	GETGLOBAL	23 -202	; NameOrDestructure
	1752	[196]	GETUPVAL 	24 22	; sym
	1753	[196]	LOADK    	25 -54	; ","
	1754	[196]	CALL     	24 2 2
	1755	[196]	GETGLOBAL	25 -202	; NameOrDestructure
	1756	[196]	MUL      	24 24 25
	1757	[196]	POW      	24 24 -1	; - 0
	1758	[196]	MUL      	23 23 24
	1759	[196]	SETTABLE 	21 -79 23	; "AssignableNameList" -
	1760	[197]	GETGLOBAL	23 -31	; Exp
	1761	[197]	GETUPVAL 	24 22	; sym
	1762	[197]	LOADK    	25 -54	; ","
	1763	[197]	CALL     	24 2 2
	1764	[197]	GETGLOBAL	25 -31	; Exp
	1765	[197]	MUL      	24 24 25
	1766	[197]	POW      	24 24 -1	; - 0
	1767	[197]	MUL      	23 23 24
	1768	[197]	SETTABLE 	21 -27 23	; "ExpList" -
	1769	[198]	GETGLOBAL	23 -31	; Exp
	1770	[198]	GETUPVAL 	24 22	; sym
	1771	[198]	LOADK    	25 -54	; ","
	1772	[198]	CALL     	24 2 2
	1773	[198]	GETUPVAL 	25 22	; sym
	1774	[198]	LOADK    	26 -203	; ";"
	1775	[198]	CALL     	25 2 2
	1776	[198]	ADD      	24 24 25
	1777	[198]	GETGLOBAL	25 -31	; Exp
	1778	[198]	MUL      	24 24 25
	1779	[198]	POW      	24 24 -1	; - 0
	1780	[198]	MUL      	23 23 24
	1781	[198]	SETTABLE 	21 -58 23	; "ExpListLow" -
	1782	[199]	GETUPVAL 	23 10	; P
	1783	[199]	LOADK    	24 -130	; "-"
	1784	[199]	CALL     	23 2 2
	1785	[199]	UNM      	23 23
	1786	[199]	GETGLOBAL	24 -27	; ExpList
	1787	[199]	GETUPVAL 	25 22	; sym
	1788	[199]	LOADK    	26 -54	; ","
	1789	[199]	CALL     	25 2 2
	1790	[199]	GETGLOBAL	26 -94	; TableBlock
	1791	[199]	GETUPVAL 	27 21	; SpaceBreak
	1792	[199]	GETGLOBAL	28 -38	; Advance
	1793	[199]	MUL      	27 27 28
	1794	[199]	GETGLOBAL	28 -204	; ArgBlock
	1795	[199]	MUL      	27 27 28
	1796	[199]	GETGLOBAL	28 -94	; TableBlock
	1797	[199]	POW      	28 28 -11	; - -1
	1798	[199]	MUL      	27 27 28
	1799	[199]	ADD      	26 26 27
	1800	[199]	MUL      	25 25 26
	1801	[199]	GETGLOBAL	26 -94	; TableBlock
	1802	[199]	ADD      	25 25 26
	1803	[199]	POW      	25 25 -11	; - -1
	1804	[199]	MUL      	24 24 25
	1805	[199]	GETGLOBAL	25 -94	; TableBlock
	1806	[199]	ADD      	24 24 25
	1807	[199]	MUL      	23 23 24
	1808	[199]	SETTABLE 	21 -141 23	; "InvokeArgs" -
	1809	[200]	GETGLOBAL	23 -205	; ArgLine
	1810	[200]	GETUPVAL 	24 22	; sym
	1811	[200]	LOADK    	25 -54	; ","
	1812	[200]	CALL     	24 2 2
	1813	[200]	GETUPVAL 	25 21	; SpaceBreak
	1814	[200]	MUL      	24 24 25
	1815	[200]	GETGLOBAL	25 -205	; ArgLine
	1816	[200]	MUL      	24 24 25
	1817	[200]	POW      	24 24 -1	; - 0
	1818	[200]	MUL      	23 23 24
	1819	[200]	GETGLOBAL	24 -41	; PopIndent
	1820	[200]	MUL      	23 23 24
	1821	[200]	SETTABLE 	21 -204 23	; "ArgBlock" -
	1822	[201]	GETGLOBAL	23 -15	; CheckIndent
	1823	[201]	GETGLOBAL	24 -27	; ExpList
	1824	[201]	MUL      	23 23 24
	1825	[201]	SETTABLE 	21 -205 23	; "ArgLine" -
	1826	[202]	SETLIST  	21 1 1	; 1
	1827	[108]	CALL     	20 2 2
	1828	[203]	MOVE     	21 20
	1829	[203]	MOVE     	22 3
	1830	[203]	RETURN   	21 3
	1831	[204]	RETURN   	0 1

function <./moonscript/parse.lua:42,45> (11 instructions, 44 bytes at 0x7f856f4072d0)
3 params, 5 slots, 2 upvalues, 3 locals, 2 constants, 0 functions
	1	[43]	GETUPVAL 	3 0	; state
	2	[43]	SETTABLE 	3 -1 1	; "last_pos" -
	3	[44]	GETUPVAL 	3 1	; _indent
	4	[44]	SELF     	3 3 -2	; "top"
	5	[44]	CALL     	3 2 2
	6	[44]	EQ       	1 3 2
	7	[44]	JMP      	1	; to 9
	8	[44]	LOADBOOL 	3 0 1
	9	[44]	LOADBOOL 	3 1 0
	10	[44]	RETURN   	3 2
	11	[45]	RETURN   	0 1

function <./moonscript/parse.lua:47,53> (14 instructions, 56 bytes at 0x7f856f407ad0)
3 params, 7 slots, 1 upvalue, 4 locals, 3 constants, 0 functions
	1	[48]	GETUPVAL 	3 0	; _indent
	2	[48]	SELF     	3 3 -1	; "top"
	3	[48]	CALL     	3 2 2
	4	[49]	EQ       	1 3 -2	; - -1
	5	[49]	JMP      	8	; to 14
	6	[49]	LT       	0 3 2
	7	[49]	JMP      	6	; to 14
	8	[50]	GETUPVAL 	4 0	; _indent
	9	[50]	SELF     	4 4 -3	; "push"
	10	[50]	MOVE     	6 2
	11	[50]	CALL     	4 3 1
	12	[51]	LOADBOOL 	4 1 0
	13	[51]	RETURN   	4 2
	14	[53]	RETURN   	0 1

function <./moonscript/parse.lua:55,58> (7 instructions, 28 bytes at 0x7f856f407f90)
3 params, 6 slots, 1 upvalue, 3 locals, 1 constant, 0 functions
	1	[56]	GETUPVAL 	3 0	; _indent
	2	[56]	SELF     	3 3 -1	; "push"
	3	[56]	MOVE     	5 2
	4	[56]	CALL     	3 3 1
	5	[57]	LOADBOOL 	3 1 0
	6	[57]	RETURN   	3 2
	7	[58]	RETURN   	0 1

function <./moonscript/parse.lua:60,63> (9 instructions, 36 bytes at 0x7f856f4084d0)
0 params, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[61]	GETGLOBAL	0 -1	; assert
	2	[61]	GETUPVAL 	1 0	; _indent
	3	[61]	SELF     	1 1 -2	; "pop"
	4	[61]	CALL     	1 2 2
	5	[61]	LOADK    	2 -3	; "unexpected outdent"
	6	[61]	CALL     	0 3 1
	7	[62]	LOADBOOL 	0 1 0
	8	[62]	RETURN   	0 2
	9	[63]	RETURN   	0 1

function <./moonscript/parse.lua:65,71> (13 instructions, 52 bytes at 0x7f856f407210)
3 params, 6 slots, 1 upvalue, 4 locals, 2 constants, 0 functions
	1	[66]	GETUPVAL 	3 0	; _do_stack
	2	[66]	SELF     	3 3 -1	; "top"
	3	[66]	CALL     	3 2 2
	4	[67]	EQ       	1 3 -2	; - nil
	5	[67]	JMP      	2	; to 8
	6	[67]	TEST     	3 0 0
	7	[67]	JMP      	3	; to 11
	8	[68]	LOADBOOL 	4 1 0
	9	[68]	MOVE     	5 2
	10	[68]	RETURN   	4 3
	11	[70]	LOADBOOL 	4 0 0
	12	[70]	RETURN   	4 2
	13	[71]	RETURN   	0 1

function <./moonscript/parse.lua:73,76> (7 instructions, 28 bytes at 0x7f856f408d10)
0 params, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[74]	GETUPVAL 	0 0	; _do_stack
	2	[74]	SELF     	0 0 -1	; "push"
	3	[74]	LOADBOOL 	2 0 0
	4	[74]	CALL     	0 3 1
	5	[75]	LOADBOOL 	0 1 0
	6	[75]	RETURN   	0 2
	7	[76]	RETURN   	0 1

function <./moonscript/parse.lua:78,81> (13 instructions, 52 bytes at 0x7f856f4090f0)
0 params, 3 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[79]	GETGLOBAL	0 -1	; assert
	2	[79]	GETUPVAL 	1 0	; _do_stack
	3	[79]	SELF     	1 1 -2	; "pop"
	4	[79]	CALL     	1 2 2
	5	[79]	EQ       	0 1 -3	; - nil
	6	[79]	JMP      	1	; to 8
	7	[79]	LOADBOOL 	1 0 1
	8	[79]	LOADBOOL 	1 1 0
	9	[79]	LOADK    	2 -4	; "unexpected do pop"
	10	[79]	CALL     	0 3 1
	11	[80]	LOADBOOL 	0 1 0
	12	[80]	RETURN   	0 2
	13	[81]	RETURN   	0 1

function <./moonscript/parse.lua:86,89> (9 instructions, 36 bytes at 0x7f856f408450)
1 param, 3 slots, 3 upvalues, 1 local, 1 constant, 0 functions
	1	[87]	GETUPVAL 	1 0	; keywords
	2	[87]	SETTABLE 	1 0 -1	; - true
	3	[88]	GETUPVAL 	1 1	; Space
	4	[88]	MUL      	1 1 0
	5	[88]	GETUPVAL 	2 2	; AlphaNum
	6	[88]	UNM      	2 2
	7	[88]	MUL      	1 1 2
	8	[88]	RETURN   	1 2
	9	[89]	RETURN   	0 1

function <./moonscript/parse.lua:91,98> (17 instructions, 68 bytes at 0x7f856f4097f0)
1 param, 5 slots, 4 upvalues, 2 locals, 3 constants, 0 functions
	1	[92]	GETUPVAL 	1 0	; Space
	2	[92]	GETUPVAL 	2 1	; C
	3	[92]	MOVE     	3 0
	4	[92]	CALL     	2 2 2
	5	[92]	MUL      	1 1 2
	6	[93]	SELF     	2 0 -1	; "match"
	7	[93]	LOADK    	4 -2	; "^%w*$"
	8	[93]	CALL     	2 3 2
	9	[93]	TEST     	2 0 0
	10	[93]	JMP      	5	; to 16
	11	[94]	GETUPVAL 	2 2	; keywords
	12	[94]	SETTABLE 	2 0 -3	; - true
	13	[95]	GETUPVAL 	2 3	; AlphaNum
	14	[95]	UNM      	2 2
	15	[95]	MUL      	1 1 2
	16	[97]	RETURN   	1 2
	17	[98]	RETURN   	0 1

function <./moonscript/parse.lua:99,104> (9 instructions, 36 bytes at 0x7f856f409c30)
3 params, 4 slots, 1 upvalue, 3 locals, 0 constants, 0 functions
	1	[100]	GETUPVAL 	3 0	; keywords
	2	[100]	GETTABLE 	3 3 2
	3	[100]	TEST     	3 0 0
	4	[100]	JMP      	2	; to 7
	5	[101]	LOADBOOL 	3 0 0
	6	[101]	RETURN   	3 2
	7	[103]	LOADBOOL 	3 1 0
	8	[103]	RETURN   	3 2
	9	[104]	RETURN   	0 1

function <./moonscript/parse.lua:206,238> (19 instructions, 76 bytes at 0x7f856f409b10)
0 params, 5 slots, 7 upvalues, 3 locals, 2 constants, 1 function
	1	[207]	GETUPVAL 	0 0	; build_grammar
	2	[207]	CALL     	0 1 3
	3	[208]	GETUPVAL 	2 1	; White
	4	[208]	MUL      	2 2 0
	5	[208]	GETUPVAL 	3 1	; White
	6	[208]	MUL      	2 2 3
	7	[208]	MUL      	2 2 -1	; - -1
	8	[209]	NEWTABLE 	3 0 1
	9	[236]	CLOSURE  	4 0	; 0x7f856f40aad0
	10	[236]	MOVE     	0 2
	11	[236]	MOVE     	0 1
	12	[236]	GETUPVAL 	0 2	; unpack
	13	[236]	GETUPVAL 	0 3	; pos_to_line
	14	[236]	GETUPVAL 	0 4	; get_line
	15	[236]	GETUPVAL 	0 5	; err_msg
	16	[236]	GETUPVAL 	0 6	; trim
	17	[236]	SETTABLE 	3 -2 4	; "match" -
	18	[237]	RETURN   	3 2
	19	[238]	RETURN   	0 1

function <./moonscript/parse.lua:210,236> (59 instructions, 236 bytes at 0x7f856f40aad0)
2 params, 16 slots, 7 upvalues, 10 locals, 8 constants, 2 functions
	1	[212]	GETGLOBAL	3 -1	; xpcall
	2	[214]	CLOSURE  	4 0	; 0x7f856f40a580
	3	[214]	MOVE     	0 2
	4	[214]	GETUPVAL 	0 0	; file_grammar
	5	[214]	MOVE     	0 1
	6	[216]	CLOSURE  	5 1	; 0x7f856f40b0c0
	7	[212]	CALL     	3 3 3
	8	[217]	GETGLOBAL	5 -2	; type
	9	[217]	MOVE     	6 4
	10	[217]	CALL     	5 2 2
	11	[217]	EQ       	0 5 -3	; - "string"
	12	[217]	JMP      	3	; to 16
	13	[218]	LOADNIL  	5 5
	14	[218]	MOVE     	6 4
	15	[218]	RETURN   	5 3
	16	[220]	TEST     	2 0 1
	17	[220]	JMP      	40	; to 58
	18	[221]	LOADNIL  	5 5
	19	[222]	GETUPVAL 	6 1	; state
	20	[222]	GETTABLE 	6 6 -4	; "last_pos"
	21	[223]	TEST     	4 0 0
	22	[223]	JMP      	12	; to 35
	23	[224]	LOADNIL  	7 7
	24	[225]	GETUPVAL 	8 2	; unpack
	25	[225]	MOVE     	9 4
	26	[225]	CALL     	8 2 3
	27	[225]	MOVE     	5 9
	28	[225]	MOVE     	7 8
	29	[226]	TEST     	5 0 0
	30	[226]	JMP      	3	; to 34
	31	[227]	LOADK    	8 -5	; " "
	32	[227]	MOVE     	9 5
	33	[227]	CONCAT   	5 8 9
	34	[229]	GETTABLE 	6 7 -6	; -1
	35	[231]	GETUPVAL 	7 3	; pos_to_line
	36	[231]	MOVE     	8 1
	37	[231]	MOVE     	9 6
	38	[231]	CALL     	7 3 2
	39	[232]	GETUPVAL 	8 4	; get_line
	40	[232]	MOVE     	9 1
	41	[232]	MOVE     	10 7
	42	[232]	CALL     	8 3 2
	43	[232]	TEST     	8 0 1
	44	[232]	JMP      	1	; to 46
	45	[232]	LOADK    	8 -7	; ""
	46	[233]	LOADNIL  	9 9
	47	[233]	GETUPVAL 	10 5	; err_msg
	48	[233]	SELF     	10 10 -8	; "format"
	49	[233]	TESTSET  	12 5 1
	50	[233]	JMP      	1	; to 52
	51	[233]	LOADK    	12 -7	; ""
	52	[233]	MOVE     	13 7
	53	[233]	GETUPVAL 	14 6	; trim
	54	[233]	MOVE     	15 8
	55	[233]	CALL     	14 2 0
	56	[233]	CALL     	10 0 0
	57	[233]	RETURN   	9 0
	58	[235]	RETURN   	2 2
	59	[236]	RETURN   	0 1

function <./moonscript/parse.lua:212,214> (6 instructions, 24 bytes at 0x7f856f40a580)
0 params, 3 slots, 3 upvalues, 0 locals, 1 constant, 0 functions
	1	[213]	GETUPVAL 	0 1	; file_grammar
	2	[213]	SELF     	0 0 -1	; "match"
	3	[213]	GETUPVAL 	2 2	; str
	4	[213]	CALL     	0 3 2
	5	[213]	SETUPVAL 	0 0	; tree
	6	[214]	RETURN   	0 1

function <./moonscript/parse.lua:214,216> (7 instructions, 28 bytes at 0x7f856f40b0c0)
1 param, 4 slots, 0 upvalues, 1 local, 3 constants, 0 functions
	1	[215]	GETGLOBAL	1 -1	; debug
	2	[215]	GETTABLE 	1 1 -2	; "traceback"
	3	[215]	MOVE     	2 0
	4	[215]	LOADK    	3 -3	; 2
	5	[215]	TAILCALL 	1 3 0
	6	[215]	RETURN   	1 0
	7	[216]	RETURN   	0 1

function <./moonscript/parse.lua:242,244> (7 instructions, 28 bytes at 0x7f856f40b4c0)
1 param, 4 slots, 1 upvalue, 1 local, 1 constant, 0 functions
	1	[243]	GETUPVAL 	1 0	; file_parser
	2	[243]	CALL     	1 1 2
	3	[243]	SELF     	1 1 -1	; "match"
	4	[243]	MOVE     	3 0
	5	[243]	TAILCALL 	1 3 0
	6	[243]	RETURN   	1 0
	7	[244]	RETURN   	0 1
-----------------------

main <./moon/init.lua:0,0> (60 instructions, 240 bytes at 0x7fef334068a0)
0+ params, 21 slots, 0 upvalues, 18 locals, 21 constants, 13 functions
	1	[1]	NEWTABLE 	0 0 2
	2	[2]	GETGLOBAL	1 -1	; debug
	3	[2]	SETTABLE 	0 -1 1	; "debug" -
	4	[3]	GETGLOBAL	1 -2	; type
	5	[3]	SETTABLE 	0 -2 1	; "type" -
	6	[5]	LOADNIL  	1 3
	7	[7]	GETGLOBAL	4 -3	; require
	8	[7]	LOADK    	5 -4	; "moonscript.util"
	9	[7]	CALL     	4 2 2
	10	[8]	GETTABLE 	5 4 -5	; "getfenv"
	11	[8]	GETTABLE 	6 4 -6	; "setfenv"
	12	[8]	GETTABLE 	3 4 -7	; "dump"
	13	[8]	MOVE     	2 6
	14	[8]	MOVE     	1 5
	15	[10]	LOADNIL  	4 16
	16	[13]	CLOSURE  	4 0	; 0x7fef33406b80
	17	[13]	MOVE     	0 3
	18	[16]	CLOSURE  	5 1	; 0x7fef33406700
	19	[16]	MOVE     	0 0
	20	[26]	CLOSURE  	6 2	; 0x7fef334074d0
	21	[26]	MOVE     	0 0
	22	[27]	GETGLOBAL	17 -8	; setmetatable
	23	[27]	NEWTABLE 	18 0 1
	24	[48]	CLOSURE  	19 3	; 0x7fef33406c00
	25	[48]	MOVE     	0 0
	26	[48]	SETTABLE 	18 -9 19	; "upvalue" -
	27	[49]	NEWTABLE 	19 0 1
	28	[50]	GETTABLE 	20 0 -1	; "debug"
	29	[50]	SETTABLE 	19 -10 20	; "__index" -
	30	[27]	CALL     	17 3 2
	31	[51]	MOVE     	7 17
	32	[66]	CLOSURE  	8 4	; 0x7fef33407e70
	33	[66]	MOVE     	0 1
	34	[66]	MOVE     	0 2
	35	[83]	CLOSURE  	9 5	; 0x7fef33406fd0
	36	[83]	MOVE     	0 0
	37	[96]	CLOSURE  	10 6	; 0x7fef33409650
	38	[112]	CLOSURE  	11 7	; 0x7fef33409d40
	39	[119]	CLOSURE  	12 8	; 0x7fef33406640
	40	[127]	CLOSURE  	13 9	; 0x7fef33407440
	41	[135]	CLOSURE  	14 10	; 0x7fef334094f0
	42	[147]	CLOSURE  	15 11	; 0x7fef3340a570
	43	[159]	CLOSURE  	16 12	; 0x7fef3340a920
	44	[160]	NEWTABLE 	17 0 14
	45	[161]	SETTABLE 	17 -7 3	; "dump" -
	46	[162]	SETTABLE 	17 -11 4	; "p" -
	47	[163]	SETTABLE 	17 -12 5	; "is_object" -
	48	[164]	SETTABLE 	17 -2 6	; "type" -
	49	[165]	SETTABLE 	17 -1 7	; "debug" -
	50	[166]	SETTABLE 	17 -13 8	; "run_with_scope" -
	51	[167]	SETTABLE 	17 -14 9	; "bind_methods" -
	52	[168]	SETTABLE 	17 -15 10	; "defaultbl" -
	53	[169]	SETTABLE 	17 -16 11	; "extend" -
	54	[170]	SETTABLE 	17 -17 12	; "copy" -
	55	[171]	SETTABLE 	17 -18 13	; "mixin" -
	56	[172]	SETTABLE 	17 -19 14	; "mixin_object" -
	57	[173]	SETTABLE 	17 -20 15	; "mixin_table" -
	58	[174]	SETTABLE 	17 -21 16	; "fold" -
	59	[175]	RETURN   	17 2
	60	[175]	RETURN   	0 1

function <./moon/init.lua:11,13> (7 instructions, 28 bytes at 0x7fef33406b80)
0+ params, 4 slots, 1 upvalue, 1 local, 1 constant, 0 functions
	1	[12]	GETGLOBAL	1 -1	; print
	2	[12]	GETUPVAL 	2 0	; dump
	3	[12]	VARARG   	3 0
	4	[12]	CALL     	2 0 0
	5	[12]	TAILCALL 	1 0 0
	6	[12]	RETURN   	1 0
	7	[13]	RETURN   	0 1

function <./moon/init.lua:14,16> (12 instructions, 48 bytes at 0x7fef33406700)
1 param, 3 slots, 1 upvalue, 1 local, 3 constants, 0 functions
	1	[15]	GETUPVAL 	1 0	; lua
	2	[15]	GETTABLE 	1 1 -1	; "type"
	3	[15]	MOVE     	2 0
	4	[15]	CALL     	1 2 2
	5	[15]	EQ       	0 1 -2	; - "table"
	6	[15]	JMP      	2	; to 9
	7	[15]	GETTABLE 	1 0 -3	; "__class"
	8	[15]	JMP      	2	; to 11
	9	[15]	LOADBOOL 	1 0 1
	10	[15]	LOADBOOL 	1 1 0
	11	[15]	RETURN   	1 2
	12	[16]	RETURN   	0 1

function <./moon/init.lua:17,26> (12 instructions, 48 bytes at 0x7fef334074d0)
1 param, 3 slots, 1 upvalue, 3 locals, 3 constants, 0 functions
	1	[18]	GETUPVAL 	1 0	; lua
	2	[18]	GETTABLE 	1 1 -1	; "type"
	3	[18]	MOVE     	2 0
	4	[18]	CALL     	1 2 2
	5	[19]	EQ       	0 1 -2	; - "table"
	6	[19]	JMP      	4	; to 11
	7	[20]	GETTABLE 	2 0 -3	; "__class"
	8	[21]	TEST     	2 0 0
	9	[21]	JMP      	1	; to 11
	10	[22]	RETURN   	2 2
	11	[25]	RETURN   	1 2
	12	[26]	RETURN   	0 1

function <./moon/init.lua:28,48> (43 instructions, 172 bytes at 0x7fef33406c00)
3 params, 9 slots, 1 upvalue, 8 locals, 8 constants, 0 functions
	1	[29]	NEWTABLE 	3 0 0
	2	[30]	LOADK    	4 -1	; 1
	3	[32]	GETUPVAL 	5 0	; lua
	4	[32]	GETTABLE 	5 5 -2	; "debug"
	5	[32]	GETTABLE 	5 5 -3	; "getupvalue"
	6	[32]	MOVE     	6 0
	7	[32]	MOVE     	7 4
	8	[32]	CALL     	5 3 2
	9	[33]	EQ       	0 5 -4	; - nil
	10	[33]	JMP      	1	; to 12
	11	[34]	JMP      	3	; to 15
	12	[36]	SETTABLE 	3 5 4
	13	[37]	ADD      	4 4 -1	; - 1
	14	[37]	JMP      	-12	; to 3
	15	[39]	GETTABLE 	5 3 1
	16	[39]	TEST     	5 0 1
	17	[39]	JMP      	7	; to 25
	18	[40]	GETGLOBAL	5 -5	; error
	19	[40]	LOADK    	6 -6	; "Failed to find upvalue: "
	20	[40]	GETGLOBAL	7 -7	; tostring
	21	[40]	MOVE     	8 1
	22	[40]	CALL     	7 2 2
	23	[40]	CONCAT   	6 6 7
	24	[40]	CALL     	5 2 1
	25	[42]	TEST     	2 0 1
	26	[42]	JMP      	8	; to 35
	27	[43]	GETUPVAL 	5 0	; lua
	28	[43]	GETTABLE 	5 5 -2	; "debug"
	29	[43]	GETTABLE 	5 5 -3	; "getupvalue"
	30	[43]	MOVE     	6 0
	31	[43]	GETTABLE 	7 3 1
	32	[43]	CALL     	5 3 3
	33	[44]	RETURN   	6 2
	34	[44]	JMP      	8	; to 43
	35	[46]	GETUPVAL 	5 0	; lua
	36	[46]	GETTABLE 	5 5 -2	; "debug"
	37	[46]	GETTABLE 	5 5 -8	; "setupvalue"
	38	[46]	MOVE     	6 0
	39	[46]	GETTABLE 	7 3 1
	40	[46]	MOVE     	8 2
	41	[46]	TAILCALL 	5 4 0
	42	[46]	RETURN   	5 0
	43	[48]	RETURN   	0 1

function <./moon/init.lua:52,66> (20 instructions, 80 bytes at 0x7fef33407e70)
2+ params, 8 slots, 2 upvalues, 5 locals, 2 constants, 1 function
	1	[53]	GETUPVAL 	3 0	; getfenv
	2	[53]	MOVE     	4 0
	3	[53]	CALL     	3 2 2
	4	[54]	GETGLOBAL	4 -1	; setmetatable
	5	[54]	NEWTABLE 	5 0 0
	6	[54]	NEWTABLE 	6 0 1
	7	[62]	CLOSURE  	7 0	; 0x7fef334081f0
	8	[62]	MOVE     	0 1
	9	[62]	MOVE     	0 3
	10	[62]	SETTABLE 	6 -2 7	; "__index" -
	11	[54]	CALL     	4 3 2
	12	[64]	GETUPVAL 	5 1	; setfenv
	13	[64]	MOVE     	6 0
	14	[64]	MOVE     	7 4
	15	[64]	CALL     	5 3 1
	16	[65]	MOVE     	5 0
	17	[65]	VARARG   	6 0
	18	[65]	TAILCALL 	5 0 0
	19	[65]	RETURN   	5 0
	20	[66]	RETURN   	0 1

function <./moon/init.lua:55,62> (10 instructions, 40 bytes at 0x7fef334081f0)
2 params, 4 slots, 2 upvalues, 3 locals, 1 constant, 0 functions
	1	[56]	GETUPVAL 	2 0	; scope
	2	[56]	GETTABLE 	2 2 1
	3	[57]	EQ       	1 2 -1	; - nil
	4	[57]	JMP      	2	; to 7
	5	[58]	RETURN   	2 2
	6	[58]	JMP      	3	; to 10
	7	[60]	GETUPVAL 	3 1	; old_env
	8	[60]	GETTABLE 	3 3 1
	9	[60]	RETURN   	3 2
	10	[62]	RETURN   	0 1

function <./moon/init.lua:67,83> (10 instructions, 40 bytes at 0x7fef33406fd0)
1 param, 5 slots, 1 upvalue, 1 local, 2 constants, 1 function
	1	[68]	GETGLOBAL	1 -1	; setmetatable
	2	[68]	NEWTABLE 	2 0 0
	3	[68]	NEWTABLE 	3 0 1
	4	[81]	CLOSURE  	4 0	; 0x7fef33406f20
	5	[81]	MOVE     	0 0
	6	[81]	GETUPVAL 	0 0	; lua
	7	[81]	SETTABLE 	3 -2 4	; "__index" -
	8	[68]	TAILCALL 	1 3 0
	9	[82]	RETURN   	1 0
	10	[83]	RETURN   	0 1

function <./moon/init.lua:69,81> (19 instructions, 76 bytes at 0x7fef33406f20)
2 params, 5 slots, 2 upvalues, 4 locals, 2 constants, 1 function
	1	[70]	GETUPVAL 	2 0	; obj
	2	[70]	GETTABLE 	2 2 1
	3	[71]	TEST     	2 0 0
	4	[71]	JMP      	13	; to 18
	5	[71]	GETUPVAL 	3 1	; lua
	6	[71]	GETTABLE 	3 3 -1	; "type"
	7	[71]	MOVE     	4 2
	8	[71]	CALL     	3 2 2
	9	[71]	EQ       	0 3 -2	; - "function"
	10	[71]	JMP      	7	; to 18
	11	[72]	LOADNIL  	3 3
	12	[75]	CLOSURE  	3 0	; 0x7fef33408fd0
	13	[75]	MOVE     	0 2
	14	[75]	GETUPVAL 	0 0	; obj
	15	[76]	SETTABLE 	0 1 3
	16	[77]	RETURN   	3 2
	17	[77]	JMP      	1	; to 19
	18	[79]	RETURN   	2 2
	19	[81]	RETURN   	0 1

function <./moon/init.lua:73,75> (6 instructions, 24 bytes at 0x7fef33408fd0)
0+ params, 4 slots, 2 upvalues, 1 local, 0 constants, 0 functions
	1	[74]	GETUPVAL 	1 0	; val
	2	[74]	GETUPVAL 	2 1	; obj
	3	[74]	VARARG   	3 0
	4	[74]	TAILCALL 	1 0 0
	5	[74]	RETURN   	1 0
	6	[75]	RETURN   	0 1

function <./moon/init.lua:84,96> (14 instructions, 56 bytes at 0x7fef33409650)
2 params, 6 slots, 0 upvalues, 2 locals, 2 constants, 1 function
	1	[85]	TEST     	1 0 1
	2	[85]	JMP      	3	; to 6
	3	[86]	MOVE     	1 0
	4	[87]	NEWTABLE 	2 0 0
	5	[87]	MOVE     	0 2
	6	[89]	GETGLOBAL	2 -1	; setmetatable
	7	[89]	MOVE     	3 0
	8	[89]	NEWTABLE 	4 0 1
	9	[94]	CLOSURE  	5 0	; 0x7fef33409750
	10	[94]	MOVE     	0 1
	11	[94]	SETTABLE 	4 -2 5	; "__index" -
	12	[89]	TAILCALL 	2 3 0
	13	[95]	RETURN   	2 0
	14	[96]	RETURN   	0 1

function <./moon/init.lua:90,94> (11 instructions, 44 bytes at 0x7fef33409750)
2 params, 7 slots, 1 upvalue, 3 locals, 1 constant, 0 functions
	1	[91]	GETUPVAL 	2 0	; fn
	2	[91]	MOVE     	3 0
	3	[91]	MOVE     	4 1
	4	[91]	CALL     	2 3 2
	5	[92]	GETGLOBAL	3 -1	; rawset
	6	[92]	MOVE     	4 0
	7	[92]	MOVE     	5 1
	8	[92]	MOVE     	6 2
	9	[92]	CALL     	3 4 1
	10	[93]	RETURN   	2 2
	11	[94]	RETURN   	0 1

function <./moon/init.lua:97,112> (24 instructions, 96 bytes at 0x7fef33409d40)
0+ params, 11 slots, 0 upvalues, 8 locals, 4 constants, 0 functions
	1	[98]	NEWTABLE 	1 0 0
	2	[98]	VARARG   	2 0
	3	[100]	SETLIST  	1 0 1	; 1
	4	[101]	LEN      	2 1
	5	[101]	LT       	0 2 -1	; - 2
	6	[101]	JMP      	1	; to 8
	7	[102]	RETURN   	0 1
	8	[104]	LOADK    	2 -2	; 1
	9	[104]	LEN      	3 1
	10	[104]	SUB      	3 3 -2	; - 1
	11	[104]	LOADK    	4 -2	; 1
	12	[104]	FORPREP  	2 8	; to 21
	13	[105]	GETTABLE 	6 1 5
	14	[106]	ADD      	7 5 -2	; - 1
	15	[106]	GETTABLE 	7 1 7
	16	[107]	GETGLOBAL	8 -3	; setmetatable
	17	[107]	MOVE     	9 6
	18	[107]	NEWTABLE 	10 0 1
	19	[108]	SETTABLE 	10 -4 7	; "__index" -
	20	[107]	CALL     	8 3 1
	21	[104]	FORLOOP  	2 -9	; to 13
	22	[111]	GETTABLE 	2 1 -2	; 1
	23	[111]	RETURN   	2 2
	24	[112]	RETURN   	0 1

function <./moon/init.lua:113,119> (10 instructions, 40 bytes at 0x7fef33406640)
1 param, 8 slots, 0 upvalues, 7 locals, 1 constant, 0 functions
	1	[114]	NEWTABLE 	1 0 0
	2	[115]	GETGLOBAL	2 -1	; pairs
	3	[115]	MOVE     	3 0
	4	[115]	CALL     	2 2 4
	5	[115]	JMP      	1	; to 7
	6	[116]	SETTABLE 	1 5 6
	7	[115]	TFORLOOP 	2 2
	8	[116]	JMP      	-3	; to 6
	9	[118]	RETURN   	1 2
	10	[119]	RETURN   	0 1

function <./moon/init.lua:120,127> (18 instructions, 72 bytes at 0x7fef33407440)
2+ params, 11 slots, 0 upvalues, 8 locals, 5 constants, 0 functions
	1	[121]	GETGLOBAL	3 -1	; pairs
	2	[121]	GETTABLE 	4 1 -2	; "__base"
	3	[121]	CALL     	3 2 4
	4	[121]	JMP      	6	; to 11
	5	[122]	SELF     	8 6 -3	; "match"
	6	[122]	LOADK    	10 -4	; "^__"
	7	[122]	CALL     	8 3 2
	8	[122]	TEST     	8 0 1
	9	[122]	JMP      	1	; to 11
	10	[123]	SETTABLE 	0 6 7
	11	[121]	TFORLOOP 	3 2
	12	[124]	JMP      	-8	; to 5
	13	[126]	GETTABLE 	3 1 -5	; "__init"
	14	[126]	MOVE     	4 0
	15	[126]	VARARG   	5 0
	16	[126]	TAILCALL 	3 0 0
	17	[126]	RETURN   	3 0
	18	[127]	RETURN   	0 1

function <./moon/init.lua:128,135> (12 instructions, 48 bytes at 0x7fef334094f0)
3 params, 9 slots, 0 upvalues, 8 locals, 1 constant, 1 function
	1	[129]	LOADK    	3 -1	; 1
	2	[129]	LEN      	4 2
	3	[129]	LOADK    	5 -1	; 1
	4	[129]	FORPREP  	3 6	; to 11
	5	[130]	GETTABLE 	7 2 6
	6	[133]	CLOSURE  	8 0	; 0x7fef3340a190
	7	[133]	MOVE     	0 1
	8	[133]	MOVE     	0 7
	9	[133]	SETTABLE 	0 7 8
	10	[133]	CLOSE    	7
	11	[129]	FORLOOP  	3 -7	; to 5
	12	[135]	RETURN   	0 1

function <./moon/init.lua:131,133> (8 instructions, 32 bytes at 0x7fef3340a190)
1+ param, 5 slots, 2 upvalues, 2 locals, 0 constants, 0 functions
	1	[132]	GETUPVAL 	2 0	; object
	2	[132]	GETUPVAL 	3 1	; name
	3	[132]	GETTABLE 	2 2 3
	4	[132]	GETUPVAL 	3 0	; object
	5	[132]	VARARG   	4 0
	6	[132]	TAILCALL 	2 0 0
	7	[132]	RETURN   	2 0
	8	[133]	RETURN   	0 1

function <./moon/init.lua:136,147> (19 instructions, 76 bytes at 0x7fef3340a570)
3 params, 9 slots, 0 upvalues, 13 locals, 2 constants, 0 functions
	1	[137]	TEST     	2 0 0
	2	[137]	JMP      	9	; to 12
	3	[138]	LOADK    	3 -1	; 1
	4	[138]	LEN      	4 2
	5	[138]	LOADK    	5 -1	; 1
	6	[138]	FORPREP  	3 3	; to 10
	7	[139]	GETTABLE 	7 2 6
	8	[140]	GETTABLE 	8 1 7
	9	[140]	SETTABLE 	0 7 8
	10	[138]	FORLOOP  	3 -4	; to 7
	11	[141]	JMP      	7	; to 19
	12	[143]	GETGLOBAL	3 -2	; pairs
	13	[143]	MOVE     	4 1
	14	[143]	CALL     	3 2 4
	15	[143]	JMP      	1	; to 17
	16	[144]	SETTABLE 	0 6 7
	17	[143]	TFORLOOP 	3 2
	18	[144]	JMP      	-3	; to 16
	19	[147]	RETURN   	0 1

function <./moon/init.lua:148,159> (22 instructions, 88 bytes at 0x7fef3340a920)
2 params, 11 slots, 0 upvalues, 8 locals, 3 constants, 0 functions
	1	[149]	LEN      	2 0
	2	[150]	LT       	0 -1 2	; 1 -
	3	[150]	JMP      	16	; to 20
	4	[151]	MOVE     	3 1
	5	[151]	GETTABLE 	4 0 -1	; 1
	6	[151]	GETTABLE 	5 0 -2	; 2
	7	[151]	CALL     	3 3 2
	8	[152]	LOADK    	4 -3	; 3
	9	[152]	MOVE     	5 2
	10	[152]	LOADK    	6 -1	; 1
	11	[152]	FORPREP  	4 5	; to 17
	12	[153]	MOVE     	8 1
	13	[153]	MOVE     	9 3
	14	[153]	GETTABLE 	10 0 7
	15	[153]	CALL     	8 3 2
	16	[153]	MOVE     	3 8
	17	[152]	FORLOOP  	4 -6	; to 12
	18	[155]	RETURN   	3 2
	19	[155]	JMP      	2	; to 22
	20	[157]	GETTABLE 	3 0 -1	; 1
	21	[157]	RETURN   	3 2
	22	[159]	RETURN   	0 1
-----------------------

main <./moon/all.lua:0,0> (13 instructions, 52 bytes at 0x7fb5f3c068a0)
0+ params, 7 slots, 0 upvalues, 6 locals, 4 constants, 0 functions
	1	[1]	GETGLOBAL	0 -1	; require
	2	[1]	LOADK    	1 -2	; "moon"
	3	[1]	CALL     	0 2 2
	4	[2]	GETGLOBAL	1 -3	; pairs
	5	[2]	MOVE     	2 0
	6	[2]	CALL     	1 2 4
	7	[2]	JMP      	2	; to 10
	8	[3]	GETGLOBAL	6 -4	; _G
	9	[3]	SETTABLE 	6 4 5
	10	[2]	TFORLOOP 	1 2
	11	[3]	JMP      	-4	; to 8
	12	[5]	RETURN   	0 2
	13	[5]	RETURN   	0 1
