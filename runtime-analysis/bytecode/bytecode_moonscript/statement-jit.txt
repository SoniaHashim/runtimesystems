-- BYTECODE -- statement.lua:28-34
0001    UGET     0   0      ; continue_name
0002    IST          0
0003    JMP      0 => 0013
0004    UGET     0   1      ; NameProxy
0005    KSTR     1   0      ; "continue"
0006    CALL     0   2   2
0007    USETV    0   0      ; continue_name
0008    UGET     0   2      ; self
0009    MOV      1   0
0010    TGETS    0   0   1  ; "put_name"
0011    UGET     2   0      ; continue_name
0012    CALL     0   1   3
0013 => UGET     0   0      ; continue_name
0014    RET1     0   2

-- BYTECODE -- statement.lua:27-35
0001    MOV      2   0
0002    TGETS    1   0   0  ; "listen"
0003    KSTR     3   1      ; "continue"
0004    FNEW     4   2      ; statement.lua:28
0005    UCLO     0 => 0006
0006 => CALLT    1   4

-- BYTECODE -- statement.lua:44-92
0001    UGET     1   0      ; enclose_lines
0002    ISF          1
0003    JMP      2 => 0009
0004    TDUP     1   0
0005    TNEW     2   3
0006    TSETB    0   2   1
0007    TSETB    2   1   2
0008    MOV      0   1
0009 => TNEW     1   4
0010    TDUP     2   1
0011    TNEW     3   3
0012    UGET     4   1      ; continue_name
0013    TSETB    4   3   1
0014    TSETB    3   2   2
0015    TDUP     3   2
0016    TSETB    3   2   3
0017    TSETB    2   1   1
0018    TDUP     2   3
0019    TNEW     3   3
0020    TSETB    0   3   1
0021    TDUP     4   4
0022    TNEW     5   3
0023    UGET     6   1      ; continue_name
0024    TSETB    6   5   1
0025    TSETB    5   4   2
0026    TDUP     5   5
0027    TSETB    5   4   3
0028    TSETB    4   3   2
0029    TSETB    3   2   3
0030    TSETB    2   1   2
0031    TDUP     2   6
0032    TDUP     3   7
0033    UGET     4   1      ; continue_name
0034    TSETB    4   3   2
0035    TSETB    3   2   2
0036    TNEW     3   3
0037    TDUP     4   8
0038    TSETB    4   3   1
0039    TSETB    3   2   3
0040    TSETB    2   1   3
0041    RET1     1   2

-- BYTECODE -- statement.lua:37-93
0001    UGET     1   0      ; continue_name
0002    IST          1
0003    JMP      1 => 0005
0004    UCLO     0 => 0026
0005 => UGET     1   1      ; last_stm
0006    UGET     2   2      ; body
0007    CALL     1   2   2
0008    UGET     2   3      ; types
0009    TGETS    2   2   0  ; "terminating"
0010    ISFC     3   1
0011    JMP      3 => 0015
0012    UGET     3   4      ; ntype
0013    MOV      4   1
0014    CALL     3   2   2
0015 => TGETV    2   2   3
0016    MOV      4   0
0017    TGETS    3   0   1  ; "put_name"
0018    UGET     5   0      ; continue_name
0019    KPRI     6   0
0020    CALL     3   1   4
0021    MOV      4   0
0022    TGETS    3   0   2  ; "splice"
0023    FNEW     5   3      ; statement.lua:44
0024    UCLO     0 => 0025
0025 => CALLT    3   3
0026 => RET0     0   1

-- BYTECODE -- statement.lua:24-95
0001    KPRI     1   0
0002    TNEW     2   4
0003    UGET     3   0      ; Run
0004    FNEW     4   0      ; statement.lua:27
0005    CALL     3   2   2
0006    TSETB    3   2   1
0007    UGET     3   2      ; build
0008    TGETS    3   3   1  ; "group"
0009    MOV      4   0
0010    CALL     3   2   2
0011    TSETB    3   2   2
0012    UGET     3   0      ; Run
0013    FNEW     4   2      ; statement.lua:37
0014    CALL     3   0   2
0015    TSETM    3   0      ; 3
0016    UCLO     0 => 0017
0017 => RET1     2   2

-- BYTECODE -- statement.lua:97-138
0001    ISNEP    1   0
0002    JMP      4 => 0004
0003    TGETS    1   0   0  ; "current_stms"
0004 => ISNEP    2   0
0005    JMP      4 => 0008
0006    TGETS    4   0   1  ; "current_stm_i"
0007    ADDVN    2   4   0  ; 1
0008 => ISNEP    3   0
0009    JMP      4 => 0011
0010    TNEW     3   0
0011 => MOV      4   2
0012    LEN      5   1
0013    KSHORT   6   1
0014    FORI     4 => 0073
0015 => KPRI     8   1
0016    LOOP     9 => 0069
0017    TGETV    9   1   7
0018    ISNEP    9   0
0019    JMP     10 => 0022
0020    KPRI     8   2
0021    JMP      9 => 0069
0022 => TGETS   10   0   2  ; "transform"
0023    TGETS   10  10   3  ; "statement"
0024    MOV     11   9
0025    CALL    10   2   2
0026    MOV      9  10
0027    TSETV    9   1   7
0028    TGETB   10   9   1
0029    ISEQS   10   4      ; "assign"
0030    JMP     11 => 0033
0031    ISNES   10   5      ; "declare"
0032    JMP     11 => 0060
0033 => TGETB   11   9   2
0034    KSHORT  12   1
0035    LEN     13  11
0036    KSHORT  14   1
0037    FORI    12 => 0059
0038 => TGETV   16  11  15
0039    UGET    17   0      ; ntype
0040    MOV     18  16
0041    CALL    17   2   2
0042    ISNES   17   6      ; "ref"
0043    JMP     17 => 0049
0044    UGET    17   1      ; insert
0045    MOV     18   3
0046    MOV     19  16
0047    CALL    17   1   3
0048    JMP     17 => 0058
0049 => GGET    17   7      ; "type"
0050    MOV     18  16
0051    CALL    17   2   2
0052    ISNES   17   8      ; "string"
0053    JMP     17 => 0058
0054    UGET    17   1      ; insert
0055    MOV     18   3
0056    MOV     19  16
0057    CALL    17   1   3
0058 => FORL    12 => 0038
0059 => JMP     11 => 0068
0060 => ISNES   10   9      ; "group"
0061    JMP     11 => 0068
0062    UGET    11   2      ; extract_declarations
0063    MOV     12   0
0064    TGETB   13   9   2
0065    KSHORT  14   1
0066    MOV     15   3
0067    CALL    11   1   5
0068 => KPRI     8   2
0069 => IST          8
0070    JMP      9 => 0072
0071    JMP      4 => 0073
0072 => FORL     4 => 0015
0073 => RET1     3   2

-- BYTECODE -- statement.lua:140-162
0001    KSHORT   1   4
0002    LEN      2   0
0003    KSHORT   3   1
0004    FORI     1 => 0042
0005 => TGETV    5   0   4
0006    UGET     6   0      ; ntype
0007    MOV      7   5
0008    CALL     6   2   2
0009    ISNES    6   0      ; "elseif"
0010    JMP      6 => 0041
0011    UGET     6   0      ; ntype
0012    TGETB    7   5   2
0013    CALL     6   2   2
0014    ISNES    6   1      ; "assign"
0015    JMP      6 => 0041
0016    TNEW     6   3
0017    UGET     7   1      ; unpack
0018    MOV      8   0
0019    KSHORT   9   1
0020    SUBVN   10   4   0  ; 1
0021    CALL     7   0   4
0022    TSETM    7   1      ; 1
0023    UGET     7   2      ; insert
0024    MOV      8   6
0025    TDUP     9   2
0026    TNEW    10   3
0027    TDUP    11   3
0028    TGETB   12   5   2
0029    TSETB   12  11   2
0030    TGETB   12   5   3
0031    TSETB   12  11   3
0032    UGET    12   1      ; unpack
0033    MOV     13   0
0034    ADDVN   14   4   0  ; 1
0035    CALL    12   0   3
0036    TSETM   12   2      ; 4
0037    TSETB   11  10   1
0038    TSETB   10   9   2
0039    CALL     7   1   3
0040    RET1     6   2
0041 => FORL     1 => 0005
0042 => RET1     0   2

-- BYTECODE -- statement.lua:164-168
0001    KNIL     2   4
0002    TGETB    5   1   1
0003    TGETB    6   1   2
0004    TGETB    4   1   3
0005    MOV      3   6
0006    MOV      2   5
0007    MOV      5   4
0008    MOV      6   3
0009    CALLT    5   2

-- BYTECODE -- statement.lua:169-171
0001    UGET     2   0      ; transform_last_stm
0002    MOV      3   1
0003    UGET     4   1      ; implicitly_return
0004    MOV      5   0
0005    CALL     4   0   2
0006    CALLMT   2   1

-- BYTECODE -- statement.lua:186-191
0001    TDUP     1   0
0002    TSETB    0   1   2
0003    RET1     1   2

-- BYTECODE -- statement.lua:172-196
0001    TGETB    2   1   2
0002    UGET     3   0      ; ntype
0003    MOV      4   2
0004    CALL     3   2   2
0005    ISNES    3   0      ; "explist"
0006    JMP      4 => 0015
0007    LEN      4   2
0008    ISNEN    4   0      ; 2
0009    JMP      4 => 0015
0010    TGETB    2   2   2
0011    UGET     4   0      ; ntype
0012    MOV      5   2
0013    CALL     4   2   2
0014    MOV      3   4
0015 => UGET     4   1      ; types
0016    TGETS    4   4   1  ; "cascading"
0017    TGETV    4   4   3
0018    ISF          4
0019    JMP      5 => 0025
0020    UGET     4   2      ; implicitly_return
0021    MOV      5   0
0022    CALL     4   2   2
0023    MOV      5   2
0024    UCLO     0 => 0056
0025 => ISEQS    3   2      ; "chain"
0026    JMP      4 => 0031
0027    ISEQS    3   3      ; "comprehension"
0028    JMP      4 => 0031
0029    ISNES    3   4      ; "tblcomprehension"
0030    JMP      4 => 0053
0031 => GGET     4   5      ; "require"
0032    KSTR     5   6      ; "moonscript.transform.value"
0033    CALL     4   2   2
0034    MOV      6   4
0035    TGETS    5   4   7  ; "transform_once"
0036    MOV      7   0
0037    MOV      8   2
0038    CALL     5   2   4
0039    MOV      2   5
0040    UGET     5   0      ; ntype
0041    MOV      6   2
0042    CALL     5   2   2
0043    ISNES    5   8      ; "block_exp"
0044    JMP      5 => 0053
0045    UGET     5   3      ; build
0046    TGETS    5   5   9  ; "group"
0047    UGET     6   4      ; transform_last_stm
0048    TGETB    7   2   2
0049    FNEW     8  10      ; statement.lua:186
0050    CALL     6   0   3
0051    UCLO     0 => 0052
0052 => CALLMT   5   0
0053 => TSETB    2   1   2
0054    UCLO     0 => 0055
0055 => RET1     1   2
0056 => CALLT    4   2

-- BYTECODE -- statement.lua:197-233
0001    UGET     2   0      ; extract_declarations
0002    MOV      3   0
0003    CALL     2   2   2
0004    TGETB    3   1   2
0005    ISNES    3   0      ; "^"
0006    JMP      3 => 0042
0007    TNEW     3   0
0008    KSHORT   4   1
0009    KSHORT   5   1
0010    LEN      6   2
0011    KSHORT   7   1
0012    FORI     5 => 0041
0013 => KPRI     9   1
0014    LOOP    10 => 0037
0015    TGETV   10   2   8
0016    KPRI    11   0
0017    UGET    12   1      ; ntype
0018    MOV     13  10
0019    CALL    12   2   2
0020    ISNES   12   1      ; "ref"
0021    JMP     12 => 0024
0022    TGETB   11  10   2
0023    JMP     12 => 0025
0024 => MOV     11  10
0025 => MOV     13  11
0026    TGETS   12  11   2  ; "match"
0027    KSTR    14   3      ; "^%u"
0028    CALL    12   2   3
0029    IST         12
0030    JMP     12 => 0033
0031    KPRI     9   2
0032    JMP     10 => 0037
0033 => MOV     12  10
0034    TSETV   12   3   4
0035    ADDVN    4   4   0  ; 1
0036    KPRI     9   2
0037 => IST          9
0038    JMP     10 => 0040
0039    JMP      5 => 0041
0040 => FORL     5 => 0013
0041 => MOV      2   3
0042 => TDUP     3   4
0043    TSETB    2   3   2
0044    RET1     3   2

-- BYTECODE -- statement.lua:281-293
0001    UGET     1   0      ; is_value
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISF          1
0005    JMP      2 => 0014
0006    TDUP     1   0
0007    UGET     2   1      ; names
0008    TSETB    2   1   2
0009    TNEW     2   3
0010    TSETB    0   2   1
0011    TSETB    2   1   3
0012    RET1     1   2
0013    JMP      1 => 0015
0014 => RET1     0   2
0015 => RET0     0   1

-- BYTECODE -- statement.lua:234-308
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    LEN      4   3
0006    LEN      5   3
0007    ISNEN    5   0      ; 1
0008    JMP      6 => 0081
0009    ISNEN    4   0      ; 1
0010    JMP      6 => 0081
0011    TGETB    6   3   1
0012    TGETB    7   2   1
0013    UGET     8   1      ; ntype
0014    MOV      9   6
0015    CALL     8   2   2
0016    ISNES    8   0      ; "chain"
0017    JMP      9 => 0031
0018    GGET     9   1      ; "require"
0019    KSTR    10   2      ; "moonscript.transform.value"
0020    CALL     9   2   2
0021    MOV     11   9
0022    TGETS   10   9   3  ; "transform_once"
0023    MOV     12   0
0024    MOV     13   6
0025    CALL    10   2   4
0026    MOV      6  10
0027    UGET    10   1      ; ntype
0028    MOV     11   6
0029    CALL    10   2   2
0030    MOV      8  10
0031 => UGET     9   1      ; ntype
0032    MOV     10   6
0033    CALL     9   2   2
0034    ISNES    9   4      ; "block_exp"
0035    JMP     10 => 0057
0036    TGETB   10   6   2
0037    LEN     11  10
0038    UGET    12   2      ; build
0039    TGETS   12  12   5  ; "assign_one"
0040    MOV     13   7
0041    TGETV   14  10  11
0042    CALL    12   2   3
0043    TSETV   12  10  11
0044    UGET    12   2      ; build
0045    TGETS   12  12   6  ; "group"
0046    TNEW    13   3
0047    TDUP    14   7
0048    TNEW    15   3
0049    TSETB    7  15   1
0050    TSETB   15  14   2
0051    TSETB   14  13   1
0052    TDUP    14   8
0053    TSETB   10  14   2
0054    TSETB   14  13   2
0055    UCLO     0 => 0137
0056    JMP     10 => 0081
0057 => ISEQS    9   9      ; "comprehension"
0058    JMP     10 => 0067
0059    ISEQS    9  10      ; "tblcomprehension"
0060    JMP     10 => 0067
0061    ISEQS    9  11      ; "foreach"
0062    JMP     10 => 0067
0063    ISEQS    9  12      ; "for"
0064    JMP     10 => 0067
0065    ISNES    9  13      ; "while"
0066    JMP     10 => 0080
0067 => GGET    10   1      ; "require"
0068    KSTR    11   2      ; "moonscript.transform.value"
0069    CALL    10   2   2
0070    UGET    11   2      ; build
0071    TGETS   11  11   5  ; "assign_one"
0072    MOV     12   7
0073    MOV     14  10
0074    TGETS   13  10   3  ; "transform_once"
0075    MOV     15   0
0076    MOV     16   6
0077    CALL    13   0   4
0078    UCLO     0 => 0138
0079    JMP     10 => 0081
0080 => TSETB    6   3   1
0081 => KPRI     6   0
0082    ISNEN    4   0      ; 1
0083    JMP      7 => 0121
0084    TGETB    7   3   1
0085    UGET     8   1      ; ntype
0086    MOV      9   7
0087    CALL     8   2   2
0088    ISNES    8  14      ; "decorated"
0089    JMP      9 => 0099
0090    TGETS    9   0  15  ; "transform"
0091    TGETS    9   9  16  ; "statement"
0092    MOV     10   7
0093    CALL     9   2   2
0094    MOV      7   9
0095    UGET     9   1      ; ntype
0096    MOV     10   7
0097    CALL     9   2   2
0098    MOV      8   9
0099 => UGET     9   3      ; types
0100    TGETS    9   9  17  ; "cascading"
0101    TGETV    9   9   8
0102    ISF          9
0103    JMP     10 => 0121
0104    KPRI     9   0
0105    FNEW     9  18      ; statement.lua:281
0106    UGET    10   2      ; build
0107    TGETS   10  10   6  ; "group"
0108    TNEW    11   3
0109    TDUP    12  19
0110    TSETB    2  12   2
0111    TSETB   12  11   1
0112    TGETS   12   0  15  ; "transform"
0113    TGETS   12  12  16  ; "statement"
0114    MOV     13   7
0115    MOV     14   9
0116    MOV     15   1
0117    CALL    12   0   4
0118    TSETM   12   1      ; 2
0119    CALL    10   2   2
0120    MOV      6  10
0121 => ISTC     1   6
0122    JMP      7 => 0123
0123 => UGET     7   5      ; destructure
0124    TGETS    7   7  20  ; "has_destructure"
0125    MOV      8   2
0126    CALL     7   2   2
0127    ISF          7
0128    JMP      8 => 0135
0129    UGET     7   5      ; destructure
0130    TGETS    7   7  21  ; "split_assign"
0131    MOV      8   0
0132    MOV      9   1
0133    UCLO     0 => 0134
0134 => CALLT    7   3
0135 => UCLO     0 => 0136
0136 => RET1     1   2
0137 => CALLT   12   2
0138 => CALLMT  11   1

-- BYTECODE -- statement.lua:309-320
0001    MOV      3   0
0002    TGETS    2   0   0  ; "send"
0003    KSTR     4   1      ; "continue"
0004    CALL     2   2   3
0005    IST          2
0006    JMP      3 => 0010
0007    GGET     3   2      ; "error"
0008    KSTR     4   3      ; "continue must be inside of a loop"
0009    CALL     3   1   2
0010 => UGET     3   0      ; build
0011    TGETS    3   3   4  ; "group"
0012    TNEW     4   3
0013    UGET     5   0      ; build
0014    TGETS    5   5   5  ; "assign_one"
0015    MOV      6   2
0016    KSTR     7   6      ; "true"
0017    CALL     5   2   3
0018    TSETB    5   4   1
0019    TDUP     5   7
0020    TSETB    5   4   2
0021    CALLT    3   2

-- BYTECODE -- statement.lua:321-349
0001    LEN      2   1
0002    KSHORT   3   2
0003    ISGE     3   2
0004    JMP      2 => 0041
0005    TGETB    2   1   2
0006    ISNES    2   0      ; "class"
0007    JMP      2 => 0023
0008    UGET     2   0      ; smart_node
0009    TGETB    3   1   3
0010    CALL     2   2   2
0011    UGET     3   1      ; build
0012    TGETS    3   3   1  ; "group"
0013    TNEW     4   3
0014    TDUP     5   2
0015    TNEW     6   3
0016    TGETS    7   2   3  ; "name"
0017    TSETB    7   6   1
0018    TSETB    6   5   2
0019    TSETB    5   4   1
0020    TSETB    2   4   2
0021    CALLT    3   2
0022    JMP      2 => 0043
0023 => UGET     2   1      ; build
0024    TGETS    2   2   1  ; "group"
0025    TNEW     3   3
0026    TDUP     4   4
0027    TGETB    5   1   2
0028    TSETB    5   4   2
0029    TSETB    4   3   1
0030    UGET     4   1      ; build
0031    TGETS    4   4   5  ; "assign"
0032    TDUP     5   6
0033    TGETB    6   1   2
0034    TSETS    6   5   7  ; "names"
0035    TGETB    6   1   3
0036    TSETS    6   5   8  ; "values"
0037    CALL     4   0   2
0038    TSETM    4   0      ; 2
0039    CALLT    2   2
0040    JMP      2 => 0043
0041 => KPRI     2   0
0042    RET1     2   2
0043 => RET0     0   1

-- BYTECODE -- statement.lua:350-368
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   4   3
0005    MOV      6   3
0006    TGETS    5   3   0  ; "match"
0007    KSTR     7   1      ; "^(.+)=$"
0008    CALL     5   2   3
0009    IST          5
0010    JMP      6 => 0016
0011    GGET     6   2      ; "error"
0012    KSTR     7   3      ; "Unknown op: "
0013    MOV      8   3
0014    CAT      7   7   8
0015    CALL     6   1   2
0016 => UGET     6   1      ; value_is_singular
0017    MOV      7   4
0018    CALL     6   2   2
0019    IST          6
0020    JMP      6 => 0024
0021    TDUP     6   4
0022    TSETB    4   6   2
0023    MOV      4   6
0024 => UGET     6   2      ; build
0025    TGETS    6   6   5  ; "assign_one"
0026    MOV      7   2
0027    TDUP     8   6
0028    TSETB    2   8   2
0029    TSETB    5   8   3
0030    TSETB    4   8   4
0031    CALLT    6   3

-- BYTECODE -- statement.lua:369-409
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    KPRI     4   0
0006    TNEW     5   0
0007    KSHORT   6   1
0008    KSHORT   7   1
0009    LEN      8   2
0010    KSHORT   9   1
0011    FORI     7 => 0030
0012 => TGETV   11   2  10
0013    KPRI    12   0
0014    UGET    13   1      ; ntype
0015    MOV     14  11
0016    CALL    13   2   2
0017    ISNES   13   0      ; "colon"
0018    JMP     13 => 0021
0019    TGETB   12  11   2
0020    JMP     13 => 0022
0021 => MOV     12  11
0022 => TNEW    13   3
0023    TDUP    14   1
0024    TSETB   11  14   2
0025    TSETB   14  13   1
0026    TSETB   12  13   2
0027    TSETV   13   5   6
0028    ADDVN    6   6   0  ; 1
0029    FORL     7 => 0012
0030 => MOV      4   5
0031    TDUP     5   2
0032    TSETB    4   5   2
0033    TDUP     6   3
0034    TNEW     7   3
0035    TSETB    5   7   1
0036    TSETB    7   6   2
0037    TNEW     7   3
0038    TSETB    3   7   1
0039    TSETB    7   6   3
0040    KSHORT   7  -1
0041    TGETV    7   1   7
0042    KSHORT   8  -1
0043    TSETV    7   6   8
0044    RET1     6   2

-- BYTECODE -- statement.lua:412-416
0001    TNEW     1   3
0002    TSETB    0   1   1
0003    RET1     1   2

-- BYTECODE -- statement.lua:410-418
0001    UGET     3   0      ; unpack
0002    MOV      4   1
0003    KSHORT   5   2
0004    CALL     3   3   3
0005    IST          2
0006    JMP      5 => 0008
0007    FNEW     2   0      ; statement.lua:412
0008 => UGET     5   1      ; construct_comprehension
0009    MOV      6   2
0010    MOV      7   3
0011    CALL     6   2   2
0012    MOV      7   4
0013    UCLO     0 => 0014
0014 => CALLT    5   3

-- BYTECODE -- statement.lua:419-424
0001    ISF          2
0002    JMP      3 => 0008
0003    UGET     3   0      ; transform_last_stm
0004    TGETB    4   1   2
0005    MOV      5   2
0006    CALL     3   2   3
0007    TSETB    3   1   2
0008 => RET1     1   2

-- BYTECODE -- statement.lua:467-479
0001    TNEW     0   0
0002    KSHORT   1   1
0003    UGET     2   0      ; stm
0004    TGETB    2   2   2
0005    KSHORT   3   1
0006    LEN      4   2
0007    KSHORT   5   1
0008    FORI     3 => 0018
0009 => TGETV    7   2   6
0010    UGET     8   1      ; ntype
0011    MOV      9   7
0012    CALL     8   2   2
0013    ISNES    8   0      ; "ref"
0014    JMP      8 => 0017
0015    TSETV    7   0   1
0016    ADDVN    1   1   0  ; 1
0017 => FORL     3 => 0009
0018 => RET1     0   2

-- BYTECODE -- statement.lua:425-485
0001    UGET     2   0      ; unpack
0002    MOV      3   1
0003    KSHORT   4   2
0004    CALL     2   3   3
0005    KPRI     4   0
0006    TGETB    5   3   1
0007    ISNES    5   0      ; "if"
0008    JMP      6 => 0028
0009    UGET     6   0      ; unpack
0010    MOV      7   3
0011    KSHORT   8   2
0012    CALL     6   3   3
0013    ISF          7
0014    JMP      8 => 0020
0015    TDUP     8   1
0016    TNEW     9   3
0017    TSETB    7   9   1
0018    TSETB    9   8   2
0019    MOV      7   8
0020 => TDUP     8   2
0021    TSETB    6   8   2
0022    TNEW     9   3
0023    TSETB    2   9   1
0024    TSETB    9   8   3
0025    TSETB    7   8   4
0026    MOV      4   8
0027    JMP      6 => 0052
0028 => ISNES    5   3      ; "unless"
0029    JMP      6 => 0038
0030    TDUP     6   4
0031    TGETB    7   3   2
0032    TSETB    7   6   2
0033    TNEW     7   3
0034    TSETB    2   7   1
0035    TSETB    7   6   3
0036    MOV      4   6
0037    JMP      6 => 0052
0038 => ISNES    5   5      ; "comprehension"
0039    JMP      6 => 0046
0040    TDUP     6   6
0041    TSETB    2   6   2
0042    TGETB    7   3   2
0043    TSETB    7   6   3
0044    MOV      4   6
0045    JMP      6 => 0052
0046 => GGET     6   7      ; "error"
0047    KSTR     7   8      ; "Unknown decorator "
0048    TGETB    8   3   1
0049    CAT      7   7   8
0050    CALL     6   2   2
0051    MOV      4   6
0052 => UGET     6   1      ; ntype
0053    MOV      7   2
0054    CALL     6   2   2
0055    ISNES    6   9      ; "assign"
0056    JMP      6 => 0071
0057    UGET     6   2      ; build
0058    TGETS    6   6  10  ; "group"
0059    TNEW     7   3
0060    UGET     8   2      ; build
0061    TGETS    8   8  11  ; "declare"
0062    TDUP     9  13
0063    FNEW    10  12      ; statement.lua:467
0064    CALL    10   2   1
0065    TSETS   10   9  14  ; "names"
0066    CALL     8   2   2
0067    TSETB    8   7   1
0068    TSETB    4   7   2
0069    CALL     6   2   2
0070    MOV      4   6
0071 => UCLO     0 => 0072
0072 => RET1     4   2

-- BYTECODE -- statement.lua:486-516
0001    TGETB    2   1   2
0002    UGET     3   0      ; ntype
0003    MOV      4   2
0004    CALL     3   2   2
0005    ISNES    3   0      ; "assign"
0006    JMP      3 => 0034
0007    UGET     3   1      ; destructure
0008    TGETS    3   3   1  ; "has_destructure"
0009    TGETB    4   2   2
0010    CALL     3   2   2
0011    ISF          3
0012    JMP      4 => 0016
0013    GGET     3   2      ; "error"
0014    KSTR     4   3      ; "destructure not allowed in unless assign"~
0015    CALL     3   1   2
0016 => UGET     3   2      ; build
0017    TGETS    3   3   4  ; "do"
0018    TNEW     4   3
0019    TSETB    2   4   1
0020    TDUP     5   5
0021    TDUP     6   6
0022    TGETB    7   2   2
0023    TGETB    7   7   1
0024    TSETB    7   6   2
0025    TSETB    6   5   2
0026    UGET     6   3      ; unpack
0027    MOV      7   1
0028    KSHORT   8   3
0029    CALL     6   0   3
0030    TSETM    6   0      ; 3
0031    TSETB    5   4   2
0032    CALLT    3   2
0033    JMP      3 => 0046
0034 => TDUP     3   7
0035    TDUP     4   8
0036    TDUP     5   9
0037    TSETB    2   5   2
0038    TSETB    5   4   2
0039    TSETB    4   3   2
0040    UGET     4   3      ; unpack
0041    MOV      5   1
0042    KSHORT   6   3
0043    CALL     4   0   3
0044    TSETM    4   0      ; 3
0045    RET1     3   2
0046 => RET0     0   1

-- BYTECODE -- statement.lua:517-558
0001    UGET     3   0      ; ntype
0002    TGETB    4   1   2
0003    CALL     3   2   2
0004    ISNES    3   0      ; "assign"
0005    JMP      3 => 0070
0006    UGET     3   1      ; unpack
0007    MOV      4   1
0008    KSHORT   5   2
0009    CALL     3   3   3
0010    UGET     5   2      ; destructure
0011    TGETS    5   5   1  ; "has_destructure"
0012    TGETB    6   3   2
0013    CALL     5   2   2
0014    ISF          5
0015    JMP      6 => 0055
0016    UGET     5   3      ; NameProxy
0017    KSTR     6   2      ; "des"
0018    CALL     5   2   2
0019    TNEW     6   3
0020    UGET     7   2      ; destructure
0021    TGETS    7   7   3  ; "build_assign"
0022    MOV      8   0
0023    TGETB    9   3   2
0024    TGETB    9   9   1
0025    MOV     10   5
0026    CALL     7   2   4
0027    TSETB    7   6   1
0028    UGET     7   4      ; build
0029    TGETS    7   7   4  ; "group"
0030    TGETB    8   1   3
0031    CALL     7   0   2
0032    TSETM    7   0      ; 2
0033    MOV      4   6
0034    UGET     6   4      ; build
0035    TGETS    6   6   5  ; "do"
0036    TNEW     7   3
0037    UGET     8   4      ; build
0038    TGETS    8   8   6  ; "assign_one"
0039    MOV      9   5
0040    TGETB   10   3   3
0041    TGETB   10  10   1
0042    CALL     8   2   3
0043    TSETB    8   7   1
0044    TDUP     8   7
0045    TSETB    5   8   2
0046    TSETB    4   8   3
0047    UGET     9   1      ; unpack
0048    MOV     10   1
0049    KSHORT  11   4
0050    CALL     9   0   3
0051    TSETM    9   1      ; 4
0052    TSETB    8   7   2
0053    CALLT    6   2
0054    JMP      5 => 0070
0055 => TGETB    5   3   2
0056    TGETB    5   5   1
0057    UGET     6   4      ; build
0058    TGETS    6   6   5  ; "do"
0059    TNEW     7   3
0060    TSETB    3   7   1
0061    TDUP     8   8
0062    TSETB    5   8   2
0063    UGET     9   1      ; unpack
0064    MOV     10   1
0065    KSHORT  11   3
0066    CALL     9   0   3
0067    TSETM    9   2      ; 3
0068    TSETB    8   7   2
0069    CALLT    6   2
0070 => UGET     3   5      ; expand_elseif_assign
0071    MOV      4   1
0072    CALL     3   2   2
0073    MOV      1   3
0074    ISF          2
0075    JMP      3 => 0097
0076    UGET     3   6      ; smart_node
0077    MOV      4   1
0078    CALL     3   1   2
0079    UGET     3   7      ; transform_last_stm
0080    TGETS    4   1   9  ; "then"
0081    MOV      5   2
0082    CALL     3   2   3
0083    TSETS    3   1   9  ; "then"
0084    KSHORT   3   4
0085    LEN      4   1
0086    KSHORT   5   1
0087    FORI     3 => 0097
0088 => TGETV    7   1   6
0089    TGETV    8   1   6
0090    LEN      8   8
0091    UGET     9   7      ; transform_last_stm
0092    TGETV   10   7   8
0093    MOV     11   2
0094    CALL     9   2   3
0095    TSETV    9   7   8
0096    FORL     3 => 0088
0097 => RET1     1   2

-- BYTECODE -- statement.lua:597-599
0001    MOV      2   0
0002    TGETS    1   0   0  ; "set"
0003    KSTR     3   1      ; "scope_var"
0004    UGET     4   0      ; scope_name
0005    CALLT    1   4

-- BYTECODE -- statement.lua:559-606
0001    UGET     3   0      ; unpack
0002    MOV      4   1
0003    KSHORT   5   2
0004    CALL     3   3   3
0005    KPRI     5   2
0006    KNIL     6   7
0007    UGET     8   1      ; last_stm
0008    MOV      9   4
0009    CALL     8   2   2
0010    ISF          8
0011    JMP      9 => 0021
0012    UGET     9   2      ; types
0013    TGETS    9   9   0  ; "terminating"
0014    UGET    10   3      ; ntype
0015    MOV     11   8
0016    CALL    10   2   2
0017    TGETV    9   9  10
0018    ISF          9
0019    JMP     10 => 0021
0020    KPRI     2   1
0021 => UGET     8   3      ; ntype
0022    MOV      9   3
0023    CALL     8   2   2
0024    ISNES    8   1      ; "assign"
0025    JMP      8 => 0052
0026    UGET     8   0      ; unpack
0027    MOV      9   3
0028    KSHORT  10   2
0029    CALL     8   3   3
0030    TGETB   10   8   1
0031    UGET    11   3      ; ntype
0032    MOV     12  10
0033    CALL    11   2   2
0034    ISNES   11   2      ; "ref"
0035    JMP     11 => 0041
0036    MOV      6  10
0037    MOV      7   3
0038    TGETB    3   9   1
0039    KPRI     5   1
0040    JMP     11 => 0060
0041 => UGET    11   4      ; NameProxy
0042    KSTR    12   3      ; "with"
0043    CALL    11   2   2
0044    MOV      6  11
0045    TGETB    3   9   1
0046    TSETB    6   9   1
0047    TDUP    11   4
0048    TSETB    8  11   2
0049    TSETB    9  11   3
0050    MOV      7  11
0051    JMP      8 => 0060
0052 => MOV      9   0
0053    TGETS    8   0   5  ; "is_local"
0054    MOV     10   3
0055    CALL     8   2   3
0056    ISF          8
0057    JMP      9 => 0060
0058    MOV      6   3
0059    KPRI     5   1
0060 => IST          6
0061    JMP      8 => 0066
0062    UGET     8   4      ; NameProxy
0063    KSTR     9   3      ; "with"
0064    CALL     8   2   2
0065    MOV      6   8
0066 => UGET     8   5      ; build
0067    TGETS    8   8   6  ; "do"
0068    TNEW     9   5
0069    ISF          5
0070    JMP     10 => 0078
0071    UGET    10   5      ; build
0072    TGETS   10  10   7  ; "assign_one"
0073    MOV     11   6
0074    MOV     12   3
0075    CALL    10   2   3
0076    IST         10
0077    JMP     11 => 0079
0078 => UGET    10   6      ; NOOP
0079 => TSETB   10   9   1
0080    ISTC    10   7
0081    JMP     10 => 0083
0082    UGET    10   6      ; NOOP
0083 => TSETB   10   9   2
0084    UGET    10   7      ; Run
0085    FNEW    11   8      ; statement.lua:597
0086    CALL    10   2   2
0087    TSETB   10   9   3
0088    UGET    10   0      ; unpack
0089    MOV     11   4
0090    CALL    10   0   2
0091    TSETM   10   0      ; 4
0092    CALL     8   2   2
0093    ISF          2
0094    JMP      9 => 0102
0095    GGET     9   9      ; "table"
0096    TGETS    9   9  10  ; "insert"
0097    TGETB   10   8   2
0098    MOV     11   2
0099    MOV     12   6
0100    CALL    11   0   2
0101    CALLM    9   1   1
0102 => UCLO     0 => 0103
0103 => RET1     8   2

-- BYTECODE -- statement.lua:607-711
0001    UGET     3   0      ; smart_node
0002    MOV      4   1
0003    CALL     3   1   2
0004    UGET     3   1      ; unpack
0005    TGETS    4   1   0  ; "iter"
0006    CALL     3   2   2
0007    TNEW     4   0
0008    TNEW     5   0
0009    KSHORT   6   1
0010    GGET     7   1      ; "ipairs"
0011    TGETS    8   1   2  ; "names"
0012    CALL     7   4   2
0013    JMP     10 => 0035
0014 => UGET    12   2      ; ntype
0015    MOV     13  11
0016    CALL    12   2   2
0017    ISNES   12   3      ; "table"
0018    JMP     12 => 0033
0019    UGET    12   3      ; NameProxy
0020    KSTR    13   4      ; "des"
0021    CALL    12   2   2
0022    UGET    13   4      ; insert
0023    MOV     14   4
0024    UGET    15   5      ; destructure
0025    TGETS   15  15   5  ; "build_assign"
0026    MOV     16   0
0027    MOV     17  11
0028    MOV     18  12
0029    CALL    15   0   4
0030    CALLM   13   1   1
0031    TSETV   12   5   6
0032    JMP     12 => 0034
0033 => TSETV   11   5   6
0034 => ADDVN    6   6   0  ; 1
0035 => ITERC   10   3   3
0036    ITERL   10 => 0014
0037    TSETS    5   1   2  ; "names"
0038    GGET     5   6      ; "next"
0039    MOV      6   4
0040    CALL     5   2   2
0041    ISF          5
0042    JMP      6 => 0051
0043    UGET     5   4      ; insert
0044    MOV      6   4
0045    UGET     7   6      ; build
0046    TGETS    7   7   7  ; "group"
0047    TGETS    8   1   8  ; "body"
0048    CALL     7   0   2
0049    CALLM    5   1   1
0050    TSETS    4   1   8  ; "body"
0051 => UGET     5   2      ; ntype
0052    MOV      6   3
0053    CALL     5   2   2
0054    ISNES    5   9      ; "unpack"
0055    JMP      5 => 0199
0056    TGETB    5   3   2
0057    UGET     6   3      ; NameProxy
0058    KSTR     7  10      ; "index"
0059    CALL     6   2   2
0060    MOV      8   0
0061    TGETS    7   0  11  ; "is_local"
0062    MOV      9   5
0063    CALL     7   2   3
0064    ISF          7
0065    JMP      8 => 0068
0066    ISTC     7   5
0067    JMP      7 => 0071
0068 => UGET     7   3      ; NameProxy
0069    KSTR     8  12      ; "list"
0070    CALL     7   2   2
0071 => KNIL     8   9
0072    UGET    10   7      ; is_slice
0073    MOV     11   5
0074    CALL    10   2   2
0075    ISF         10
0076    JMP     11 => 0124
0077    LEN     10   5
0078    TGETV   10   5  10
0079    GGET    11   3      ; "table"
0080    TGETS   11  11  13  ; "remove"
0081    MOV     12   5
0082    CALL    11   1   2
0083    GGET    11   3      ; "table"
0084    TGETS   11  11  13  ; "remove"
0085    MOV     12  10
0086    KSHORT  13   1
0087    CALL    11   1   3
0088    MOV     12   0
0089    TGETS   11   0  11  ; "is_local"
0090    MOV     13   5
0091    CALL    11   2   3
0092    ISF         11
0093    JMP     12 => 0095
0094    MOV      7   5
0095 => TGETB   11  10   2
0096    ISF         11
0097    JMP     12 => 0119
0098    TGETB   11  10   2
0099    ISEQS   11  14      ; ""
0100    JMP     11 => 0119
0101    UGET    11   3      ; NameProxy
0102    KSTR    12  15      ; "max"
0103    CALL    11   2   2
0104    UGET    12   6      ; build
0105    TGETS   12  12  16  ; "assign_one"
0106    MOV     13  11
0107    TGETB   14  10   2
0108    CALL    12   2   3
0109    MOV      8  12
0110    TDUP    12  17
0111    TSETB   11  12   2
0112    TDUP    13  18
0113    TSETB    7  13   2
0114    TSETB   13  12   6
0115    TSETB   11  12   8
0116    TSETB   11  12  10
0117    TSETB   12  10   2
0118    JMP     11 => 0122
0119 => TDUP    11  19
0120    TSETB    7  11   2
0121    TSETB   11  10   2
0122 => MOV      9  10
0123    JMP     10 => 0129
0124 => TDUP    10  20
0125    TDUP    11  21
0126    TSETB    7  11   2
0127    TSETB   11  10   2
0128    MOV      9  10
0129 => KPRI    10   0
0130    TNEW    11   0
0131    KSHORT  12   1
0132    TGETS   13   1   2  ; "names"
0133    KSHORT  14   1
0134    LEN     15  13
0135    KSHORT  16   1
0136    FORI    14 => 0154
0137 => TGETV   18  13  17
0138    UGET    19   8      ; is_name_proxy
0139    MOV     20  18
0140    CALL    19   2   2
0141    ISF         19
0142    JMP     20 => 0145
0143    ISTC    19  18
0144    JMP     19 => 0151
0145 => UGET    19   9      ; LocalName
0146    MOV     20  18
0147    CALL    19   2   2
0148    IST         19
0149    JMP     20 => 0151
0150    MOV     19  18
0151 => TSETV   19  11  12
0152    ADDVN   12  12   0  ; 1
0153    FORL    14 => 0137
0154 => MOV     10  11
0155    UGET    11   6      ; build
0156    TGETS   11  11   7  ; "group"
0157    TNEW    12   4
0158    ISEQV    7   5
0159    JMP     13 => 0167
0160    UGET    13   6      ; build
0161    TGETS   13  13  16  ; "assign_one"
0162    MOV     14   7
0163    MOV     15   5
0164    CALL    13   2   3
0165    IST         13
0166    JMP     14 => 0168
0167 => UGET    13  10      ; NOOP
0168 => TSETB   13  12   1
0169    ISTC    13   8
0170    JMP     13 => 0172
0171    UGET    13  10      ; NOOP
0172 => TSETB   13  12   2
0173    UGET    13   6      ; build
0174    TGETS   13  13  22  ; "for"
0175    TDUP    14  23
0176    TSETS    6  14  24  ; "name"
0177    TSETS    9  14  25  ; "bounds"
0178    TNEW    15   3
0179    TDUP    16  26
0180    TSETB   10  16   2
0181    TNEW    17   3
0182    UGET    18   3      ; NameProxy
0183    TGETS   18  18  10  ; "index"
0184    MOV     19   7
0185    MOV     20   6
0186    CALL    18   0   3
0187    TSETM   18   1      ; 1
0188    TSETB   17  16   3
0189    TSETB   16  15   1
0190    UGET    16   6      ; build
0191    TGETS   16  16   7  ; "group"
0192    TGETS   17   1   8  ; "body"
0193    CALL    16   0   2
0194    TSETM   16   2      ; 2
0195    TSETS   15  14   8  ; "body"
0196    CALL    13   0   2
0197    TSETM   13   3      ; 3
0198    CALLT   11   2
0199 => UGET     5  11      ; with_continue_listener
0200    TGETS    6   1   8  ; "body"
0201    CALL     5   2   2
0202    TSETS    5   1   8  ; "body"
0203    RET0     0   1

-- BYTECODE -- statement.lua:712-715
0001    UGET     2   0      ; smart_node
0002    MOV      3   1
0003    CALL     2   1   2
0004    UGET     2   1      ; with_continue_listener
0005    TGETS    3   1   0  ; "body"
0006    CALL     2   2   2
0007    TSETS    2   1   0  ; "body"
0008    RET0     0   1

-- BYTECODE -- statement.lua:716-719
0001    UGET     2   0      ; smart_node
0002    MOV      3   1
0003    CALL     2   1   2
0004    UGET     2   1      ; with_continue_listener
0005    TGETS    3   1   0  ; "body"
0006    CALL     2   2   2
0007    TSETS    2   1   0  ; "body"
0008    RET0     0   1

-- BYTECODE -- statement.lua:724-758
0001    UGET     1   0      ; unpack
0002    MOV      2   0
0003    CALL     1   4   2
0004    TNEW     4   0
0005    UGET     5   1      ; insert
0006    MOV      6   4
0007    ISNES    1   0      ; "case"
0008    JMP      7 => 0011
0009    KSTR     7   1      ; "elseif"
0010    JMP      8 => 0012
0011 => KSTR     7   2      ; "else"
0012 => CALL     5   1   3
0013    ISEQS    1   2      ; "else"
0014    JMP      5 => 0053
0015    TNEW     5   0
0016    GGET     6   3      ; "ipairs"
0017    MOV      7   2
0018    CALL     6   4   2
0019    JMP      9 => 0046
0020 => ISNEN    9   0      ; 1
0021    JMP     11 => 0027
0022    UGET    11   1      ; insert
0023    MOV     12   5
0024    KSTR    13   4      ; "exp"
0025    CALL    11   1   3
0026    JMP     11 => 0031
0027 => UGET    11   1      ; insert
0028    MOV     12   5
0029    KSTR    13   5      ; "or"
0030    CALL    11   1   3
0031 => UGET    11   2      ; value_is_singular
0032    MOV     12  10
0033    CALL    11   2   2
0034    IST         11
0035    JMP     11 => 0039
0036    TDUP    11   6
0037    TSETB   10  11   2
0038    MOV     10  11
0039 => UGET    11   1      ; insert
0040    MOV     12   5
0041    TDUP    13   7
0042    TSETB   10  13   2
0043    UGET    14   3      ; exp_name
0044    TSETB   14  13   4
0045    CALL    11   1   3
0046 => ITERC    9   3   3
0047    ITERL    9 => 0020
0048    UGET     6   1      ; insert
0049    MOV      7   4
0050    MOV      8   5
0051    CALL     6   1   3
0052    JMP      5 => 0054
0053 => MOV      3   2
0054 => UGET     5   4      ; ret
0055    ISF          5
0056    JMP      6 => 0062
0057    UGET     5   5      ; transform_last_stm
0058    MOV      6   3
0059    UGET     7   4      ; ret
0060    CALL     5   2   3
0061    MOV      3   5
0062 => UGET     5   1      ; insert
0063    MOV      6   4
0064    MOV      7   3
0065    CALL     5   1   3
0066    RET1     4   2

-- BYTECODE -- statement.lua:720-778
0001    UGET     3   0      ; unpack
0002    MOV      4   1
0003    KSHORT   5   2
0004    CALL     3   3   3
0005    UGET     5   1      ; NameProxy
0006    KSTR     6   0      ; "exp"
0007    CALL     5   2   2
0008    KPRI     6   0
0009    FNEW     6   1      ; statement.lua:724
0010    KPRI     7   2
0011    TDUP     8   2
0012    KSHORT   9   1
0013    LEN     10   4
0014    KSHORT  11   1
0015    FORI     9 => 0037
0016 => TGETV   13   4  12
0017    MOV     14   6
0018    MOV     15  13
0019    CALL    14   2   2
0020    ISF          7
0021    JMP     15 => 0032
0022    KPRI     7   1
0023    UGET    15   2      ; insert
0024    MOV     16   8
0025    TGETB   17  14   2
0026    CALL    15   1   3
0027    UGET    15   2      ; insert
0028    MOV     16   8
0029    TGETB   17  14   3
0030    CALL    15   1   3
0031    JMP     15 => 0036
0032 => UGET    15   2      ; insert
0033    MOV     16   8
0034    MOV     17  14
0035    CALL    15   1   3
0036 => FORL     9 => 0016
0037 => UGET     9   5      ; build
0038    TGETS    9   9   3  ; "group"
0039    TNEW    10   3
0040    UGET    11   5      ; build
0041    TGETS   11  11   4  ; "assign_one"
0042    MOV     12   5
0043    MOV     13   3
0044    CALL    11   2   3
0045    TSETB   11  10   1
0046    TSETB    8  10   2
0047    UCLO     0 => 0048
0048 => CALLT    9   2

-- BYTECODE -- statement.lua:0-781
0001    KPRI     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "moonscript.transform.transformer"
0004    CALL     1   2   2
0005    TGETS    0   1   2  ; "Transformer"
0006    KNIL     1   3
0007    GGET     4   0      ; "require"
0008    KSTR     5   3      ; "moonscript.transform.names"
0009    CALL     4   2   2
0010    TGETS    5   4   4  ; "NameProxy"
0011    TGETS    6   4   5  ; "LocalName"
0012    TGETS    3   4   6  ; "is_name_proxy"
0013    MOV      2   6
0014    MOV      1   5
0015    KNIL     4   7
0016    GGET     8   0      ; "require"
0017    KSTR     9   7      ; "moonscript.transform.statements"
0018    CALL     8   2   2
0019    TGETS    9   8   8  ; "Run"
0020    TGETS   10   8   9  ; "transform_last_stm"
0021    TGETS   11   8  10  ; "implicitly_return"
0022    TGETS    7   8  11  ; "last_stm"
0023    MOV      6  11
0024    MOV      5  10
0025    MOV      4   9
0026    GGET     8   0      ; "require"
0027    KSTR     9  12      ; "moonscript.types"
0028    CALL     8   2   2
0029    KNIL     9  15
0030    TGETS   16   8  13  ; "build"
0031    TGETS   17   8  14  ; "ntype"
0032    TGETS   18   8  15  ; "is_value"
0033    TGETS   19   8  16  ; "smart_node"
0034    TGETS   20   8  17  ; "value_is_singular"
0035    TGETS   21   8  18  ; "is_slice"
0036    TGETS   15   8  19  ; "NOOP"
0037    MOV     14  21
0038    MOV     13  20
0039    MOV     12  19
0040    MOV     11  18
0041    MOV     10  17
0042    MOV      9  16
0043    KPRI    16   0
0044    GGET    17  20      ; "table"
0045    TGETS   16  17  21  ; "insert"
0046    GGET    17   0      ; "require"
0047    KSTR    18  22      ; "moonscript.transform.destructure"
0048    CALL    17   2   2
0049    KPRI    18   0
0050    GGET    19   0      ; "require"
0051    KSTR    20  23      ; "moonscript.transform.comprehension"
0052    CALL    19   2   2
0053    TGETS   18  19  24  ; "construct_comprehension"
0054    KPRI    19   0
0055    GGET    20   0      ; "require"
0056    KSTR    21  25      ; "moonscript.util"
0057    CALL    20   2   2
0058    TGETS   19  20  26  ; "unpack"
0059    KPRI    20   0
0060    FNEW    20  27      ; statement.lua:24
0061    KPRI    21   0
0062    FNEW    21  28      ; statement.lua:97
0063    KPRI    22   0
0064    FNEW    22  29      ; statement.lua:140
0065    MOV     23   0
0066    TDUP    24  31
0067    FNEW    25  30      ; statement.lua:164
0068    TSETS   25  24  32  ; "transform"
0069    FNEW    25  33      ; statement.lua:169
0070    TSETS   25  24  34  ; "root_stms"
0071    FNEW    25  35      ; statement.lua:172
0072    TSETS   25  24  36  ; "return"
0073    FNEW    25  37      ; statement.lua:197
0074    TSETS   25  24  38  ; "declare_glob"
0075    FNEW    25  39      ; statement.lua:234
0076    TSETS   25  24  40  ; "assign"
0077    FNEW    25  41      ; statement.lua:309
0078    TSETS   25  24  42  ; "continue"
0079    FNEW    25  43      ; statement.lua:321
0080    TSETS   25  24  44  ; "export"
0081    FNEW    25  45      ; statement.lua:350
0082    TSETS   25  24  46  ; "update"
0083    FNEW    25  47      ; statement.lua:369
0084    TSETS   25  24  48  ; "import"
0085    FNEW    25  49      ; statement.lua:410
0086    TSETS   25  24  50  ; "comprehension"
0087    FNEW    25  51      ; statement.lua:419
0088    TSETS   25  24  52  ; "do"
0089    FNEW    25  53      ; statement.lua:425
0090    TSETS   25  24  54  ; "decorated"
0091    FNEW    25  55      ; statement.lua:486
0092    TSETS   25  24  56  ; "unless"
0093    FNEW    25  57      ; statement.lua:517
0094    TSETS   25  24  58  ; "if"
0095    FNEW    25  59      ; statement.lua:559
0096    TSETS   25  24  60  ; "with"
0097    FNEW    25  61      ; statement.lua:607
0098    TSETS   25  24  62  ; "foreach"
0099    FNEW    25  63      ; statement.lua:712
0100    TSETS   25  24  64  ; "while"
0101    FNEW    25  65      ; statement.lua:716
0102    TSETS   25  24  66  ; "for"
0103    FNEW    25  67      ; statement.lua:720
0104    TSETS   25  24  68  ; "switch"
0105    GGET    25   0      ; "require"
0106    KSTR    26  69      ; "moonscript.transform.class"
0107    CALL    25   2   2
0108    TSETS   25  24  70  ; "class"
0109    UCLO     0 => 0110
0110 => CALLT   23   2

