
main <./moonscript/transform/statement.lua:0,0> (193 instructions, 772 bytes at 0x7fbcb5c068d0)
0+ params, 27 slots, 0 upvalues, 25 locals, 48 constants, 22 functions
	1	[2]	GETGLOBAL	1 -1	; require
	2	[2]	LOADK    	2 -2	; "moonscript.transform.transformer"
	3	[2]	CALL     	1 2 2
	4	[2]	GETTABLE 	0 1 -3	; "Transformer"
	5	[3]	LOADNIL  	1 3
	6	[5]	GETGLOBAL	4 -1	; require
	7	[5]	LOADK    	5 -4	; "moonscript.transform.names"
	8	[5]	CALL     	4 2 2
	9	[6]	GETTABLE 	5 4 -5	; "NameProxy"
	10	[6]	GETTABLE 	6 4 -6	; "LocalName"
	11	[6]	GETTABLE 	3 4 -7	; "is_name_proxy"
	12	[6]	MOVE     	2 6
	13	[6]	MOVE     	1 5
	14	[8]	LOADNIL  	4 7
	15	[10]	GETGLOBAL	8 -1	; require
	16	[10]	LOADK    	9 -8	; "moonscript.transform.statements"
	17	[10]	CALL     	8 2 2
	18	[11]	GETTABLE 	9 8 -9	; "Run"
	19	[11]	GETTABLE 	10 8 -10	; "transform_last_stm"
	20	[11]	GETTABLE 	11 8 -11	; "implicitly_return"
	21	[11]	GETTABLE 	7 8 -12	; "last_stm"
	22	[11]	MOVE     	6 11
	23	[11]	MOVE     	5 10
	24	[11]	MOVE     	4 9
	25	[13]	GETGLOBAL	8 -1	; require
	26	[13]	LOADK    	9 -13	; "moonscript.types"
	27	[13]	CALL     	8 2 2
	28	[14]	LOADNIL  	9 15
	29	[15]	GETTABLE 	16 8 -14	; "build"
	30	[15]	GETTABLE 	17 8 -15	; "ntype"
	31	[15]	GETTABLE 	18 8 -16	; "is_value"
	32	[15]	GETTABLE 	19 8 -17	; "smart_node"
	33	[15]	GETTABLE 	20 8 -18	; "value_is_singular"
	34	[15]	GETTABLE 	21 8 -19	; "is_slice"
	35	[15]	GETTABLE 	15 8 -20	; "NOOP"
	36	[15]	MOVE     	14 21
	37	[15]	MOVE     	13 20
	38	[15]	MOVE     	12 19
	39	[15]	MOVE     	11 18
	40	[15]	MOVE     	10 17
	41	[15]	MOVE     	9 16
	42	[16]	LOADNIL  	16 16
	43	[17]	GETGLOBAL	17 -21	; table
	44	[17]	GETTABLE 	16 17 -22	; "insert"
	45	[18]	GETGLOBAL	17 -1	; require
	46	[18]	LOADK    	18 -23	; "moonscript.transform.destructure"
	47	[18]	CALL     	17 2 2
	48	[19]	LOADNIL  	18 18
	49	[20]	GETGLOBAL	19 -1	; require
	50	[20]	LOADK    	20 -24	; "moonscript.transform.comprehension"
	51	[20]	CALL     	19 2 2
	52	[20]	GETTABLE 	18 19 -25	; "construct_comprehension"
	53	[21]	LOADNIL  	19 19
	54	[22]	GETGLOBAL	20 -1	; require
	55	[22]	LOADK    	21 -26	; "moonscript.util"
	56	[22]	CALL     	20 2 2
	57	[22]	GETTABLE 	19 20 -27	; "unpack"
	58	[23]	LOADNIL  	20 20
	59	[95]	CLOSURE  	20 0	; 0x7fbcb5c07180
	60	[95]	MOVE     	0 4
	61	[95]	MOVE     	0 1
	62	[95]	MOVE     	0 9
	63	[95]	MOVE     	0 7
	64	[95]	MOVE     	0 8
	65	[95]	MOVE     	0 10
	66	[96]	LOADNIL  	21 21
	67	[138]	CLOSURE  	21 1	; 0x7fbcb5c085c0
	68	[138]	MOVE     	0 10
	69	[138]	MOVE     	0 16
	70	[138]	MOVE     	0 21
	71	[139]	LOADNIL  	22 22
	72	[162]	CLOSURE  	22 2	; 0x7fbcb5c089b0
	73	[162]	MOVE     	0 10
	74	[162]	MOVE     	0 19
	75	[162]	MOVE     	0 16
	76	[163]	MOVE     	23 0
	77	[163]	NEWTABLE 	24 0 18
	78	[168]	CLOSURE  	25 3	; 0x7fbcb5c079b0
	79	[168]	SETTABLE 	24 -28 25	; "transform" -
	80	[171]	CLOSURE  	25 4	; 0x7fbcb5c098a0
	81	[171]	MOVE     	0 5
	82	[171]	MOVE     	0 6
	83	[171]	SETTABLE 	24 -29 25	; "root_stms" -
	84	[196]	CLOSURE  	25 5	; 0x7fbcb5c09af0
	85	[196]	MOVE     	0 10
	86	[196]	MOVE     	0 8
	87	[196]	MOVE     	0 6
	88	[196]	MOVE     	0 9
	89	[196]	MOVE     	0 5
	90	[196]	SETTABLE 	24 -30 25	; "return" -
	91	[233]	CLOSURE  	25 6	; 0x7fbcb5c09f60
	92	[233]	MOVE     	0 21
	93	[233]	MOVE     	0 10
	94	[233]	SETTABLE 	24 -31 25	; "declare_glob" -
	95	[308]	CLOSURE  	25 7	; 0x7fbcb5c0a890
	96	[308]	MOVE     	0 19
	97	[308]	MOVE     	0 10
	98	[308]	MOVE     	0 9
	99	[308]	MOVE     	0 8
	100	[308]	MOVE     	0 11
	101	[308]	MOVE     	0 17
	102	[308]	SETTABLE 	24 -32 25	; "assign" -
	103	[320]	CLOSURE  	25 8	; 0x7fbcb5c0b7d0
	104	[320]	MOVE     	0 9
	105	[320]	SETTABLE 	24 -33 25	; "continue" -
	106	[349]	CLOSURE  	25 9	; 0x7fbcb5c06740
	107	[349]	MOVE     	0 12
	108	[349]	MOVE     	0 9
	109	[349]	SETTABLE 	24 -34 25	; "export" -
	110	[368]	CLOSURE  	25 10	; 0x7fbcb5c0b650
	111	[368]	MOVE     	0 19
	112	[368]	MOVE     	0 13
	113	[368]	MOVE     	0 9
	114	[368]	SETTABLE 	24 -35 25	; "update" -
	115	[409]	CLOSURE  	25 11	; 0x7fbcb5c080c0
	116	[409]	MOVE     	0 19
	117	[409]	MOVE     	0 10
	118	[409]	SETTABLE 	24 -36 25	; "import" -
	119	[418]	CLOSURE  	25 12	; 0x7fbcb5c08040
	120	[418]	MOVE     	0 19
	121	[418]	MOVE     	0 18
	122	[418]	SETTABLE 	24 -37 25	; "comprehension" -
	123	[424]	CLOSURE  	25 13	; 0x7fbcb5c0bd90
	124	[424]	MOVE     	0 5
	125	[424]	SETTABLE 	24 -38 25	; "do" -
	126	[485]	CLOSURE  	25 14	; 0x7fbcb5c0c3b0
	127	[485]	MOVE     	0 19
	128	[485]	MOVE     	0 10
	129	[485]	MOVE     	0 9
	130	[485]	SETTABLE 	24 -39 25	; "decorated" -
	131	[516]	CLOSURE  	25 15	; 0x7fbcb5c0cb30
	132	[516]	MOVE     	0 10
	133	[516]	MOVE     	0 17
	134	[516]	MOVE     	0 9
	135	[516]	MOVE     	0 19
	136	[516]	SETTABLE 	24 -40 25	; "unless" -
	137	[558]	CLOSURE  	25 16	; 0x7fbcb5c0cbf0
	138	[558]	MOVE     	0 10
	139	[558]	MOVE     	0 19
	140	[558]	MOVE     	0 17
	141	[558]	MOVE     	0 1
	142	[558]	MOVE     	0 9
	143	[558]	MOVE     	0 22
	144	[558]	MOVE     	0 12
	145	[558]	MOVE     	0 5
	146	[558]	SETTABLE 	24 -41 25	; "if" -
	147	[606]	CLOSURE  	25 17	; 0x7fbcb5c066c0
	148	[606]	MOVE     	0 19
	149	[606]	MOVE     	0 7
	150	[606]	MOVE     	0 8
	151	[606]	MOVE     	0 10
	152	[606]	MOVE     	0 1
	153	[606]	MOVE     	0 9
	154	[606]	MOVE     	0 15
	155	[606]	MOVE     	0 4
	156	[606]	SETTABLE 	24 -42 25	; "with" -
	157	[711]	CLOSURE  	25 18	; 0x7fbcb5c0de90
	158	[711]	MOVE     	0 12
	159	[711]	MOVE     	0 19
	160	[711]	MOVE     	0 10
	161	[711]	MOVE     	0 1
	162	[711]	MOVE     	0 16
	163	[711]	MOVE     	0 17
	164	[711]	MOVE     	0 9
	165	[711]	MOVE     	0 14
	166	[711]	MOVE     	0 3
	167	[711]	MOVE     	0 2
	168	[711]	MOVE     	0 15
	169	[711]	MOVE     	0 20
	170	[711]	SETTABLE 	24 -43 25	; "foreach" -
	171	[715]	CLOSURE  	25 19	; 0x7fbcb5c0e760
	172	[715]	MOVE     	0 12
	173	[715]	MOVE     	0 20
	174	[715]	SETTABLE 	24 -44 25	; "while" -
	175	[719]	CLOSURE  	25 20	; 0x7fbcb5c0ed20
	176	[719]	MOVE     	0 12
	177	[719]	MOVE     	0 20
	178	[719]	SETTABLE 	24 -45 25	; "for" -
	179	[778]	CLOSURE  	25 21	; 0x7fbcb5c0f080
	180	[778]	MOVE     	0 19
	181	[778]	MOVE     	0 1
	182	[778]	MOVE     	0 16
	183	[778]	MOVE     	0 13
	184	[778]	MOVE     	0 5
	185	[778]	MOVE     	0 9
	186	[778]	SETTABLE 	24 -46 25	; "switch" -
	187	[779]	GETGLOBAL	25 -1	; require
	188	[779]	LOADK    	26 -48	; "moonscript.transform.class"
	189	[779]	CALL     	25 2 2
	190	[779]	SETTABLE 	24 -47 25	; "class" -
	191	[163]	TAILCALL 	23 2 0
	192	[780]	RETURN   	23 0
	193	[780]	RETURN   	0 1

function <./moonscript/transform/statement.lua:24,95> (21 instructions, 84 bytes at 0x7fbcb5c07180)
1 param, 7 slots, 6 upvalues, 2 locals, 1 constant, 2 functions
	1	[26]	NEWTABLE 	2 2 0
	2	[27]	GETUPVAL 	3 0	; Run
	3	[35]	CLOSURE  	4 0	; 0x7fbcb5c07730
	4	[35]	MOVE     	0 1
	5	[35]	GETUPVAL 	0 1	; NameProxy
	6	[27]	CALL     	3 2 2
	7	[36]	GETUPVAL 	4 2	; build
	8	[36]	GETTABLE 	4 4 -1	; "group"
	9	[36]	MOVE     	5 0
	10	[36]	CALL     	4 2 2
	11	[37]	GETUPVAL 	5 0	; Run
	12	[93]	CLOSURE  	6 1	; 0x7fbcb5c075e0
	13	[93]	MOVE     	0 1
	14	[93]	GETUPVAL 	0 3	; last_stm
	15	[93]	MOVE     	0 0
	16	[93]	GETUPVAL 	0 4	; types
	17	[93]	GETUPVAL 	0 5	; ntype
	18	[37]	CALL     	5 2 0
	19	[94]	SETLIST  	2 0 1	; 1
	20	[94]	RETURN   	2 2
	21	[95]	RETURN   	0 1

function <./moonscript/transform/statement.lua:27,35> (9 instructions, 36 bytes at 0x7fbcb5c07730)
1 param, 5 slots, 2 upvalues, 1 local, 2 constants, 1 function
	1	[28]	SELF     	1 0 -1	; "listen"
	2	[28]	LOADK    	3 -2	; "continue"
	3	[34]	CLOSURE  	4 0	; 0x7fbcb5c07a70
	4	[34]	GETUPVAL 	0 0	; continue_name
	5	[34]	GETUPVAL 	0 1	; NameProxy
	6	[34]	MOVE     	0 0
	7	[28]	TAILCALL 	1 4 0
	8	[34]	RETURN   	1 0
	9	[35]	RETURN   	0 1

function <./moonscript/transform/statement.lua:28,34> (14 instructions, 56 bytes at 0x7fbcb5c07a70)
0 params, 3 slots, 3 upvalues, 0 locals, 2 constants, 0 functions
	1	[29]	GETUPVAL 	0 0	; continue_name
	2	[29]	TEST     	0 0 1
	3	[29]	JMP      	8	; to 12
	4	[30]	GETUPVAL 	0 1	; NameProxy
	5	[30]	LOADK    	1 -1	; "continue"
	6	[30]	CALL     	0 2 2
	7	[30]	SETUPVAL 	0 0	; continue_name
	8	[31]	GETUPVAL 	0 2	; self
	9	[31]	SELF     	0 0 -2	; "put_name"
	10	[31]	GETUPVAL 	2 0	; continue_name
	11	[31]	CALL     	0 3 1
	12	[33]	GETUPVAL 	0 0	; continue_name
	13	[33]	RETURN   	0 2
	14	[34]	RETURN   	0 1

function <./moonscript/transform/statement.lua:37,93> (26 instructions, 104 bytes at 0x7fbcb5c075e0)
1 param, 7 slots, 5 upvalues, 3 locals, 3 constants, 1 function
	1	[38]	GETUPVAL 	1 0	; continue_name
	2	[38]	TEST     	1 0 1
	3	[38]	JMP      	1	; to 5
	4	[39]	RETURN   	0 1
	5	[41]	GETUPVAL 	1 1	; last_stm
	6	[41]	GETUPVAL 	2 2	; body
	7	[41]	CALL     	1 2 2
	8	[42]	GETUPVAL 	2 3	; types
	9	[42]	GETTABLE 	2 2 -1	; "terminating"
	10	[42]	TESTSET  	3 1 0
	11	[42]	JMP      	3	; to 15
	12	[42]	GETUPVAL 	3 4	; ntype
	13	[42]	MOVE     	4 1
	14	[42]	CALL     	3 2 2
	15	[42]	GETTABLE 	2 2 3
	16	[43]	SELF     	3 0 -2	; "put_name"
	17	[43]	GETUPVAL 	5 0	; continue_name
	18	[43]	LOADNIL  	6 6
	19	[43]	CALL     	3 4 1
	20	[44]	SELF     	3 0 -3	; "splice"
	21	[92]	CLOSURE  	5 0	; 0x7fbcb5c08460
	22	[92]	MOVE     	0 2
	23	[92]	GETUPVAL 	0 0	; continue_name
	24	[44]	TAILCALL 	3 3 0
	25	[92]	RETURN   	3 0
	26	[93]	RETURN   	0 1

function <./moonscript/transform/statement.lua:44,92> (51 instructions, 204 bytes at 0x7fbcb5c08460)
1 param, 13 slots, 2 upvalues, 1 local, 8 constants, 0 functions
	1	[45]	GETUPVAL 	1 0	; enclose_lines
	2	[45]	TEST     	1 0 0
	3	[45]	JMP      	7	; to 11
	4	[46]	NEWTABLE 	1 2 0
	5	[47]	LOADK    	2 -1	; "do"
	6	[47]	NEWTABLE 	3 1 0
	7	[50]	MOVE     	4 0
	8	[50]	SETLIST  	3 1 1	; 1
	9	[51]	SETLIST  	1 2 1	; 1
	10	[51]	MOVE     	0 1
	11	[53]	NEWTABLE 	1 3 0
	12	[53]	NEWTABLE 	2 3 0
	13	[55]	LOADK    	3 -2	; "assign"
	14	[55]	NEWTABLE 	4 1 0
	15	[58]	GETUPVAL 	5 1	; continue_name
	16	[58]	SETLIST  	4 1 1	; 1
	17	[58]	NEWTABLE 	5 1 0
	18	[61]	LOADK    	6 -3	; "false"
	19	[61]	SETLIST  	5 1 1	; 1
	20	[62]	SETLIST  	2 3 1	; 1
	21	[62]	NEWTABLE 	3 3 0
	22	[64]	LOADK    	4 -4	; "repeat"
	23	[65]	LOADK    	5 -5	; "true"
	24	[65]	NEWTABLE 	6 2 0
	25	[67]	MOVE     	7 0
	26	[67]	NEWTABLE 	8 3 0
	27	[69]	LOADK    	9 -2	; "assign"
	28	[69]	NEWTABLE 	10 1 0
	29	[72]	GETUPVAL 	11 1	; continue_name
	30	[72]	SETLIST  	10 1 1	; 1
	31	[72]	NEWTABLE 	11 1 0
	32	[75]	LOADK    	12 -5	; "true"
	33	[75]	SETLIST  	11 1 1	; 1
	34	[76]	SETLIST  	8 3 1	; 1
	35	[77]	SETLIST  	6 2 1	; 1
	36	[78]	SETLIST  	3 3 1	; 1
	37	[78]	NEWTABLE 	4 3 0
	38	[80]	LOADK    	5 -6	; "if"
	39	[80]	NEWTABLE 	6 2 0
	40	[82]	LOADK    	7 -7	; "not"
	41	[84]	GETUPVAL 	8 1	; continue_name
	42	[84]	SETLIST  	6 2 1	; 1
	43	[84]	NEWTABLE 	7 1 0
	44	[85]	NEWTABLE 	8 1 0
	45	[88]	LOADK    	9 -8	; "break"
	46	[88]	SETLIST  	8 1 1	; 1
	47	[89]	SETLIST  	7 1 1	; 1
	48	[90]	SETLIST  	4 3 1	; 1
	49	[91]	SETLIST  	1 3 1	; 1
	50	[91]	RETURN   	1 2
	51	[92]	RETURN   	0 1

function <./moonscript/transform/statement.lua:97,138> (74 instructions, 296 bytes at 0x7fbcb5c085c0)
4 params, 20 slots, 3 upvalues, 17 locals, 13 constants, 0 functions
	1	[98]	EQ       	0 1 -1	; - nil
	2	[98]	JMP      	1	; to 4
	3	[99]	GETTABLE 	1 0 -2	; "current_stms"
	4	[101]	EQ       	0 2 -1	; - nil
	5	[101]	JMP      	2	; to 8
	6	[102]	GETTABLE 	4 0 -3	; "current_stm_i"
	7	[102]	ADD      	2 4 -4	; - 1
	8	[104]	EQ       	0 3 -1	; - nil
	9	[104]	JMP      	2	; to 12
	10	[105]	NEWTABLE 	4 0 0
	11	[105]	MOVE     	3 4
	12	[107]	MOVE     	4 2
	13	[107]	LEN      	5 1
	14	[107]	LOADK    	6 -4	; 1
	15	[107]	FORPREP  	4 56	; to 72
	16	[108]	LOADBOOL 	8 0 0
	17	[110]	GETTABLE 	9 1 7
	18	[111]	EQ       	0 9 -1	; - nil
	19	[111]	JMP      	2	; to 22
	20	[112]	LOADBOOL 	8 1 0
	21	[113]	JMP      	47	; to 69
	22	[115]	GETTABLE 	10 0 -5	; "transform"
	23	[115]	GETTABLE 	10 10 -6	; "statement"
	24	[115]	MOVE     	11 9
	25	[115]	CALL     	10 2 2
	26	[115]	MOVE     	9 10
	27	[116]	SETTABLE 	1 7 9
	28	[117]	GETTABLE 	10 9 -4	; 1
	29	[118]	EQ       	1 -7 10	; "assign" -
	30	[118]	JMP      	2	; to 33
	31	[118]	EQ       	0 -8 10	; "declare" -
	32	[118]	JMP      	27	; to 60
	33	[119]	GETTABLE 	11 9 -9	; 2
	34	[120]	LOADK    	12 -4	; 1
	35	[120]	LEN      	13 11
	36	[120]	LOADK    	14 -4	; 1
	37	[120]	FORPREP  	12 20	; to 58
	38	[121]	GETTABLE 	16 11 15
	39	[122]	GETUPVAL 	17 0	; ntype
	40	[122]	MOVE     	18 16
	41	[122]	CALL     	17 2 2
	42	[122]	EQ       	0 17 -10	; - "ref"
	43	[122]	JMP      	5	; to 49
	44	[123]	GETUPVAL 	17 1	; insert
	45	[123]	MOVE     	18 3
	46	[123]	MOVE     	19 16
	47	[123]	CALL     	17 3 1
	48	[123]	JMP      	9	; to 58
	49	[124]	GETGLOBAL	17 -11	; type
	50	[124]	MOVE     	18 16
	51	[124]	CALL     	17 2 2
	52	[124]	EQ       	0 17 -12	; - "string"
	53	[124]	JMP      	4	; to 58
	54	[125]	GETUPVAL 	17 1	; insert
	55	[125]	MOVE     	18 3
	56	[125]	MOVE     	19 16
	57	[125]	CALL     	17 3 1
	58	[120]	FORLOOP  	12 -21	; to 38
	59	[127]	JMP      	8	; to 68
	60	[128]	EQ       	0 -13 10	; "group" -
	61	[128]	JMP      	6	; to 68
	62	[129]	GETUPVAL 	11 2	; extract_declarations
	63	[129]	MOVE     	12 0
	64	[129]	GETTABLE 	13 9 -9	; 2
	65	[129]	LOADK    	14 -4	; 1
	66	[129]	MOVE     	15 3
	67	[129]	CALL     	11 5 1
	68	[131]	LOADBOOL 	8 1 0
	69	[133]	TEST     	8 0 1
	70	[133]	JMP      	1	; to 72
	71	[134]	JMP      	1	; to 73
	72	[107]	FORLOOP  	4 -57	; to 16
	73	[137]	RETURN   	3 2
	74	[138]	RETURN   	0 1

function <./moonscript/transform/statement.lua:140,162> (43 instructions, 172 bytes at 0x7fbcb5c089b0)
1 param, 19 slots, 3 upvalues, 7 locals, 8 constants, 0 functions
	1	[141]	LOADK    	1 -1	; 4
	2	[141]	LEN      	2 0
	3	[141]	LOADK    	3 -2	; 1
	4	[141]	FORPREP  	1 36	; to 41
	5	[142]	GETTABLE 	5 0 4
	6	[143]	GETUPVAL 	6 0	; ntype
	7	[143]	MOVE     	7 5
	8	[143]	CALL     	6 2 2
	9	[143]	EQ       	0 6 -3	; - "elseif"
	10	[143]	JMP      	30	; to 41
	11	[143]	GETUPVAL 	6 0	; ntype
	12	[143]	GETTABLE 	7 5 -4	; 2
	13	[143]	CALL     	6 2 2
	14	[143]	EQ       	0 6 -5	; - "assign"
	15	[143]	JMP      	25	; to 41
	16	[144]	NEWTABLE 	6 0 0
	17	[145]	GETUPVAL 	7 1	; unpack
	18	[145]	MOVE     	8 0
	19	[145]	LOADK    	9 -2	; 1
	20	[145]	SUB      	10 4 -2	; - 1
	21	[145]	CALL     	7 4 0
	22	[146]	SETLIST  	6 0 1	; 1
	23	[147]	GETUPVAL 	7 2	; insert
	24	[147]	MOVE     	8 6
	25	[147]	NEWTABLE 	9 2 0
	26	[148]	LOADK    	10 -6	; "else"
	27	[148]	NEWTABLE 	11 1 0
	28	[149]	NEWTABLE 	12 3 0
	29	[151]	LOADK    	13 -7	; "if"
	30	[152]	GETTABLE 	14 5 -4	; 2
	31	[153]	GETTABLE 	15 5 -8	; 3
	32	[154]	GETUPVAL 	16 1	; unpack
	33	[154]	MOVE     	17 0
	34	[154]	ADD      	18 4 -2	; - 1
	35	[154]	CALL     	16 3 0
	36	[155]	SETLIST  	12 0 1	; 1
	37	[156]	SETLIST  	11 1 1	; 1
	38	[157]	SETLIST  	9 2 1	; 1
	39	[147]	CALL     	7 3 1
	40	[158]	RETURN   	6 2
	41	[141]	FORLOOP  	1 -37	; to 5
	42	[161]	RETURN   	0 2
	43	[162]	RETURN   	0 1

function <./moonscript/transform/statement.lua:164,168> (10 instructions, 40 bytes at 0x7fbcb5c079b0)
2 params, 7 slots, 0 upvalues, 5 locals, 3 constants, 0 functions
	1	[166]	GETTABLE 	5 1 -1	; 1
	2	[166]	GETTABLE 	6 1 -2	; 2
	3	[166]	GETTABLE 	4 1 -3	; 3
	4	[166]	MOVE     	3 6
	5	[166]	MOVE     	2 5
	6	[167]	MOVE     	5 4
	7	[167]	MOVE     	6 3
	8	[167]	TAILCALL 	5 2 0
	9	[167]	RETURN   	5 0
	10	[168]	RETURN   	0 1

function <./moonscript/transform/statement.lua:169,171> (8 instructions, 32 bytes at 0x7fbcb5c098a0)
2 params, 6 slots, 2 upvalues, 2 locals, 0 constants, 0 functions
	1	[170]	GETUPVAL 	2 0	; transform_last_stm
	2	[170]	MOVE     	3 1
	3	[170]	GETUPVAL 	4 1	; implicitly_return
	4	[170]	MOVE     	5 0
	5	[170]	CALL     	4 2 0
	6	[170]	TAILCALL 	2 0 0
	7	[170]	RETURN   	2 0
	8	[171]	RETURN   	0 1

function <./moonscript/transform/statement.lua:172,196> (55 instructions, 220 bytes at 0x7fbcb5c09af0)
2 params, 9 slots, 5 upvalues, 5 locals, 11 constants, 1 function
	1	[173]	GETTABLE 	2 1 -1	; 2
	2	[174]	GETUPVAL 	3 0	; ntype
	3	[174]	MOVE     	4 2
	4	[174]	CALL     	3 2 2
	5	[175]	EQ       	0 3 -2	; - "explist"
	6	[175]	JMP      	8	; to 15
	7	[175]	LEN      	4 2
	8	[175]	EQ       	0 4 -1	; - 2
	9	[175]	JMP      	5	; to 15
	10	[176]	GETTABLE 	2 2 -1	; 2
	11	[177]	GETUPVAL 	4 0	; ntype
	12	[177]	MOVE     	5 2
	13	[177]	CALL     	4 2 2
	14	[177]	MOVE     	3 4
	15	[179]	GETUPVAL 	4 1	; types
	16	[179]	GETTABLE 	4 4 -3	; "cascading"
	17	[179]	GETTABLE 	4 4 3
	18	[179]	TEST     	4 0 0
	19	[179]	JMP      	6	; to 26
	20	[180]	GETUPVAL 	4 2	; implicitly_return
	21	[180]	MOVE     	5 0
	22	[180]	CALL     	4 2 2
	23	[180]	MOVE     	5 2
	24	[180]	TAILCALL 	4 2 0
	25	[180]	RETURN   	4 0
	26	[182]	EQ       	1 3 -4	; - "chain"
	27	[182]	JMP      	4	; to 32
	28	[182]	EQ       	1 3 -5	; - "comprehension"
	29	[182]	JMP      	2	; to 32
	30	[182]	EQ       	0 3 -6	; - "tblcomprehension"
	31	[182]	JMP      	21	; to 53
	32	[183]	GETGLOBAL	4 -7	; require
	33	[183]	LOADK    	5 -8	; "moonscript.transform.value"
	34	[183]	CALL     	4 2 2
	35	[184]	SELF     	5 4 -9	; "transform_once"
	36	[184]	MOVE     	7 0
	37	[184]	MOVE     	8 2
	38	[184]	CALL     	5 4 2
	39	[184]	MOVE     	2 5
	40	[185]	GETUPVAL 	5 0	; ntype
	41	[185]	MOVE     	6 2
	42	[185]	CALL     	5 2 2
	43	[185]	EQ       	0 5 -10	; - "block_exp"
	44	[185]	JMP      	8	; to 53
	45	[186]	GETUPVAL 	5 3	; build
	46	[186]	GETTABLE 	5 5 -11	; "group"
	47	[186]	GETUPVAL 	6 4	; transform_last_stm
	48	[186]	GETTABLE 	7 2 -1	; 2
	49	[191]	CLOSURE  	8 0	; 0x7fbcb5c09ea0
	50	[186]	CALL     	6 3 0
	51	[186]	TAILCALL 	5 0 0
	52	[191]	RETURN   	5 0
	53	[194]	SETTABLE 	1 -1 2	; 2 -
	54	[195]	RETURN   	1 2
	55	[196]	RETURN   	0 1

function <./moonscript/transform/statement.lua:186,191> (6 instructions, 24 bytes at 0x7fbcb5c09ea0)
1 param, 4 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[187]	NEWTABLE 	1 2 0
	2	[188]	LOADK    	2 -1	; "return"
	3	[190]	MOVE     	3 0
	4	[190]	SETLIST  	1 2 1	; 1
	5	[190]	RETURN   	1 2
	6	[191]	RETURN   	0 1

function <./moonscript/transform/statement.lua:197,233> (45 instructions, 180 bytes at 0x7fbcb5c09f60)
2 params, 15 slots, 2 upvalues, 13 locals, 7 constants, 0 functions
	1	[198]	GETUPVAL 	2 0	; extract_declarations
	2	[198]	MOVE     	3 0
	3	[198]	CALL     	2 2 2
	4	[199]	GETTABLE 	3 1 -1	; 2
	5	[199]	EQ       	0 3 -2	; - "^"
	6	[199]	JMP      	33	; to 40
	7	[201]	NEWTABLE 	3 0 0
	8	[202]	LOADK    	4 -3	; 1
	9	[203]	LOADK    	5 -3	; 1
	10	[203]	LEN      	6 2
	11	[203]	LOADK    	7 -3	; 1
	12	[203]	FORPREP  	5 25	; to 38
	13	[204]	LOADBOOL 	9 0 0
	14	[206]	GETTABLE 	10 2 8
	15	[207]	LOADNIL  	11 11
	16	[208]	GETUPVAL 	12 1	; ntype
	17	[208]	MOVE     	13 10
	18	[208]	CALL     	12 2 2
	19	[208]	EQ       	0 12 -4	; - "ref"
	20	[208]	JMP      	2	; to 23
	21	[209]	GETTABLE 	11 10 -1	; 2
	22	[209]	JMP      	1	; to 24
	23	[211]	MOVE     	11 10
	24	[213]	SELF     	12 11 -5	; "match"
	25	[213]	LOADK    	14 -6	; "^%u"
	26	[213]	CALL     	12 3 2
	27	[213]	TEST     	12 0 1
	28	[213]	JMP      	2	; to 31
	29	[214]	LOADBOOL 	9 1 0
	30	[215]	JMP      	4	; to 35
	31	[217]	MOVE     	12 10
	32	[218]	SETTABLE 	3 4 12
	33	[219]	ADD      	4 4 -3	; - 1
	34	[220]	LOADBOOL 	9 1 0
	35	[222]	TEST     	9 0 1
	36	[222]	JMP      	1	; to 38
	37	[223]	JMP      	1	; to 39
	38	[203]	FORLOOP  	5 -26	; to 13
	39	[226]	MOVE     	2 3
	40	[229]	NEWTABLE 	3 2 0
	41	[230]	LOADK    	4 -7	; "declare"
	42	[232]	MOVE     	5 2
	43	[232]	SETLIST  	3 2 1	; 1
	44	[232]	RETURN   	3 2
	45	[233]	RETURN   	0 1

function <./moonscript/transform/statement.lua:234,308> (142 instructions, 568 bytes at 0x7fbcb5c0a890)
2 params, 18 slots, 6 upvalues, 18 locals, 22 constants, 1 function
	1	[235]	GETUPVAL 	2 0	; unpack
	2	[235]	MOVE     	3 1
	3	[235]	LOADK    	4 -1	; 2
	4	[235]	CALL     	2 3 3
	5	[236]	LEN      	4 3
	6	[237]	LEN      	5 3
	7	[238]	EQ       	0 5 -2	; - 1
	8	[238]	JMP      	75	; to 84
	9	[238]	EQ       	0 4 -2	; - 1
	10	[238]	JMP      	73	; to 84
	11	[239]	GETTABLE 	6 3 -2	; 1
	12	[240]	GETTABLE 	7 2 -2	; 1
	13	[241]	GETUPVAL 	8 1	; ntype
	14	[241]	MOVE     	9 6
	15	[241]	CALL     	8 2 2
	16	[242]	EQ       	0 8 -3	; - "chain"
	17	[242]	JMP      	12	; to 30
	18	[243]	GETGLOBAL	9 -4	; require
	19	[243]	LOADK    	10 -5	; "moonscript.transform.value"
	20	[243]	CALL     	9 2 2
	21	[244]	SELF     	10 9 -6	; "transform_once"
	22	[244]	MOVE     	12 0
	23	[244]	MOVE     	13 6
	24	[244]	CALL     	10 4 2
	25	[244]	MOVE     	6 10
	26	[245]	GETUPVAL 	10 1	; ntype
	27	[245]	MOVE     	11 6
	28	[245]	CALL     	10 2 2
	29	[245]	MOVE     	8 10
	30	[247]	GETUPVAL 	9 1	; ntype
	31	[247]	MOVE     	10 6
	32	[247]	CALL     	9 2 2
	33	[248]	EQ       	0 -7 9	; "block_exp" -
	34	[248]	JMP      	25	; to 60
	35	[249]	GETTABLE 	10 6 -1	; 2
	36	[250]	LEN      	11 10
	37	[251]	GETUPVAL 	12 2	; build
	38	[251]	GETTABLE 	12 12 -8	; "assign_one"
	39	[251]	MOVE     	13 7
	40	[251]	GETTABLE 	14 10 11
	41	[251]	CALL     	12 3 2
	42	[251]	SETTABLE 	10 11 12
	43	[252]	GETUPVAL 	12 2	; build
	44	[252]	GETTABLE 	12 12 -9	; "group"
	45	[252]	NEWTABLE 	13 2 0
	46	[252]	NEWTABLE 	14 2 0
	47	[254]	LOADK    	15 -10	; "declare"
	48	[254]	NEWTABLE 	16 1 0
	49	[257]	MOVE     	17 7
	50	[257]	SETLIST  	16 1 1	; 1
	51	[258]	SETLIST  	14 2 1	; 1
	52	[258]	NEWTABLE 	15 2 0
	53	[260]	LOADK    	16 -11	; "do"
	54	[262]	MOVE     	17 10
	55	[262]	SETLIST  	15 2 1	; 1
	56	[263]	SETLIST  	13 2 1	; 1
	57	[252]	TAILCALL 	12 2 0
	58	[263]	RETURN   	12 0
	59	[263]	JMP      	24	; to 84
	60	[264]	EQ       	1 -12 9	; "comprehension" -
	61	[264]	JMP      	8	; to 70
	62	[264]	EQ       	1 -13 9	; "tblcomprehension" -
	63	[264]	JMP      	6	; to 70
	64	[264]	EQ       	1 -14 9	; "foreach" -
	65	[264]	JMP      	4	; to 70
	66	[264]	EQ       	1 -15 9	; "for" -
	67	[264]	JMP      	2	; to 70
	68	[264]	EQ       	0 -16 9	; "while" -
	69	[264]	JMP      	13	; to 83
	70	[265]	GETGLOBAL	10 -4	; require
	71	[265]	LOADK    	11 -5	; "moonscript.transform.value"
	72	[265]	CALL     	10 2 2
	73	[266]	GETUPVAL 	11 2	; build
	74	[266]	GETTABLE 	11 11 -8	; "assign_one"
	75	[266]	MOVE     	12 7
	76	[266]	SELF     	13 10 -6	; "transform_once"
	77	[266]	MOVE     	15 0
	78	[266]	MOVE     	16 6
	79	[266]	CALL     	13 4 0
	80	[266]	TAILCALL 	11 0 0
	81	[266]	RETURN   	11 0
	82	[266]	JMP      	1	; to 84
	83	[268]	SETTABLE 	3 -2 6	; 1 -
	84	[271]	LOADNIL  	6 6
	85	[272]	EQ       	0 4 -2	; - 1
	86	[272]	JMP      	40	; to 127
	87	[273]	GETTABLE 	7 3 -2	; 1
	88	[274]	GETUPVAL 	8 1	; ntype
	89	[274]	MOVE     	9 7
	90	[274]	CALL     	8 2 2
	91	[275]	EQ       	0 8 -17	; - "decorated"
	92	[275]	JMP      	9	; to 102
	93	[276]	GETTABLE 	9 0 -18	; "transform"
	94	[276]	GETTABLE 	9 9 -19	; "statement"
	95	[276]	MOVE     	10 7
	96	[276]	CALL     	9 2 2
	97	[276]	MOVE     	7 9
	98	[277]	GETUPVAL 	9 1	; ntype
	99	[277]	MOVE     	10 7
	100	[277]	CALL     	9 2 2
	101	[277]	MOVE     	8 9
	102	[279]	GETUPVAL 	9 3	; types
	103	[279]	GETTABLE 	9 9 -20	; "cascading"
	104	[279]	GETTABLE 	9 9 8
	105	[279]	TEST     	9 0 0
	106	[279]	JMP      	20	; to 127
	107	[280]	LOADNIL  	9 9
	108	[293]	CLOSURE  	9 0	; 0x7fbcb5c0af10
	109	[293]	GETUPVAL 	0 4	; is_value
	110	[293]	MOVE     	0 2
	111	[294]	GETUPVAL 	10 2	; build
	112	[294]	GETTABLE 	10 10 -9	; "group"
	113	[294]	NEWTABLE 	11 1 0
	114	[294]	NEWTABLE 	12 2 0
	115	[296]	LOADK    	13 -10	; "declare"
	116	[298]	MOVE     	14 2
	117	[298]	SETLIST  	12 2 1	; 1
	118	[299]	GETTABLE 	13 0 -18	; "transform"
	119	[299]	GETTABLE 	13 13 -19	; "statement"
	120	[299]	MOVE     	14 7
	121	[299]	MOVE     	15 9
	122	[299]	MOVE     	16 1
	123	[299]	CALL     	13 4 0
	124	[300]	SETLIST  	11 0 1	; 1
	125	[294]	CALL     	10 2 2
	126	[300]	MOVE     	6 10
	127	[303]	TESTSET  	1 6 1
	128	[303]	JMP      	0	; to 129
	129	[304]	GETUPVAL 	7 5	; destructure
	130	[304]	GETTABLE 	7 7 -21	; "has_destructure"
	131	[304]	MOVE     	8 2
	132	[304]	CALL     	7 2 2
	133	[304]	TEST     	7 0 0
	134	[304]	JMP      	6	; to 141
	135	[305]	GETUPVAL 	7 5	; destructure
	136	[305]	GETTABLE 	7 7 -22	; "split_assign"
	137	[305]	MOVE     	8 0
	138	[305]	MOVE     	9 1
	139	[305]	TAILCALL 	7 3 0
	140	[305]	RETURN   	7 0
	141	[307]	RETURN   	1 2
	142	[308]	RETURN   	0 1

function <./moonscript/transform/statement.lua:281,293> (16 instructions, 64 bytes at 0x7fbcb5c0af10)
1 param, 6 slots, 2 upvalues, 1 local, 1 constant, 0 functions
	1	[282]	GETUPVAL 	1 0	; is_value
	2	[282]	MOVE     	2 0
	3	[282]	CALL     	1 2 2
	4	[282]	TEST     	1 0 0
	5	[282]	JMP      	9	; to 15
	6	[283]	NEWTABLE 	1 3 0
	7	[284]	LOADK    	2 -1	; "assign"
	8	[285]	GETUPVAL 	3 1	; names
	9	[285]	NEWTABLE 	4 1 0
	10	[288]	MOVE     	5 0
	11	[288]	SETLIST  	4 1 1	; 1
	12	[289]	SETLIST  	1 3 1	; 1
	13	[289]	RETURN   	1 2
	14	[289]	JMP      	1	; to 16
	15	[291]	RETURN   	0 2
	16	[293]	RETURN   	0 1

function <./moonscript/transform/statement.lua:309,320> (23 instructions, 92 bytes at 0x7fbcb5c0b7d0)
2 params, 8 slots, 1 upvalue, 3 locals, 8 constants, 0 functions
	1	[310]	SELF     	2 0 -1	; "send"
	2	[310]	LOADK    	4 -2	; "continue"
	3	[310]	CALL     	2 3 2
	4	[311]	TEST     	2 0 1
	5	[311]	JMP      	3	; to 9
	6	[312]	GETGLOBAL	3 -3	; error
	7	[312]	LOADK    	4 -4	; "continue must be inside of a loop"
	8	[312]	CALL     	3 2 1
	9	[314]	GETUPVAL 	3 0	; build
	10	[314]	GETTABLE 	3 3 -5	; "group"
	11	[314]	NEWTABLE 	4 2 0
	12	[315]	GETUPVAL 	5 0	; build
	13	[315]	GETTABLE 	5 5 -6	; "assign_one"
	14	[315]	MOVE     	6 2
	15	[315]	LOADK    	7 -7	; "true"
	16	[315]	CALL     	5 3 2
	17	[315]	NEWTABLE 	6 1 0
	18	[318]	LOADK    	7 -8	; "break"
	19	[318]	SETLIST  	6 1 1	; 1
	20	[319]	SETLIST  	4 2 1	; 1
	21	[314]	TAILCALL 	3 2 0
	22	[319]	RETURN   	3 0
	23	[320]	RETURN   	0 1

function <./moonscript/transform/statement.lua:321,349> (45 instructions, 180 bytes at 0x7fbcb5c06740)
2 params, 9 slots, 2 upvalues, 3 locals, 9 constants, 0 functions
	1	[322]	LEN      	2 1
	2	[322]	LT       	0 -1 2	; 2 -
	3	[322]	JMP      	39	; to 43
	4	[323]	GETTABLE 	2 1 -1	; 2
	5	[323]	EQ       	0 2 -2	; - "class"
	6	[323]	JMP      	17	; to 24
	7	[324]	GETUPVAL 	2 0	; smart_node
	8	[324]	GETTABLE 	3 1 -3	; 3
	9	[324]	CALL     	2 2 2
	10	[325]	GETUPVAL 	3 1	; build
	11	[325]	GETTABLE 	3 3 -4	; "group"
	12	[325]	NEWTABLE 	4 2 0
	13	[325]	NEWTABLE 	5 2 0
	14	[327]	LOADK    	6 -5	; "export"
	15	[327]	NEWTABLE 	7 1 0
	16	[330]	GETTABLE 	8 2 -6	; "name"
	17	[330]	SETLIST  	7 1 1	; 1
	18	[331]	SETLIST  	5 2 1	; 1
	19	[333]	MOVE     	6 2
	20	[333]	SETLIST  	4 2 1	; 1
	21	[325]	TAILCALL 	3 2 0
	22	[333]	RETURN   	3 0
	23	[333]	JMP      	21	; to 45
	24	[335]	GETUPVAL 	2 1	; build
	25	[335]	GETTABLE 	2 2 -4	; "group"
	26	[335]	NEWTABLE 	3 1 0
	27	[335]	NEWTABLE 	4 2 0
	28	[337]	LOADK    	5 -5	; "export"
	29	[339]	GETTABLE 	6 1 -1	; 2
	30	[339]	SETLIST  	4 2 1	; 1
	31	[340]	GETUPVAL 	5 1	; build
	32	[340]	GETTABLE 	5 5 -7	; "assign"
	33	[340]	NEWTABLE 	6 0 2
	34	[341]	GETTABLE 	7 1 -1	; 2
	35	[341]	SETTABLE 	6 -8 7	; "names" -
	36	[342]	GETTABLE 	7 1 -3	; 3
	37	[342]	SETTABLE 	6 -9 7	; "values" -
	38	[340]	CALL     	5 2 0
	39	[344]	SETLIST  	3 0 1	; 1
	40	[335]	TAILCALL 	2 2 0
	41	[344]	RETURN   	2 0
	42	[345]	JMP      	2	; to 45
	43	[347]	LOADNIL  	2 2
	44	[347]	RETURN   	2 2
	45	[349]	RETURN   	0 1

function <./moonscript/transform/statement.lua:350,368> (36 instructions, 144 bytes at 0x7fbcb5c0b650)
2 params, 13 slots, 3 upvalues, 6 locals, 8 constants, 0 functions
	1	[351]	GETUPVAL 	2 0	; unpack
	2	[351]	MOVE     	3 1
	3	[351]	LOADK    	4 -1	; 2
	4	[351]	CALL     	2 3 4
	5	[352]	SELF     	5 3 -2	; "match"
	6	[352]	LOADK    	7 -3	; "^(.+)=$"
	7	[352]	CALL     	5 3 2
	8	[353]	TEST     	5 0 1
	9	[353]	JMP      	5	; to 15
	10	[354]	GETGLOBAL	6 -4	; error
	11	[354]	LOADK    	7 -5	; "Unknown op: "
	12	[354]	MOVE     	8 3
	13	[354]	CONCAT   	7 7 8
	14	[354]	CALL     	6 2 1
	15	[356]	GETUPVAL 	6 1	; value_is_singular
	16	[356]	MOVE     	7 4
	17	[356]	CALL     	6 2 2
	18	[356]	TEST     	6 0 1
	19	[356]	JMP      	5	; to 25
	20	[357]	NEWTABLE 	6 2 0
	21	[358]	LOADK    	7 -6	; "parens"
	22	[360]	MOVE     	8 4
	23	[360]	SETLIST  	6 2 1	; 1
	24	[360]	MOVE     	4 6
	25	[362]	GETUPVAL 	6 2	; build
	26	[362]	GETTABLE 	6 6 -7	; "assign_one"
	27	[362]	MOVE     	7 2
	28	[362]	NEWTABLE 	8 4 0
	29	[363]	LOADK    	9 -8	; "exp"
	30	[364]	MOVE     	10 2
	31	[365]	MOVE     	11 5
	32	[367]	MOVE     	12 4
	33	[367]	SETLIST  	8 4 1	; 1
	34	[362]	TAILCALL 	6 3 0
	35	[367]	RETURN   	6 0
	36	[368]	RETURN   	0 1

function <./moonscript/transform/statement.lua:369,409> (49 instructions, 196 bytes at 0x7fbcb5c080c0)
2 params, 17 slots, 2 upvalues, 15 locals, 7 constants, 0 functions
	1	[370]	GETUPVAL 	2 0	; unpack
	2	[370]	MOVE     	3 1
	3	[370]	LOADK    	4 -1	; 2
	4	[370]	CALL     	2 3 3
	5	[371]	LOADNIL  	4 4
	6	[373]	NEWTABLE 	5 0 0
	7	[374]	LOADK    	6 -2	; 1
	8	[375]	LOADK    	7 -2	; 1
	9	[375]	LEN      	8 2
	10	[375]	LOADK    	9 -2	; 1
	11	[375]	FORPREP  	7 19	; to 31
	12	[376]	GETTABLE 	11 2 10
	13	[377]	LOADNIL  	12 12
	14	[378]	GETUPVAL 	13 1	; ntype
	15	[378]	MOVE     	14 11
	16	[378]	CALL     	13 2 2
	17	[378]	EQ       	0 13 -3	; - "colon"
	18	[378]	JMP      	2	; to 21
	19	[379]	GETTABLE 	12 11 -1	; 2
	20	[379]	JMP      	1	; to 22
	21	[381]	MOVE     	12 11
	22	[383]	NEWTABLE 	13 2 0
	23	[383]	NEWTABLE 	14 2 0
	24	[385]	LOADK    	15 -4	; "key_literal"
	25	[387]	MOVE     	16 11
	26	[387]	SETLIST  	14 2 1	; 1
	27	[389]	MOVE     	15 12
	28	[389]	SETLIST  	13 2 1	; 1
	29	[390]	SETTABLE 	5 6 13
	30	[391]	ADD      	6 6 -2	; - 1
	31	[375]	FORLOOP  	7 -20	; to 12
	32	[393]	MOVE     	4 5
	33	[395]	NEWTABLE 	5 2 0
	34	[396]	LOADK    	6 -5	; "table"
	35	[398]	MOVE     	7 4
	36	[398]	SETLIST  	5 2 1	; 1
	37	[399]	NEWTABLE 	6 3 1
	38	[400]	LOADK    	7 -6	; "assign"
	39	[400]	NEWTABLE 	8 1 0
	40	[403]	MOVE     	9 5
	41	[403]	SETLIST  	8 1 1	; 1
	42	[403]	NEWTABLE 	9 1 0
	43	[406]	MOVE     	10 3
	44	[406]	SETLIST  	9 1 1	; 1
	45	[407]	GETTABLE 	10 1 -7	; -1
	46	[407]	SETTABLE 	6 -7 10	; -1 -
	47	[408]	SETLIST  	6 3 1	; 1
	48	[408]	RETURN   	6 2
	49	[409]	RETURN   	0 1

function <./moonscript/transform/statement.lua:410,418> (15 instructions, 60 bytes at 0x7fbcb5c08040)
3 params, 8 slots, 2 upvalues, 5 locals, 1 constant, 1 function
	1	[411]	GETUPVAL 	3 0	; unpack
	2	[411]	MOVE     	4 1
	3	[411]	LOADK    	5 -1	; 2
	4	[411]	CALL     	3 3 3
	5	[412]	TEST     	2 0 1
	6	[412]	JMP      	1	; to 8
	7	[416]	CLOSURE  	2 0	; 0x7fbcb5c0bf50
	8	[417]	GETUPVAL 	5 1	; construct_comprehension
	9	[417]	MOVE     	6 2
	10	[417]	MOVE     	7 3
	11	[417]	CALL     	6 2 2
	12	[417]	MOVE     	7 4
	13	[417]	TAILCALL 	5 3 0
	14	[417]	RETURN   	5 0
	15	[418]	RETURN   	0 1

function <./moonscript/transform/statement.lua:412,416> (5 instructions, 20 bytes at 0x7fbcb5c0bf50)
1 param, 3 slots, 0 upvalues, 1 local, 0 constants, 0 functions
	1	[413]	NEWTABLE 	1 1 0
	2	[415]	MOVE     	2 0
	3	[415]	SETLIST  	1 1 1	; 1
	4	[415]	RETURN   	1 2
	5	[416]	RETURN   	0 1

function <./moonscript/transform/statement.lua:419,424> (9 instructions, 36 bytes at 0x7fbcb5c0bd90)
3 params, 6 slots, 1 upvalue, 3 locals, 1 constant, 0 functions
	1	[420]	TEST     	2 0 0
	2	[420]	JMP      	5	; to 8
	3	[421]	GETUPVAL 	3 0	; transform_last_stm
	4	[421]	GETTABLE 	4 1 -1	; 2
	5	[421]	MOVE     	5 2
	6	[421]	CALL     	3 3 2
	7	[421]	SETTABLE 	1 -1 3	; 2 -
	8	[423]	RETURN   	1 2
	9	[424]	RETURN   	0 1

function <./moonscript/transform/statement.lua:425,485> (80 instructions, 320 bytes at 0x7fbcb5c0c3b0)
2 params, 13 slots, 3 upvalues, 8 locals, 12 constants, 1 function
	1	[426]	GETUPVAL 	2 0	; unpack
	2	[426]	MOVE     	3 1
	3	[426]	LOADK    	4 -1	; 2
	4	[426]	CALL     	2 3 3
	5	[427]	LOADNIL  	4 4
	6	[428]	GETTABLE 	5 3 -2	; 1
	7	[429]	EQ       	0 -3 5	; "if" -
	8	[429]	JMP      	23	; to 32
	9	[430]	GETUPVAL 	6 0	; unpack
	10	[430]	MOVE     	7 3
	11	[430]	LOADK    	8 -1	; 2
	12	[430]	CALL     	6 3 3
	13	[431]	TEST     	7 0 0
	14	[431]	JMP      	7	; to 22
	15	[432]	NEWTABLE 	8 2 0
	16	[433]	LOADK    	9 -4	; "else"
	17	[433]	NEWTABLE 	10 1 0
	18	[436]	MOVE     	11 7
	19	[436]	SETLIST  	10 1 1	; 1
	20	[437]	SETLIST  	8 2 1	; 1
	21	[437]	MOVE     	7 8
	22	[439]	NEWTABLE 	8 4 0
	23	[440]	LOADK    	9 -3	; "if"
	24	[441]	MOVE     	10 6
	25	[441]	NEWTABLE 	11 1 0
	26	[444]	MOVE     	12 2
	27	[444]	SETLIST  	11 1 1	; 1
	28	[446]	MOVE     	12 7
	29	[446]	SETLIST  	8 4 1	; 1
	30	[446]	MOVE     	4 8
	31	[446]	JMP      	26	; to 58
	32	[447]	EQ       	0 -5 5	; "unless" -
	33	[447]	JMP      	9	; to 43
	34	[448]	NEWTABLE 	6 3 0
	35	[449]	LOADK    	7 -5	; "unless"
	36	[450]	GETTABLE 	8 3 -1	; 2
	37	[450]	NEWTABLE 	9 1 0
	38	[453]	MOVE     	10 2
	39	[453]	SETLIST  	9 1 1	; 1
	40	[454]	SETLIST  	6 3 1	; 1
	41	[454]	MOVE     	4 6
	42	[454]	JMP      	15	; to 58
	43	[455]	EQ       	0 -6 5	; "comprehension" -
	44	[455]	JMP      	7	; to 52
	45	[456]	NEWTABLE 	6 3 0
	46	[457]	LOADK    	7 -6	; "comprehension"
	47	[458]	MOVE     	8 2
	48	[460]	GETTABLE 	9 3 -1	; 2
	49	[460]	SETLIST  	6 3 1	; 1
	50	[460]	MOVE     	4 6
	51	[460]	JMP      	6	; to 58
	52	[462]	GETGLOBAL	6 -7	; error
	53	[462]	LOADK    	7 -8	; "Unknown decorator "
	54	[462]	GETTABLE 	8 3 -2	; 1
	55	[462]	CONCAT   	7 7 8
	56	[462]	CALL     	6 2 2
	57	[462]	MOVE     	4 6
	58	[464]	GETUPVAL 	6 1	; ntype
	59	[464]	MOVE     	7 2
	60	[464]	CALL     	6 2 2
	61	[464]	EQ       	0 6 -9	; - "assign"
	62	[464]	JMP      	16	; to 79
	63	[465]	GETUPVAL 	6 2	; build
	64	[465]	GETTABLE 	6 6 -10	; "group"
	65	[465]	NEWTABLE 	7 2 0
	66	[466]	GETUPVAL 	8 2	; build
	67	[466]	GETTABLE 	8 8 -11	; "declare"
	68	[466]	NEWTABLE 	9 0 1
	69	[479]	CLOSURE  	10 0	; 0x7fbcb5c0ca30
	70	[479]	MOVE     	0 2
	71	[479]	GETUPVAL 	0 1	; ntype
	72	[479]	CALL     	10 1 2
	73	[479]	SETTABLE 	9 -12 10	; "names" -
	74	[466]	CALL     	8 2 2
	75	[482]	MOVE     	9 4
	76	[482]	SETLIST  	7 2 1	; 1
	77	[465]	CALL     	6 2 2
	78	[482]	MOVE     	4 6
	79	[484]	RETURN   	4 2
	80	[485]	RETURN   	0 1

function <./moonscript/transform/statement.lua:467,479> (19 instructions, 76 bytes at 0x7fbcb5c0ca30)
0 params, 10 slots, 2 upvalues, 8 locals, 3 constants, 0 functions
	1	[468]	NEWTABLE 	0 0 0
	2	[469]	LOADK    	1 -1	; 1
	3	[470]	GETUPVAL 	2 0	; stm
	4	[470]	GETTABLE 	2 2 -2	; 2
	5	[471]	LOADK    	3 -1	; 1
	6	[471]	LEN      	4 2
	7	[471]	LOADK    	5 -1	; 1
	8	[471]	FORPREP  	3 8	; to 17
	9	[472]	GETTABLE 	7 2 6
	10	[473]	GETUPVAL 	8 1	; ntype
	11	[473]	MOVE     	9 7
	12	[473]	CALL     	8 2 2
	13	[473]	EQ       	0 8 -3	; - "ref"
	14	[473]	JMP      	2	; to 17
	15	[474]	SETTABLE 	0 1 7
	16	[475]	ADD      	1 1 -1	; - 1
	17	[471]	FORLOOP  	3 -9	; to 9
	18	[478]	RETURN   	0 2
	19	[479]	RETURN   	0 1

function <./moonscript/transform/statement.lua:486,516> (51 instructions, 204 bytes at 0x7fbcb5c0cb30)
2 params, 12 slots, 4 upvalues, 3 locals, 11 constants, 0 functions
	1	[487]	GETTABLE 	2 1 -1	; 2
	2	[488]	GETUPVAL 	3 0	; ntype
	3	[488]	MOVE     	4 2
	4	[488]	CALL     	3 2 2
	5	[488]	EQ       	0 3 -2	; - "assign"
	6	[488]	JMP      	29	; to 36
	7	[489]	GETUPVAL 	3 1	; destructure
	8	[489]	GETTABLE 	3 3 -3	; "has_destructure"
	9	[489]	GETTABLE 	4 2 -1	; 2
	10	[489]	CALL     	3 2 2
	11	[489]	TEST     	3 0 0
	12	[489]	JMP      	3	; to 16
	13	[490]	GETGLOBAL	3 -4	; error
	14	[490]	LOADK    	4 -5	; "destructure not allowed in unless assignment"
	15	[490]	CALL     	3 2 1
	16	[492]	GETUPVAL 	3 2	; build
	17	[492]	GETTABLE 	3 3 -6	; "do"
	18	[492]	NEWTABLE 	4 2 0
	19	[493]	MOVE     	5 2
	20	[493]	NEWTABLE 	6 2 0
	21	[495]	LOADK    	7 -7	; "if"
	22	[495]	NEWTABLE 	8 2 0
	23	[497]	LOADK    	9 -8	; "not"
	24	[498]	GETTABLE 	10 2 -1	; 2
	25	[499]	GETTABLE 	10 10 -9	; 1
	26	[499]	SETLIST  	8 2 1	; 1
	27	[500]	GETUPVAL 	9 3	; unpack
	28	[500]	MOVE     	10 1
	29	[500]	LOADK    	11 -10	; 3
	30	[500]	CALL     	9 3 0
	31	[501]	SETLIST  	6 0 1	; 1
	32	[502]	SETLIST  	4 2 1	; 1
	33	[492]	TAILCALL 	3 2 0
	34	[502]	RETURN   	3 0
	35	[502]	JMP      	15	; to 51
	36	[504]	NEWTABLE 	3 2 0
	37	[505]	LOADK    	4 -7	; "if"
	38	[505]	NEWTABLE 	5 2 0
	39	[507]	LOADK    	6 -8	; "not"
	40	[507]	NEWTABLE 	7 2 0
	41	[509]	LOADK    	8 -11	; "parens"
	42	[511]	MOVE     	9 2
	43	[511]	SETLIST  	7 2 1	; 1
	44	[512]	SETLIST  	5 2 1	; 1
	45	[513]	GETUPVAL 	6 3	; unpack
	46	[513]	MOVE     	7 1
	47	[513]	LOADK    	8 -10	; 3
	48	[513]	CALL     	6 3 0
	49	[514]	SETLIST  	3 0 1	; 1
	50	[514]	RETURN   	3 2
	51	[516]	RETURN   	0 1

function <./moonscript/transform/statement.lua:517,558> (100 instructions, 400 bytes at 0x7fbcb5c0cbf0)
3 params, 16 slots, 8 upvalues, 13 locals, 13 constants, 0 functions
	1	[518]	GETUPVAL 	3 0	; ntype
	2	[518]	GETTABLE 	4 1 -1	; 2
	3	[518]	CALL     	3 2 2
	4	[518]	EQ       	0 3 -2	; - "assign"
	5	[518]	JMP      	66	; to 72
	6	[519]	GETUPVAL 	3 1	; unpack
	7	[519]	MOVE     	4 1
	8	[519]	LOADK    	5 -1	; 2
	9	[519]	CALL     	3 3 3
	10	[520]	GETUPVAL 	5 2	; destructure
	11	[520]	GETTABLE 	5 5 -3	; "has_destructure"
	12	[520]	GETTABLE 	6 3 -1	; 2
	13	[520]	CALL     	5 2 2
	14	[520]	TEST     	5 0 0
	15	[520]	JMP      	39	; to 55
	16	[521]	GETUPVAL 	5 3	; NameProxy
	17	[521]	LOADK    	6 -4	; "des"
	18	[521]	CALL     	5 2 2
	19	[522]	NEWTABLE 	6 1 0
	20	[523]	GETUPVAL 	7 2	; destructure
	21	[523]	GETTABLE 	7 7 -5	; "build_assign"
	22	[523]	MOVE     	8 0
	23	[523]	GETTABLE 	9 3 -1	; 2
	24	[523]	GETTABLE 	9 9 -6	; 1
	25	[523]	MOVE     	10 5
	26	[523]	CALL     	7 4 2
	27	[524]	GETUPVAL 	8 4	; build
	28	[524]	GETTABLE 	8 8 -7	; "group"
	29	[524]	GETTABLE 	9 1 -8	; 3
	30	[524]	CALL     	8 2 0
	31	[525]	SETLIST  	6 0 1	; 1
	32	[525]	MOVE     	4 6
	33	[526]	GETUPVAL 	6 4	; build
	34	[526]	GETTABLE 	6 6 -9	; "do"
	35	[526]	NEWTABLE 	7 2 0
	36	[527]	GETUPVAL 	8 4	; build
	37	[527]	GETTABLE 	8 8 -10	; "assign_one"
	38	[527]	MOVE     	9 5
	39	[527]	GETTABLE 	10 3 -8	; 3
	40	[527]	GETTABLE 	10 10 -6	; 1
	41	[527]	CALL     	8 3 2
	42	[527]	NEWTABLE 	9 3 0
	43	[529]	LOADK    	10 -11	; "if"
	44	[530]	MOVE     	11 5
	45	[531]	MOVE     	12 4
	46	[532]	GETUPVAL 	13 1	; unpack
	47	[532]	MOVE     	14 1
	48	[532]	LOADK    	15 -12	; 4
	49	[532]	CALL     	13 3 0
	50	[533]	SETLIST  	9 0 1	; 1
	51	[534]	SETLIST  	7 2 1	; 1
	52	[526]	TAILCALL 	6 2 0
	53	[534]	RETURN   	6 0
	54	[534]	JMP      	17	; to 72
	55	[536]	GETTABLE 	5 3 -1	; 2
	56	[536]	GETTABLE 	5 5 -6	; 1
	57	[537]	GETUPVAL 	6 4	; build
	58	[537]	GETTABLE 	6 6 -9	; "do"
	59	[537]	NEWTABLE 	7 2 0
	60	[538]	MOVE     	8 3
	61	[538]	NEWTABLE 	9 2 0
	62	[540]	LOADK    	10 -11	; "if"
	63	[541]	MOVE     	11 5
	64	[542]	GETUPVAL 	12 1	; unpack
	65	[542]	MOVE     	13 1
	66	[542]	LOADK    	14 -8	; 3
	67	[542]	CALL     	12 3 0
	68	[543]	SETLIST  	9 0 1	; 1
	69	[544]	SETLIST  	7 2 1	; 1
	70	[537]	TAILCALL 	6 2 0
	71	[544]	RETURN   	6 0
	72	[547]	GETUPVAL 	3 5	; expand_elseif_assign
	73	[547]	MOVE     	4 1
	74	[547]	CALL     	3 2 2
	75	[547]	MOVE     	1 3
	76	[548]	TEST     	2 0 0
	77	[548]	JMP      	21	; to 99
	78	[549]	GETUPVAL 	3 6	; smart_node
	79	[549]	MOVE     	4 1
	80	[549]	CALL     	3 2 1
	81	[550]	GETUPVAL 	3 7	; transform_last_stm
	82	[550]	GETTABLE 	4 1 -13	; "then"
	83	[550]	MOVE     	5 2
	84	[550]	CALL     	3 3 2
	85	[550]	SETTABLE 	1 -13 3	; "then" -
	86	[551]	LOADK    	3 -12	; 4
	87	[551]	LEN      	4 1
	88	[551]	LOADK    	5 -6	; 1
	89	[551]	FORPREP  	3 8	; to 98
	90	[552]	GETTABLE 	7 1 6
	91	[553]	GETTABLE 	8 1 6
	92	[553]	LEN      	8 8
	93	[554]	GETUPVAL 	9 7	; transform_last_stm
	94	[554]	GETTABLE 	10 7 8
	95	[554]	MOVE     	11 2
	96	[554]	CALL     	9 3 2
	97	[554]	SETTABLE 	7 8 9
	98	[551]	FORLOOP  	3 -9	; to 90
	99	[557]	RETURN   	1 2
	100	[558]	RETURN   	0 1

function <./moonscript/transform/statement.lua:559,606> (102 instructions, 408 bytes at 0x7fbcb5c066c0)
3 params, 15 slots, 8 upvalues, 13 locals, 11 constants, 1 function
	1	[560]	GETUPVAL 	3 0	; unpack
	2	[560]	MOVE     	4 1
	3	[560]	LOADK    	5 -1	; 2
	4	[560]	CALL     	3 3 3
	5	[561]	LOADBOOL 	5 1 0
	6	[562]	LOADNIL  	6 7
	7	[564]	GETUPVAL 	8 1	; last_stm
	8	[564]	MOVE     	9 4
	9	[564]	CALL     	8 2 2
	10	[565]	TEST     	8 0 0
	11	[565]	JMP      	9	; to 21
	12	[566]	GETUPVAL 	9 2	; types
	13	[566]	GETTABLE 	9 9 -2	; "terminating"
	14	[566]	GETUPVAL 	10 3	; ntype
	15	[566]	MOVE     	11 8
	16	[566]	CALL     	10 2 2
	17	[566]	GETTABLE 	9 9 10
	18	[566]	TEST     	9 0 0
	19	[566]	JMP      	1	; to 21
	20	[567]	LOADBOOL 	2 0 0
	21	[571]	GETUPVAL 	8 3	; ntype
	22	[571]	MOVE     	9 3
	23	[571]	CALL     	8 2 2
	24	[571]	EQ       	0 8 -3	; - "assign"
	25	[571]	JMP      	28	; to 54
	26	[572]	GETUPVAL 	8 0	; unpack
	27	[572]	MOVE     	9 3
	28	[572]	LOADK    	10 -1	; 2
	29	[572]	CALL     	8 3 3
	30	[573]	GETTABLE 	10 8 -4	; 1
	31	[574]	GETUPVAL 	11 3	; ntype
	32	[574]	MOVE     	12 10
	33	[574]	CALL     	11 2 2
	34	[574]	EQ       	0 11 -5	; - "ref"
	35	[574]	JMP      	5	; to 41
	36	[575]	MOVE     	6 10
	37	[576]	MOVE     	7 3
	38	[577]	GETTABLE 	3 9 -4	; 1
	39	[578]	LOADBOOL 	5 0 0
	40	[578]	JMP      	20	; to 61
	41	[580]	GETUPVAL 	11 4	; NameProxy
	42	[580]	LOADK    	12 -6	; "with"
	43	[580]	CALL     	11 2 2
	44	[580]	MOVE     	6 11
	45	[581]	GETTABLE 	3 9 -4	; 1
	46	[582]	SETTABLE 	9 -4 6	; 1 -
	47	[583]	NEWTABLE 	11 3 0
	48	[584]	LOADK    	12 -3	; "assign"
	49	[585]	MOVE     	13 8
	50	[587]	MOVE     	14 9
	51	[587]	SETLIST  	11 3 1	; 1
	52	[587]	MOVE     	7 11
	53	[588]	JMP      	7	; to 61
	54	[589]	SELF     	8 0 -7	; "is_local"
	55	[589]	MOVE     	10 3
	56	[589]	CALL     	8 3 2
	57	[589]	TEST     	8 0 0
	58	[589]	JMP      	2	; to 61
	59	[590]	MOVE     	6 3
	60	[591]	LOADBOOL 	5 0 0
	61	[593]	TEST     	6 0 1
	62	[593]	JMP      	4	; to 67
	63	[593]	GETUPVAL 	8 4	; NameProxy
	64	[593]	LOADK    	9 -6	; "with"
	65	[593]	CALL     	8 2 2
	66	[593]	MOVE     	6 8
	67	[594]	GETUPVAL 	8 5	; build
	68	[594]	GETTABLE 	8 8 -8	; "do"
	69	[594]	NEWTABLE 	9 3 0
	70	[595]	TEST     	5 0 0
	71	[595]	JMP      	7	; to 79
	72	[595]	GETUPVAL 	10 5	; build
	73	[595]	GETTABLE 	10 10 -9	; "assign_one"
	74	[595]	MOVE     	11 6
	75	[595]	MOVE     	12 3
	76	[595]	CALL     	10 3 2
	77	[595]	TEST     	10 0 1
	78	[595]	JMP      	1	; to 80
	79	[595]	GETUPVAL 	10 6	; NOOP
	80	[596]	TESTSET  	11 7 1
	81	[596]	JMP      	1	; to 83
	82	[596]	GETUPVAL 	11 6	; NOOP
	83	[597]	GETUPVAL 	12 7	; Run
	84	[599]	CLOSURE  	13 0	; 0x7fbcb5c0d530
	85	[599]	MOVE     	0 6
	86	[597]	CALL     	12 2 2
	87	[600]	GETUPVAL 	13 0	; unpack
	88	[600]	MOVE     	14 4
	89	[600]	CALL     	13 2 0
	90	[601]	SETLIST  	9 0 1	; 1
	91	[594]	CALL     	8 2 2
	92	[602]	TEST     	2 0 0
	93	[602]	JMP      	7	; to 101
	94	[603]	GETGLOBAL	9 -10	; table
	95	[603]	GETTABLE 	9 9 -11	; "insert"
	96	[603]	GETTABLE 	10 8 -1	; 2
	97	[603]	MOVE     	11 2
	98	[603]	MOVE     	12 6
	99	[603]	CALL     	11 2 0
	100	[603]	CALL     	9 0 1
	101	[605]	RETURN   	8 2
	102	[606]	RETURN   	0 1

function <./moonscript/transform/statement.lua:597,599> (6 instructions, 24 bytes at 0x7fbcb5c0d530)
1 param, 5 slots, 1 upvalue, 1 local, 2 constants, 0 functions
	1	[598]	SELF     	1 0 -1	; "set"
	2	[598]	LOADK    	3 -2	; "scope_var"
	3	[598]	GETUPVAL 	4 0	; scope_name
	4	[598]	TAILCALL 	1 4 0
	5	[598]	RETURN   	1 0
	6	[599]	RETURN   	0 1

function <./moonscript/transform/statement.lua:607,711> (213 instructions, 852 bytes at 0x7fbcb5c0de90)
3 params, 25 slots, 12 upvalues, 29 locals, 30 constants, 0 functions
	1	[608]	GETUPVAL 	3 0	; smart_node
	2	[608]	MOVE     	4 1
	3	[608]	CALL     	3 2 1
	4	[609]	GETUPVAL 	3 1	; unpack
	5	[609]	GETTABLE 	4 1 -1	; "iter"
	6	[609]	CALL     	3 2 2
	7	[610]	NEWTABLE 	4 0 0
	8	[612]	NEWTABLE 	5 0 0
	9	[613]	LOADK    	6 -2	; 1
	10	[614]	GETGLOBAL	7 -3	; ipairs
	11	[614]	GETTABLE 	8 1 -4	; "names"
	12	[614]	CALL     	7 2 4
	13	[614]	JMP      	21	; to 35
	14	[615]	GETUPVAL 	12 2	; ntype
	15	[615]	MOVE     	13 11
	16	[615]	CALL     	12 2 2
	17	[615]	EQ       	0 12 -5	; - "table"
	18	[615]	JMP      	14	; to 33
	19	[617]	GETUPVAL 	12 3	; NameProxy
	20	[617]	LOADK    	13 -6	; "des"
	21	[617]	CALL     	12 2 2
	22	[618]	GETUPVAL 	13 4	; insert
	23	[618]	MOVE     	14 4
	24	[618]	GETUPVAL 	15 5	; destructure
	25	[618]	GETTABLE 	15 15 -7	; "build_assign"
	26	[618]	MOVE     	16 0
	27	[618]	MOVE     	17 11
	28	[618]	MOVE     	18 12
	29	[618]	CALL     	15 4 0
	30	[618]	CALL     	13 0 1
	31	[619]	SETTABLE 	5 6 12
	32	[620]	JMP      	1	; to 34
	33	[622]	SETTABLE 	5 6 11
	34	[624]	ADD      	6 6 -2	; - 1
	35	[614]	TFORLOOP 	7 2
	36	[624]	JMP      	-23	; to 14
	37	[626]	SETTABLE 	1 -4 5	; "names" -
	38	[628]	GETGLOBAL	5 -8	; next
	39	[628]	MOVE     	6 4
	40	[628]	CALL     	5 2 2
	41	[628]	TEST     	5 0 0
	42	[628]	JMP      	8	; to 51
	43	[629]	GETUPVAL 	5 4	; insert
	44	[629]	MOVE     	6 4
	45	[629]	GETUPVAL 	7 6	; build
	46	[629]	GETTABLE 	7 7 -9	; "group"
	47	[629]	GETTABLE 	8 1 -10	; "body"
	48	[629]	CALL     	7 2 0
	49	[629]	CALL     	5 0 1
	50	[630]	SETTABLE 	1 -10 4	; "body" -
	51	[632]	GETUPVAL 	5 2	; ntype
	52	[632]	MOVE     	6 3
	53	[632]	CALL     	5 2 2
	54	[632]	EQ       	0 5 -11	; - "unpack"
	55	[632]	JMP      	153	; to 209
	56	[633]	GETTABLE 	5 3 -12	; 2
	57	[634]	GETUPVAL 	6 3	; NameProxy
	58	[634]	LOADK    	7 -13	; "index"
	59	[634]	CALL     	6 2 2
	60	[635]	SELF     	7 0 -14	; "is_local"
	61	[635]	MOVE     	9 5
	62	[635]	CALL     	7 3 2
	63	[635]	TEST     	7 0 0
	64	[635]	JMP      	2	; to 67
	65	[635]	TESTSET  	7 5 1
	66	[635]	JMP      	3	; to 70
	67	[635]	GETUPVAL 	7 3	; NameProxy
	68	[635]	LOADK    	8 -15	; "list"
	69	[635]	CALL     	7 2 2
	70	[636]	LOADNIL  	8 9
	71	[638]	GETUPVAL 	10 7	; is_slice
	72	[638]	MOVE     	11 5
	73	[638]	CALL     	10 2 2
	74	[638]	TEST     	10 0 0
	75	[638]	JMP      	56	; to 132
	76	[639]	LEN      	10 5
	77	[639]	GETTABLE 	10 5 10
	78	[640]	GETGLOBAL	11 -5	; table
	79	[640]	GETTABLE 	11 11 -16	; "remove"
	80	[640]	MOVE     	12 5
	81	[640]	CALL     	11 2 1
	82	[641]	GETGLOBAL	11 -5	; table
	83	[641]	GETTABLE 	11 11 -16	; "remove"
	84	[641]	MOVE     	12 10
	85	[641]	LOADK    	13 -2	; 1
	86	[641]	CALL     	11 3 1
	87	[642]	SELF     	11 0 -14	; "is_local"
	88	[642]	MOVE     	13 5
	89	[642]	CALL     	11 3 2
	90	[642]	TEST     	11 0 0
	91	[642]	JMP      	1	; to 93
	92	[643]	MOVE     	7 5
	93	[645]	GETTABLE 	11 10 -12	; 2
	94	[645]	TEST     	11 0 0
	95	[645]	JMP      	29	; to 125
	96	[645]	GETTABLE 	11 10 -12	; 2
	97	[645]	EQ       	1 11 -17	; - ""
	98	[645]	JMP      	26	; to 125
	99	[646]	GETUPVAL 	11 3	; NameProxy
	100	[646]	LOADK    	12 -18	; "max"
	101	[646]	CALL     	11 2 2
	102	[647]	GETUPVAL 	12 6	; build
	103	[647]	GETTABLE 	12 12 -19	; "assign_one"
	104	[647]	MOVE     	13 11
	105	[647]	GETTABLE 	14 10 -12	; 2
	106	[647]	CALL     	12 3 2
	107	[647]	MOVE     	8 12
	108	[648]	NEWTABLE 	12 10 0
	109	[649]	LOADK    	13 -20	; "exp"
	110	[650]	MOVE     	14 11
	111	[651]	LOADK    	15 -21	; "<"
	112	[652]	LOADK    	16 -22	; 0
	113	[653]	LOADK    	17 -23	; "and"
	114	[653]	NEWTABLE 	18 2 0
	115	[655]	LOADK    	19 -24	; "length"
	116	[657]	MOVE     	20 7
	117	[657]	SETLIST  	18 2 1	; 1
	118	[658]	LOADK    	19 -25	; "+"
	119	[659]	MOVE     	20 11
	120	[660]	LOADK    	21 -26	; "or"
	121	[662]	MOVE     	22 11
	122	[662]	SETLIST  	12 10 1	; 1
	123	[662]	SETTABLE 	10 -12 12	; 2 -
	124	[662]	JMP      	5	; to 130
	125	[664]	NEWTABLE 	11 2 0
	126	[665]	LOADK    	12 -24	; "length"
	127	[667]	MOVE     	13 7
	128	[667]	SETLIST  	11 2 1	; 1
	129	[667]	SETTABLE 	10 -12 11	; 2 -
	130	[669]	MOVE     	9 10
	131	[669]	JMP      	8	; to 140
	132	[671]	NEWTABLE 	10 2 0
	133	[672]	LOADK    	11 -2	; 1
	134	[672]	NEWTABLE 	12 2 0
	135	[674]	LOADK    	13 -24	; "length"
	136	[676]	MOVE     	14 7
	137	[676]	SETLIST  	12 2 1	; 1
	138	[677]	SETLIST  	10 2 1	; 1
	139	[677]	MOVE     	9 10
	140	[679]	LOADNIL  	10 10
	141	[681]	NEWTABLE 	11 0 0
	142	[682]	LOADK    	12 -2	; 1
	143	[683]	GETTABLE 	13 1 -4	; "names"
	144	[684]	LOADK    	14 -2	; 1
	145	[684]	LEN      	15 13
	146	[684]	LOADK    	16 -2	; 1
	147	[684]	FORPREP  	14 16	; to 164
	148	[685]	GETTABLE 	18 13 17
	149	[686]	GETUPVAL 	19 8	; is_name_proxy
	150	[686]	MOVE     	20 18
	151	[686]	CALL     	19 2 2
	152	[686]	TEST     	19 0 0
	153	[686]	JMP      	2	; to 156
	154	[686]	TESTSET  	19 18 1
	155	[686]	JMP      	6	; to 162
	156	[686]	GETUPVAL 	19 9	; LocalName
	157	[686]	MOVE     	20 18
	158	[686]	CALL     	19 2 2
	159	[686]	TEST     	19 0 1
	160	[686]	JMP      	1	; to 162
	161	[686]	MOVE     	19 18
	162	[686]	SETTABLE 	11 12 19
	163	[687]	ADD      	12 12 -2	; - 1
	164	[684]	FORLOOP  	14 -17	; to 148
	165	[689]	MOVE     	10 11
	166	[691]	GETUPVAL 	11 6	; build
	167	[691]	GETTABLE 	11 11 -9	; "group"
	168	[691]	NEWTABLE 	12 2 0
	169	[692]	EQ       	1 7 5
	170	[692]	JMP      	7	; to 178
	171	[692]	GETUPVAL 	13 6	; build
	172	[692]	GETTABLE 	13 13 -19	; "assign_one"
	173	[692]	MOVE     	14 7
	174	[692]	MOVE     	15 5
	175	[692]	CALL     	13 3 2
	176	[692]	TEST     	13 0 1
	177	[692]	JMP      	1	; to 179
	178	[692]	GETUPVAL 	13 10	; NOOP
	179	[693]	TESTSET  	14 8 1
	180	[693]	JMP      	1	; to 182
	181	[693]	GETUPVAL 	14 10	; NOOP
	182	[694]	GETUPVAL 	15 6	; build
	183	[694]	GETTABLE 	15 15 -27	; "for"
	184	[694]	NEWTABLE 	16 0 3
	185	[695]	SETTABLE 	16 -28 6	; "name" -
	186	[696]	SETTABLE 	16 -29 9	; "bounds" -
	187	[697]	NEWTABLE 	17 1 0
	188	[697]	NEWTABLE 	18 3 0
	189	[699]	LOADK    	19 -30	; "assign"
	190	[700]	MOVE     	20 10
	191	[700]	NEWTABLE 	21 0 0
	192	[702]	GETUPVAL 	22 3	; NameProxy
	193	[702]	GETTABLE 	22 22 -13	; "index"
	194	[702]	MOVE     	23 7
	195	[702]	MOVE     	24 6
	196	[702]	CALL     	22 3 0
	197	[703]	SETLIST  	21 0 1	; 1
	198	[704]	SETLIST  	18 3 1	; 1
	199	[705]	GETUPVAL 	19 6	; build
	200	[705]	GETTABLE 	19 19 -9	; "group"
	201	[705]	GETTABLE 	20 1 -10	; "body"
	202	[705]	CALL     	19 2 0
	203	[706]	SETLIST  	17 0 1	; 1
	204	[706]	SETTABLE 	16 -10 17	; "body" -
	205	[694]	CALL     	15 2 0
	206	[708]	SETLIST  	12 0 1	; 1
	207	[691]	TAILCALL 	11 2 0
	208	[708]	RETURN   	11 0
	209	[710]	GETUPVAL 	5 11	; with_continue_listener
	210	[710]	GETTABLE 	6 1 -10	; "body"
	211	[710]	CALL     	5 2 2
	212	[710]	SETTABLE 	1 -10 5	; "body" -
	213	[711]	RETURN   	0 1

function <./moonscript/transform/statement.lua:712,715> (8 instructions, 32 bytes at 0x7fbcb5c0e760)
2 params, 4 slots, 2 upvalues, 2 locals, 1 constant, 0 functions
	1	[713]	GETUPVAL 	2 0	; smart_node
	2	[713]	MOVE     	3 1
	3	[713]	CALL     	2 2 1
	4	[714]	GETUPVAL 	2 1	; with_continue_listener
	5	[714]	GETTABLE 	3 1 -1	; "body"
	6	[714]	CALL     	2 2 2
	7	[714]	SETTABLE 	1 -1 2	; "body" -
	8	[715]	RETURN   	0 1

function <./moonscript/transform/statement.lua:716,719> (8 instructions, 32 bytes at 0x7fbcb5c0ed20)
2 params, 4 slots, 2 upvalues, 2 locals, 1 constant, 0 functions
	1	[717]	GETUPVAL 	2 0	; smart_node
	2	[717]	MOVE     	3 1
	3	[717]	CALL     	2 2 1
	4	[718]	GETUPVAL 	2 1	; with_continue_listener
	5	[718]	GETTABLE 	3 1 -1	; "body"
	6	[718]	CALL     	2 2 2
	7	[718]	SETTABLE 	1 -1 2	; "body" -
	8	[719]	RETURN   	0 1

function <./moonscript/transform/statement.lua:720,778> (57 instructions, 228 bytes at 0x7fbcb5c0f080)
3 params, 18 slots, 6 upvalues, 15 locals, 7 constants, 1 function
	1	[721]	GETUPVAL 	3 0	; unpack
	2	[721]	MOVE     	4 1
	3	[721]	LOADK    	5 -1	; 2
	4	[721]	CALL     	3 3 3
	5	[722]	GETUPVAL 	5 1	; NameProxy
	6	[722]	LOADK    	6 -2	; "exp"
	7	[722]	CALL     	5 2 2
	8	[723]	LOADNIL  	6 6
	9	[758]	CLOSURE  	6 0	; 0x7fbcb5c0f500
	10	[758]	GETUPVAL 	0 0	; unpack
	11	[758]	GETUPVAL 	0 2	; insert
	12	[758]	GETUPVAL 	0 3	; value_is_singular
	13	[758]	MOVE     	0 5
	14	[758]	MOVE     	0 2
	15	[758]	GETUPVAL 	0 4	; transform_last_stm
	16	[759]	LOADBOOL 	7 1 0
	17	[760]	NEWTABLE 	8 1 0
	18	[762]	LOADK    	9 -3	; "if"
	19	[762]	SETLIST  	8 1 1	; 1
	20	[763]	LOADK    	9 -4	; 1
	21	[763]	LEN      	10 4
	22	[763]	LOADK    	11 -4	; 1
	23	[763]	FORPREP  	9 20	; to 44
	24	[764]	GETTABLE 	13 4 12
	25	[765]	MOVE     	14 6
	26	[765]	MOVE     	15 13
	27	[765]	CALL     	14 2 2
	28	[766]	TEST     	7 0 0
	29	[766]	JMP      	10	; to 40
	30	[767]	LOADBOOL 	7 0 0
	31	[768]	GETUPVAL 	15 2	; insert
	32	[768]	MOVE     	16 8
	33	[768]	GETTABLE 	17 14 -1	; 2
	34	[768]	CALL     	15 3 1
	35	[769]	GETUPVAL 	15 2	; insert
	36	[769]	MOVE     	16 8
	37	[769]	GETTABLE 	17 14 -5	; 3
	38	[769]	CALL     	15 3 1
	39	[769]	JMP      	4	; to 44
	40	[771]	GETUPVAL 	15 2	; insert
	41	[771]	MOVE     	16 8
	42	[771]	MOVE     	17 14
	43	[771]	CALL     	15 3 1
	44	[763]	FORLOOP  	9 -21	; to 24
	45	[774]	GETUPVAL 	9 5	; build
	46	[774]	GETTABLE 	9 9 -6	; "group"
	47	[774]	NEWTABLE 	10 2 0
	48	[775]	GETUPVAL 	11 5	; build
	49	[775]	GETTABLE 	11 11 -7	; "assign_one"
	50	[775]	MOVE     	12 5
	51	[775]	MOVE     	13 3
	52	[775]	CALL     	11 3 2
	53	[777]	MOVE     	12 8
	54	[777]	SETLIST  	10 2 1	; 1
	55	[774]	TAILCALL 	9 2 0
	56	[777]	RETURN   	9 0
	57	[778]	RETURN   	0 1

function <./moonscript/transform/statement.lua:724,758> (72 instructions, 288 bytes at 0x7fbcb5c0f500)
1 param, 18 slots, 6 upvalues, 11 locals, 9 constants, 0 functions
	1	[725]	GETUPVAL 	1 0	; unpack
	2	[725]	MOVE     	2 0
	3	[725]	CALL     	1 2 4
	4	[726]	NEWTABLE 	4 0 0
	5	[727]	GETUPVAL 	5 1	; insert
	6	[727]	MOVE     	6 4
	7	[727]	EQ       	0 1 -1	; - "case"
	8	[727]	JMP      	3	; to 12
	9	[727]	LOADK    	7 -2	; "elseif"
	10	[727]	TEST     	7 0 1
	11	[727]	JMP      	1	; to 13
	12	[727]	LOADK    	7 -3	; "else"
	13	[727]	CALL     	5 3 1
	14	[728]	EQ       	1 1 -3	; - "else"
	15	[728]	JMP      	42	; to 58
	16	[729]	NEWTABLE 	5 0 0
	17	[730]	GETGLOBAL	6 -4	; ipairs
	18	[730]	MOVE     	7 2
	19	[730]	CALL     	6 2 4
	20	[730]	JMP      	30	; to 51
	21	[731]	EQ       	0 9 -5	; - 1
	22	[731]	JMP      	5	; to 28
	23	[732]	GETUPVAL 	11 1	; insert
	24	[732]	MOVE     	12 5
	25	[732]	LOADK    	13 -6	; "exp"
	26	[732]	CALL     	11 3 1
	27	[732]	JMP      	4	; to 32
	28	[734]	GETUPVAL 	11 1	; insert
	29	[734]	MOVE     	12 5
	30	[734]	LOADK    	13 -7	; "or"
	31	[734]	CALL     	11 3 1
	32	[736]	GETUPVAL 	11 2	; value_is_singular
	33	[736]	MOVE     	12 10
	34	[736]	CALL     	11 2 2
	35	[736]	TEST     	11 0 1
	36	[736]	JMP      	5	; to 42
	37	[737]	NEWTABLE 	11 2 0
	38	[738]	LOADK    	12 -8	; "parens"
	39	[740]	MOVE     	13 10
	40	[740]	SETLIST  	11 2 1	; 1
	41	[740]	MOVE     	10 11
	42	[742]	GETUPVAL 	11 1	; insert
	43	[742]	MOVE     	12 5
	44	[742]	NEWTABLE 	13 4 0
	45	[743]	LOADK    	14 -6	; "exp"
	46	[744]	MOVE     	15 10
	47	[745]	LOADK    	16 -9	; "=="
	48	[747]	GETUPVAL 	17 3	; exp_name
	49	[747]	SETLIST  	13 4 1	; 1
	50	[742]	CALL     	11 3 1
	51	[730]	TFORLOOP 	6 2
	52	[747]	JMP      	-32	; to 21
	53	[749]	GETUPVAL 	6 1	; insert
	54	[749]	MOVE     	7 4
	55	[749]	MOVE     	8 5
	56	[749]	CALL     	6 3 1
	57	[749]	JMP      	1	; to 59
	58	[751]	MOVE     	3 2
	59	[753]	GETUPVAL 	5 4	; ret
	60	[753]	TEST     	5 0 0
	61	[753]	JMP      	5	; to 67
	62	[754]	GETUPVAL 	5 5	; transform_last_stm
	63	[754]	MOVE     	6 3
	64	[754]	GETUPVAL 	7 4	; ret
	65	[754]	CALL     	5 3 2
	66	[754]	MOVE     	3 5
	67	[756]	GETUPVAL 	5 1	; insert
	68	[756]	MOVE     	6 4
	69	[756]	MOVE     	7 3
	70	[756]	CALL     	5 3 1
	71	[757]	RETURN   	4 2
	72	[758]	RETURN   	0 1
