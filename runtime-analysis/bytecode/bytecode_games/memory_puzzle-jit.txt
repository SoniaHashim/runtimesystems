-- BYTECODE -- memory_puzzle.lua:7-9
0001    GGET     1   0      ; "os"
0002    TGETS    1   1   1  ; "execute"
0003    KSTR     2   2      ; "sleep "
0004    GGET     3   3      ; "tonumber"
0005    MOV      4   0
0006    CALL     3   2   2
0007    CAT      2   2   3
0008    CALL     1   1   2
0009    RET0     0   1

-- BYTECODE -- memory_puzzle.lua:11-13
0001    TGETV    3   0   2
0002    TGETV    4   0   1
0003    TSETV    4   0   2
0004    TSETV    3   0   1
0005    RET0     0   1

-- BYTECODE -- memory_puzzle.lua:15-20
0001    LEN      1   0
0002    KSHORT   2   1
0003    KSHORT   3  -1
0004    FORI     1 => 0015
0005 => GGET     5   0      ; "math"
0006    TGETS    5   5   1  ; "random"
0007    MOV      6   4
0008    CALL     5   2   2
0009    GGET     6   2      ; "swap"
0010    MOV      7   0
0011    MOV      8   4
0012    MOV      9   5
0013    CALL     6   1   4
0014    FORL     1 => 0005
0015 => RET0     0   1

-- BYTECODE -- memory_puzzle.lua:22-28
0001    TNEW     1   0
0002    GSET     1   0      ; "indices"
0003    KSHORT   1   1
0004    MOV      2   0
0005    KSHORT   3   1
0006    FORI     1 => 0011
0007 => GGET     5   0      ; "indices"
0008    KSHORT   6   0
0009    TSETV    6   5   4
0010    FORL     1 => 0007
0011 => GGET     1   0      ; "indices"
0012    RET1     1   2

-- BYTECODE -- memory_puzzle.lua:30-46
0001    GGET     2   0      ; "io"
0002    TGETS    2   2   1  ; "write"
0003    KSTR     3   2      ; "Enter the index of the first card to fli"~
0004    CALL     2   1   2
0005    GGET     2   3      ; "tonumber"
0006    GGET     3   0      ; "io"
0007    TGETS    3   3   4  ; "read"
0008    CALL     3   0   1
0009    CALLM    2   2   0
0010 => LEN      3   0
0011    ISLT     3   2
0012    JMP      3 => 0019
0013    KSHORT   3   1
0014    ISLT     2   3
0015    JMP      3 => 0019
0016    TGETV    3   0   2
0017    ISNEN    3   0      ; 1
0018    JMP      3 => 0035
0019 => LOOP     3 => 0035
0020    GGET     3   0      ; "io"
0021    TGETS    3   3   1  ; "write"
0022    KSTR     4   5      ; "Invalid index.\n"
0023    CALL     3   1   2
0024    GGET     3   0      ; "io"
0025    TGETS    3   3   1  ; "write"
0026    KSTR     4   2      ; "Enter the index of the first card to fli"~
0027    CALL     3   1   2
0028    GGET     3   3      ; "tonumber"
0029    GGET     4   0      ; "io"
0030    TGETS    4   4   4  ; "read"
0031    CALL     4   0   1
0032    CALLM    3   2   0
0033    MOV      2   3
0034    JMP      3 => 0010
0035 => GGET     3   0      ; "io"
0036    TGETS    3   3   1  ; "write"
0037    KSTR     4   6      ; "Enter the index of the second card to fl"~
0038    CALL     3   1   2
0039    GGET     3   3      ; "tonumber"
0040    GGET     4   0      ; "io"
0041    TGETS    4   4   4  ; "read"
0042    CALL     4   0   1
0043    CALLM    3   2   0
0044 => LEN      4   1
0045    ISLT     4   3
0046    JMP      4 => 0053
0047    KSHORT   4   1
0048    ISLT     3   4
0049    JMP      4 => 0053
0050    TGETV    4   1   3
0051    ISNEN    4   0      ; 1
0052    JMP      4 => 0069
0053 => LOOP     4 => 0069
0054    GGET     4   0      ; "io"
0055    TGETS    4   4   1  ; "write"
0056    KSTR     5   5      ; "Invalid index.\n"
0057    CALL     4   1   2
0058    GGET     4   0      ; "io"
0059    TGETS    4   4   1  ; "write"
0060    KSTR     5   6      ; "Enter the index of the second card to fl"~
0061    CALL     4   1   2
0062    GGET     4   3      ; "tonumber"
0063    GGET     5   0      ; "io"
0064    TGETS    5   5   4  ; "read"
0065    CALL     5   0   1
0066    CALLM    4   2   0
0067    MOV      3   4
0068    JMP      4 => 0044
0069 => MOV      4   2
0070    MOV      5   3
0071    RET      4   3

-- BYTECODE -- memory_puzzle.lua:48-50
0001    GGET     0   0      ; "io"
0002    TGETS    0   0   1  ; "write"
0003    KSTR     1   2      ; "\008 \008"
0004    MOV      2   1
0005    TGETS    1   1   3  ; "rep"
0006    KSHORT   3 1000
0007    CALL     1   0   3
0008    CALLM    0   1   0
0009    RET0     0   1

-- BYTECODE -- memory_puzzle.lua:52-67
0001    KSHORT   4   1
0002    LEN      5   0
0003    KSHORT   6   1
0004    FORI     4 => 0020
0005 => TGETV    8   1   7
0006    ISNEN    8   0      ; 0
0007    JMP      8 => 0013
0008    GGET     8   0      ; "io"
0009    TGETS    8   8   1  ; "write"
0010    KSTR     9   2      ; "???   "
0011    CALL     8   1   2
0012    JMP      8 => 0019
0013 => GGET     8   0      ; "io"
0014    TGETS    8   8   1  ; "write"
0015    TGETV    9   0   7
0016    KSTR    10   3      ; "   "
0017    CAT      9   9  10
0018    CALL     8   1   2
0019 => FORL     4 => 0005
0020 => ISNEP    2   1
0021    JMP      4 => 0027
0022    GGET     4   0      ; "io"
0023    TGETS    4   4   1  ; "write"
0024    KSTR     5   4      ; "\n"
0025    CALL     4   1   2
0026    RET0     0   1
0027 => GGET     4   0      ; "io"
0028    TGETS    4   4   5  ; "flush"
0029    CALL     4   1   1
0030    GGET     4   6      ; "sleep"
0031    MOV      5   3
0032    CALL     4   1   2
0033    GGET     4   7      ; "remove_last_line"
0034    CALL     4   1   1
0035    RET0     0   1

-- BYTECODE -- memory_puzzle.lua:69-72
0001    GGET     6   0      ; "display_half"
0002    MOV      7   0
0003    MOV      8   2
0004    MOV      9   4
0005    MOV     10   5
0006    CALL     6   1   5
0007    GGET     6   0      ; "display_half"
0008    MOV      7   1
0009    MOV      8   3
0010    MOV      9   4
0011    MOV     10   5
0012    CALL     6   1   5
0013    RET0     0   1

-- BYTECODE -- memory_puzzle.lua:74-83
0001    TDUP     0   0
0002    GSET     0   1      ; "words_1"
0003    GGET     0   2      ; "shuffle"
0004    GGET     1   1      ; "words_1"
0005    CALL     0   1   2
0006    TDUP     0   3
0007    GSET     0   4      ; "words_2"
0008    GGET     0   2      ; "shuffle"
0009    GGET     1   4      ; "words_2"
0010    CALL     0   1   2
0011    GGET     0   5      ; "generate_is_flipped"
0012    GGET     1   1      ; "words_1"
0013    LEN      1   1
0014    CALL     0   2   2
0015    GSET     0   6      ; "is_flipped_top"
0016    GGET     0   5      ; "generate_is_flipped"
0017    GGET     1   1      ; "words_1"
0018    LEN      1   1
0019    CALL     0   2   2
0020    GSET     0   7      ; "is_flipped_bottom"
0021    GGET     0   8      ; "display"
0022    GGET     1   1      ; "words_1"
0023    GGET     2   4      ; "words_2"
0024    GGET     3   6      ; "is_flipped_top"
0025    GGET     4   7      ; "is_flipped_bottom"
0026    KPRI     5   1
0027    KSHORT   6   0
0028    CALL     0   1   7
0029    KSHORT   0   0
0030    GGET     1   1      ; "words_1"
0031    GGET     2   4      ; "words_2"
0032    GGET     3   6      ; "is_flipped_top"
0033    GGET     4   7      ; "is_flipped_bottom"
0034    RET      0   6

-- BYTECODE -- memory_puzzle.lua:85-98
0001    KSHORT   7   1
0002    TSETV    7   4   0
0003    KSHORT   7   1
0004    TSETV    7   5   1
0005    GGET     7   0      ; "display"
0006    MOV      8   2
0007    MOV      9   3
0008    MOV     10   4
0009    MOV     11   5
0010    KPRI    12   2
0011    KSHORT  13   2
0012    CALL     7   1   7
0013    TGETV    7   2   0
0014    TGETV    8   3   1
0015    ISEQV    7   8
0016    JMP      7 => 0022
0017    KSHORT   7   0
0018    TSETV    7   4   0
0019    KSHORT   7   0
0020    TSETV    7   5   1
0021    JMP      7 => 0023
0022 => ADDVN    6   6   0  ; 1
0023 => GGET     7   0      ; "display"
0024    MOV      8   2
0025    MOV      9   3
0026    MOV     10   4
0027    MOV     11   5
0028    KPRI    12   1
0029    KSHORT  13   0
0030    CALL     7   1   7
0031    GGET     7   1      ; "io"
0032    TGETS    7   7   2  ; "write"
0033    KSTR     8   3      ; "Number of correct guesses: "
0034    MOV      9   6
0035    KSTR    10   4      ; "\n"
0036    CAT      8   8  10
0037    CALL     7   1   2
0038    RET1     6   2

-- BYTECODE -- memory_puzzle.lua:0-105
0001    GGET     0   0      ; "math"
0002    TGETS    0   0   1  ; "randomseed"
0003    GGET     1   2      ; "os"
0004    TGETS    1   1   3  ; "time"
0005    CALL     1   0   1
0006    CALLM    0   1   0
0007    FNEW     0   4      ; memory_puzzle.lua:7
0008    GSET     0   5      ; "sleep"
0009    FNEW     0   6      ; memory_puzzle.lua:11
0010    GSET     0   7      ; "swap"
0011    FNEW     0   8      ; memory_puzzle.lua:15
0012    GSET     0   9      ; "shuffle"
0013    FNEW     0  10      ; memory_puzzle.lua:22
0014    GSET     0  11      ; "generate_is_flipped"
0015    FNEW     0  12      ; memory_puzzle.lua:30
0016    GSET     0  13      ; "get_card_choice"
0017    FNEW     0  14      ; memory_puzzle.lua:48
0018    GSET     0  15      ; "remove_last_line"
0019    FNEW     0  16      ; memory_puzzle.lua:52
0020    GSET     0  17      ; "display_half"
0021    FNEW     0  18      ; memory_puzzle.lua:69
0022    GSET     0  19      ; "display"
0023    FNEW     0  20      ; memory_puzzle.lua:74
0024    GSET     0  21      ; "initialize_game"
0025    FNEW     0  22      ; memory_puzzle.lua:85
0026    GSET     0  23      ; "flip_cards"
0027    GGET     0  21      ; "initialize_game"
0028    CALL     0   6   1
0029    GSET     4  24      ; "is_flipped_bottom"
0030    GSET     3  25      ; "is_flipped_top"
0031    GSET     2  26      ; "words_2"
0032    GSET     1  27      ; "words_1"
0033    GSET     0  28      ; "num_correct"
0034 => GGET     0  28      ; "num_correct"
0035    GGET     1  27      ; "words_1"
0036    LEN      1   1
0037    ISEQV    0   1
0038    JMP      0 => 0057
0039    LOOP     0 => 0057
0040    GGET     0  13      ; "get_card_choice"
0041    GGET     1  25      ; "is_flipped_top"
0042    GGET     2  24      ; "is_flipped_bottom"
0043    CALL     0   3   3
0044    GSET     1  29      ; "index_2"
0045    GSET     0  30      ; "index_1"
0046    GGET     0  23      ; "flip_cards"
0047    GGET     1  30      ; "index_1"
0048    GGET     2  29      ; "index_2"
0049    GGET     3  27      ; "words_1"
0050    GGET     4  26      ; "words_2"
0051    GGET     5  25      ; "is_flipped_top"
0052    GGET     6  24      ; "is_flipped_bottom"
0053    GGET     7  28      ; "num_correct"
0054    CALL     0   2   8
0055    GSET     0  28      ; "num_correct"
0056    JMP      0 => 0034
0057 => RET0     0   1

