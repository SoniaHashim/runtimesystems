
main <./memory_puzzle.lua:0,0> (56 instructions, 224 bytes at 0x7f94c74068a0)
0+ params, 8 slots, 0 upvalues, 0 locals, 21 constants, 10 functions
	1	[5]	GETGLOBAL	0 -1	; math
	2	[5]	GETTABLE 	0 0 -2	; "randomseed"
	3	[5]	GETGLOBAL	1 -3	; os
	4	[5]	GETTABLE 	1 1 -4	; "time"
	5	[5]	CALL     	1 1 0
	6	[5]	CALL     	0 0 1
	7	[9]	CLOSURE  	0 0	; 0x7f94c7406ab0
	8	[7]	SETGLOBAL	0 -5	; sleep
	9	[13]	CLOSURE  	0 1	; 0x7f94c7407040
	10	[11]	SETGLOBAL	0 -6	; swap
	11	[20]	CLOSURE  	0 2	; 0x7f94c74073c0
	12	[15]	SETGLOBAL	0 -7	; shuffle
	13	[28]	CLOSURE  	0 3	; 0x7f94c7407850
	14	[22]	SETGLOBAL	0 -8	; generate_is_flipped
	15	[46]	CLOSURE  	0 4	; 0x7f94c7406cb0
	16	[30]	SETGLOBAL	0 -9	; get_card_choice
	17	[50]	CLOSURE  	0 5	; 0x7f94c74081a0
	18	[48]	SETGLOBAL	0 -10	; remove_last_line
	19	[67]	CLOSURE  	0 6	; 0x7f94c7408a70
	20	[52]	SETGLOBAL	0 -11	; display_half
	21	[72]	CLOSURE  	0 7	; 0x7f94c7408da0
	22	[69]	SETGLOBAL	0 -12	; display
	23	[83]	CLOSURE  	0 8	; 0x7f94c7408bf0
	24	[74]	SETGLOBAL	0 -13	; initialize_game
	25	[98]	CLOSURE  	0 9	; 0x7f94c7409660
	26	[85]	SETGLOBAL	0 -14	; flip_cards
	27	[100]	GETGLOBAL	0 -13	; initialize_game
	28	[100]	CALL     	0 1 6
	29	[100]	SETGLOBAL	4 -19	; is_flipped_bottom
	30	[100]	SETGLOBAL	3 -18	; is_flipped_top
	31	[100]	SETGLOBAL	2 -17	; words_2
	32	[100]	SETGLOBAL	1 -16	; words_1
	33	[100]	SETGLOBAL	0 -15	; num_correct
	34	[101]	GETGLOBAL	0 -15	; num_correct
	35	[101]	GETGLOBAL	1 -16	; words_1
	36	[101]	LEN      	1 1
	37	[101]	EQ       	1 0 1
	38	[101]	JMP      	17	; to 56
	39	[102]	GETGLOBAL	0 -9	; get_card_choice
	40	[102]	GETGLOBAL	1 -18	; is_flipped_top
	41	[102]	GETGLOBAL	2 -19	; is_flipped_bottom
	42	[102]	CALL     	0 3 3
	43	[102]	SETGLOBAL	1 -21	; index_2
	44	[102]	SETGLOBAL	0 -20	; index_1
	45	[103]	GETGLOBAL	0 -14	; flip_cards
	46	[103]	GETGLOBAL	1 -20	; index_1
	47	[103]	GETGLOBAL	2 -21	; index_2
	48	[103]	GETGLOBAL	3 -16	; words_1
	49	[103]	GETGLOBAL	4 -17	; words_2
	50	[103]	GETGLOBAL	5 -18	; is_flipped_top
	51	[103]	GETGLOBAL	6 -19	; is_flipped_bottom
	52	[103]	GETGLOBAL	7 -15	; num_correct
	53	[103]	CALL     	0 8 2
	54	[103]	SETGLOBAL	0 -15	; num_correct
	55	[103]	JMP      	-22	; to 34
	56	[104]	RETURN   	0 1

function <./memory_puzzle.lua:7,9> (9 instructions, 36 bytes at 0x7f94c7406ab0)
1 param, 5 slots, 0 upvalues, 1 local, 4 constants, 0 functions
	1	[8]	GETGLOBAL	1 -1	; os
	2	[8]	GETTABLE 	1 1 -2	; "execute"
	3	[8]	LOADK    	2 -3	; "sleep "
	4	[8]	GETGLOBAL	3 -4	; tonumber
	5	[8]	MOVE     	4 0
	6	[8]	CALL     	3 2 2
	7	[8]	CONCAT   	2 2 3
	8	[8]	CALL     	1 2 1
	9	[9]	RETURN   	0 1

function <./memory_puzzle.lua:11,13> (5 instructions, 20 bytes at 0x7f94c7407040)
3 params, 5 slots, 0 upvalues, 3 locals, 0 constants, 0 functions
	1	[12]	GETTABLE 	3 0 2
	2	[12]	GETTABLE 	4 0 1
	3	[12]	SETTABLE 	0 2 4
	4	[12]	SETTABLE 	0 1 3
	5	[13]	RETURN   	0 1

function <./memory_puzzle.lua:15,20> (15 instructions, 60 bytes at 0x7f94c74073c0)
1 param, 10 slots, 0 upvalues, 6 locals, 5 constants, 0 functions
	1	[16]	LEN      	1 0
	2	[16]	LOADK    	2 -1	; 1
	3	[16]	LOADK    	3 -2	; -1
	4	[16]	FORPREP  	1 9	; to 14
	5	[17]	GETGLOBAL	5 -3	; math
	6	[17]	GETTABLE 	5 5 -4	; "random"
	7	[17]	MOVE     	6 4
	8	[17]	CALL     	5 2 2
	9	[18]	GETGLOBAL	6 -5	; swap
	10	[18]	MOVE     	7 0
	11	[18]	MOVE     	8 4
	12	[18]	MOVE     	9 5
	13	[18]	CALL     	6 4 1
	14	[16]	FORLOOP  	1 -10	; to 5
	15	[20]	RETURN   	0 1

function <./memory_puzzle.lua:22,28> (12 instructions, 48 bytes at 0x7f94c7407850)
1 param, 6 slots, 0 upvalues, 5 locals, 3 constants, 0 functions
	1	[23]	NEWTABLE 	1 0 0
	2	[23]	SETGLOBAL	1 -1	; indices
	3	[24]	LOADK    	1 -2	; 1
	4	[24]	MOVE     	2 0
	5	[24]	LOADK    	3 -2	; 1
	6	[24]	FORPREP  	1 2	; to 9
	7	[25]	GETGLOBAL	5 -1	; indices
	8	[25]	SETTABLE 	5 4 -3	; - 0
	9	[24]	FORLOOP  	1 -3	; to 7
	10	[27]	GETGLOBAL	1 -1	; indices
	11	[27]	RETURN   	1 2
	12	[28]	RETURN   	0 1

function <./memory_puzzle.lua:30,46> (68 instructions, 272 bytes at 0x7f94c7406cb0)
2 params, 6 slots, 0 upvalues, 4 locals, 8 constants, 0 functions
	1	[31]	GETGLOBAL	2 -1	; io
	2	[31]	GETTABLE 	2 2 -2	; "write"
	3	[31]	LOADK    	3 -3	; "Enter the index of the first card to flip:\t"
	4	[31]	CALL     	2 2 1
	5	[32]	GETGLOBAL	2 -4	; tonumber
	6	[32]	GETGLOBAL	3 -1	; io
	7	[32]	GETTABLE 	3 3 -5	; "read"
	8	[32]	CALL     	3 1 0
	9	[32]	CALL     	2 0 2
	10	[33]	LEN      	3 0
	11	[33]	LT       	1 3 2
	12	[33]	JMP      	5	; to 18
	13	[33]	LT       	1 2 -6	; - 1
	14	[33]	JMP      	3	; to 18
	15	[33]	GETTABLE 	3 0 2
	16	[33]	EQ       	0 3 -6	; - 1
	17	[33]	JMP      	15	; to 33
	18	[34]	GETGLOBAL	3 -1	; io
	19	[34]	GETTABLE 	3 3 -2	; "write"
	20	[34]	LOADK    	4 -7	; "Invalid index.\n"
	21	[34]	CALL     	3 2 1
	22	[35]	GETGLOBAL	3 -1	; io
	23	[35]	GETTABLE 	3 3 -2	; "write"
	24	[35]	LOADK    	4 -3	; "Enter the index of the first card to flip:\t"
	25	[35]	CALL     	3 2 1
	26	[36]	GETGLOBAL	3 -4	; tonumber
	27	[36]	GETGLOBAL	4 -1	; io
	28	[36]	GETTABLE 	4 4 -5	; "read"
	29	[36]	CALL     	4 1 0
	30	[36]	CALL     	3 0 2
	31	[36]	MOVE     	2 3
	32	[36]	JMP      	-23	; to 10
	33	[38]	GETGLOBAL	3 -1	; io
	34	[38]	GETTABLE 	3 3 -2	; "write"
	35	[38]	LOADK    	4 -8	; "Enter the index of the second card to flip:\t"
	36	[38]	CALL     	3 2 1
	37	[39]	GETGLOBAL	3 -4	; tonumber
	38	[39]	GETGLOBAL	4 -1	; io
	39	[39]	GETTABLE 	4 4 -5	; "read"
	40	[39]	CALL     	4 1 0
	41	[39]	CALL     	3 0 2
	42	[40]	LEN      	4 1
	43	[40]	LT       	1 4 3
	44	[40]	JMP      	5	; to 50
	45	[40]	LT       	1 3 -6	; - 1
	46	[40]	JMP      	3	; to 50
	47	[40]	GETTABLE 	4 1 3
	48	[40]	EQ       	0 4 -6	; - 1
	49	[40]	JMP      	15	; to 65
	50	[41]	GETGLOBAL	4 -1	; io
	51	[41]	GETTABLE 	4 4 -2	; "write"
	52	[41]	LOADK    	5 -7	; "Invalid index.\n"
	53	[41]	CALL     	4 2 1
	54	[42]	GETGLOBAL	4 -1	; io
	55	[42]	GETTABLE 	4 4 -2	; "write"
	56	[42]	LOADK    	5 -8	; "Enter the index of the second card to flip:\t"
	57	[42]	CALL     	4 2 1
	58	[43]	GETGLOBAL	4 -4	; tonumber
	59	[43]	GETGLOBAL	5 -1	; io
	60	[43]	GETTABLE 	5 5 -5	; "read"
	61	[43]	CALL     	5 1 0
	62	[43]	CALL     	4 0 2
	63	[43]	MOVE     	3 4
	64	[43]	JMP      	-23	; to 42
	65	[45]	MOVE     	4 2
	66	[45]	MOVE     	5 3
	67	[45]	RETURN   	4 3
	68	[46]	RETURN   	0 1

function <./memory_puzzle.lua:48,50> (8 instructions, 32 bytes at 0x7f94c74081a0)
0 params, 4 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[49]	GETGLOBAL	0 -1	; io
	2	[49]	GETTABLE 	0 0 -2	; "write"
	3	[49]	LOADK    	1 -3	; "\b \b"
	4	[49]	SELF     	1 1 -4	; "rep"
	5	[49]	LOADK    	3 -5	; 1000
	6	[49]	CALL     	1 3 0
	7	[49]	CALL     	0 0 1
	8	[50]	RETURN   	0 1

function <./memory_puzzle.lua:52,67> (35 instructions, 140 bytes at 0x7f94c7408a70)
4 params, 11 slots, 0 upvalues, 8 locals, 11 constants, 0 functions
	1	[53]	LOADK    	4 -1	; 1
	2	[53]	LEN      	5 0
	3	[53]	LOADK    	6 -1	; 1
	4	[53]	FORPREP  	4 14	; to 19
	5	[54]	GETTABLE 	8 1 7
	6	[54]	EQ       	0 8 -2	; - 0
	7	[54]	JMP      	5	; to 13
	8	[55]	GETGLOBAL	8 -3	; io
	9	[55]	GETTABLE 	8 8 -4	; "write"
	10	[55]	LOADK    	9 -5	; "???   "
	11	[55]	CALL     	8 2 1
	12	[55]	JMP      	6	; to 19
	13	[57]	GETGLOBAL	8 -3	; io
	14	[57]	GETTABLE 	8 8 -4	; "write"
	15	[57]	GETTABLE 	9 0 7
	16	[57]	LOADK    	10 -6	; "   "
	17	[57]	CONCAT   	9 9 10
	18	[57]	CALL     	8 2 1
	19	[53]	FORLOOP  	4 -15	; to 5
	20	[60]	EQ       	0 2 -7	; - false
	21	[60]	JMP      	5	; to 27
	22	[61]	GETGLOBAL	4 -3	; io
	23	[61]	GETTABLE 	4 4 -4	; "write"
	24	[61]	LOADK    	5 -8	; "\n"
	25	[61]	CALL     	4 2 1
	26	[62]	RETURN   	0 1
	27	[64]	GETGLOBAL	4 -3	; io
	28	[64]	GETTABLE 	4 4 -9	; "flush"
	29	[64]	CALL     	4 1 1
	30	[65]	GETGLOBAL	4 -10	; sleep
	31	[65]	MOVE     	5 3
	32	[65]	CALL     	4 2 1
	33	[66]	GETGLOBAL	4 -11	; remove_last_line
	34	[66]	CALL     	4 1 1
	35	[67]	RETURN   	0 1

function <./memory_puzzle.lua:69,72> (13 instructions, 52 bytes at 0x7f94c7408da0)
6 params, 11 slots, 0 upvalues, 6 locals, 1 constant, 0 functions
	1	[70]	GETGLOBAL	6 -1	; display_half
	2	[70]	MOVE     	7 0
	3	[70]	MOVE     	8 2
	4	[70]	MOVE     	9 4
	5	[70]	MOVE     	10 5
	6	[70]	CALL     	6 5 1
	7	[71]	GETGLOBAL	6 -1	; display_half
	8	[71]	MOVE     	7 1
	9	[71]	MOVE     	8 3
	10	[71]	MOVE     	9 4
	11	[71]	MOVE     	10 5
	12	[71]	CALL     	6 5 1
	13	[72]	RETURN   	0 1

function <./memory_puzzle.lua:74,83> (47 instructions, 188 bytes at 0x7f94c7408bf0)
0 params, 7 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[75]	NEWTABLE 	0 5 0
	2	[75]	LOADK    	1 -2	; "sand"
	3	[75]	LOADK    	2 -3	; "sunshine"
	4	[75]	LOADK    	3 -4	; "Freebirds"
	5	[75]	LOADK    	4 -5	; "surfing"
	6	[75]	LOADK    	5 -6	; "DP"
	7	[75]	SETLIST  	0 5 1	; 1
	8	[75]	SETGLOBAL	0 -1	; words_1
	9	[76]	GETGLOBAL	0 -7	; shuffle
	10	[76]	GETGLOBAL	1 -1	; words_1
	11	[76]	CALL     	0 2 1
	12	[77]	NEWTABLE 	0 5 0
	13	[77]	LOADK    	1 -2	; "sand"
	14	[77]	LOADK    	2 -3	; "sunshine"
	15	[77]	LOADK    	3 -4	; "Freebirds"
	16	[77]	LOADK    	4 -5	; "surfing"
	17	[77]	LOADK    	5 -6	; "DP"
	18	[77]	SETLIST  	0 5 1	; 1
	19	[77]	SETGLOBAL	0 -8	; words_2
	20	[78]	GETGLOBAL	0 -7	; shuffle
	21	[78]	GETGLOBAL	1 -8	; words_2
	22	[78]	CALL     	0 2 1
	23	[79]	GETGLOBAL	0 -10	; generate_is_flipped
	24	[79]	GETGLOBAL	1 -1	; words_1
	25	[79]	LEN      	1 1
	26	[79]	CALL     	0 2 2
	27	[79]	SETGLOBAL	0 -9	; is_flipped_top
	28	[80]	GETGLOBAL	0 -10	; generate_is_flipped
	29	[80]	GETGLOBAL	1 -1	; words_1
	30	[80]	LEN      	1 1
	31	[80]	CALL     	0 2 2
	32	[80]	SETGLOBAL	0 -11	; is_flipped_bottom
	33	[81]	GETGLOBAL	0 -12	; display
	34	[81]	GETGLOBAL	1 -1	; words_1
	35	[81]	GETGLOBAL	2 -8	; words_2
	36	[81]	GETGLOBAL	3 -9	; is_flipped_top
	37	[81]	GETGLOBAL	4 -11	; is_flipped_bottom
	38	[81]	LOADBOOL 	5 0 0
	39	[81]	LOADK    	6 -13	; 0
	40	[81]	CALL     	0 7 1
	41	[82]	LOADK    	0 -13	; 0
	42	[82]	GETGLOBAL	1 -1	; words_1
	43	[82]	GETGLOBAL	2 -8	; words_2
	44	[82]	GETGLOBAL	3 -9	; is_flipped_top
	45	[82]	GETGLOBAL	4 -11	; is_flipped_bottom
	46	[82]	RETURN   	0 6
	47	[83]	RETURN   	0 1

function <./memory_puzzle.lua:85,98> (35 instructions, 140 bytes at 0x7f94c7409660)
7 params, 14 slots, 0 upvalues, 7 locals, 8 constants, 0 functions
	1	[86]	SETTABLE 	4 0 -1	; - 1
	2	[87]	SETTABLE 	5 1 -1	; - 1
	3	[88]	GETGLOBAL	7 -2	; display
	4	[88]	MOVE     	8 2
	5	[88]	MOVE     	9 3
	6	[88]	MOVE     	10 4
	7	[88]	MOVE     	11 5
	8	[88]	LOADBOOL 	12 1 0
	9	[88]	LOADK    	13 -3	; 2
	10	[88]	CALL     	7 7 1
	11	[89]	GETTABLE 	7 2 0
	12	[89]	GETTABLE 	8 3 1
	13	[89]	EQ       	1 7 8
	14	[89]	JMP      	3	; to 18
	15	[90]	SETTABLE 	4 0 -4	; - 0
	16	[91]	SETTABLE 	5 1 -4	; - 0
	17	[91]	JMP      	1	; to 19
	18	[93]	ADD      	6 6 -1	; - 1
	19	[95]	GETGLOBAL	7 -2	; display
	20	[95]	MOVE     	8 2
	21	[95]	MOVE     	9 3
	22	[95]	MOVE     	10 4
	23	[95]	MOVE     	11 5
	24	[95]	LOADBOOL 	12 0 0
	25	[95]	LOADK    	13 -4	; 0
	26	[95]	CALL     	7 7 1
	27	[96]	GETGLOBAL	7 -5	; io
	28	[96]	GETTABLE 	7 7 -6	; "write"
	29	[96]	LOADK    	8 -7	; "Number of correct guesses: "
	30	[96]	MOVE     	9 6
	31	[96]	LOADK    	10 -8	; "\n"
	32	[96]	CONCAT   	8 8 10
	33	[96]	CALL     	7 2 1
	34	[97]	RETURN   	6 2
	35	[98]	RETURN   	0 1
