-- BYTECODE -- optmath_spec.lua:4-7
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "commonrequire"
0003    CALL     0   1   2
0004    GGET     0   0      ; "require"
0005    KSTR     1   2      ; "optmath"
0006    CALL     0   2   2
0007    USETV    0   0      ; Math
0008    RET0     0   1

-- BYTECODE -- optmath_spec.lua:10-12
0001    GGET     0   0      ; "assert"
0002    TGETS    0   0   1  ; "is_nil"
0003    UGET     1   0      ; Math
0004    TGETS    1   1   2  ; "tmin"
0005    TNEW     2   0
0006    CALL     1   0   2
0007    CALLM    0   1   0
0008    RET0     0   1

-- BYTECODE -- optmath_spec.lua:13-15
0001    GGET     0   0      ; "assert"
0002    TGETS    0   0   1  ; "are"
0003    TGETS    0   0   2  ; "same"
0004    KSHORT   1   5
0005    UGET     2   0      ; Math
0006    TGETS    2   2   3  ; "tmin"
0007    TDUP     3   4
0008    CALL     2   0   2
0009    CALLM    0   1   1
0010    RET0     0   1

-- BYTECODE -- optmath_spec.lua:18-20
0001    GGET     2   0      ; "tonumber"
0002    MOV      3   0
0003    CALL     2   2   2
0004    GGET     3   0      ; "tonumber"
0005    MOV      4   1
0006    CALL     3   2   2
0007    ISLT     3   2
0008    JMP      2 => 0011
0009    KPRI     2   1
0010    JMP      3 => 0012
0011 => KPRI     2   2
0012 => RET1     2   2

-- BYTECODE -- optmath_spec.lua:16-21
0001    GGET     0   0      ; "assert"
0002    TGETS    0   0   1  ; "are"
0003    TGETS    0   0   2  ; "same"
0004    KSHORT   1   5
0005    UGET     2   0      ; Math
0006    TGETS    2   2   3  ; "tmin"
0007    TDUP     3   4
0008    FNEW     4   5      ; optmath_spec.lua:18
0009    CALL     2   0   3
0010    CALLM    0   1   1
0011    RET0     0   1

-- BYTECODE -- optmath_spec.lua:9-22
0001    GGET     0   0      ; "it"
0002    KSTR     1   1      ; "should return nil on empty table"
0003    FNEW     2   2      ; optmath_spec.lua:10
0004    CALL     0   1   3
0005    GGET     0   0      ; "it"
0006    KSTR     1   3      ; "should get minimum element in table"
0007    FNEW     2   4      ; optmath_spec.lua:13
0008    CALL     0   1   3
0009    GGET     0   0      ; "it"
0010    KSTR     1   5      ; "should get minimum element in table usin"~
0011    FNEW     2   6      ; optmath_spec.lua:16
0012    CALL     0   1   3
0013    RET0     0   1

-- BYTECODE -- optmath_spec.lua:24-26
0001    GGET     0   0      ; "assert"
0002    TGETS    0   0   1  ; "is_nil"
0003    UGET     1   0      ; Math
0004    TGETS    1   1   2  ; "tmin"
0005    TNEW     2   0
0006    CALL     1   0   2
0007    CALLM    0   1   0
0008    RET0     0   1

-- BYTECODE -- optmath_spec.lua:27-29
0001    GGET     0   0      ; "assert"
0002    TGETS    0   0   1  ; "are"
0003    TGETS    0   0   2  ; "same"
0004    KSHORT   1   4
0005    UGET     2   0      ; Math
0006    TGETS    2   2   3  ; "tmax"
0007    TDUP     3   4
0008    CALL     2   0   2
0009    CALLM    0   1   1
0010    RET0     0   1

-- BYTECODE -- optmath_spec.lua:32-34
0001    GGET     2   0      ; "tonumber"
0002    MOV      3   0
0003    CALL     2   2   2
0004    GGET     3   0      ; "tonumber"
0005    MOV      4   1
0006    CALL     3   2   2
0007    ISLT     2   3
0008    JMP      2 => 0011
0009    KPRI     2   1
0010    JMP      3 => 0012
0011 => KPRI     2   2
0012 => RET1     2   2

-- BYTECODE -- optmath_spec.lua:30-35
0001    GGET     0   0      ; "assert"
0002    TGETS    0   0   1  ; "are"
0003    TGETS    0   0   2  ; "same"
0004    KSHORT   1   4
0005    UGET     2   0      ; Math
0006    TGETS    2   2   3  ; "tmax"
0007    TDUP     3   4
0008    FNEW     4   5      ; optmath_spec.lua:32
0009    CALL     2   0   3
0010    CALLM    0   1   1
0011    RET0     0   1

-- BYTECODE -- optmath_spec.lua:23-36
0001    GGET     0   0      ; "it"
0002    KSTR     1   1      ; "should return nil on empty table"
0003    FNEW     2   2      ; optmath_spec.lua:24
0004    CALL     0   1   3
0005    GGET     0   0      ; "it"
0006    KSTR     1   3      ; "should get maximum element in table"
0007    FNEW     2   4      ; optmath_spec.lua:27
0008    CALL     0   1   3
0009    GGET     0   0      ; "it"
0010    KSTR     1   5      ; "should get maximum element in table usin"~
0011    FNEW     2   6      ; optmath_spec.lua:30
0012    CALL     0   1   3
0013    RET0     0   1

-- BYTECODE -- optmath_spec.lua:37-43
0001    GGET     0   0      ; "assert"
0002    TGETS    0   0   1  ; "are"
0003    TGETS    0   0   2  ; "same"
0004    KSHORT   1   2
0005    UGET     2   0      ; Math
0006    TGETS    2   2   3  ; "roundAwayFromZero"
0007    KNUM     3   0      ; 1.5
0008    CALL     2   0   2
0009    CALLM    0   1   1
0010    GGET     0   0      ; "assert"
0011    TGETS    0   0   1  ; "are"
0012    TGETS    0   0   2  ; "same"
0013    KSHORT   1   2
0014    UGET     2   0      ; Math
0015    TGETS    2   2   3  ; "roundAwayFromZero"
0016    KNUM     3   1      ; 1.4
0017    CALL     2   0   2
0018    CALLM    0   1   1
0019    GGET     0   0      ; "assert"
0020    TGETS    0   0   1  ; "are"
0021    TGETS    0   0   2  ; "same"
0022    KSHORT   1  -2
0023    UGET     2   0      ; Math
0024    TGETS    2   2   3  ; "roundAwayFromZero"
0025    KNUM     3   2      ; -1.4
0026    CALL     2   0   2
0027    CALLM    0   1   1
0028    GGET     0   0      ; "assert"
0029    TGETS    0   0   1  ; "are"
0030    TGETS    0   0   2  ; "same"
0031    KSHORT   1   1
0032    UGET     2   0      ; Math
0033    TGETS    2   2   3  ; "roundAwayFromZero"
0034    KNUM     3   3      ; 0.2
0035    CALL     2   0   2
0036    CALLM    0   1   1
0037    GGET     0   0      ; "assert"
0038    TGETS    0   0   1  ; "are"
0039    TGETS    0   0   2  ; "same"
0040    KSHORT   1  -1
0041    UGET     2   0      ; Math
0042    TGETS    2   2   3  ; "roundAwayFromZero"
0043    KNUM     3   4      ; -0.2
0044    CALL     2   0   2
0045    CALLM    0   1   1
0046    RET0     0   1

-- BYTECODE -- optmath_spec.lua:44-50
0001    GGET     0   0      ; "assert"
0002    TGETS    0   0   1  ; "are"
0003    TGETS    0   0   2  ; "same"
0004    KSHORT   1   2
0005    UGET     2   0      ; Math
0006    TGETS    2   2   3  ; "round"
0007    KNUM     3   0      ; 1.5
0008    CALL     2   0   2
0009    CALLM    0   1   1
0010    GGET     0   0      ; "assert"
0011    TGETS    0   0   1  ; "are"
0012    TGETS    0   0   2  ; "same"
0013    KSHORT   1   1
0014    UGET     2   0      ; Math
0015    TGETS    2   2   3  ; "round"
0016    KNUM     3   1      ; 1.4
0017    CALL     2   0   2
0018    CALLM    0   1   1
0019    GGET     0   0      ; "assert"
0020    TGETS    0   0   1  ; "are"
0021    TGETS    0   0   2  ; "same"
0022    KSHORT   1  -1
0023    UGET     2   0      ; Math
0024    TGETS    2   2   3  ; "round"
0025    KNUM     3   2      ; -1.4
0026    CALL     2   0   2
0027    CALLM    0   1   1
0028    GGET     0   0      ; "assert"
0029    TGETS    0   0   1  ; "are"
0030    TGETS    0   0   2  ; "same"
0031    KSHORT   1   0
0032    UGET     2   0      ; Math
0033    TGETS    2   2   3  ; "round"
0034    KNUM     3   3      ; 0.2
0035    CALL     2   0   2
0036    CALLM    0   1   1
0037    GGET     0   0      ; "assert"
0038    TGETS    0   0   1  ; "are"
0039    TGETS    0   0   2  ; "same"
0040    KSHORT   1   0
0041    UGET     2   0      ; Math
0042    TGETS    2   2   3  ; "round"
0043    KNUM     3   4      ; -0.2
0044    CALL     2   0   2
0045    CALLM    0   1   1
0046    RET0     0   1

-- BYTECODE -- optmath_spec.lua:51-59
0001    GGET     0   0      ; "assert"
0002    TGETS    0   0   1  ; "are"
0003    TGETS    0   0   2  ; "same"
0004    KSTR     1   3      ; "odd"
0005    UGET     2   0      ; Math
0006    TGETS    2   2   4  ; "oddEven"
0007    KSHORT   3   1
0008    CALL     2   0   2
0009    CALLM    0   1   1
0010    GGET     0   0      ; "assert"
0011    TGETS    0   0   1  ; "are"
0012    TGETS    0   0   2  ; "same"
0013    KSTR     1   5      ; "even"
0014    UGET     2   0      ; Math
0015    TGETS    2   2   4  ; "oddEven"
0016    KSHORT   3   2
0017    CALL     2   0   2
0018    CALLM    0   1   1
0019    GGET     0   0      ; "assert"
0020    TGETS    0   0   1  ; "are"
0021    TGETS    0   0   2  ; "same"
0022    KSTR     1   3      ; "odd"
0023    UGET     2   0      ; Math
0024    TGETS    2   2   4  ; "oddEven"
0025    KSHORT   3   3
0026    CALL     2   0   2
0027    CALLM    0   1   1
0028    GGET     0   0      ; "assert"
0029    TGETS    0   0   1  ; "are"
0030    TGETS    0   0   2  ; "same"
0031    KSTR     1   5      ; "even"
0032    UGET     2   0      ; Math
0033    TGETS    2   2   4  ; "oddEven"
0034    KSHORT   3   4
0035    CALL     2   0   2
0036    CALLM    0   1   1
0037    GGET     0   0      ; "assert"
0038    TGETS    0   0   1  ; "are"
0039    TGETS    0   0   2  ; "same"
0040    KSTR     1   5      ; "even"
0041    UGET     2   0      ; Math
0042    TGETS    2   2   4  ; "oddEven"
0043    KSHORT   3  -4
0044    CALL     2   0   2
0045    CALLM    0   1   1
0046    GGET     0   0      ; "assert"
0047    TGETS    0   0   1  ; "are"
0048    TGETS    0   0   2  ; "same"
0049    KSTR     1   3      ; "odd"
0050    UGET     2   0      ; Math
0051    TGETS    2   2   4  ; "oddEven"
0052    KSHORT   3  -3
0053    CALL     2   0   2
0054    CALLM    0   1   1
0055    GGET     0   0      ; "assert"
0056    TGETS    0   0   1  ; "are"
0057    TGETS    0   0   2  ; "same"
0058    KSTR     1   5      ; "even"
0059    UGET     2   0      ; Math
0060    TGETS    2   2   4  ; "oddEven"
0061    KSHORT   3   0
0062    CALL     2   0   2
0063    CALLM    0   1   1
0064    RET0     0   1

-- BYTECODE -- optmath_spec.lua:1-61
0001    KPRI     0   0
0002    GGET     1   0      ; "setup"
0003    FNEW     2   1      ; optmath_spec.lua:4
0004    CALL     1   1   2
0005    GGET     1   2      ; "describe"
0006    KSTR     2   3      ; "tmin"
0007    FNEW     3   4      ; optmath_spec.lua:9
0008    CALL     1   1   3
0009    GGET     1   2      ; "describe"
0010    KSTR     2   5      ; "tmax"
0011    FNEW     3   6      ; optmath_spec.lua:23
0012    CALL     1   1   3
0013    GGET     1   7      ; "it"
0014    KSTR     2   8      ; "should round away from zero"
0015    FNEW     3   9      ; optmath_spec.lua:37
0016    CALL     1   1   3
0017    GGET     1   7      ; "it"
0018    KSTR     2  10      ; "should round"
0019    FNEW     3  11      ; optmath_spec.lua:44
0020    CALL     1   1   3
0021    GGET     1   7      ; "it"
0022    KSTR     2  12      ; "should determine odd or even"
0023    FNEW     3  13      ; optmath_spec.lua:51
0024    CALL     1   1   3
0025    UCLO     0 => 0026
0026 => RET0     0   1

-- BYTECODE -- optmath_spec.lua:0-62
0001    GGET     0   0      ; "describe"
0002    KSTR     1   1      ; "Math module"
0003    FNEW     2   2      ; optmath_spec.lua:1
0004    CALL     0   1   3
0005    RET0     0   1

