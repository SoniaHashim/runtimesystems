
main <./frontend/device/input.lua:0,0> (500 instructions, 2000 bytes at 0x7f9f694068c0)
0+ params, 101 slots, 0 upvalues, 49 locals, 162 constants, 37 functions
	1	[5]	GETGLOBAL	0 -1	; require
	2	[5]	LOADK    	1 -2	; "datastorage"
	3	[5]	CALL     	0 2 2
	4	[6]	GETGLOBAL	1 -1	; require
	5	[6]	LOADK    	2 -3	; "dbg"
	6	[6]	CALL     	1 2 2
	7	[7]	GETGLOBAL	2 -1	; require
	8	[7]	LOADK    	3 -4	; "ui/event"
	9	[7]	CALL     	2 2 2
	10	[8]	GETGLOBAL	3 -1	; require
	11	[8]	LOADK    	4 -5	; "device/gesturedetector"
	12	[8]	CALL     	3 2 2
	13	[9]	GETGLOBAL	4 -1	; require
	14	[9]	LOADK    	5 -6	; "device/key"
	15	[9]	CALL     	4 2 2
	16	[10]	GETGLOBAL	5 -1	; require
	17	[10]	LOADK    	6 -7	; "ui/timeval"
	18	[10]	CALL     	5 2 2
	19	[11]	GETGLOBAL	6 -1	; require
	20	[11]	LOADK    	7 -8	; "ffi/framebuffer"
	21	[11]	CALL     	6 2 2
	22	[12]	GETGLOBAL	7 -1	; require
	23	[12]	LOADK    	8 -9	; "ffi/input"
	24	[12]	CALL     	7 2 2
	25	[13]	GETGLOBAL	8 -1	; require
	26	[13]	LOADK    	9 -10	; "logger"
	27	[13]	CALL     	8 2 2
	28	[14]	GETGLOBAL	9 -1	; require
	29	[14]	LOADK    	10 -11	; "gettext"
	30	[14]	CALL     	9 2 2
	31	[19]	LOADK    	10 -12	; 0
	32	[20]	LOADK    	11 -13	; 1
	33	[21]	LOADK    	12 -14	; 3
	34	[22]	LOADK    	13 -15	; 4
	35	[24]	LOADK    	14 -16	; 53
	36	[27]	LOADK    	15 -13	; 1
	37	[28]	LOADK    	16 -17	; 2
	38	[29]	LOADK    	17 -12	; 0
	39	[32]	LOADK    	18 -12	; 0
	40	[33]	LOADK    	19 -13	; 1
	41	[34]	LOADK    	20 -17	; 2
	42	[37]	LOADK    	21 -12	; 0
	43	[38]	LOADK    	22 -13	; 1
	44	[39]	LOADK    	23 -18	; 24
	45	[42]	LOADK    	24 -19	; 47
	46	[43]	LOADK    	25 -20	; 48
	47	[44]	LOADK    	26 -21	; 50
	48	[46]	LOADK    	27 -16	; 53
	49	[47]	LOADK    	28 -22	; 54
	50	[48]	LOADK    	29 -23	; 57
	51	[49]	LOADK    	30 -24	; 58
	52	[54]	LOADK    	31 -25	; -24
	53	[55]	LOADK    	32 -26	; 15
	54	[56]	LOADK    	33 -27	; 17
	55	[57]	LOADK    	34 -28	; 19
	56	[58]	LOADK    	35 -29	; 16
	57	[59]	LOADK    	36 -30	; 18
	58	[60]	LOADK    	37 -31	; 20
	59	[61]	LOADK    	38 -32	; 21
	60	[62]	LOADK    	39 -33	; 22
	61	[65]	LOADK    	40 -14	; 3
	62	[68]	LOADK    	41 -34	; 23
	63	[69]	LOADK    	42 -18	; 24
	64	[70]	LOADK    	43 -35	; 25
	65	[71]	LOADK    	44 -36	; 26
	66	[73]	LOADK    	45 -37	; 27
	67	[74]	LOADK    	46 -38	; 28
	68	[78]	LOADNIL  	47 47
	69	[80]	NEWTABLE 	48 0 15
	70	[82]	NEWTABLE 	49 0 0
	71	[82]	SETTABLE 	48 -39 49	; "event_map" -
	72	[84]	NEWTABLE 	49 0 0
	73	[84]	SETTABLE 	48 -40 49	; "event_map_adapter" -
	74	[86]	NEWTABLE 	49 0 8
	75	[87]	NEWTABLE 	50 4 0
	76	[87]	LOADK    	51 -43	; "Up"
	77	[87]	LOADK    	52 -44	; "Down"
	78	[87]	LOADK    	53 -45	; "Left"
	79	[87]	LOADK    	54 -46	; "Right"
	80	[87]	SETLIST  	50 4 1	; 1
	81	[87]	SETTABLE 	49 -42 50	; "Cursor" -
	82	[88]	NEWTABLE 	50 2 0
	83	[88]	LOADK    	51 -48	; "RPgFwd"
	84	[88]	LOADK    	52 -49	; "LPgFwd"
	85	[88]	SETLIST  	50 2 1	; 1
	86	[88]	SETTABLE 	49 -47 50	; "PgFwd" -
	87	[89]	NEWTABLE 	50 2 0
	88	[89]	LOADK    	51 -51	; "RPgBack"
	89	[89]	LOADK    	52 -52	; "LPgBack"
	90	[89]	SETLIST  	50 2 1	; 1
	91	[89]	SETTABLE 	49 -50 50	; "PgBack" -
	92	[90]	NEWTABLE 	50 21 0
	93	[91]	LOADK    	51 -54	; "A"
	94	[91]	LOADK    	52 -55	; "B"
	95	[91]	LOADK    	53 -56	; "C"
	96	[91]	LOADK    	54 -57	; "D"
	97	[91]	LOADK    	55 -58	; "E"
	98	[91]	LOADK    	56 -59	; "F"
	99	[91]	LOADK    	57 -60	; "G"
	100	[91]	LOADK    	58 -61	; "H"
	101	[91]	LOADK    	59 -62	; "I"
	102	[91]	LOADK    	60 -63	; "J"
	103	[91]	LOADK    	61 -64	; "K"
	104	[91]	LOADK    	62 -65	; "L"
	105	[91]	LOADK    	63 -66	; "M"
	106	[92]	LOADK    	64 -67	; "N"
	107	[92]	LOADK    	65 -68	; "O"
	108	[92]	LOADK    	66 -69	; "P"
	109	[92]	LOADK    	67 -70	; "Q"
	110	[92]	LOADK    	68 -71	; "R"
	111	[92]	LOADK    	69 -72	; "S"
	112	[92]	LOADK    	70 -73	; "T"
	113	[92]	LOADK    	71 -74	; "U"
	114	[92]	LOADK    	72 -75	; "V"
	115	[92]	LOADK    	73 -76	; "W"
	116	[92]	LOADK    	74 -77	; "X"
	117	[92]	LOADK    	75 -78	; "Y"
	118	[93]	LOADK    	76 -79	; "Z"
	119	[93]	SETLIST  	50 26 1	; 1
	120	[93]	SETTABLE 	49 -53 50	; "Alphabet" -
	121	[94]	NEWTABLE 	50 25 0
	122	[95]	LOADK    	51 -81	; "0"
	123	[95]	LOADK    	52 -82	; "1"
	124	[95]	LOADK    	53 -83	; "2"
	125	[95]	LOADK    	54 -84	; "3"
	126	[95]	LOADK    	55 -85	; "4"
	127	[95]	LOADK    	56 -86	; "5"
	128	[95]	LOADK    	57 -87	; "6"
	129	[95]	LOADK    	58 -88	; "7"
	130	[95]	LOADK    	59 -89	; "8"
	131	[95]	LOADK    	60 -90	; "9"
	132	[96]	LOADK    	61 -54	; "A"
	133	[96]	LOADK    	62 -55	; "B"
	134	[96]	LOADK    	63 -56	; "C"
	135	[96]	LOADK    	64 -57	; "D"
	136	[96]	LOADK    	65 -58	; "E"
	137	[96]	LOADK    	66 -59	; "F"
	138	[96]	LOADK    	67 -60	; "G"
	139	[96]	LOADK    	68 -61	; "H"
	140	[96]	LOADK    	69 -62	; "I"
	141	[96]	LOADK    	70 -63	; "J"
	142	[96]	LOADK    	71 -64	; "K"
	143	[96]	LOADK    	72 -65	; "L"
	144	[96]	LOADK    	73 -66	; "M"
	145	[97]	LOADK    	74 -67	; "N"
	146	[97]	LOADK    	75 -68	; "O"
	147	[97]	LOADK    	76 -69	; "P"
	148	[97]	LOADK    	77 -70	; "Q"
	149	[97]	LOADK    	78 -71	; "R"
	150	[97]	LOADK    	79 -72	; "S"
	151	[97]	LOADK    	80 -73	; "T"
	152	[97]	LOADK    	81 -74	; "U"
	153	[97]	LOADK    	82 -75	; "V"
	154	[97]	LOADK    	83 -76	; "W"
	155	[97]	LOADK    	84 -77	; "X"
	156	[97]	LOADK    	85 -78	; "Y"
	157	[98]	LOADK    	86 -79	; "Z"
	158	[98]	SETLIST  	50 36 1	; 1
	159	[98]	SETTABLE 	49 -80 50	; "AlphaNumeric" -
	160	[99]	NEWTABLE 	50 10 0
	161	[100]	LOADK    	51 -81	; "0"
	162	[100]	LOADK    	52 -82	; "1"
	163	[100]	LOADK    	53 -83	; "2"
	164	[100]	LOADK    	54 -84	; "3"
	165	[100]	LOADK    	55 -85	; "4"
	166	[100]	LOADK    	56 -86	; "5"
	167	[100]	LOADK    	57 -87	; "6"
	168	[100]	LOADK    	58 -88	; "7"
	169	[100]	LOADK    	59 -89	; "8"
	170	[101]	LOADK    	60 -90	; "9"
	171	[101]	SETLIST  	50 10 1	; 1
	172	[101]	SETTABLE 	49 -91 50	; "Numeric" -
	173	[102]	NEWTABLE 	50 26 0
	174	[103]	LOADK    	51 -93	; " "
	175	[103]	LOADK    	52 -94	; "."
	176	[103]	LOADK    	53 -95	; "/"
	177	[104]	LOADK    	54 -81	; "0"
	178	[104]	LOADK    	55 -82	; "1"
	179	[104]	LOADK    	56 -83	; "2"
	180	[104]	LOADK    	57 -84	; "3"
	181	[104]	LOADK    	58 -85	; "4"
	182	[104]	LOADK    	59 -86	; "5"
	183	[104]	LOADK    	60 -87	; "6"
	184	[104]	LOADK    	61 -88	; "7"
	185	[104]	LOADK    	62 -89	; "8"
	186	[104]	LOADK    	63 -90	; "9"
	187	[105]	LOADK    	64 -54	; "A"
	188	[105]	LOADK    	65 -55	; "B"
	189	[105]	LOADK    	66 -56	; "C"
	190	[105]	LOADK    	67 -57	; "D"
	191	[105]	LOADK    	68 -58	; "E"
	192	[105]	LOADK    	69 -59	; "F"
	193	[105]	LOADK    	70 -60	; "G"
	194	[105]	LOADK    	71 -61	; "H"
	195	[105]	LOADK    	72 -62	; "I"
	196	[105]	LOADK    	73 -63	; "J"
	197	[105]	LOADK    	74 -64	; "K"
	198	[105]	LOADK    	75 -65	; "L"
	199	[105]	LOADK    	76 -66	; "M"
	200	[106]	LOADK    	77 -67	; "N"
	201	[106]	LOADK    	78 -68	; "O"
	202	[106]	LOADK    	79 -69	; "P"
	203	[106]	LOADK    	80 -70	; "Q"
	204	[106]	LOADK    	81 -71	; "R"
	205	[106]	LOADK    	82 -72	; "S"
	206	[106]	LOADK    	83 -73	; "T"
	207	[106]	LOADK    	84 -74	; "U"
	208	[106]	LOADK    	85 -75	; "V"
	209	[106]	LOADK    	86 -76	; "W"
	210	[106]	LOADK    	87 -77	; "X"
	211	[106]	LOADK    	88 -78	; "Y"
	212	[107]	LOADK    	89 -79	; "Z"
	213	[107]	SETLIST  	50 39 1	; 1
	214	[107]	SETTABLE 	49 -92 50	; "Text" -
	215	[108]	NEWTABLE 	50 30 0
	216	[109]	LOADK    	51 -93	; " "
	217	[109]	LOADK    	52 -94	; "."
	218	[109]	LOADK    	53 -95	; "/"
	219	[110]	LOADK    	54 -81	; "0"
	220	[110]	LOADK    	55 -82	; "1"
	221	[110]	LOADK    	56 -83	; "2"
	222	[110]	LOADK    	57 -84	; "3"
	223	[110]	LOADK    	58 -85	; "4"
	224	[110]	LOADK    	59 -86	; "5"
	225	[110]	LOADK    	60 -87	; "6"
	226	[110]	LOADK    	61 -88	; "7"
	227	[110]	LOADK    	62 -89	; "8"
	228	[110]	LOADK    	63 -90	; "9"
	229	[111]	LOADK    	64 -54	; "A"
	230	[111]	LOADK    	65 -55	; "B"
	231	[111]	LOADK    	66 -56	; "C"
	232	[111]	LOADK    	67 -57	; "D"
	233	[111]	LOADK    	68 -58	; "E"
	234	[111]	LOADK    	69 -59	; "F"
	235	[111]	LOADK    	70 -60	; "G"
	236	[111]	LOADK    	71 -61	; "H"
	237	[111]	LOADK    	72 -62	; "I"
	238	[111]	LOADK    	73 -63	; "J"
	239	[111]	LOADK    	74 -64	; "K"
	240	[111]	LOADK    	75 -65	; "L"
	241	[111]	LOADK    	76 -66	; "M"
	242	[112]	LOADK    	77 -67	; "N"
	243	[112]	LOADK    	78 -68	; "O"
	244	[112]	LOADK    	79 -69	; "P"
	245	[112]	LOADK    	80 -70	; "Q"
	246	[112]	LOADK    	81 -71	; "R"
	247	[112]	LOADK    	82 -72	; "S"
	248	[112]	LOADK    	83 -73	; "T"
	249	[112]	LOADK    	84 -74	; "U"
	250	[112]	LOADK    	85 -75	; "V"
	251	[112]	LOADK    	86 -76	; "W"
	252	[112]	LOADK    	87 -77	; "X"
	253	[112]	LOADK    	88 -78	; "Y"
	254	[112]	LOADK    	89 -79	; "Z"
	255	[113]	LOADK    	90 -43	; "Up"
	256	[113]	LOADK    	91 -44	; "Down"
	257	[113]	LOADK    	92 -45	; "Left"
	258	[113]	LOADK    	93 -46	; "Right"
	259	[113]	LOADK    	94 -97	; "Press"
	260	[113]	LOADK    	95 -98	; "Backspace"
	261	[113]	LOADK    	96 -99	; "End"
	262	[114]	LOADK    	97 -100	; "Back"
	263	[114]	LOADK    	98 -101	; "Sym"
	264	[114]	LOADK    	99 -102	; "AA"
	265	[114]	LOADK    	100 -103	; "Menu"
	266	[114]	SETLIST  	50 50 1	; 1
	267	[114]	LOADK    	51 -104	; "Home"
	268	[114]	LOADK    	52 -105	; "Del"
	269	[115]	LOADK    	53 -52	; "LPgBack"
	270	[115]	LOADK    	54 -51	; "RPgBack"
	271	[115]	LOADK    	55 -49	; "LPgFwd"
	272	[116]	LOADK    	56 -48	; "RPgFwd"
	273	[116]	SETLIST  	50 6 2	; 2
	274	[116]	SETTABLE 	49 -96 50	; "Any" -
	275	[117]	SETTABLE 	48 -41 49	; "group" -
	276	[120]	NEWTABLE 	49 0 4
	277	[121]	GETTABLE 	50 6 -107	; "ORIENTATION_PORTRAIT"
	278	[121]	NEWTABLE 	51 0 0
	279	[121]	SETTABLE 	49 50 51
	280	[122]	GETTABLE 	50 6 -108	; "ORIENTATION_LANDSCAPE"
	281	[122]	NEWTABLE 	51 0 8
	282	[122]	SETTABLE 	51 -43 -46	; "Up" "Right"
	283	[122]	SETTABLE 	51 -46 -44	; "Right" "Down"
	284	[122]	SETTABLE 	51 -44 -45	; "Down" "Left"
	285	[122]	SETTABLE 	51 -45 -43	; "Left" "Up"
	286	[122]	SETTABLE 	51 -52 -49	; "LPgBack" "LPgFwd"
	287	[122]	SETTABLE 	51 -49 -52	; "LPgFwd" "LPgBack"
	288	[122]	SETTABLE 	51 -51 -48	; "RPgBack" "RPgFwd"
	289	[122]	SETTABLE 	51 -48 -51	; "RPgFwd" "RPgBack"
	290	[122]	SETTABLE 	49 50 51
	291	[123]	GETTABLE 	50 6 -109	; "ORIENTATION_PORTRAIT_ROTATED"
	292	[123]	NEWTABLE 	51 0 8
	293	[123]	SETTABLE 	51 -43 -44	; "Up" "Down"
	294	[123]	SETTABLE 	51 -46 -45	; "Right" "Left"
	295	[123]	SETTABLE 	51 -44 -43	; "Down" "Up"
	296	[123]	SETTABLE 	51 -45 -46	; "Left" "Right"
	297	[123]	SETTABLE 	51 -49 -52	; "LPgFwd" "LPgBack"
	298	[123]	SETTABLE 	51 -52 -49	; "LPgBack" "LPgFwd"
	299	[123]	SETTABLE 	51 -48 -51	; "RPgFwd" "RPgBack"
	300	[123]	SETTABLE 	51 -51 -48	; "RPgBack" "RPgFwd"
	301	[123]	SETTABLE 	49 50 51
	302	[124]	GETTABLE 	50 6 -110	; "ORIENTATION_LANDSCAPE_ROTATED"
	303	[124]	NEWTABLE 	51 0 4
	304	[124]	SETTABLE 	51 -43 -45	; "Up" "Left"
	305	[124]	SETTABLE 	51 -46 -43	; "Right" "Up"
	306	[124]	SETTABLE 	51 -44 -46	; "Down" "Right"
	307	[124]	SETTABLE 	51 -45 -44	; "Left" "Down"
	308	[124]	SETTABLE 	49 50 51
	309	[125]	SETTABLE 	48 -106 49	; "rotation_map" -
	310	[127]	NEWTABLE 	49 0 0
	311	[127]	SETTABLE 	48 -111 49	; "timer_callbacks" -
	312	[128]	SETTABLE 	48 -112 -113	; "disable_double_tap" true
	313	[131]	NEWTABLE 	49 0 3
	314	[132]	SETTABLE 	49 -115 -116	; "Alt" false
	315	[133]	SETTABLE 	49 -117 -116	; "Ctrl" false
	316	[134]	SETTABLE 	49 -118 -116	; "Shift" false
	317	[135]	SETTABLE 	48 -114 49	; "modifiers" -
	318	[138]	SETTABLE 	48 -119 -12	; "repeat_count" 0
	319	[141]	SETTABLE 	48 -120 -12	; "cur_slot" 0
	320	[142]	NEWTABLE 	49 0 0
	321	[142]	SETTABLE 	48 -121 49	; "MTSlots" -
	322	[143]	NEWTABLE 	49 0 1
	323	[144]	NEWTABLE 	50 0 1
	324	[145]	SETTABLE 	50 -123 -12	; "slot" 0
	325	[146]	SETTABLE 	49 -12 50	; 0 -
	326	[147]	SETTABLE 	48 -122 49	; "ev_slots" -
	327	[148]	SETTABLE 	48 -124 -125	; "gesture_detector" nil
	328	[153]	CLOSURE  	49 0	; 0x7f9f694080f0
	329	[153]	MOVE     	0 47
	330	[153]	SETTABLE 	48 -126 49	; "hasClipboardText" -
	331	[156]	CLOSURE  	49 1	; 0x7f9f69408460
	332	[156]	MOVE     	0 47
	333	[156]	SETTABLE 	48 -127 49	; "getClipboardText" -
	334	[159]	CLOSURE  	49 2	; 0x7f9f69408640
	335	[159]	MOVE     	0 47
	336	[159]	SETTABLE 	48 -128 49	; "setClipboardText" -
	337	[168]	CLOSURE  	49 3	; 0x7f9f69408830
	338	[162]	SETTABLE 	48 -129 49	; "new" -
	339	[194]	CLOSURE  	49 4	; 0x7f9f69408960
	340	[194]	MOVE     	0 3
	341	[194]	MOVE     	0 0
	342	[194]	MOVE     	0 8
	343	[170]	SETTABLE 	48 -130 49	; "init" -
	344	[205]	CLOSURE  	49 5	; 0x7f9f69409310
	345	[205]	MOVE     	0 7
	346	[203]	SETTABLE 	48 -131 49	; "open" -
	347	[217]	CLOSURE  	49 6	; 0x7f9f69408590
	348	[211]	SETTABLE 	48 -132 49	; "registerEventAdjustHook" -
	349	[225]	CLOSURE  	49 7	; 0x7f9f69408da0
	350	[219]	SETTABLE 	48 -133 49	; "registerGestureAdjustHook" -
	351	[229]	CLOSURE  	49 8	; 0x7f9f69409b60
	352	[227]	SETTABLE 	48 -134 49	; "eventAdjustHook" -
	353	[233]	CLOSURE  	49 9	; 0x7f9f6940a2b0
	354	[231]	SETTABLE 	48 -135 49	; "gestureAdjustHook" -
	355	[248]	CLOSURE  	49 10	; 0x7f9f6940a5f0
	356	[248]	MOVE     	0 12
	357	[248]	MOVE     	0 21
	358	[248]	MOVE     	0 22
	359	[248]	MOVE     	0 27
	360	[248]	MOVE     	0 28
	361	[236]	SETTABLE 	48 -136 49	; "adjustTouchSwitchXY" -
	362	[259]	CLOSURE  	49 11	; 0x7f9f6940a880
	363	[259]	MOVE     	0 12
	364	[259]	MOVE     	0 21
	365	[259]	MOVE     	0 27
	366	[259]	MOVE     	0 22
	367	[259]	MOVE     	0 28
	368	[250]	SETTABLE 	48 -137 49	; "adjustTouchScale" -
	369	[266]	CLOSURE  	49 12	; 0x7f9f6940adf0
	370	[266]	MOVE     	0 12
	371	[266]	MOVE     	0 21
	372	[266]	MOVE     	0 27
	373	[261]	SETTABLE 	48 -138 49	; "adjustTouchMirrorX" -
	374	[273]	CLOSURE  	49 13	; 0x7f9f6940b040
	375	[273]	MOVE     	0 12
	376	[273]	MOVE     	0 22
	377	[273]	MOVE     	0 28
	378	[268]	SETTABLE 	48 -139 49	; "adjustTouchMirrorY" -
	379	[284]	CLOSURE  	49 14	; 0x7f9f6940b510
	380	[284]	MOVE     	0 12
	381	[284]	MOVE     	0 21
	382	[284]	MOVE     	0 27
	383	[284]	MOVE     	0 22
	384	[284]	MOVE     	0 28
	385	[275]	SETTABLE 	48 -140 49	; "adjustTouchTranslate" -
	386	[290]	CLOSURE  	49 15	; 0x7f9f6940bac0
	387	[290]	MOVE     	0 12
	388	[290]	MOVE     	0 23
	389	[290]	MOVE     	0 31
	390	[286]	SETTABLE 	48 -141 49	; "adjustKindleOasisOrientation" -
	391	[301]	CLOSURE  	49 16	; 0x7f9f6940bcd0
	392	[292]	SETTABLE 	48 -142 49	; "setTimeout" -
	393	[432]	CLOSURE  	49 17	; 0x7f9f6940a410
	394	[432]	MOVE     	0 17
	395	[432]	MOVE     	0 9
	396	[432]	MOVE     	0 15
	397	[432]	MOVE     	0 8
	398	[432]	MOVE     	0 4
	399	[432]	MOVE     	0 2
	400	[432]	MOVE     	0 16
	401	[303]	SETTABLE 	48 -143 49	; "handleKeyBoardEv" -
	402	[436]	CLOSURE  	49 18	; 0x7f9f6940d4a0
	403	[434]	SETTABLE 	48 -144 49	; "handleMiscEv" -
	404	[440]	CLOSURE  	49 19	; 0x7f9f6940d6c0
	405	[438]	SETTABLE 	48 -145 49	; "handleSdlEv" -
	406	[539]	CLOSURE  	49 20	; 0x7f9f6940d890
	407	[539]	MOVE     	0 12
	408	[539]	MOVE     	0 24
	409	[539]	MOVE     	0 29
	410	[539]	MOVE     	0 27
	411	[539]	MOVE     	0 28
	412	[539]	MOVE     	0 21
	413	[539]	MOVE     	0 22
	414	[539]	MOVE     	0 23
	415	[539]	MOVE     	0 10
	416	[539]	MOVE     	0 18
	417	[539]	MOVE     	0 5
	418	[539]	MOVE     	0 2
	419	[469]	SETTABLE 	48 -146 49	; "handleTouchEv" -
	420	[601]	CLOSURE  	49 21	; 0x7f9f6940d980
	421	[601]	MOVE     	0 12
	422	[601]	MOVE     	0 29
	423	[601]	MOVE     	0 25
	424	[601]	MOVE     	0 27
	425	[601]	MOVE     	0 28
	426	[601]	MOVE     	0 10
	427	[601]	MOVE     	0 18
	428	[601]	MOVE     	0 5
	429	[601]	MOVE     	0 2
	430	[540]	SETTABLE 	48 -147 49	; "handleTouchEvPhoenix" -
	431	[637]	CLOSURE  	49 22	; 0x7f9f6940e010
	432	[637]	MOVE     	0 12
	433	[637]	MOVE     	0 21
	434	[637]	MOVE     	0 22
	435	[637]	MOVE     	0 23
	436	[637]	MOVE     	0 10
	437	[637]	MOVE     	0 18
	438	[637]	MOVE     	0 5
	439	[637]	MOVE     	0 2
	440	[602]	SETTABLE 	48 -148 49	; "handleTouchEvLegacy" -
	441	[666]	CLOSURE  	49 23	; 0x7f9f6940e9a0
	442	[666]	MOVE     	0 34
	443	[666]	MOVE     	0 32
	444	[666]	MOVE     	0 33
	445	[666]	MOVE     	0 6
	446	[666]	MOVE     	0 38
	447	[666]	MOVE     	0 37
	448	[666]	MOVE     	0 35
	449	[666]	MOVE     	0 36
	450	[666]	MOVE     	0 39
	451	[639]	SETTABLE 	48 -149 49	; "handleOasisOrientationEv" -
	452	[711]	CLOSURE  	49 24	; 0x7f9f6940a370
	453	[711]	MOVE     	0 40
	454	[711]	MOVE     	0 42
	455	[711]	MOVE     	0 6
	456	[711]	MOVE     	0 43
	457	[711]	MOVE     	0 41
	458	[711]	MOVE     	0 44
	459	[711]	MOVE     	0 2
	460	[669]	SETTABLE 	48 -150 49	; "handleMiscEvNTX" -
	461	[737]	CLOSURE  	49 25	; 0x7f9f6940e890
	462	[714]	SETTABLE 	48 -151 49	; "toggleMiscEvNTX" -
	463	[749]	CLOSURE  	49 26	; 0x7f9f6940c0e0
	464	[741]	SETTABLE 	48 -152 49	; "setMtSlot" -
	465	[753]	CLOSURE  	49 27	; 0x7f9f6940c4c0
	466	[751]	SETTABLE 	48 -153 49	; "setCurrentMtSlot" -
	467	[757]	CLOSURE  	49 28	; 0x7f9f69409970
	468	[755]	SETTABLE 	48 -154 49	; "getMtSlot" -
	469	[761]	CLOSURE  	49 29	; 0x7f9f6940eac0
	470	[759]	SETTABLE 	48 -155 49	; "getCurrentMtSlot" -
	471	[768]	CLOSURE  	49 30	; 0x7f9f6940ea20
	472	[763]	SETTABLE 	48 -156 49	; "addSlotIfChanged" -
	473	[773]	CLOSURE  	49 31	; 0x7f9f6940f5c0
	474	[770]	SETTABLE 	48 -157 49	; "confirmAbsxy" -
	475	[778]	CLOSURE  	49 32	; 0x7f9f6940fa00
	476	[775]	SETTABLE 	48 -158 49	; "cleanAbsxy" -
	477	[782]	CLOSURE  	49 33	; 0x7f9f6940c820
	478	[782]	MOVE     	0 15
	479	[780]	SETTABLE 	48 -159 49	; "isEvKeyPress" -
	480	[786]	CLOSURE  	49 34	; 0x7f9f6940c8a0
	481	[786]	MOVE     	0 16
	482	[784]	SETTABLE 	48 -160 49	; "isEvKeyRepeat" -
	483	[790]	CLOSURE  	49 35	; 0x7f9f69410270
	484	[790]	MOVE     	0 17
	485	[788]	SETTABLE 	48 -161 49	; "isEvKeyRelease" -
	486	[879]	CLOSURE  	49 36	; 0x7f9f694104d0
	487	[879]	MOVE     	0 5
	488	[879]	MOVE     	0 7
	489	[879]	MOVE     	0 2
	490	[879]	MOVE     	0 8
	491	[879]	MOVE     	0 1
	492	[879]	MOVE     	0 11
	493	[879]	MOVE     	0 12
	494	[879]	MOVE     	0 31
	495	[879]	MOVE     	0 10
	496	[879]	MOVE     	0 13
	497	[879]	MOVE     	0 14
	498	[794]	SETTABLE 	48 -162 49	; "waitEvent" -
	499	[881]	RETURN   	48 2
	500	[881]	RETURN   	0 1

function <./frontend/device/input.lua:151,153> (10 instructions, 40 bytes at 0x7f9f694080f0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[152]	GETUPVAL 	0 0	; _internal_clipboard_text
	2	[152]	EQ       	1 0 -1	; - nil
	3	[152]	JMP      	3	; to 7
	4	[152]	GETUPVAL 	0 0	; _internal_clipboard_text
	5	[152]	EQ       	0 0 -2	; - ""
	6	[152]	JMP      	1	; to 8
	7	[152]	LOADBOOL 	0 0 1
	8	[152]	LOADBOOL 	0 1 0
	9	[152]	RETURN   	0 2
	10	[153]	RETURN   	0 1

function <./frontend/device/input.lua:154,156> (3 instructions, 12 bytes at 0x7f9f69408460)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[155]	GETUPVAL 	0 0	; _internal_clipboard_text
	2	[155]	RETURN   	0 2
	3	[156]	RETURN   	0 1

function <./frontend/device/input.lua:157,159> (2 instructions, 8 bytes at 0x7f9f69408640)
1 param, 2 slots, 1 upvalue, 1 local, 0 constants, 0 functions
	1	[158]	SETUPVAL 	0 0	; _internal_clipboard_text
	2	[159]	RETURN   	0 1

function <./frontend/device/input.lua:162,168> (16 instructions, 64 bytes at 0x7f9f69408830)
2 params, 5 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[163]	TEST     	1 0 1
	2	[163]	JMP      	2	; to 5
	3	[163]	NEWTABLE 	2 0 0
	4	[163]	MOVE     	1 2
	5	[164]	GETGLOBAL	2 -1	; setmetatable
	6	[164]	MOVE     	3 1
	7	[164]	MOVE     	4 0
	8	[164]	CALL     	2 3 1
	9	[165]	SETTABLE 	0 -2 0	; "__index" -
	10	[166]	GETTABLE 	2 1 -3	; "init"
	11	[166]	TEST     	2 0 0
	12	[166]	JMP      	2	; to 15
	13	[166]	SELF     	2 1 -3	; "init"
	14	[166]	CALL     	2 2 1
	15	[167]	RETURN   	1 2
	16	[168]	RETURN   	0 1

function <./frontend/device/input.lua:170,194> (49 instructions, 196 bytes at 0x7f9f69408960)
1 param, 10 slots, 3 upvalues, 9 locals, 28 constants, 0 functions
	1	[171]	GETUPVAL 	1 0	; GestureDetector
	2	[171]	SELF     	1 1 -2	; "new"
	3	[171]	NEWTABLE 	3 0 2
	4	[172]	GETTABLE 	4 0 -4	; "device"
	5	[172]	GETTABLE 	4 4 -3	; "screen"
	6	[172]	SETTABLE 	3 -3 4	; "screen" -
	7	[173]	SETTABLE 	3 -5 0	; "input" -
	8	[171]	CALL     	1 3 2
	9	[174]	SETTABLE 	0 -1 1	; "gesture_detector" -
	10	[177]	GETTABLE 	1 0 -6	; "event_map"
	11	[177]	SETTABLE 	1 -7 -8	; 10000 "IntoSS"
	12	[178]	GETTABLE 	1 0 -6	; "event_map"
	13	[178]	SETTABLE 	1 -9 -10	; 10001 "OutOfSS"
	14	[179]	GETTABLE 	1 0 -6	; "event_map"
	15	[179]	SETTABLE 	1 -11 -12	; 10010 "UsbPlugIn"
	16	[180]	GETTABLE 	1 0 -6	; "event_map"
	17	[180]	SETTABLE 	1 -13 -14	; 10011 "UsbPlugOut"
	18	[181]	GETTABLE 	1 0 -6	; "event_map"
	19	[181]	SETTABLE 	1 -15 -16	; 10020 "Charging"
	20	[182]	GETTABLE 	1 0 -6	; "event_map"
	21	[182]	SETTABLE 	1 -17 -18	; 10021 "NotCharging"
	22	[185]	GETGLOBAL	1 -19	; string
	23	[185]	GETTABLE 	1 1 -20	; "format"
	24	[186]	LOADK    	2 -21	; "%s/%s"
	25	[186]	GETUPVAL 	3 1	; DataStorage
	26	[186]	SELF     	3 3 -22	; "getSettingsDir"
	27	[186]	CALL     	3 2 2
	28	[186]	LOADK    	4 -23	; "event_map.lua"
	29	[185]	CALL     	1 4 2
	30	[187]	GETGLOBAL	2 -24	; pcall
	31	[187]	GETGLOBAL	3 -25	; dofile
	32	[187]	MOVE     	4 1
	33	[187]	CALL     	2 3 3
	34	[188]	TEST     	2 0 0
	35	[188]	JMP      	13	; to 49
	36	[189]	GETGLOBAL	4 -26	; pairs
	37	[189]	MOVE     	5 3
	38	[189]	CALL     	4 2 4
	39	[189]	JMP      	2	; to 42
	40	[190]	GETTABLE 	9 0 -6	; "event_map"
	41	[190]	SETTABLE 	9 7 8
	42	[189]	TFORLOOP 	4 2
	43	[190]	JMP      	-4	; to 40
	44	[192]	GETUPVAL 	4 2	; logger
	45	[192]	GETTABLE 	4 4 -27	; "info"
	46	[192]	LOADK    	5 -28	; "loaded custom event map"
	47	[192]	MOVE     	6 3
	48	[192]	CALL     	4 3 1
	49	[194]	RETURN   	0 1

function <./frontend/device/input.lua:203,205> (11 instructions, 44 bytes at 0x7f9f69409310)
2 params, 5 slots, 1 upvalue, 2 locals, 3 constants, 0 functions
	1	[204]	GETUPVAL 	2 0	; input
	2	[204]	GETTABLE 	2 2 -1	; "open"
	3	[204]	MOVE     	3 0
	4	[204]	TEST     	1 0 0
	5	[204]	JMP      	3	; to 9
	6	[204]	LOADK    	4 -2	; 1
	7	[204]	TEST     	4 0 1
	8	[204]	JMP      	1	; to 10
	9	[204]	LOADK    	4 -3	; 0
	10	[204]	CALL     	2 3 1
	11	[205]	RETURN   	0 1

function <./frontend/device/input.lua:211,217> (7 instructions, 28 bytes at 0x7f9f69408590)
3 params, 5 slots, 0 upvalues, 4 locals, 1 constant, 1 function
	1	[212]	GETTABLE 	3 0 -1	; "eventAdjustHook"
	2	[216]	CLOSURE  	4 0	; 0x7f9f69408390
	3	[216]	MOVE     	0 3
	4	[216]	MOVE     	0 1
	5	[216]	MOVE     	0 2
	6	[216]	SETTABLE 	0 -1 4	; "eventAdjustHook" -
	7	[217]	RETURN   	0 1

function <./frontend/device/input.lua:213,216> (10 instructions, 40 bytes at 0x7f9f69408390)
2 params, 6 slots, 3 upvalues, 2 locals, 0 constants, 0 functions
	1	[214]	GETUPVAL 	2 0	; old
	2	[214]	MOVE     	3 0
	3	[214]	MOVE     	4 1
	4	[214]	CALL     	2 3 1
	5	[215]	GETUPVAL 	2 1	; hook
	6	[215]	MOVE     	3 0
	7	[215]	MOVE     	4 1
	8	[215]	GETUPVAL 	5 2	; hook_params
	9	[215]	CALL     	2 4 1
	10	[216]	RETURN   	0 1

function <./frontend/device/input.lua:219,225> (7 instructions, 28 bytes at 0x7f9f69408da0)
3 params, 5 slots, 0 upvalues, 4 locals, 1 constant, 1 function
	1	[220]	GETTABLE 	3 0 -1	; "gestureAdjustHook"
	2	[224]	CLOSURE  	4 0	; 0x7f9f69409fb0
	3	[224]	MOVE     	0 3
	4	[224]	MOVE     	0 1
	5	[224]	MOVE     	0 2
	6	[224]	SETTABLE 	0 -1 4	; "gestureAdjustHook" -
	7	[225]	RETURN   	0 1

function <./frontend/device/input.lua:221,224> (10 instructions, 40 bytes at 0x7f9f69409fb0)
2 params, 6 slots, 3 upvalues, 2 locals, 0 constants, 0 functions
	1	[222]	GETUPVAL 	2 0	; old
	2	[222]	MOVE     	3 0
	3	[222]	MOVE     	4 1
	4	[222]	CALL     	2 3 1
	5	[223]	GETUPVAL 	2 1	; hook
	6	[223]	MOVE     	3 0
	7	[223]	MOVE     	4 1
	8	[223]	GETUPVAL 	5 2	; hook_params
	9	[223]	CALL     	2 4 1
	10	[224]	RETURN   	0 1

function <./frontend/device/input.lua:227,229> (1 instruction, 4 bytes at 0x7f9f69409b60)
2 params, 2 slots, 0 upvalues, 2 locals, 0 constants, 0 functions
	1	[229]	RETURN   	0 1

function <./frontend/device/input.lua:231,233> (1 instruction, 4 bytes at 0x7f9f6940a2b0)
2 params, 2 slots, 0 upvalues, 2 locals, 0 constants, 0 functions
	1	[233]	RETURN   	0 1

function <./frontend/device/input.lua:236,248> (32 instructions, 128 bytes at 0x7f9f6940a5f0)
2 params, 4 slots, 5 upvalues, 2 locals, 2 constants, 0 functions
	1	[237]	GETTABLE 	2 1 -1	; "type"
	2	[237]	GETUPVAL 	3 0	; EV_ABS
	3	[237]	EQ       	0 2 3
	4	[237]	JMP      	27	; to 32
	5	[238]	GETTABLE 	2 1 -2	; "code"
	6	[238]	GETUPVAL 	3 1	; ABS_X
	7	[238]	EQ       	0 2 3
	8	[238]	JMP      	3	; to 12
	9	[239]	GETUPVAL 	2 2	; ABS_Y
	10	[239]	SETTABLE 	1 -2 2	; "code" -
	11	[239]	JMP      	20	; to 32
	12	[240]	GETTABLE 	2 1 -2	; "code"
	13	[240]	GETUPVAL 	3 2	; ABS_Y
	14	[240]	EQ       	0 2 3
	15	[240]	JMP      	3	; to 19
	16	[241]	GETUPVAL 	2 1	; ABS_X
	17	[241]	SETTABLE 	1 -2 2	; "code" -
	18	[241]	JMP      	13	; to 32
	19	[242]	GETTABLE 	2 1 -2	; "code"
	20	[242]	GETUPVAL 	3 3	; ABS_MT_POSITION_X
	21	[242]	EQ       	0 2 3
	22	[242]	JMP      	3	; to 26
	23	[243]	GETUPVAL 	2 4	; ABS_MT_POSITION_Y
	24	[243]	SETTABLE 	1 -2 2	; "code" -
	25	[243]	JMP      	6	; to 32
	26	[244]	GETTABLE 	2 1 -2	; "code"
	27	[244]	GETUPVAL 	3 4	; ABS_MT_POSITION_Y
	28	[244]	EQ       	0 2 3
	29	[244]	JMP      	2	; to 32
	30	[245]	GETUPVAL 	2 3	; ABS_MT_POSITION_X
	31	[245]	SETTABLE 	1 -2 2	; "code" -
	32	[248]	RETURN   	0 1

function <./frontend/device/input.lua:250,259> (29 instructions, 116 bytes at 0x7f9f6940a880)
3 params, 5 slots, 5 upvalues, 3 locals, 5 constants, 0 functions
	1	[251]	GETTABLE 	3 1 -1	; "type"
	2	[251]	GETUPVAL 	4 0	; EV_ABS
	3	[251]	EQ       	0 3 4
	4	[251]	JMP      	24	; to 29
	5	[252]	GETTABLE 	3 1 -2	; "code"
	6	[252]	GETUPVAL 	4 1	; ABS_X
	7	[252]	EQ       	1 3 4
	8	[252]	JMP      	4	; to 13
	9	[252]	GETTABLE 	3 1 -2	; "code"
	10	[252]	GETUPVAL 	4 2	; ABS_MT_POSITION_X
	11	[252]	EQ       	0 3 4
	12	[252]	JMP      	4	; to 17
	13	[253]	GETTABLE 	3 2 -4	; "x"
	14	[253]	GETTABLE 	4 1 -3	; "value"
	15	[253]	MUL      	3 3 4
	16	[253]	SETTABLE 	1 -3 3	; "value" -
	17	[255]	GETTABLE 	3 1 -2	; "code"
	18	[255]	GETUPVAL 	4 3	; ABS_Y
	19	[255]	EQ       	1 3 4
	20	[255]	JMP      	4	; to 25
	21	[255]	GETTABLE 	3 1 -2	; "code"
	22	[255]	GETUPVAL 	4 4	; ABS_MT_POSITION_Y
	23	[255]	EQ       	0 3 4
	24	[255]	JMP      	4	; to 29
	25	[256]	GETTABLE 	3 2 -5	; "y"
	26	[256]	GETTABLE 	4 1 -3	; "value"
	27	[256]	MUL      	3 3 4
	28	[256]	SETTABLE 	1 -3 3	; "value" -
	29	[259]	RETURN   	0 1

function <./frontend/device/input.lua:261,266> (16 instructions, 64 bytes at 0x7f9f6940adf0)
3 params, 5 slots, 3 upvalues, 3 locals, 3 constants, 0 functions
	1	[262]	GETTABLE 	3 1 -1	; "type"
	2	[262]	GETUPVAL 	4 0	; EV_ABS
	3	[262]	EQ       	0 3 4
	4	[262]	JMP      	11	; to 16
	5	[263]	GETTABLE 	3 1 -2	; "code"
	6	[263]	GETUPVAL 	4 1	; ABS_X
	7	[263]	EQ       	1 3 4
	8	[263]	JMP      	4	; to 13
	9	[263]	GETTABLE 	3 1 -2	; "code"
	10	[263]	GETUPVAL 	4 2	; ABS_MT_POSITION_X
	11	[263]	EQ       	0 3 4
	12	[263]	JMP      	3	; to 16
	13	[264]	GETTABLE 	3 1 -3	; "value"
	14	[264]	SUB      	3 2 3
	15	[264]	SETTABLE 	1 -3 3	; "value" -
	16	[266]	RETURN   	0 1

function <./frontend/device/input.lua:268,273> (16 instructions, 64 bytes at 0x7f9f6940b040)
3 params, 5 slots, 3 upvalues, 3 locals, 3 constants, 0 functions
	1	[269]	GETTABLE 	3 1 -1	; "type"
	2	[269]	GETUPVAL 	4 0	; EV_ABS
	3	[269]	EQ       	0 3 4
	4	[269]	JMP      	11	; to 16
	5	[270]	GETTABLE 	3 1 -2	; "code"
	6	[270]	GETUPVAL 	4 1	; ABS_Y
	7	[270]	EQ       	1 3 4
	8	[270]	JMP      	4	; to 13
	9	[270]	GETTABLE 	3 1 -2	; "code"
	10	[270]	GETUPVAL 	4 2	; ABS_MT_POSITION_Y
	11	[270]	EQ       	0 3 4
	12	[270]	JMP      	3	; to 16
	13	[271]	GETTABLE 	3 1 -3	; "value"
	14	[271]	SUB      	3 2 3
	15	[271]	SETTABLE 	1 -3 3	; "value" -
	16	[273]	RETURN   	0 1

function <./frontend/device/input.lua:275,284> (29 instructions, 116 bytes at 0x7f9f6940b510)
3 params, 5 slots, 5 upvalues, 3 locals, 5 constants, 0 functions
	1	[276]	GETTABLE 	3 1 -1	; "type"
	2	[276]	GETUPVAL 	4 0	; EV_ABS
	3	[276]	EQ       	0 3 4
	4	[276]	JMP      	24	; to 29
	5	[277]	GETTABLE 	3 1 -2	; "code"
	6	[277]	GETUPVAL 	4 1	; ABS_X
	7	[277]	EQ       	1 3 4
	8	[277]	JMP      	4	; to 13
	9	[277]	GETTABLE 	3 1 -2	; "code"
	10	[277]	GETUPVAL 	4 2	; ABS_MT_POSITION_X
	11	[277]	EQ       	0 3 4
	12	[277]	JMP      	4	; to 17
	13	[278]	GETTABLE 	3 2 -4	; "x"
	14	[278]	GETTABLE 	4 1 -3	; "value"
	15	[278]	ADD      	3 3 4
	16	[278]	SETTABLE 	1 -3 3	; "value" -
	17	[280]	GETTABLE 	3 1 -2	; "code"
	18	[280]	GETUPVAL 	4 3	; ABS_Y
	19	[280]	EQ       	1 3 4
	20	[280]	JMP      	4	; to 25
	21	[280]	GETTABLE 	3 1 -2	; "code"
	22	[280]	GETUPVAL 	4 4	; ABS_MT_POSITION_Y
	23	[280]	EQ       	0 3 4
	24	[280]	JMP      	4	; to 29
	25	[281]	GETTABLE 	3 2 -5	; "y"
	26	[281]	GETTABLE 	4 1 -3	; "value"
	27	[281]	ADD      	3 3 4
	28	[281]	SETTABLE 	1 -3 3	; "value" -
	29	[284]	RETURN   	0 1

function <./frontend/device/input.lua:286,290> (11 instructions, 44 bytes at 0x7f9f6940bac0)
2 params, 4 slots, 3 upvalues, 2 locals, 2 constants, 0 functions
	1	[287]	GETTABLE 	2 1 -1	; "type"
	2	[287]	GETUPVAL 	3 0	; EV_ABS
	3	[287]	EQ       	0 2 3
	4	[287]	JMP      	6	; to 11
	5	[287]	GETTABLE 	2 1 -2	; "code"
	6	[287]	GETUPVAL 	3 1	; ABS_PRESSURE
	7	[287]	EQ       	0 2 3
	8	[287]	JMP      	2	; to 11
	9	[288]	GETUPVAL 	2 2	; ABS_OASIS_ORIENTATION
	10	[288]	SETTABLE 	1 -2 2	; "code" -
	11	[290]	RETURN   	0 1

function <./frontend/device/input.lua:292,301> (14 instructions, 56 bytes at 0x7f9f6940bcd0)
3 params, 7 slots, 0 upvalues, 4 locals, 6 constants, 1 function
	1	[293]	NEWTABLE 	3 0 2
	2	[294]	SETTABLE 	3 -1 1	; "callback" -
	3	[295]	SETTABLE 	3 -2 2	; "deadline" -
	4	[297]	GETGLOBAL	4 -3	; table
	5	[297]	GETTABLE 	4 4 -4	; "insert"
	6	[297]	GETTABLE 	5 0 -5	; "timer_callbacks"
	7	[297]	MOVE     	6 3
	8	[297]	CALL     	4 3 1
	9	[298]	GETGLOBAL	4 -3	; table
	10	[298]	GETTABLE 	4 4 -6	; "sort"
	11	[298]	GETTABLE 	5 0 -5	; "timer_callbacks"
	12	[300]	CLOSURE  	6 0	; 0x7f9f6940c1a0
	13	[298]	CALL     	4 3 1
	14	[301]	RETURN   	0 1

function <./frontend/device/input.lua:298,300> (8 instructions, 32 bytes at 0x7f9f6940c1a0)
2 params, 4 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[299]	GETTABLE 	2 0 -1	; "deadline"
	2	[299]	GETTABLE 	3 1 -1	; "deadline"
	3	[299]	LT       	1 2 3
	4	[299]	JMP      	1	; to 6
	5	[299]	LOADBOOL 	2 0 1
	6	[299]	LOADBOOL 	2 1 0
	7	[299]	RETURN   	2 2
	8	[300]	RETURN   	0 1

function <./frontend/device/input.lua:303,432> (242 instructions, 968 bytes at 0x7f9f6940a410)
2 params, 14 slots, 7 upvalues, 16 locals, 64 constants, 1 function
	1	[304]	GETTABLE 	2 0 -1	; "event_map"
	2	[304]	GETTABLE 	3 1 -2	; "code"
	3	[304]	GETTABLE 	2 2 3
	4	[305]	TEST     	2 0 1
	5	[305]	JMP      	1	; to 7
	6	[307]	RETURN   	0 1
	7	[310]	GETTABLE 	3 0 -3	; "event_map_adapter"
	8	[310]	GETTABLE 	3 3 2
	9	[310]	TEST     	3 0 0
	10	[310]	JMP      	5	; to 16
	11	[311]	GETTABLE 	3 0 -3	; "event_map_adapter"
	12	[311]	GETTABLE 	3 3 2
	13	[311]	MOVE     	4 1
	14	[311]	TAILCALL 	3 2 0
	15	[311]	RETURN   	3 0
	16	[315]	GETTABLE 	3 0 -4	; "rotation_map"
	17	[315]	GETTABLE 	4 0 -5	; "device"
	18	[315]	GETTABLE 	4 4 -6	; "screen"
	19	[315]	SELF     	4 4 -7	; "getRotationMode"
	20	[315]	CALL     	4 2 2
	21	[315]	GETTABLE 	3 3 4
	22	[315]	GETTABLE 	3 3 2
	23	[315]	TEST     	3 0 0
	24	[315]	JMP      	7	; to 32
	25	[316]	GETTABLE 	3 0 -4	; "rotation_map"
	26	[316]	GETTABLE 	4 0 -5	; "device"
	27	[316]	GETTABLE 	4 4 -6	; "screen"
	28	[316]	SELF     	4 4 -7	; "getRotationMode"
	29	[316]	CALL     	4 2 2
	30	[316]	GETTABLE 	3 3 4
	31	[316]	GETTABLE 	2 3 2
	32	[320]	EQ       	1 2 -8	; - "IntoSS"
	33	[320]	JMP      	10	; to 44
	34	[320]	EQ       	1 2 -9	; - "OutOfSS"
	35	[320]	JMP      	8	; to 44
	36	[321]	EQ       	1 2 -10	; - "UsbPlugIn"
	37	[321]	JMP      	6	; to 44
	38	[321]	EQ       	1 2 -11	; - "UsbPlugOut"
	39	[321]	JMP      	4	; to 44
	40	[322]	EQ       	1 2 -12	; - "Charging"
	41	[322]	JMP      	2	; to 44
	42	[322]	EQ       	0 2 -13	; - "NotCharging"
	43	[322]	JMP      	1	; to 45
	44	[323]	RETURN   	2 2
	45	[327]	EQ       	0 2 -14	; - "Camera"
	46	[327]	JMP      	34	; to 81
	47	[327]	GETTABLE 	3 1 -15	; "value"
	48	[327]	GETUPVAL 	4 0	; EVENT_VALUE_KEY_RELEASE
	49	[327]	EQ       	0 3 4
	50	[327]	JMP      	30	; to 81
	51	[328]	GETGLOBAL	3 -16	; G_reader_settings
	52	[328]	SELF     	3 3 -17	; "isTrue"
	53	[328]	LOADK    	5 -18	; "camera_key_toggles_touchscreen"
	54	[328]	CALL     	3 3 2
	55	[328]	TEST     	3 0 0
	56	[328]	JMP      	24	; to 81
	57	[329]	GETGLOBAL	3 -19	; pcall
	58	[329]	GETGLOBAL	4 -20	; require
	59	[329]	LOADK    	5 -21	; "android"
	60	[329]	CALL     	3 3 3
	61	[330]	TEST     	3 0 0
	62	[330]	JMP      	17	; to 80
	63	[332]	GETTABLE 	5 4 -22	; "toggleTouchscreenIgnored"
	64	[332]	CALL     	5 1 1
	65	[335]	GETTABLE 	5 4 -23	; "isTouchscreenIgnored"
	66	[335]	CALL     	5 1 2
	67	[335]	TEST     	5 0 0
	68	[335]	JMP      	6	; to 75
	69	[336]	GETTABLE 	5 4 -24	; "notification"
	70	[336]	GETUPVAL 	6 1	; _
	71	[336]	LOADK    	7 -25	; "Touchscreen disabled"
	72	[336]	CALL     	6 2 0
	73	[336]	CALL     	5 0 1
	74	[336]	JMP      	5	; to 80
	75	[338]	GETTABLE 	5 4 -24	; "notification"
	76	[338]	GETUPVAL 	6 1	; _
	77	[338]	LOADK    	7 -26	; "Touchscreen enabled"
	78	[338]	CALL     	6 2 0
	79	[338]	CALL     	5 0 1
	80	[341]	RETURN   	0 1
	81	[344]	EQ       	0 2 -27	; - "Power"
	82	[344]	JMP      	13	; to 96
	83	[347]	GETTABLE 	3 1 -15	; "value"
	84	[347]	GETUPVAL 	4 2	; EVENT_VALUE_KEY_PRESS
	85	[347]	EQ       	0 3 4
	86	[347]	JMP      	3	; to 90
	87	[348]	LOADK    	3 -28	; "PowerPress"
	88	[348]	RETURN   	3 2
	89	[348]	JMP      	6	; to 96
	90	[349]	GETTABLE 	3 1 -15	; "value"
	91	[349]	GETUPVAL 	4 0	; EVENT_VALUE_KEY_RELEASE
	92	[349]	EQ       	0 3 4
	93	[349]	JMP      	2	; to 96
	94	[350]	LOADK    	3 -29	; "PowerRelease"
	95	[350]	RETURN   	3 2
	96	[354]	GETTABLE 	3 0 -30	; "file_chooser"
	97	[355]	TEST     	3 0 0
	98	[355]	JMP      	27	; to 126
	99	[355]	SELF     	4 0 -31	; "isEvKeyPress"
	100	[355]	MOVE     	6 1
	101	[355]	CALL     	4 3 2
	102	[356]	TEST     	4 0 0
	103	[356]	JMP      	22	; to 126
	104	[356]	GETTABLE 	4 0 -32	; "modifiers"
	105	[356]	GETTABLE 	4 4 -33	; "Ctrl"
	106	[356]	TEST     	4 0 0
	107	[356]	JMP      	18	; to 126
	108	[356]	EQ       	0 2 -34	; - "O"
	109	[356]	JMP      	16	; to 126
	110	[357]	GETUPVAL 	4 3	; logger
	111	[357]	GETTABLE 	4 4 -35	; "dbg"
	112	[357]	LOADK    	5 -36	; "Opening FileChooser:"
	113	[357]	GETTABLE 	6 3 -37	; "type"
	114	[357]	CALL     	4 3 1
	115	[358]	SELF     	4 3 -38	; "open"
	116	[358]	CALL     	4 2 2
	117	[360]	TEST     	4 0 0
	118	[360]	JMP      	6	; to 125
	119	[361]	GETGLOBAL	5 -20	; require
	120	[361]	LOADK    	6 -39	; "apps/reader/readerui"
	121	[361]	CALL     	5 2 2
	122	[362]	SELF     	6 5 -40	; "doShowReader"
	123	[362]	MOVE     	8 4
	124	[362]	CALL     	6 3 1
	125	[364]	RETURN   	0 1
	126	[369]	SELF     	4 0 -31	; "isEvKeyPress"
	127	[369]	MOVE     	6 1
	128	[369]	CALL     	4 3 2
	129	[369]	TEST     	4 0 0
	130	[369]	JMP      	36	; to 167
	131	[369]	GETTABLE 	4 0 -32	; "modifiers"
	132	[369]	GETTABLE 	4 4 -41	; "Alt"
	133	[369]	TEST     	4 0 0
	134	[369]	JMP      	32	; to 167
	135	[369]	EQ       	0 2 -42	; - "F4"
	136	[369]	JMP      	30	; to 167
	137	[370]	GETGLOBAL	4 -20	; require
	138	[370]	LOADK    	5 -43	; "frontend/device"
	139	[370]	CALL     	4 2 2
	140	[371]	GETGLOBAL	5 -20	; require
	141	[371]	LOADK    	6 -44	; "ui/uimanager"
	142	[371]	CALL     	5 2 2
	143	[373]	LOADNIL  	6 6
	144	[377]	CLOSURE  	7 0	; 0x7f9f6940ca10
	145	[377]	MOVE     	0 4
	146	[377]	MOVE     	0 5
	147	[379]	GETGLOBAL	8 -20	; require
	148	[379]	LOADK    	9 -45	; "apps/filemanager/filemanager"
	149	[379]	CALL     	8 2 2
	150	[380]	GETTABLE 	9 8 -46	; "instance"
	151	[380]	TEST     	9 0 0
	152	[380]	JMP      	2	; to 155
	153	[381]	GETTABLE 	9 8 -46	; "instance"
	154	[381]	GETTABLE 	6 9 -47	; "menu"
	155	[384]	GETGLOBAL	9 -20	; require
	156	[384]	LOADK    	10 -39	; "apps/reader/readerui"
	157	[384]	CALL     	9 2 2
	158	[385]	SELF     	10 9 -48	; "_getRunningInstance"
	159	[385]	CALL     	10 2 2
	160	[386]	TEST     	10 0 0
	161	[386]	JMP      	1	; to 163
	162	[387]	GETTABLE 	6 10 -47	; "menu"
	163	[390]	SELF     	11 6 -49	; "exitOrRestart"
	164	[390]	MOVE     	13 7
	165	[390]	CALL     	11 3 1
	166	[390]	CLOSE    	4
	167	[394]	GETTABLE 	4 0 -32	; "modifiers"
	168	[394]	GETTABLE 	4 4 2
	169	[394]	EQ       	1 4 -50	; - nil
	170	[394]	JMP      	14	; to 185
	171	[395]	GETTABLE 	4 1 -15	; "value"
	172	[395]	GETUPVAL 	5 2	; EVENT_VALUE_KEY_PRESS
	173	[395]	EQ       	0 4 5
	174	[395]	JMP      	3	; to 178
	175	[396]	GETTABLE 	4 0 -32	; "modifiers"
	176	[396]	SETTABLE 	4 2 -51	; - true
	177	[396]	JMP      	6	; to 184
	178	[397]	GETTABLE 	4 1 -15	; "value"
	179	[397]	GETUPVAL 	5 0	; EVENT_VALUE_KEY_RELEASE
	180	[397]	EQ       	0 4 5
	181	[397]	JMP      	2	; to 184
	182	[398]	GETTABLE 	4 0 -32	; "modifiers"
	183	[398]	SETTABLE 	4 2 -52	; - false
	184	[400]	RETURN   	0 1
	185	[403]	GETUPVAL 	4 4	; Key
	186	[403]	SELF     	4 4 -53	; "new"
	187	[403]	MOVE     	6 2
	188	[403]	GETTABLE 	7 0 -32	; "modifiers"
	189	[403]	CALL     	4 4 2
	190	[405]	GETTABLE 	5 1 -15	; "value"
	191	[405]	GETUPVAL 	6 2	; EVENT_VALUE_KEY_PRESS
	192	[405]	EQ       	0 5 6
	193	[405]	JMP      	7	; to 201
	194	[406]	GETUPVAL 	5 5	; Event
	195	[406]	SELF     	5 5 -53	; "new"
	196	[406]	LOADK    	7 -54	; "KeyPress"
	197	[406]	MOVE     	8 4
	198	[406]	TAILCALL 	5 4 0
	199	[406]	RETURN   	5 0
	200	[406]	JMP      	41	; to 242
	201	[407]	GETTABLE 	5 1 -15	; "value"
	202	[407]	GETUPVAL 	6 6	; EVENT_VALUE_KEY_REPEAT
	203	[407]	EQ       	0 5 6
	204	[407]	JMP      	26	; to 231
	205	[410]	EQ       	1 2 -55	; - "LPgBack"
	206	[410]	JMP      	6	; to 213
	207	[411]	EQ       	1 2 -56	; - "RPgBack"
	208	[411]	JMP      	4	; to 213
	209	[412]	EQ       	1 2 -57	; - "LPgFwd"
	210	[412]	JMP      	2	; to 213
	211	[413]	EQ       	0 2 -58	; - "RPgFwd"
	212	[413]	JMP      	29	; to 242
	213	[421]	GETTABLE 	5 0 -59	; "repeat_count"
	214	[421]	ADD      	5 5 -60	; - 1
	215	[421]	SETTABLE 	0 -59 5	; "repeat_count" -
	216	[422]	GETTABLE 	5 0 -59	; "repeat_count"
	217	[422]	EQ       	0 5 -60	; - 1
	218	[422]	JMP      	7	; to 226
	219	[423]	GETUPVAL 	5 5	; Event
	220	[423]	SELF     	5 5 -53	; "new"
	221	[423]	LOADK    	7 -61	; "KeyRepeat"
	222	[423]	MOVE     	8 4
	223	[423]	TAILCALL 	5 4 0
	224	[423]	RETURN   	5 0
	225	[423]	JMP      	16	; to 242
	226	[424]	GETTABLE 	5 0 -59	; "repeat_count"
	227	[424]	LE       	0 -62 5	; 6 -
	228	[424]	JMP      	13	; to 242
	229	[425]	SETTABLE 	0 -59 -63	; "repeat_count" 0
	230	[427]	JMP      	11	; to 242
	231	[428]	GETTABLE 	5 1 -15	; "value"
	232	[428]	GETUPVAL 	6 0	; EVENT_VALUE_KEY_RELEASE
	233	[428]	EQ       	0 5 6
	234	[428]	JMP      	7	; to 242
	235	[429]	SETTABLE 	0 -59 -63	; "repeat_count" 0
	236	[430]	GETUPVAL 	5 5	; Event
	237	[430]	SELF     	5 5 -53	; "new"
	238	[430]	LOADK    	7 -64	; "KeyRelease"
	239	[430]	MOVE     	8 4
	240	[430]	TAILCALL 	5 4 0
	241	[430]	RETURN   	5 0
	242	[432]	RETURN   	0 1

function <./frontend/device/input.lua:374,377> (7 instructions, 28 bytes at 0x7f9f6940ca10)
0 params, 2 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[375]	GETUPVAL 	0 0	; Device
	2	[375]	SELF     	0 0 -1	; "saveSettings"
	3	[375]	CALL     	0 2 1
	4	[376]	GETUPVAL 	0 1	; UIManager
	5	[376]	SELF     	0 0 -2	; "quit"
	6	[376]	CALL     	0 2 1
	7	[377]	RETURN   	0 1

function <./frontend/device/input.lua:434,436> (1 instruction, 4 bytes at 0x7f9f6940d4a0)
2 params, 2 slots, 0 upvalues, 2 locals, 0 constants, 0 functions
	1	[436]	RETURN   	0 1

function <./frontend/device/input.lua:438,440> (1 instruction, 4 bytes at 0x7f9f6940d6c0)
2 params, 2 slots, 0 upvalues, 2 locals, 0 constants, 0 functions
	1	[440]	RETURN   	0 1

function <./frontend/device/input.lua:469,539> (181 instructions, 724 bytes at 0x7f9f6940d890)
2 params, 14 slots, 12 upvalues, 18 locals, 35 constants, 0 functions
	1	[470]	GETTABLE 	2 1 -1	; "type"
	2	[470]	GETUPVAL 	3 0	; EV_ABS
	3	[470]	EQ       	0 2 3
	4	[470]	JMP      	91	; to 96
	5	[471]	GETTABLE 	2 0 -2	; "MTSlots"
	6	[471]	LEN      	2 2
	7	[471]	EQ       	0 2 -3	; - 0
	8	[471]	JMP      	7	; to 16
	9	[472]	GETGLOBAL	2 -4	; table
	10	[472]	GETTABLE 	2 2 -5	; "insert"
	11	[472]	GETTABLE 	3 0 -2	; "MTSlots"
	12	[472]	SELF     	4 0 -6	; "getMtSlot"
	13	[472]	GETTABLE 	6 0 -7	; "cur_slot"
	14	[472]	CALL     	4 3 0
	15	[472]	CALL     	2 0 1
	16	[474]	GETTABLE 	2 1 -8	; "code"
	17	[474]	GETUPVAL 	3 1	; ABS_MT_SLOT
	18	[474]	EQ       	0 2 3
	19	[474]	JMP      	4	; to 24
	20	[475]	SELF     	2 0 -9	; "addSlotIfChanged"
	21	[475]	GETTABLE 	4 1 -10	; "value"
	22	[475]	CALL     	2 3 1
	23	[475]	JMP      	157	; to 181
	24	[476]	GETTABLE 	2 1 -8	; "code"
	25	[476]	GETUPVAL 	3 2	; ABS_MT_TRACKING_ID
	26	[476]	EQ       	0 2 3
	27	[476]	JMP      	11	; to 39
	28	[477]	GETTABLE 	2 0 -11	; "snow_protocol"
	29	[477]	TEST     	2 0 0
	30	[477]	JMP      	3	; to 34
	31	[478]	SELF     	2 0 -9	; "addSlotIfChanged"
	32	[478]	GETTABLE 	4 1 -10	; "value"
	33	[478]	CALL     	2 3 1
	34	[480]	SELF     	2 0 -12	; "setCurrentMtSlot"
	35	[480]	LOADK    	4 -13	; "id"
	36	[480]	GETTABLE 	5 1 -10	; "value"
	37	[480]	CALL     	2 4 1
	38	[480]	JMP      	142	; to 181
	39	[481]	GETTABLE 	2 1 -8	; "code"
	40	[481]	GETUPVAL 	3 3	; ABS_MT_POSITION_X
	41	[481]	EQ       	0 2 3
	42	[481]	JMP      	5	; to 48
	43	[482]	SELF     	2 0 -12	; "setCurrentMtSlot"
	44	[482]	LOADK    	4 -14	; "x"
	45	[482]	GETTABLE 	5 1 -10	; "value"
	46	[482]	CALL     	2 4 1
	47	[482]	JMP      	133	; to 181
	48	[483]	GETTABLE 	2 1 -8	; "code"
	49	[483]	GETUPVAL 	3 4	; ABS_MT_POSITION_Y
	50	[483]	EQ       	0 2 3
	51	[483]	JMP      	5	; to 57
	52	[484]	SELF     	2 0 -12	; "setCurrentMtSlot"
	53	[484]	LOADK    	4 -15	; "y"
	54	[484]	GETTABLE 	5 1 -10	; "value"
	55	[484]	CALL     	2 4 1
	56	[484]	JMP      	124	; to 181
	57	[488]	GETTABLE 	2 1 -8	; "code"
	58	[488]	GETUPVAL 	3 5	; ABS_X
	59	[488]	EQ       	0 2 3
	60	[488]	JMP      	5	; to 66
	61	[489]	SELF     	2 0 -12	; "setCurrentMtSlot"
	62	[489]	LOADK    	4 -16	; "abs_x"
	63	[489]	GETTABLE 	5 1 -10	; "value"
	64	[489]	CALL     	2 4 1
	65	[489]	JMP      	115	; to 181
	66	[490]	GETTABLE 	2 1 -8	; "code"
	67	[490]	GETUPVAL 	3 6	; ABS_Y
	68	[490]	EQ       	0 2 3
	69	[490]	JMP      	5	; to 75
	70	[491]	SELF     	2 0 -12	; "setCurrentMtSlot"
	71	[491]	LOADK    	4 -17	; "abs_y"
	72	[491]	GETTABLE 	5 1 -10	; "value"
	73	[491]	CALL     	2 4 1
	74	[491]	JMP      	106	; to 181
	75	[492]	GETTABLE 	2 1 -8	; "code"
	76	[492]	GETUPVAL 	3 7	; ABS_PRESSURE
	77	[492]	EQ       	0 2 3
	78	[492]	JMP      	102	; to 181
	79	[493]	GETTABLE 	2 1 -10	; "value"
	80	[493]	EQ       	1 2 -3	; - 0
	81	[493]	JMP      	7	; to 89
	82	[494]	SELF     	2 0 -12	; "setCurrentMtSlot"
	83	[494]	LOADK    	4 -13	; "id"
	84	[494]	LOADK    	5 -18	; 1
	85	[494]	CALL     	2 4 1
	86	[495]	SELF     	2 0 -19	; "confirmAbsxy"
	87	[495]	CALL     	2 2 1
	88	[495]	JMP      	92	; to 181
	89	[497]	SELF     	2 0 -20	; "cleanAbsxy"
	90	[497]	CALL     	2 2 1
	91	[498]	SELF     	2 0 -12	; "setCurrentMtSlot"
	92	[498]	LOADK    	4 -13	; "id"
	93	[498]	LOADK    	5 -21	; -1
	94	[498]	CALL     	2 4 1
	95	[500]	JMP      	85	; to 181
	96	[501]	GETTABLE 	2 1 -1	; "type"
	97	[501]	GETUPVAL 	3 8	; EV_SYN
	98	[501]	EQ       	0 2 3
	99	[501]	JMP      	81	; to 181
	100	[502]	GETTABLE 	2 1 -8	; "code"
	101	[502]	GETUPVAL 	3 9	; SYN_REPORT
	102	[502]	EQ       	0 2 3
	103	[502]	JMP      	77	; to 181
	104	[503]	GETGLOBAL	2 -22	; pairs
	105	[503]	GETTABLE 	3 0 -2	; "MTSlots"
	106	[503]	CALL     	2 2 4
	107	[503]	JMP      	16	; to 124
	108	[504]	SELF     	7 0 -23	; "setMtSlot"
	109	[504]	GETTABLE 	9 6 -24	; "slot"
	110	[504]	LOADK    	10 -25	; "timev"
	111	[504]	GETUPVAL 	11 10	; TimeVal
	112	[504]	SELF     	11 11 -26	; "new"
	113	[504]	GETTABLE 	13 1 -27	; "time"
	114	[504]	CALL     	11 3 0
	115	[504]	CALL     	7 0 1
	116	[505]	GETTABLE 	7 0 -11	; "snow_protocol"
	117	[505]	TEST     	7 0 0
	118	[505]	JMP      	5	; to 124
	119	[507]	SELF     	7 0 -23	; "setMtSlot"
	120	[507]	GETTABLE 	9 6 -24	; "slot"
	121	[507]	LOADK    	10 -28	; "used"
	122	[507]	LOADBOOL 	11 1 0
	123	[507]	CALL     	7 5 1
	124	[503]	TFORLOOP 	2 2
	125	[508]	JMP      	-18	; to 108
	126	[510]	GETTABLE 	2 0 -11	; "snow_protocol"
	127	[510]	TEST     	2 0 0
	128	[510]	JMP      	22	; to 151
	129	[513]	NEWTABLE 	2 0 0
	130	[513]	SETTABLE 	0 -2 2	; "MTSlots" -
	131	[514]	GETGLOBAL	2 -22	; pairs
	132	[514]	GETTABLE 	3 0 -29	; "ev_slots"
	133	[514]	CALL     	2 2 4
	134	[514]	JMP      	14	; to 149
	135	[515]	GETGLOBAL	7 -4	; table
	136	[515]	GETTABLE 	7 7 -5	; "insert"
	137	[515]	GETTABLE 	8 0 -2	; "MTSlots"
	138	[515]	MOVE     	9 6
	139	[515]	CALL     	7 3 1
	140	[516]	GETTABLE 	7 6 -28	; "used"
	141	[516]	TEST     	7 0 1
	142	[516]	JMP      	6	; to 149
	143	[517]	SETTABLE 	6 -13 -21	; "id" -1
	144	[518]	GETUPVAL 	7 10	; TimeVal
	145	[518]	SELF     	7 7 -26	; "new"
	146	[518]	GETTABLE 	9 1 -27	; "time"
	147	[518]	CALL     	7 3 2
	148	[518]	SETTABLE 	6 -25 7	; "timev" -
	149	[514]	TFORLOOP 	2 2
	150	[519]	JMP      	-16	; to 135
	151	[523]	GETTABLE 	2 0 -30	; "gesture_detector"
	152	[523]	SELF     	2 2 -31	; "feedEvent"
	153	[523]	GETTABLE 	4 0 -2	; "MTSlots"
	154	[523]	CALL     	2 3 2
	155	[524]	NEWTABLE 	3 0 0
	156	[524]	SETTABLE 	0 -2 3	; "MTSlots" -
	157	[525]	GETTABLE 	3 0 -11	; "snow_protocol"
	158	[525]	TEST     	3 0 0
	159	[525]	JMP      	7	; to 167
	160	[527]	GETGLOBAL	3 -22	; pairs
	161	[527]	GETTABLE 	4 0 -29	; "ev_slots"
	162	[527]	CALL     	3 2 4
	163	[527]	JMP      	1	; to 165
	164	[528]	SETTABLE 	7 -28 -32	; "used" nil
	165	[527]	TFORLOOP 	3 2
	166	[528]	JMP      	-3	; to 164
	167	[531]	TEST     	2 0 0
	168	[531]	JMP      	12	; to 181
	169	[532]	SELF     	3 0 -33	; "gestureAdjustHook"
	170	[532]	MOVE     	5 2
	171	[532]	CALL     	3 3 1
	172	[533]	GETUPVAL 	3 11	; Event
	173	[533]	SELF     	3 3 -26	; "new"
	174	[533]	LOADK    	5 -34	; "Gesture"
	175	[534]	GETTABLE 	6 0 -30	; "gesture_detector"
	176	[534]	SELF     	6 6 -35	; "adjustGesCoordinate"
	177	[534]	MOVE     	8 2
	178	[534]	CALL     	6 3 0
	179	[533]	TAILCALL 	3 0 0
	180	[535]	RETURN   	3 0
	181	[539]	RETURN   	0 1

function <./frontend/device/input.lua:540,601> (100 instructions, 400 bytes at 0x7f9f6940d980)
2 params, 14 slots, 9 upvalues, 8 locals, 26 constants, 0 functions
	1	[571]	GETTABLE 	2 1 -1	; "type"
	2	[571]	GETUPVAL 	3 0	; EV_ABS
	3	[571]	EQ       	0 2 3
	4	[571]	JMP      	53	; to 58
	5	[572]	GETTABLE 	2 0 -2	; "MTSlots"
	6	[572]	LEN      	2 2
	7	[572]	EQ       	0 2 -3	; - 0
	8	[572]	JMP      	7	; to 16
	9	[573]	GETGLOBAL	2 -4	; table
	10	[573]	GETTABLE 	2 2 -5	; "insert"
	11	[573]	GETTABLE 	3 0 -2	; "MTSlots"
	12	[573]	SELF     	4 0 -6	; "getMtSlot"
	13	[573]	GETTABLE 	6 0 -7	; "cur_slot"
	14	[573]	CALL     	4 3 0
	15	[573]	CALL     	2 0 1
	16	[575]	GETTABLE 	2 1 -8	; "code"
	17	[575]	GETUPVAL 	3 1	; ABS_MT_TRACKING_ID
	18	[575]	EQ       	0 2 3
	19	[575]	JMP      	8	; to 28
	20	[576]	SELF     	2 0 -9	; "addSlotIfChanged"
	21	[576]	GETTABLE 	4 1 -10	; "value"
	22	[576]	CALL     	2 3 1
	23	[577]	SELF     	2 0 -11	; "setCurrentMtSlot"
	24	[577]	LOADK    	4 -12	; "id"
	25	[577]	GETTABLE 	5 1 -10	; "value"
	26	[577]	CALL     	2 4 1
	27	[577]	JMP      	72	; to 100
	28	[578]	GETTABLE 	2 1 -8	; "code"
	29	[578]	GETUPVAL 	3 2	; ABS_MT_TOUCH_MAJOR
	30	[578]	EQ       	0 2 3
	31	[578]	JMP      	8	; to 40
	32	[578]	GETTABLE 	2 1 -10	; "value"
	33	[578]	EQ       	0 2 -3	; - 0
	34	[578]	JMP      	5	; to 40
	35	[579]	SELF     	2 0 -11	; "setCurrentMtSlot"
	36	[579]	LOADK    	4 -12	; "id"
	37	[579]	LOADK    	5 -13	; -1
	38	[579]	CALL     	2 4 1
	39	[579]	JMP      	60	; to 100
	40	[580]	GETTABLE 	2 1 -8	; "code"
	41	[580]	GETUPVAL 	3 3	; ABS_MT_POSITION_X
	42	[580]	EQ       	0 2 3
	43	[580]	JMP      	5	; to 49
	44	[581]	SELF     	2 0 -11	; "setCurrentMtSlot"
	45	[581]	LOADK    	4 -14	; "x"
	46	[581]	GETTABLE 	5 1 -10	; "value"
	47	[581]	CALL     	2 4 1
	48	[581]	JMP      	51	; to 100
	49	[582]	GETTABLE 	2 1 -8	; "code"
	50	[582]	GETUPVAL 	3 4	; ABS_MT_POSITION_Y
	51	[582]	EQ       	0 2 3
	52	[582]	JMP      	47	; to 100
	53	[583]	SELF     	2 0 -11	; "setCurrentMtSlot"
	54	[583]	LOADK    	4 -15	; "y"
	55	[583]	GETTABLE 	5 1 -10	; "value"
	56	[583]	CALL     	2 4 1
	57	[584]	JMP      	42	; to 100
	58	[585]	GETTABLE 	2 1 -1	; "type"
	59	[585]	GETUPVAL 	3 5	; EV_SYN
	60	[585]	EQ       	0 2 3
	61	[585]	JMP      	38	; to 100
	62	[586]	GETTABLE 	2 1 -8	; "code"
	63	[586]	GETUPVAL 	3 6	; SYN_REPORT
	64	[586]	EQ       	0 2 3
	65	[586]	JMP      	34	; to 100
	66	[587]	GETGLOBAL	2 -16	; pairs
	67	[587]	GETTABLE 	3 0 -2	; "MTSlots"
	68	[587]	CALL     	2 2 4
	69	[587]	JMP      	8	; to 78
	70	[588]	SELF     	7 0 -17	; "setMtSlot"
	71	[588]	GETTABLE 	9 6 -18	; "slot"
	72	[588]	LOADK    	10 -19	; "timev"
	73	[588]	GETUPVAL 	11 7	; TimeVal
	74	[588]	SELF     	11 11 -20	; "new"
	75	[588]	GETTABLE 	13 1 -21	; "time"
	76	[588]	CALL     	11 3 0
	77	[588]	CALL     	7 0 1
	78	[587]	TFORLOOP 	2 2
	79	[588]	JMP      	-10	; to 70
	80	[591]	GETTABLE 	2 0 -22	; "gesture_detector"
	81	[591]	SELF     	2 2 -23	; "feedEvent"
	82	[591]	GETTABLE 	4 0 -2	; "MTSlots"
	83	[591]	CALL     	2 3 2
	84	[592]	NEWTABLE 	3 0 0
	85	[592]	SETTABLE 	0 -2 3	; "MTSlots" -
	86	[593]	TEST     	2 0 0
	87	[593]	JMP      	12	; to 100
	88	[594]	SELF     	3 0 -24	; "gestureAdjustHook"
	89	[594]	MOVE     	5 2
	90	[594]	CALL     	3 3 1
	91	[595]	GETUPVAL 	3 8	; Event
	92	[595]	SELF     	3 3 -20	; "new"
	93	[595]	LOADK    	5 -25	; "Gesture"
	94	[596]	GETTABLE 	6 0 -22	; "gesture_detector"
	95	[596]	SELF     	6 6 -26	; "adjustGesCoordinate"
	96	[596]	MOVE     	8 2
	97	[596]	CALL     	6 3 0
	98	[595]	TAILCALL 	3 0 0
	99	[597]	RETURN   	3 0
	100	[601]	RETURN   	0 1

function <./frontend/device/input.lua:602,637> (93 instructions, 372 bytes at 0x7f9f6940e010)
2 params, 14 slots, 8 upvalues, 8 locals, 26 constants, 0 functions
	1	[605]	GETTABLE 	2 1 -1	; "type"
	2	[605]	GETUPVAL 	3 0	; EV_ABS
	3	[605]	EQ       	0 2 3
	4	[605]	JMP      	46	; to 51
	5	[606]	GETTABLE 	2 0 -2	; "MTSlots"
	6	[606]	LEN      	2 2
	7	[606]	EQ       	0 2 -3	; - 0
	8	[606]	JMP      	7	; to 16
	9	[607]	GETGLOBAL	2 -4	; table
	10	[607]	GETTABLE 	2 2 -5	; "insert"
	11	[607]	GETTABLE 	3 0 -2	; "MTSlots"
	12	[607]	SELF     	4 0 -6	; "getMtSlot"
	13	[607]	GETTABLE 	6 0 -7	; "cur_slot"
	14	[607]	CALL     	4 3 0
	15	[607]	CALL     	2 0 1
	16	[609]	GETTABLE 	2 1 -8	; "code"
	17	[609]	GETUPVAL 	3 1	; ABS_X
	18	[609]	EQ       	0 2 3
	19	[609]	JMP      	5	; to 25
	20	[610]	SELF     	2 0 -9	; "setCurrentMtSlot"
	21	[610]	LOADK    	4 -10	; "x"
	22	[610]	GETTABLE 	5 1 -11	; "value"
	23	[610]	CALL     	2 4 1
	24	[610]	JMP      	68	; to 93
	25	[611]	GETTABLE 	2 1 -8	; "code"
	26	[611]	GETUPVAL 	3 2	; ABS_Y
	27	[611]	EQ       	0 2 3
	28	[611]	JMP      	5	; to 34
	29	[612]	SELF     	2 0 -9	; "setCurrentMtSlot"
	30	[612]	LOADK    	4 -12	; "y"
	31	[612]	GETTABLE 	5 1 -11	; "value"
	32	[612]	CALL     	2 4 1
	33	[612]	JMP      	59	; to 93
	34	[613]	GETTABLE 	2 1 -8	; "code"
	35	[613]	GETUPVAL 	3 3	; ABS_PRESSURE
	36	[613]	EQ       	0 2 3
	37	[613]	JMP      	55	; to 93
	38	[614]	GETTABLE 	2 1 -11	; "value"
	39	[614]	EQ       	1 2 -3	; - 0
	40	[614]	JMP      	5	; to 46
	41	[615]	SELF     	2 0 -9	; "setCurrentMtSlot"
	42	[615]	LOADK    	4 -13	; "id"
	43	[615]	LOADK    	5 -14	; 1
	44	[615]	CALL     	2 4 1
	45	[615]	JMP      	47	; to 93
	46	[617]	SELF     	2 0 -9	; "setCurrentMtSlot"
	47	[617]	LOADK    	4 -13	; "id"
	48	[617]	LOADK    	5 -15	; -1
	49	[617]	CALL     	2 4 1
	50	[619]	JMP      	42	; to 93
	51	[620]	GETTABLE 	2 1 -1	; "type"
	52	[620]	GETUPVAL 	3 4	; EV_SYN
	53	[620]	EQ       	0 2 3
	54	[620]	JMP      	38	; to 93
	55	[621]	GETTABLE 	2 1 -8	; "code"
	56	[621]	GETUPVAL 	3 5	; SYN_REPORT
	57	[621]	EQ       	0 2 3
	58	[621]	JMP      	34	; to 93
	59	[622]	GETGLOBAL	2 -16	; pairs
	60	[622]	GETTABLE 	3 0 -2	; "MTSlots"
	61	[622]	CALL     	2 2 4
	62	[622]	JMP      	8	; to 71
	63	[623]	SELF     	7 0 -17	; "setMtSlot"
	64	[623]	GETTABLE 	9 6 -18	; "slot"
	65	[623]	LOADK    	10 -19	; "timev"
	66	[623]	GETUPVAL 	11 6	; TimeVal
	67	[623]	SELF     	11 11 -20	; "new"
	68	[623]	GETTABLE 	13 1 -21	; "time"
	69	[623]	CALL     	11 3 0
	70	[623]	CALL     	7 0 1
	71	[622]	TFORLOOP 	2 2
	72	[623]	JMP      	-10	; to 63
	73	[627]	GETTABLE 	2 0 -22	; "gesture_detector"
	74	[627]	SELF     	2 2 -23	; "feedEvent"
	75	[627]	GETTABLE 	4 0 -2	; "MTSlots"
	76	[627]	CALL     	2 3 2
	77	[628]	NEWTABLE 	3 0 0
	78	[628]	SETTABLE 	0 -2 3	; "MTSlots" -
	79	[629]	TEST     	2 0 0
	80	[629]	JMP      	12	; to 93
	81	[630]	SELF     	3 0 -24	; "gestureAdjustHook"
	82	[630]	MOVE     	5 2
	83	[630]	CALL     	3 3 1
	84	[631]	GETUPVAL 	3 7	; Event
	85	[631]	SELF     	3 3 -20	; "new"
	86	[631]	LOADK    	5 -25	; "Gesture"
	87	[632]	GETTABLE 	6 0 -22	; "gesture_detector"
	88	[632]	SELF     	6 6 -26	; "adjustGesCoordinate"
	89	[632]	MOVE     	8 2
	90	[632]	CALL     	6 3 0
	91	[631]	TAILCALL 	3 0 0
	92	[633]	RETURN   	3 0
	93	[637]	RETURN   	0 1

function <./frontend/device/input.lua:639,666> (70 instructions, 280 bytes at 0x7f9f6940e9a0)
2 params, 9 slots, 9 upvalues, 7 locals, 15 constants, 0 functions
	1	[641]	GETTABLE 	4 1 -1	; "value"
	2	[641]	GETUPVAL 	5 0	; DEVICE_ORIENTATION_PORTRAIT
	3	[641]	EQ       	1 4 5
	4	[641]	JMP      	8	; to 13
	5	[642]	GETTABLE 	4 1 -1	; "value"
	6	[642]	GETUPVAL 	5 1	; DEVICE_ORIENTATION_PORTRAIT_LEFT
	7	[642]	EQ       	1 4 5
	8	[642]	JMP      	4	; to 13
	9	[643]	GETTABLE 	4 1 -1	; "value"
	10	[643]	GETUPVAL 	5 2	; DEVICE_ORIENTATION_PORTRAIT_RIGHT
	11	[643]	EQ       	0 4 5
	12	[643]	JMP      	4	; to 17
	13	[644]	GETUPVAL 	4 3	; framebuffer
	14	[644]	GETTABLE 	2 4 -2	; "ORIENTATION_PORTRAIT"
	15	[645]	LOADK    	3 -3	; "portrait"
	16	[645]	JMP      	31	; to 48
	17	[646]	GETTABLE 	4 1 -1	; "value"
	18	[646]	GETUPVAL 	5 4	; DEVICE_ORIENTATION_LANDSCAPE
	19	[646]	EQ       	0 4 5
	20	[646]	JMP      	4	; to 25
	21	[647]	GETUPVAL 	4 3	; framebuffer
	22	[647]	GETTABLE 	2 4 -4	; "ORIENTATION_LANDSCAPE"
	23	[648]	LOADK    	3 -5	; "landscape"
	24	[648]	JMP      	23	; to 48
	25	[649]	GETTABLE 	4 1 -1	; "value"
	26	[649]	GETUPVAL 	5 5	; DEVICE_ORIENTATION_PORTRAIT_ROTATED
	27	[649]	EQ       	1 4 5
	28	[649]	JMP      	8	; to 37
	29	[650]	GETTABLE 	4 1 -1	; "value"
	30	[650]	GETUPVAL 	5 6	; DEVICE_ORIENTATION_PORTRAIT_ROTATED_LEFT
	31	[650]	EQ       	1 4 5
	32	[650]	JMP      	4	; to 37
	33	[651]	GETTABLE 	4 1 -1	; "value"
	34	[651]	GETUPVAL 	5 7	; DEVICE_ORIENTATION_PORTRAIT_ROTATED_RIGHT
	35	[651]	EQ       	0 4 5
	36	[651]	JMP      	4	; to 41
	37	[652]	GETUPVAL 	4 3	; framebuffer
	38	[652]	GETTABLE 	2 4 -6	; "ORIENTATION_PORTRAIT_ROTATED"
	39	[653]	LOADK    	3 -3	; "portrait"
	40	[653]	JMP      	7	; to 48
	41	[654]	GETTABLE 	4 1 -1	; "value"
	42	[654]	GETUPVAL 	5 8	; DEVICE_ORIENTATION_LANDSCAPE_ROTATED
	43	[654]	EQ       	0 4 5
	44	[654]	JMP      	3	; to 48
	45	[655]	GETUPVAL 	4 3	; framebuffer
	46	[655]	GETTABLE 	2 4 -7	; "ORIENTATION_LANDSCAPE_ROTATED"
	47	[656]	LOADK    	3 -5	; "landscape"
	48	[659]	GETTABLE 	4 0 -8	; "device"
	49	[659]	GETTABLE 	4 4 -9	; "screen"
	50	[659]	SELF     	4 4 -10	; "getRotationMode"
	51	[659]	CALL     	4 2 2
	52	[660]	GETTABLE 	5 0 -8	; "device"
	53	[660]	GETTABLE 	5 5 -9	; "screen"
	54	[660]	SELF     	5 5 -11	; "getScreenMode"
	55	[660]	CALL     	5 2 2
	56	[661]	EQ       	1 2 4
	57	[661]	JMP      	12	; to 70
	58	[661]	EQ       	0 3 5
	59	[661]	JMP      	10	; to 70
	60	[662]	GETTABLE 	6 0 -8	; "device"
	61	[662]	GETTABLE 	6 6 -9	; "screen"
	62	[662]	SELF     	6 6 -12	; "setRotationMode"
	63	[662]	MOVE     	8 2
	64	[662]	CALL     	6 3 1
	65	[663]	GETGLOBAL	6 -13	; require
	66	[663]	LOADK    	7 -14	; "ui/uimanager"
	67	[663]	CALL     	6 2 2
	68	[664]	SELF     	7 6 -15	; "onRotation"
	69	[664]	CALL     	7 2 1
	70	[666]	RETURN   	0 1

function <./frontend/device/input.lua:669,711> (70 instructions, 280 bytes at 0x7f9f6940a370)
2 params, 11 slots, 7 upvalues, 7 locals, 18 constants, 0 functions
	1	[671]	GETTABLE 	4 1 -1	; "code"
	2	[671]	GETUPVAL 	5 0	; MSC_RAW
	3	[671]	EQ       	0 4 5
	4	[671]	JMP      	34	; to 39
	5	[672]	GETTABLE 	4 1 -2	; "value"
	6	[672]	GETUPVAL 	5 1	; MSC_RAW_GSENSOR_PORTRAIT_UP
	7	[672]	EQ       	0 4 5
	8	[672]	JMP      	4	; to 13
	9	[674]	GETUPVAL 	4 2	; framebuffer
	10	[674]	GETTABLE 	2 4 -3	; "ORIENTATION_PORTRAIT"
	11	[675]	LOADK    	3 -4	; "portrait"
	12	[675]	JMP      	27	; to 40
	13	[676]	GETTABLE 	4 1 -2	; "value"
	14	[676]	GETUPVAL 	5 3	; MSC_RAW_GSENSOR_LANDSCAPE_RIGHT
	15	[676]	EQ       	0 4 5
	16	[676]	JMP      	4	; to 21
	17	[678]	GETUPVAL 	4 2	; framebuffer
	18	[678]	GETTABLE 	2 4 -5	; "ORIENTATION_LANDSCAPE"
	19	[679]	LOADK    	3 -6	; "landscape"
	20	[679]	JMP      	19	; to 40
	21	[680]	GETTABLE 	4 1 -2	; "value"
	22	[680]	GETUPVAL 	5 4	; MSC_RAW_GSENSOR_PORTRAIT_DOWN
	23	[680]	EQ       	0 4 5
	24	[680]	JMP      	4	; to 29
	25	[682]	GETUPVAL 	4 2	; framebuffer
	26	[682]	GETTABLE 	2 4 -7	; "ORIENTATION_PORTRAIT_ROTATED"
	27	[683]	LOADK    	3 -4	; "portrait"
	28	[683]	JMP      	11	; to 40
	29	[684]	GETTABLE 	4 1 -2	; "value"
	30	[684]	GETUPVAL 	5 5	; MSC_RAW_GSENSOR_LANDSCAPE_LEFT
	31	[684]	EQ       	0 4 5
	32	[684]	JMP      	4	; to 37
	33	[686]	GETUPVAL 	4 2	; framebuffer
	34	[686]	GETTABLE 	2 4 -8	; "ORIENTATION_LANDSCAPE_ROTATED"
	35	[687]	LOADK    	3 -6	; "landscape"
	36	[687]	JMP      	3	; to 40
	37	[690]	RETURN   	0 1
	38	[691]	JMP      	1	; to 40
	39	[694]	RETURN   	0 1
	40	[697]	GETTABLE 	4 0 -9	; "device"
	41	[697]	GETTABLE 	4 4 -10	; "screen"
	42	[697]	SELF     	4 4 -11	; "getRotationMode"
	43	[697]	CALL     	4 2 2
	44	[698]	GETTABLE 	5 0 -9	; "device"
	45	[698]	GETTABLE 	5 5 -10	; "screen"
	46	[698]	SELF     	5 5 -12	; "getScreenMode"
	47	[698]	CALL     	5 2 2
	48	[702]	EQ       	1 2 4
	49	[702]	JMP      	20	; to 70
	50	[703]	EQ       	1 3 5
	51	[703]	JMP      	8	; to 60
	52	[704]	GETUPVAL 	6 6	; Event
	53	[704]	SELF     	6 6 -13	; "new"
	54	[704]	LOADK    	8 -14	; "SwapScreenMode"
	55	[704]	MOVE     	9 3
	56	[704]	MOVE     	10 2
	57	[704]	TAILCALL 	6 5 0
	58	[704]	RETURN   	6 0
	59	[704]	JMP      	10	; to 70
	60	[706]	GETTABLE 	6 0 -9	; "device"
	61	[706]	GETTABLE 	6 6 -10	; "screen"
	62	[706]	SELF     	6 6 -15	; "setRotationMode"
	63	[706]	MOVE     	8 2
	64	[706]	CALL     	6 3 1
	65	[707]	GETGLOBAL	6 -16	; require
	66	[707]	LOADK    	7 -17	; "ui/uimanager"
	67	[707]	CALL     	6 2 2
	68	[708]	SELF     	7 6 -18	; "onRotation"
	69	[708]	CALL     	7 2 1
	70	[711]	RETURN   	0 1

function <./frontend/device/input.lua:714,737> (34 instructions, 136 bytes at 0x7f9f6940e890)
2 params, 3 slots, 0 upvalues, 2 locals, 5 constants, 2 functions
	1	[715]	TEST     	1 0 0
	2	[715]	JMP      	9	; to 12
	3	[715]	EQ       	0 1 -1	; - true
	4	[715]	JMP      	7	; to 12
	5	[717]	GETTABLE 	2 0 -2	; "isNTXAccelHooked"
	6	[717]	TEST     	2 0 1
	7	[717]	JMP      	26	; to 34
	8	[718]	GETTABLE 	2 0 -4	; "handleMiscEvNTX"
	9	[718]	SETTABLE 	0 -3 2	; "handleMiscEv" -
	10	[719]	SETTABLE 	0 -2 -1	; "isNTXAccelHooked" true
	11	[720]	JMP      	22	; to 34
	12	[721]	TEST     	1 0 0
	13	[721]	JMP      	9	; to 23
	14	[721]	EQ       	0 1 -5	; - false
	15	[721]	JMP      	7	; to 23
	16	[723]	GETTABLE 	2 0 -2	; "isNTXAccelHooked"
	17	[723]	TEST     	2 0 0
	18	[723]	JMP      	15	; to 34
	19	[724]	CLOSURE  	2 0	; 0x7f9f6940b880
	20	[724]	SETTABLE 	0 -3 2	; "handleMiscEv" -
	21	[725]	SETTABLE 	0 -2 -5	; "isNTXAccelHooked" false
	22	[726]	JMP      	11	; to 34
	23	[729]	GETTABLE 	2 0 -2	; "isNTXAccelHooked"
	24	[729]	TEST     	2 0 0
	25	[729]	JMP      	3	; to 29
	26	[730]	CLOSURE  	2 1	; 0x7f9f6940d7f0
	27	[730]	SETTABLE 	0 -3 2	; "handleMiscEv" -
	28	[730]	JMP      	2	; to 31
	29	[732]	GETTABLE 	2 0 -4	; "handleMiscEvNTX"
	30	[732]	SETTABLE 	0 -3 2	; "handleMiscEv" -
	31	[735]	GETTABLE 	2 0 -2	; "isNTXAccelHooked"
	32	[735]	NOT      	2 2
	33	[735]	SETTABLE 	0 -2 2	; "isNTXAccelHooked" -
	34	[737]	RETURN   	0 1

function <./frontend/device/input.lua:724,724> (1 instruction, 4 bytes at 0x7f9f6940b880)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[724]	RETURN   	0 1

function <./frontend/device/input.lua:730,730> (1 instruction, 4 bytes at 0x7f9f6940d7f0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[730]	RETURN   	0 1

function <./frontend/device/input.lua:741,749> (12 instructions, 48 bytes at 0x7f9f6940c0e0)
4 params, 6 slots, 0 upvalues, 4 locals, 2 constants, 0 functions
	1	[742]	GETTABLE 	4 0 -1	; "ev_slots"
	2	[742]	GETTABLE 	4 4 1
	3	[742]	TEST     	4 0 1
	4	[742]	JMP      	4	; to 9
	5	[743]	GETTABLE 	4 0 -1	; "ev_slots"
	6	[743]	NEWTABLE 	5 0 1
	7	[744]	SETTABLE 	5 -2 1	; "slot" -
	8	[745]	SETTABLE 	4 1 5
	9	[748]	GETTABLE 	4 0 -1	; "ev_slots"
	10	[748]	GETTABLE 	4 4 1
	11	[748]	SETTABLE 	4 2 3
	12	[749]	RETURN   	0 1

function <./frontend/device/input.lua:751,753> (6 instructions, 24 bytes at 0x7f9f6940c4c0)
3 params, 8 slots, 0 upvalues, 3 locals, 2 constants, 0 functions
	1	[752]	SELF     	3 0 -1	; "setMtSlot"
	2	[752]	GETTABLE 	5 0 -2	; "cur_slot"
	3	[752]	MOVE     	6 1
	4	[752]	MOVE     	7 2
	5	[752]	CALL     	3 5 1
	6	[753]	RETURN   	0 1

function <./frontend/device/input.lua:755,757> (4 instructions, 16 bytes at 0x7f9f69409970)
2 params, 3 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[756]	GETTABLE 	2 0 -1	; "ev_slots"
	2	[756]	GETTABLE 	2 2 1
	3	[756]	RETURN   	2 2
	4	[757]	RETURN   	0 1

function <./frontend/device/input.lua:759,761> (5 instructions, 20 bytes at 0x7f9f6940eac0)
1 param, 4 slots, 0 upvalues, 1 local, 2 constants, 0 functions
	1	[760]	SELF     	1 0 -1	; "getMtSlot"
	2	[760]	GETTABLE 	3 0 -2	; "cur_slot"
	3	[760]	TAILCALL 	1 3 0
	4	[760]	RETURN   	1 0
	5	[761]	RETURN   	0 1

function <./frontend/device/input.lua:763,768> (12 instructions, 48 bytes at 0x7f9f6940ea20)
2 params, 7 slots, 0 upvalues, 2 locals, 5 constants, 0 functions
	1	[764]	GETTABLE 	2 0 -1	; "cur_slot"
	2	[764]	EQ       	1 2 1
	3	[764]	JMP      	7	; to 11
	4	[765]	GETGLOBAL	2 -2	; table
	5	[765]	GETTABLE 	2 2 -3	; "insert"
	6	[765]	GETTABLE 	3 0 -4	; "MTSlots"
	7	[765]	SELF     	4 0 -5	; "getMtSlot"
	8	[765]	MOVE     	6 1
	9	[765]	CALL     	4 3 0
	10	[765]	CALL     	2 0 1
	11	[767]	SETTABLE 	0 -1 1	; "cur_slot" -
	12	[768]	RETURN   	0 1

function <./frontend/device/input.lua:770,773> (15 instructions, 60 bytes at 0x7f9f6940f5c0)
1 param, 6 slots, 0 upvalues, 1 local, 7 constants, 0 functions
	1	[771]	SELF     	1 0 -1	; "setCurrentMtSlot"
	2	[771]	LOADK    	3 -2	; "x"
	3	[771]	GETTABLE 	4 0 -3	; "ev_slots"
	4	[771]	GETTABLE 	5 0 -4	; "cur_slot"
	5	[771]	GETTABLE 	4 4 5
	6	[771]	GETTABLE 	4 4 -5	; "abs_x"
	7	[771]	CALL     	1 4 1
	8	[772]	SELF     	1 0 -1	; "setCurrentMtSlot"
	9	[772]	LOADK    	3 -6	; "y"
	10	[772]	GETTABLE 	4 0 -3	; "ev_slots"
	11	[772]	GETTABLE 	5 0 -4	; "cur_slot"
	12	[772]	GETTABLE 	4 4 5
	13	[772]	GETTABLE 	4 4 -7	; "abs_y"
	14	[772]	CALL     	1 4 1
	15	[773]	RETURN   	0 1

function <./frontend/device/input.lua:775,778> (9 instructions, 36 bytes at 0x7f9f6940fa00)
1 param, 5 slots, 0 upvalues, 1 local, 3 constants, 0 functions
	1	[776]	SELF     	1 0 -1	; "setCurrentMtSlot"
	2	[776]	LOADK    	3 -2	; "abs_x"
	3	[776]	LOADNIL  	4 4
	4	[776]	CALL     	1 4 1
	5	[777]	SELF     	1 0 -1	; "setCurrentMtSlot"
	6	[777]	LOADK    	3 -3	; "abs_y"
	7	[777]	LOADNIL  	4 4
	8	[777]	CALL     	1 4 1
	9	[778]	RETURN   	0 1

function <./frontend/device/input.lua:780,782> (8 instructions, 32 bytes at 0x7f9f6940c820)
2 params, 4 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[781]	GETTABLE 	2 1 -1	; "value"
	2	[781]	GETUPVAL 	3 0	; EVENT_VALUE_KEY_PRESS
	3	[781]	EQ       	1 2 3
	4	[781]	JMP      	1	; to 6
	5	[781]	LOADBOOL 	2 0 1
	6	[781]	LOADBOOL 	2 1 0
	7	[781]	RETURN   	2 2
	8	[782]	RETURN   	0 1

function <./frontend/device/input.lua:784,786> (8 instructions, 32 bytes at 0x7f9f6940c8a0)
2 params, 4 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[785]	GETTABLE 	2 1 -1	; "value"
	2	[785]	GETUPVAL 	3 0	; EVENT_VALUE_KEY_REPEAT
	3	[785]	EQ       	1 2 3
	4	[785]	JMP      	1	; to 6
	5	[785]	LOADBOOL 	2 0 1
	6	[785]	LOADBOOL 	2 1 0
	7	[785]	RETURN   	2 2
	8	[786]	RETURN   	0 1

function <./frontend/device/input.lua:788,790> (8 instructions, 32 bytes at 0x7f9f69410270)
2 params, 4 slots, 1 upvalue, 2 locals, 1 constant, 0 functions
	1	[789]	GETTABLE 	2 1 -1	; "value"
	2	[789]	GETUPVAL 	3 0	; EVENT_VALUE_KEY_RELEASE
	3	[789]	EQ       	1 2 3
	4	[789]	JMP      	1	; to 6
	5	[789]	LOADBOOL 	2 0 1
	6	[789]	LOADBOOL 	2 1 0
	7	[789]	RETURN   	2 2
	8	[790]	RETURN   	0 1

function <./frontend/device/input.lua:794,879> (224 instructions, 896 bytes at 0x7f9f694104d0)
2 params, 14 slots, 11 upvalues, 8 locals, 49 constants, 0 functions
	1	[798]	GETTABLE 	4 0 -1	; "timer_callbacks"
	2	[798]	LEN      	4 4
	3	[798]	LT       	0 -2 4	; 0 -
	4	[798]	JMP      	64	; to 69
	5	[799]	GETUPVAL 	4 0	; TimeVal
	6	[799]	SELF     	4 4 -3	; "now"
	7	[799]	CALL     	4 2 2
	8	[799]	GETUPVAL 	5 0	; TimeVal
	9	[799]	SELF     	5 5 -4	; "new"
	10	[799]	NEWTABLE 	7 0 1
	11	[800]	SETTABLE 	7 -5 1	; "usec" -
	12	[799]	CALL     	5 3 2
	13	[801]	ADD      	4 4 5
	14	[803]	GETTABLE 	5 0 -1	; "timer_callbacks"
	15	[803]	LEN      	5 5
	16	[803]	LT       	0 -2 5	; 0 -
	17	[803]	JMP      	58	; to 76
	18	[804]	GETGLOBAL	5 -6	; pcall
	19	[804]	GETUPVAL 	6 1	; input
	20	[804]	GETTABLE 	6 6 -7	; "waitForEvent"
	21	[804]	LOADK    	7 -8	; 100
	22	[804]	CALL     	5 3 3
	23	[804]	MOVE     	3 6
	24	[804]	MOVE     	2 5
	25	[805]	TEST     	2 0 0
	26	[805]	JMP      	1	; to 28
	27	[805]	JMP      	48	; to 76
	28	[806]	GETUPVAL 	5 0	; TimeVal
	29	[806]	SELF     	5 5 -3	; "now"
	30	[806]	CALL     	5 2 2
	31	[807]	TEST     	1 0 0
	32	[807]	JMP      	2	; to 35
	33	[807]	LT       	0 5 4
	34	[807]	JMP      	41	; to 76
	35	[809]	GETTABLE 	6 0 -1	; "timer_callbacks"
	36	[809]	GETTABLE 	6 6 -9	; 1
	37	[809]	GETTABLE 	6 6 -10	; "deadline"
	38	[809]	LE       	0 6 5
	39	[809]	JMP      	-26	; to 14
	40	[810]	GETTABLE 	6 0 -1	; "timer_callbacks"
	41	[810]	GETTABLE 	6 6 -9	; 1
	42	[810]	GETTABLE 	6 6 -11	; "callback"
	43	[810]	CALL     	6 1 2
	44	[811]	GETGLOBAL	7 -12	; table
	45	[811]	GETTABLE 	7 7 -13	; "remove"
	46	[811]	GETTABLE 	8 0 -1	; "timer_callbacks"
	47	[811]	LOADK    	9 -9	; 1
	48	[811]	CALL     	7 3 1
	49	[812]	TEST     	6 0 0
	50	[812]	JMP      	-37	; to 14
	51	[815]	NEWTABLE 	7 0 0
	52	[815]	SETTABLE 	0 -1 7	; "timer_callbacks" -
	53	[816]	SELF     	7 0 -14	; "gestureAdjustHook"
	54	[816]	MOVE     	9 6
	55	[816]	CALL     	7 3 1
	56	[817]	GETUPVAL 	7 2	; Event
	57	[817]	SELF     	7 7 -4	; "new"
	58	[817]	LOADK    	9 -15	; "Gesture"
	59	[818]	GETTABLE 	10 0 -16	; "gesture_detector"
	60	[818]	SELF     	10 10 -17	; "adjustGesCoordinate"
	61	[818]	MOVE     	12 6
	62	[818]	CALL     	10 3 0
	63	[817]	TAILCALL 	7 0 0
	64	[819]	RETURN   	7 0
	65	[821]	JMP      	-52	; to 14
	66	[823]	JMP      	9	; to 76
	67	[824]	JMP      	-54	; to 14
	68	[825]	JMP      	7	; to 76
	69	[827]	GETGLOBAL	4 -6	; pcall
	70	[827]	GETUPVAL 	5 1	; input
	71	[827]	GETTABLE 	5 5 -7	; "waitForEvent"
	72	[827]	MOVE     	6 1
	73	[827]	CALL     	4 3 3
	74	[827]	MOVE     	3 5
	75	[827]	MOVE     	2 4
	76	[829]	TEST     	2 0 0
	77	[829]	JMP      	1	; to 79
	78	[830]	JMP      	31	; to 110
	79	[834]	LOADK    	4 -18	; "Waiting for input failed: timeout\n"
	80	[837]	TEST     	3 0 0
	81	[837]	JMP      	13	; to 95
	82	[837]	GETTABLE 	5 3 -19	; "sub"
	83	[837]	TEST     	5 0 0
	84	[837]	JMP      	10	; to 95
	85	[837]	SELF     	5 3 -19	; "sub"
	86	[837]	SELF     	7 4 -20	; "len"
	87	[837]	CALL     	7 2 2
	88	[837]	UNM      	7 7
	89	[837]	CALL     	5 3 2
	90	[837]	EQ       	0 5 4
	91	[837]	JMP      	3	; to 95
	92	[839]	LOADNIL  	3 3
	93	[840]	JMP      	16	; to 110
	94	[840]	JMP      	6	; to 101
	95	[841]	EQ       	0 3 -21	; - "application forced to quit"
	96	[841]	JMP      	4	; to 101
	97	[843]	GETGLOBAL	5 -22	; os
	98	[843]	GETTABLE 	5 5 -23	; "exit"
	99	[843]	LOADK    	6 -2	; 0
	100	[843]	CALL     	5 2 1
	101	[845]	GETUPVAL 	5 3	; logger
	102	[845]	GETTABLE 	5 5 -24	; "warn"
	103	[845]	LOADK    	6 -25	; "got error waiting for events:"
	104	[845]	MOVE     	7 3
	105	[845]	CALL     	5 3 1
	106	[846]	EQ       	1 3 -26	; - "Waiting for input failed: 4\n"
	107	[846]	JMP      	-107	; to 1
	108	[848]	JMP      	1	; to 110
	109	[849]	JMP      	-109	; to 1
	110	[852]	TEST     	2 0 0
	111	[852]	JMP      	102	; to 214
	112	[852]	TEST     	3 0 0
	113	[852]	JMP      	100	; to 214
	114	[853]	GETUPVAL 	4 4	; DEBUG
	115	[853]	GETTABLE 	4 4 -27	; "is_on"
	116	[853]	TEST     	4 0 0
	117	[853]	JMP      	33	; to 151
	118	[853]	TEST     	3 0 0
	119	[853]	JMP      	31	; to 151
	120	[854]	GETUPVAL 	4 4	; DEBUG
	121	[854]	SELF     	4 4 -28	; "logEv"
	122	[854]	MOVE     	6 3
	123	[854]	CALL     	4 3 1
	124	[855]	GETUPVAL 	4 3	; logger
	125	[855]	GETTABLE 	4 4 -29	; "dbg"
	126	[855]	GETGLOBAL	5 -30	; string
	127	[855]	GETTABLE 	5 5 -31	; "format"
	128	[856]	LOADK    	6 -32	; "%s event => type: %d, code: %d(%s), value: %s, time: %d.%d"
	129	[857]	GETTABLE 	7 3 -33	; "type"
	130	[857]	GETUPVAL 	8 5	; EV_KEY
	131	[857]	EQ       	0 7 8
	132	[857]	JMP      	3	; to 136
	133	[857]	LOADK    	7 -34	; "key"
	134	[857]	TEST     	7 0 1
	135	[857]	JMP      	1	; to 137
	136	[857]	LOADK    	7 -35	; "input"
	137	[858]	GETTABLE 	8 3 -33	; "type"
	138	[858]	GETTABLE 	9 3 -36	; "code"
	139	[858]	GETTABLE 	10 0 -37	; "event_map"
	140	[858]	GETTABLE 	11 3 -36	; "code"
	141	[858]	GETTABLE 	10 10 11
	142	[858]	GETGLOBAL	11 -38	; tostring
	143	[858]	GETTABLE 	12 3 -39	; "value"
	144	[858]	CALL     	11 2 2
	145	[859]	GETTABLE 	12 3 -40	; "time"
	146	[859]	GETTABLE 	12 12 -41	; "sec"
	147	[859]	GETTABLE 	13 3 -40	; "time"
	148	[859]	GETTABLE 	13 13 -5	; "usec"
	149	[855]	CALL     	5 9 0
	150	[855]	CALL     	4 0 1
	151	[861]	SELF     	4 0 -42	; "eventAdjustHook"
	152	[861]	MOVE     	6 3
	153	[861]	CALL     	4 3 1
	154	[862]	GETTABLE 	4 3 -33	; "type"
	155	[862]	GETUPVAL 	5 5	; EV_KEY
	156	[862]	EQ       	0 4 5
	157	[862]	JMP      	5	; to 163
	158	[863]	SELF     	4 0 -43	; "handleKeyBoardEv"
	159	[863]	MOVE     	6 3
	160	[863]	TAILCALL 	4 3 0
	161	[863]	RETURN   	4 0
	162	[863]	JMP      	61	; to 224
	163	[864]	GETTABLE 	4 3 -33	; "type"
	164	[864]	GETUPVAL 	5 6	; EV_ABS
	165	[864]	EQ       	0 4 5
	166	[864]	JMP      	9	; to 176
	167	[864]	GETTABLE 	4 3 -36	; "code"
	168	[864]	GETUPVAL 	5 7	; ABS_OASIS_ORIENTATION
	169	[864]	EQ       	0 4 5
	170	[864]	JMP      	5	; to 176
	171	[865]	SELF     	4 0 -44	; "handleOasisOrientationEv"
	172	[865]	MOVE     	6 3
	173	[865]	TAILCALL 	4 3 0
	174	[865]	RETURN   	4 0
	175	[865]	JMP      	48	; to 224
	176	[866]	GETTABLE 	4 3 -33	; "type"
	177	[866]	GETUPVAL 	5 6	; EV_ABS
	178	[866]	EQ       	1 4 5
	179	[866]	JMP      	4	; to 184
	180	[866]	GETTABLE 	4 3 -33	; "type"
	181	[866]	GETUPVAL 	5 8	; EV_SYN
	182	[866]	EQ       	0 4 5
	183	[866]	JMP      	5	; to 189
	184	[867]	SELF     	4 0 -45	; "handleTouchEv"
	185	[867]	MOVE     	6 3
	186	[867]	TAILCALL 	4 3 0
	187	[867]	RETURN   	4 0
	188	[867]	JMP      	35	; to 224
	189	[868]	GETTABLE 	4 3 -33	; "type"
	190	[868]	GETUPVAL 	5 9	; EV_MSC
	191	[868]	EQ       	0 4 5
	192	[868]	JMP      	5	; to 198
	193	[869]	SELF     	4 0 -46	; "handleMiscEv"
	194	[869]	MOVE     	6 3
	195	[869]	TAILCALL 	4 3 0
	196	[869]	RETURN   	4 0
	197	[869]	JMP      	26	; to 224
	198	[870]	GETTABLE 	4 3 -33	; "type"
	199	[870]	GETUPVAL 	5 10	; EV_SDL
	200	[870]	EQ       	0 4 5
	201	[870]	JMP      	5	; to 207
	202	[871]	SELF     	4 0 -47	; "handleSdlEv"
	203	[871]	MOVE     	6 3
	204	[871]	TAILCALL 	4 3 0
	205	[871]	RETURN   	4 0
	206	[871]	JMP      	17	; to 224
	207	[874]	GETUPVAL 	4 2	; Event
	208	[874]	SELF     	4 4 -4	; "new"
	209	[874]	LOADK    	6 -48	; "GenericInput"
	210	[874]	MOVE     	7 3
	211	[874]	TAILCALL 	4 4 0
	212	[874]	RETURN   	4 0
	213	[875]	JMP      	10	; to 224
	214	[876]	TEST     	2 0 1
	215	[876]	JMP      	8	; to 224
	216	[876]	TEST     	3 0 0
	217	[876]	JMP      	6	; to 224
	218	[877]	GETUPVAL 	4 2	; Event
	219	[877]	SELF     	4 4 -4	; "new"
	220	[877]	LOADK    	6 -49	; "InputError"
	221	[877]	MOVE     	7 3
	222	[877]	TAILCALL 	4 4 0
	223	[877]	RETURN   	4 0
	224	[879]	RETURN   	0 1
