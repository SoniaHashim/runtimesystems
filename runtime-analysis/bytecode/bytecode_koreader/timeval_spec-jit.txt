-- BYTECODE -- timeval_spec.lua:3-8
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "commonrequire"
0003    CALL     0   1   2
0004    GGET     0   0      ; "require"
0005    KSTR     1   2      ; "ui/timeval"
0006    CALL     0   2   2
0007    USETV    0   0      ; TimeVal
0008    GGET     0   0      ; "require"
0009    KSTR     1   3      ; "dbg"
0010    CALL     0   2   2
0011    USETV    1   0      ; dbg
0012    UGET     0   1      ; dbg
0013    TGETS    0   0   4  ; "is_on"
0014    USETV    2   0      ; dbg_on
0015    RET0     0   1

-- BYTECODE -- timeval_spec.lua:10-16
0001    UGET     0   0      ; dbg_on
0002    ISF          0
0003    JMP      1 => 0009
0004    UGET     0   1      ; dbg
0005    MOV      1   0
0006    TGETS    0   0   0  ; "turnOn"
0007    CALL     0   1   2
0008    JMP      0 => 0013
0009 => UGET     0   1      ; dbg
0010    MOV      1   0
0011    TGETS    0   0   1  ; "turnOff"
0012    CALL     0   1   2
0013 => RET0     0   1

-- BYTECODE -- timeval_spec.lua:18-25
0001    UGET     0   0      ; TimeVal
0002    MOV      1   0
0003    TGETS    0   0   0  ; "new"
0004    TDUP     2   1
0005    CALL     0   2   3
0006    UGET     1   0      ; TimeVal
0007    MOV      2   1
0008    TGETS    1   1   0  ; "new"
0009    TDUP     3   2
0010    CALL     1   2   3
0011    UGET     2   0      ; TimeVal
0012    MOV      3   2
0013    TGETS    2   2   0  ; "new"
0014    TDUP     4   3
0015    CALL     2   2   3
0016    GGET     3   4      ; "assert"
0017    TGETS    3   3   5  ; "is"
0018    TGETS    3   3   6  ; "same"
0019    TDUP     4   7
0020    ADDVV    5   0   1
0021    CALL     3   1   3
0022    GGET     3   4      ; "assert"
0023    TGETS    3   3   5  ; "is"
0024    TGETS    3   3   6  ; "same"
0025    TDUP     4   8
0026    ADDVV    5   0   2
0027    CALL     3   1   3
0028    RET0     0   1

-- BYTECODE -- timeval_spec.lua:27-33
0001    UGET     0   0      ; TimeVal
0002    MOV      1   0
0003    TGETS    0   0   0  ; "new"
0004    TDUP     2   1
0005    CALL     0   2   3
0006    UGET     1   0      ; TimeVal
0007    MOV      2   1
0008    TGETS    1   1   0  ; "new"
0009    TDUP     3   2
0010    CALL     1   2   3
0011    GGET     2   3      ; "assert"
0012    TGETS    2   2   4  ; "is"
0013    TGETS    2   2   5  ; "same"
0014    TDUP     3   6
0015    SUBVV    4   1   0
0016    CALL     2   1   3
0017    GGET     2   3      ; "assert"
0018    TGETS    2   2   4  ; "is"
0019    TGETS    2   2   5  ; "same"
0020    TDUP     3   7
0021    SUBVV    4   0   1
0022    CALL     2   1   3
0023    RET0     0   1

-- BYTECODE -- timeval_spec.lua:41-41
0001    UGET     0   0      ; timev1
0002    UGET     1   1      ; timev2
0003    SUBVV    0   0   1
0004    RET1     0   2

-- BYTECODE -- timeval_spec.lua:35-42
0001    UGET     0   0      ; dbg
0002    MOV      1   0
0003    TGETS    0   0   0  ; "turnOn"
0004    CALL     0   1   2
0005    GGET     0   1      ; "package"
0006    TGETS    0   0   2  ; "reload"
0007    KSTR     1   3      ; "ui/timeval"
0008    CALL     0   2   2
0009    USETV    1   0      ; TimeVal
0010    UGET     0   1      ; TimeVal
0011    MOV      1   0
0012    TGETS    0   0   4  ; "new"
0013    TDUP     2   5
0014    CALL     0   2   3
0015    UGET     1   1      ; TimeVal
0016    MOV      2   1
0017    TGETS    1   1   4  ; "new"
0018    TDUP     3   6
0019    CALL     1   2   3
0020    GGET     2   7      ; "assert"
0021    TGETS    2   2   8  ; "has"
0022    TGETS    2   2   9  ; "errors"
0023    FNEW     3  10      ; timeval_spec.lua:41
0024    CALL     2   1   2
0025    UCLO     0 => 0026
0026 => RET0     0   1

-- BYTECODE -- timeval_spec.lua:44-48
0001    UGET     0   0      ; TimeVal
0002    MOV      1   0
0003    TGETS    0   0   0  ; "new"
0004    TDUP     2   1
0005    CALL     0   2   3
0006    GGET     1   2      ; "assert"
0007    TGETS    1   1   3  ; "is"
0008    TGETS    1   1   4  ; "same"
0009    TDUP     2   5
0010    MOV      3   0
0011    CALL     1   1   3
0012    RET0     0   1

-- BYTECODE -- timeval_spec.lua:50-72
0001    UGET     0   0      ; TimeVal
0002    MOV      1   0
0003    TGETS    0   0   0  ; "new"
0004    TDUP     2   1
0005    CALL     0   2   3
0006    UGET     1   0      ; TimeVal
0007    MOV      2   1
0008    TGETS    1   1   0  ; "new"
0009    TDUP     3   2
0010    CALL     1   2   3
0011    UGET     2   0      ; TimeVal
0012    MOV      3   2
0013    TGETS    2   2   0  ; "new"
0014    TDUP     4   3
0015    CALL     2   2   3
0016    UGET     3   0      ; TimeVal
0017    MOV      4   3
0018    TGETS    3   3   0  ; "new"
0019    TDUP     5   4
0020    CALL     3   2   3
0021    GGET     4   5      ; "assert"
0022    TGETS    4   4   6  ; "is_true"
0023    ISLT     0   1
0024    JMP      5 => 0027
0025    KPRI     5   1
0026    JMP      6 => 0028
0027 => KPRI     5   2
0028 => CALL     4   1   2
0029    GGET     4   5      ; "assert"
0030    TGETS    4   4   7  ; "is_false"
0031    ISLT     1   0
0032    JMP      5 => 0035
0033    KPRI     5   1
0034    JMP      6 => 0036
0035 => KPRI     5   2
0036 => CALL     4   1   2
0037    GGET     4   5      ; "assert"
0038    TGETS    4   4   6  ; "is_true"
0039    ISLE     0   1
0040    JMP      5 => 0043
0041    KPRI     5   1
0042    JMP      6 => 0044
0043 => KPRI     5   2
0044 => CALL     4   1   2
0045    GGET     4   5      ; "assert"
0046    TGETS    4   4   6  ; "is_true"
0047    ISLT     0   3
0048    JMP      5 => 0051
0049    KPRI     5   1
0050    JMP      6 => 0052
0051 => KPRI     5   2
0052 => CALL     4   1   2
0053    GGET     4   5      ; "assert"
0054    TGETS    4   4   7  ; "is_false"
0055    ISLT     3   0
0056    JMP      5 => 0059
0057    KPRI     5   1
0058    JMP      6 => 0060
0059 => KPRI     5   2
0060 => CALL     4   1   2
0061    GGET     4   5      ; "assert"
0062    TGETS    4   4   6  ; "is_true"
0063    ISLE     0   3
0064    JMP      5 => 0067
0065    KPRI     5   1
0066    JMP      6 => 0068
0067 => KPRI     5   2
0068 => CALL     4   1   2
0069    GGET     4   5      ; "assert"
0070    TGETS    4   4   6  ; "is_true"
0071    ISLT     0   1
0072    JMP      5 => 0075
0073    KPRI     5   1
0074    JMP      6 => 0076
0075 => KPRI     5   2
0076 => CALL     4   1   2
0077    GGET     4   5      ; "assert"
0078    TGETS    4   4   7  ; "is_false"
0079    ISLT     1   0
0080    JMP      5 => 0083
0081    KPRI     5   1
0082    JMP      6 => 0084
0083 => KPRI     5   2
0084 => CALL     4   1   2
0085    GGET     4   5      ; "assert"
0086    TGETS    4   4   6  ; "is_true"
0087    ISLE     0   1
0088    JMP      5 => 0091
0089    KPRI     5   1
0090    JMP      6 => 0092
0091 => KPRI     5   2
0092 => CALL     4   1   2
0093    GGET     4   5      ; "assert"
0094    TGETS    4   4   6  ; "is_true"
0095    ISEQV    0   2
0096    JMP      5 => 0099
0097    KPRI     5   1
0098    JMP      6 => 0100
0099 => KPRI     5   2
0100 => CALL     4   1   2
0101    GGET     4   5      ; "assert"
0102    TGETS    4   4   7  ; "is_false"
0103    ISEQV    0   1
0104    JMP      5 => 0107
0105    KPRI     5   1
0106    JMP      6 => 0108
0107 => KPRI     5   2
0108 => CALL     4   1   2
0109    GGET     4   5      ; "assert"
0110    TGETS    4   4   6  ; "is_true"
0111    ISLE     2   0
0112    JMP      5 => 0115
0113    KPRI     5   1
0114    JMP      6 => 0116
0115 => KPRI     5   2
0116 => CALL     4   1   2
0117    GGET     4   5      ; "assert"
0118    TGETS    4   4   6  ; "is_true"
0119    ISLE     0   2
0120    JMP      5 => 0123
0121    KPRI     5   1
0122    JMP      6 => 0124
0123 => KPRI     5   2
0124 => CALL     4   1   2
0125    RET0     0   1

-- BYTECODE -- timeval_spec.lua:1-73
0001    KNIL     0   2
0002    GGET     3   0      ; "setup"
0003    FNEW     4   1      ; timeval_spec.lua:3
0004    CALL     3   1   2
0005    GGET     3   2      ; "after_each"
0006    FNEW     4   3      ; timeval_spec.lua:10
0007    CALL     3   1   2
0008    GGET     3   4      ; "it"
0009    KSTR     4   5      ; "should add"
0010    FNEW     5   6      ; timeval_spec.lua:18
0011    CALL     3   1   3
0012    GGET     3   4      ; "it"
0013    KSTR     4   7      ; "should subtract"
0014    FNEW     5   8      ; timeval_spec.lua:27
0015    CALL     3   1   3
0016    GGET     3   4      ; "it"
0017    KSTR     4   9      ; "should guard against reverse subtraction"~
0018    FNEW     5  10      ; timeval_spec.lua:35
0019    CALL     3   1   3
0020    GGET     3   4      ; "it"
0021    KSTR     4  11      ; "should derive sec and usec from more tha"~
0022    FNEW     5  12      ; timeval_spec.lua:44
0023    CALL     3   1   3
0024    GGET     3   4      ; "it"
0025    KSTR     4  13      ; "should compare"
0026    FNEW     5  14      ; timeval_spec.lua:50
0027    CALL     3   1   3
0028    UCLO     0 => 0029
0029 => RET0     0   1

-- BYTECODE -- timeval_spec.lua:0-74
0001    GGET     0   0      ; "describe"
0002    KSTR     1   1      ; "TimeVal module"
0003    FNEW     2   2      ; timeval_spec.lua:1
0004    CALL     0   1   3
0005    RET0     0   1

