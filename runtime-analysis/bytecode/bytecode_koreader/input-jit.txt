-- BYTECODE -- input.lua:151-153
0001    UGET     0   0      ; _internal_clipboard_text
0002    ISEQP    0   0
0003    JMP      0 => 0007
0004    UGET     0   0      ; _internal_clipboard_text
0005    ISNES    0   0      ; ""
0006    JMP      0 => 0009
0007 => KPRI     0   1
0008    JMP      1 => 0010
0009 => KPRI     0   2
0010 => RET1     0   2

-- BYTECODE -- input.lua:154-156
0001    UGET     0   0      ; _internal_clipboard_text
0002    RET1     0   2

-- BYTECODE -- input.lua:157-159
0001    USETV    0   0      ; _internal_clipboard_text
0002    RET0     0   1

-- BYTECODE -- input.lua:162-168
0001    IST          1
0002    JMP      2 => 0004
0003    TNEW     1   0
0004 => GGET     2   0      ; "setmetatable"
0005    MOV      3   1
0006    MOV      4   0
0007    CALL     2   1   3
0008    TSETS    0   0   1  ; "__index"
0009    TGETS    2   1   2  ; "init"
0010    ISF          2
0011    JMP      3 => 0015
0012    MOV      3   1
0013    TGETS    2   1   2  ; "init"
0014    CALL     2   1   2
0015 => RET1     1   2

-- BYTECODE -- input.lua:170-194
0001    UGET     1   0      ; GestureDetector
0002    MOV      2   1
0003    TGETS    1   1   1  ; "new"
0004    TDUP     3   4
0005    TGETS    4   0   2  ; "device"
0006    TGETS    4   4   3  ; "screen"
0007    TSETS    4   3   3  ; "screen"
0008    TSETS    0   3   5  ; "input"
0009    CALL     1   2   3
0010    TSETS    1   0   0  ; "gesture_detector"
0011    TGETS    1   0   6  ; "event_map"
0012    KSHORT   2 10000
0013    KSTR     3   7      ; "IntoSS"
0014    TSETV    3   1   2
0015    TGETS    1   0   6  ; "event_map"
0016    KSHORT   2 10001
0017    KSTR     3   8      ; "OutOfSS"
0018    TSETV    3   1   2
0019    TGETS    1   0   6  ; "event_map"
0020    KSHORT   2 10010
0021    KSTR     3   9      ; "UsbPlugIn"
0022    TSETV    3   1   2
0023    TGETS    1   0   6  ; "event_map"
0024    KSHORT   2 10011
0025    KSTR     3  10      ; "UsbPlugOut"
0026    TSETV    3   1   2
0027    TGETS    1   0   6  ; "event_map"
0028    KSHORT   2 10020
0029    KSTR     3  11      ; "Charging"
0030    TSETV    3   1   2
0031    TGETS    1   0   6  ; "event_map"
0032    KSHORT   2 10021
0033    KSTR     3  12      ; "NotCharging"
0034    TSETV    3   1   2
0035    GGET     1  13      ; "string"
0036    TGETS    1   1  14  ; "format"
0037    KSTR     2  15      ; "%s/%s"
0038    UGET     3   1      ; DataStorage
0039    MOV      4   3
0040    TGETS    3   3  16  ; "getSettingsDir"
0041    CALL     3   2   2
0042    KSTR     4  17      ; "event_map.lua"
0043    CALL     1   2   4
0044    GGET     2  18      ; "pcall"
0045    GGET     3  19      ; "dofile"
0046    MOV      4   1
0047    CALL     2   3   3
0048    ISF          2
0049    JMP      4 => 0063
0050    GGET     4  20      ; "pairs"
0051    MOV      5   3
0052    CALL     4   4   2
0053    ISNEXT   7 => 0056
0054 => TGETS    9   0   6  ; "event_map"
0055    TSETV    8   9   7
0056 => ITERN    7   3   3
0057    ITERL    7 => 0054
0058    UGET     4   2      ; logger
0059    TGETS    4   4  21  ; "info"
0060    KSTR     5  22      ; "loaded custom event map"
0061    MOV      6   3
0062    CALL     4   1   3
0063 => RET0     0   1

-- BYTECODE -- input.lua:203-205
0001    UGET     2   0      ; input
0002    TGETS    2   2   0  ; "open"
0003    MOV      3   0
0004    ISF          1
0005    JMP      4 => 0008
0006    KSHORT   4   1
0007    JMP      5 => 0009
0008 => KSHORT   4   0
0009 => CALL     2   1   3
0010    RET0     0   1

-- BYTECODE -- input.lua:213-216
0001    UGET     2   0      ; old
0002    MOV      3   0
0003    MOV      4   1
0004    CALL     2   1   3
0005    UGET     2   1      ; hook
0006    MOV      3   0
0007    MOV      4   1
0008    UGET     5   2      ; hook_params
0009    CALL     2   1   4
0010    RET0     0   1

-- BYTECODE -- input.lua:211-217
0001    TGETS    3   0   0  ; "eventAdjustHook"
0002    FNEW     4   1      ; input.lua:213
0003    TSETS    4   0   0  ; "eventAdjustHook"
0004    UCLO     0 => 0005
0005 => RET0     0   1

-- BYTECODE -- input.lua:221-224
0001    UGET     2   0      ; old
0002    MOV      3   0
0003    MOV      4   1
0004    CALL     2   1   3
0005    UGET     2   1      ; hook
0006    MOV      3   0
0007    MOV      4   1
0008    UGET     5   2      ; hook_params
0009    CALL     2   1   4
0010    RET0     0   1

-- BYTECODE -- input.lua:219-225
0001    TGETS    3   0   0  ; "gestureAdjustHook"
0002    FNEW     4   1      ; input.lua:221
0003    TSETS    4   0   0  ; "gestureAdjustHook"
0004    UCLO     0 => 0005
0005 => RET0     0   1

-- BYTECODE -- input.lua:227-229
0001    RET0     0   1

-- BYTECODE -- input.lua:231-233
0001    RET0     0   1

-- BYTECODE -- input.lua:236-248
0001    TGETS    2   1   0  ; "type"
0002    UGET     3   0      ; EV_ABS
0003    ISNEV    2   3
0004    JMP      2 => 0032
0005    TGETS    2   1   1  ; "code"
0006    UGET     3   1      ; ABS_X
0007    ISNEV    2   3
0008    JMP      2 => 0012
0009    UGET     2   2      ; ABS_Y
0010    TSETS    2   1   1  ; "code"
0011    JMP      2 => 0032
0012 => TGETS    2   1   1  ; "code"
0013    UGET     3   2      ; ABS_Y
0014    ISNEV    2   3
0015    JMP      2 => 0019
0016    UGET     2   1      ; ABS_X
0017    TSETS    2   1   1  ; "code"
0018    JMP      2 => 0032
0019 => TGETS    2   1   1  ; "code"
0020    UGET     3   3      ; ABS_MT_POSITION_X
0021    ISNEV    2   3
0022    JMP      2 => 0026
0023    UGET     2   4      ; ABS_MT_POSITION_Y
0024    TSETS    2   1   1  ; "code"
0025    JMP      2 => 0032
0026 => TGETS    2   1   1  ; "code"
0027    UGET     3   4      ; ABS_MT_POSITION_Y
0028    ISNEV    2   3
0029    JMP      2 => 0032
0030    UGET     2   3      ; ABS_MT_POSITION_X
0031    TSETS    2   1   1  ; "code"
0032 => RET0     0   1

-- BYTECODE -- input.lua:250-259
0001    TGETS    3   1   0  ; "type"
0002    UGET     4   0      ; EV_ABS
0003    ISNEV    3   4
0004    JMP      3 => 0029
0005    TGETS    3   1   1  ; "code"
0006    UGET     4   1      ; ABS_X
0007    ISEQV    3   4
0008    JMP      3 => 0013
0009    TGETS    3   1   1  ; "code"
0010    UGET     4   2      ; ABS_MT_POSITION_X
0011    ISNEV    3   4
0012    JMP      3 => 0017
0013 => TGETS    3   2   3  ; "x"
0014    TGETS    4   1   2  ; "value"
0015    MULVV    3   3   4
0016    TSETS    3   1   2  ; "value"
0017 => TGETS    3   1   1  ; "code"
0018    UGET     4   3      ; ABS_Y
0019    ISEQV    3   4
0020    JMP      3 => 0025
0021    TGETS    3   1   1  ; "code"
0022    UGET     4   4      ; ABS_MT_POSITION_Y
0023    ISNEV    3   4
0024    JMP      3 => 0029
0025 => TGETS    3   2   4  ; "y"
0026    TGETS    4   1   2  ; "value"
0027    MULVV    3   3   4
0028    TSETS    3   1   2  ; "value"
0029 => RET0     0   1

-- BYTECODE -- input.lua:261-266
0001    TGETS    3   1   0  ; "type"
0002    UGET     4   0      ; EV_ABS
0003    ISNEV    3   4
0004    JMP      3 => 0016
0005    TGETS    3   1   1  ; "code"
0006    UGET     4   1      ; ABS_X
0007    ISEQV    3   4
0008    JMP      3 => 0013
0009    TGETS    3   1   1  ; "code"
0010    UGET     4   2      ; ABS_MT_POSITION_X
0011    ISNEV    3   4
0012    JMP      3 => 0016
0013 => TGETS    3   1   2  ; "value"
0014    SUBVV    3   2   3
0015    TSETS    3   1   2  ; "value"
0016 => RET0     0   1

-- BYTECODE -- input.lua:268-273
0001    TGETS    3   1   0  ; "type"
0002    UGET     4   0      ; EV_ABS
0003    ISNEV    3   4
0004    JMP      3 => 0016
0005    TGETS    3   1   1  ; "code"
0006    UGET     4   1      ; ABS_Y
0007    ISEQV    3   4
0008    JMP      3 => 0013
0009    TGETS    3   1   1  ; "code"
0010    UGET     4   2      ; ABS_MT_POSITION_Y
0011    ISNEV    3   4
0012    JMP      3 => 0016
0013 => TGETS    3   1   2  ; "value"
0014    SUBVV    3   2   3
0015    TSETS    3   1   2  ; "value"
0016 => RET0     0   1

-- BYTECODE -- input.lua:275-284
0001    TGETS    3   1   0  ; "type"
0002    UGET     4   0      ; EV_ABS
0003    ISNEV    3   4
0004    JMP      3 => 0029
0005    TGETS    3   1   1  ; "code"
0006    UGET     4   1      ; ABS_X
0007    ISEQV    3   4
0008    JMP      3 => 0013
0009    TGETS    3   1   1  ; "code"
0010    UGET     4   2      ; ABS_MT_POSITION_X
0011    ISNEV    3   4
0012    JMP      3 => 0017
0013 => TGETS    3   2   3  ; "x"
0014    TGETS    4   1   2  ; "value"
0015    ADDVV    3   3   4
0016    TSETS    3   1   2  ; "value"
0017 => TGETS    3   1   1  ; "code"
0018    UGET     4   3      ; ABS_Y
0019    ISEQV    3   4
0020    JMP      3 => 0025
0021    TGETS    3   1   1  ; "code"
0022    UGET     4   4      ; ABS_MT_POSITION_Y
0023    ISNEV    3   4
0024    JMP      3 => 0029
0025 => TGETS    3   2   4  ; "y"
0026    TGETS    4   1   2  ; "value"
0027    ADDVV    3   3   4
0028    TSETS    3   1   2  ; "value"
0029 => RET0     0   1

-- BYTECODE -- input.lua:286-290
0001    TGETS    2   1   0  ; "type"
0002    UGET     3   0      ; EV_ABS
0003    ISNEV    2   3
0004    JMP      2 => 0011
0005    TGETS    2   1   1  ; "code"
0006    UGET     3   1      ; ABS_PRESSURE
0007    ISNEV    2   3
0008    JMP      2 => 0011
0009    UGET     2   2      ; ABS_OASIS_ORIENTATION
0010    TSETS    2   1   1  ; "code"
0011 => RET0     0   1

-- BYTECODE -- input.lua:298-300
0001    TGETS    2   0   0  ; "deadline"
0002    TGETS    3   1   0  ; "deadline"
0003    ISLT     2   3
0004    JMP      2 => 0007
0005    KPRI     2   1
0006    JMP      3 => 0008
0007 => KPRI     2   2
0008 => RET1     2   2

-- BYTECODE -- input.lua:292-301
0001    TDUP     3   0
0002    TSETS    1   3   1  ; "callback"
0003    TSETS    2   3   2  ; "deadline"
0004    GGET     4   3      ; "table"
0005    TGETS    4   4   4  ; "insert"
0006    TGETS    5   0   5  ; "timer_callbacks"
0007    MOV      6   3
0008    CALL     4   1   3
0009    GGET     4   3      ; "table"
0010    TGETS    4   4   6  ; "sort"
0011    TGETS    5   0   5  ; "timer_callbacks"
0012    FNEW     6   7      ; input.lua:298
0013    CALL     4   1   3
0014    RET0     0   1

-- BYTECODE -- input.lua:374-377
0001    UGET     0   0      ; Device
0002    MOV      1   0
0003    TGETS    0   0   0  ; "saveSettings"
0004    CALL     0   1   2
0005    UGET     0   1      ; UIManager
0006    MOV      1   0
0007    TGETS    0   0   1  ; "quit"
0008    CALL     0   1   2
0009    RET0     0   1

-- BYTECODE -- input.lua:303-432
0001    TGETS    2   0   0  ; "event_map"
0002    TGETS    3   1   1  ; "code"
0003    TGETV    2   2   3
0004    IST          2
0005    JMP      3 => 0007
0006    UCLO     0 => 0259
0007 => TGETS    3   0   2  ; "event_map_adapter"
0008    TGETV    3   3   2
0009    ISF          3
0010    JMP      4 => 0015
0011    TGETS    3   0   2  ; "event_map_adapter"
0012    TGETV    3   3   2
0013    MOV      4   1
0014    UCLO     0 => 0260
0015 => TGETS    3   0   3  ; "rotation_map"
0016    TGETS    4   0   4  ; "device"
0017    TGETS    4   4   5  ; "screen"
0018    MOV      5   4
0019    TGETS    4   4   6  ; "getRotationMode"
0020    CALL     4   2   2
0021    TGETV    3   3   4
0022    TGETV    3   3   2
0023    ISF          3
0024    JMP      4 => 0033
0025    TGETS    3   0   3  ; "rotation_map"
0026    TGETS    4   0   4  ; "device"
0027    TGETS    4   4   5  ; "screen"
0028    MOV      5   4
0029    TGETS    4   4   6  ; "getRotationMode"
0030    CALL     4   2   2
0031    TGETV    3   3   4
0032    TGETV    2   3   2
0033 => ISEQS    2   7      ; "IntoSS"
0034    JMP      3 => 0045
0035    ISEQS    2   8      ; "OutOfSS"
0036    JMP      3 => 0045
0037    ISEQS    2   9      ; "UsbPlugIn"
0038    JMP      3 => 0045
0039    ISEQS    2  10      ; "UsbPlugOut"
0040    JMP      3 => 0045
0041    ISEQS    2  11      ; "Charging"
0042    JMP      3 => 0045
0043    ISNES    2  12      ; "NotCharging"
0044    JMP      3 => 0046
0045 => UCLO     0 => 0261
0046 => ISNES    2  13      ; "Camera"
0047    JMP      3 => 0083
0048    TGETS    3   1  14  ; "value"
0049    UGET     4   0      ; EVENT_VALUE_KEY_RELEASE
0050    ISNEV    3   4
0051    JMP      3 => 0083
0052    GGET     3  15      ; "G_reader_settings"
0053    MOV      4   3
0054    TGETS    3   3  16  ; "isTrue"
0055    KSTR     5  17      ; "camera_key_toggles_touchscreen"
0056    CALL     3   2   3
0057    ISF          3
0058    JMP      4 => 0083
0059    GGET     3  18      ; "pcall"
0060    GGET     4  19      ; "require"
0061    KSTR     5  20      ; "android"
0062    CALL     3   3   3
0063    ISF          3
0064    JMP      5 => 0082
0065    TGETS    5   4  21  ; "toggleTouchscreenIgnored"
0066    CALL     5   1   1
0067    TGETS    5   4  22  ; "isTouchscreenIgnored"
0068    CALL     5   2   1
0069    ISF          5
0070    JMP      6 => 0077
0071    TGETS    5   4  23  ; "notification"
0072    UGET     6   1      ; _
0073    KSTR     7  24      ; "Touchscreen disabled"
0074    CALL     6   0   2
0075    CALLM    5   1   0
0076    JMP      5 => 0082
0077 => TGETS    5   4  23  ; "notification"
0078    UGET     6   1      ; _
0079    KSTR     7  25      ; "Touchscreen enabled"
0080    CALL     6   0   2
0081    CALLM    5   1   0
0082 => UCLO     0 => 0262
0083 => ISNES    2  26      ; "Power"
0084    JMP      3 => 0098
0085    TGETS    3   1  14  ; "value"
0086    UGET     4   2      ; EVENT_VALUE_KEY_PRESS
0087    ISNEV    3   4
0088    JMP      3 => 0092
0089    KSTR     3  27      ; "PowerPress"
0090    UCLO     0 => 0263
0091    JMP      3 => 0098
0092 => TGETS    3   1  14  ; "value"
0093    UGET     4   0      ; EVENT_VALUE_KEY_RELEASE
0094    ISNEV    3   4
0095    JMP      3 => 0098
0096    KSTR     3  28      ; "PowerRelease"
0097    UCLO     0 => 0264
0098 => TGETS    3   0  29  ; "file_chooser"
0099    ISF          3
0100    JMP      4 => 0131
0101    MOV      5   0
0102    TGETS    4   0  30  ; "isEvKeyPress"
0103    MOV      6   1
0104    CALL     4   2   3
0105    ISF          4
0106    JMP      5 => 0131
0107    TGETS    4   0  31  ; "modifiers"
0108    TGETS    4   4  32  ; "Ctrl"
0109    ISF          4
0110    JMP      5 => 0131
0111    ISNES    2  33      ; "O"
0112    JMP      4 => 0131
0113    UGET     4   3      ; logger
0114    TGETS    4   4  34  ; "dbg"
0115    KSTR     5  35      ; "Opening FileChooser:"
0116    TGETS    6   3  36  ; "type"
0117    CALL     4   1   3
0118    MOV      5   3
0119    TGETS    4   3  37  ; "open"
0120    CALL     4   2   2
0121    ISF          4
0122    JMP      5 => 0130
0123    GGET     5  19      ; "require"
0124    KSTR     6  38      ; "apps/reader/readerui"
0125    CALL     5   2   2
0126    MOV      7   5
0127    TGETS    6   5  39  ; "doShowReader"
0128    MOV      8   4
0129    CALL     6   1   3
0130 => UCLO     0 => 0265
0131 => MOV      5   0
0132    TGETS    4   0  30  ; "isEvKeyPress"
0133    MOV      6   1
0134    CALL     4   2   3
0135    ISF          4
0136    JMP      5 => 0173
0137    TGETS    4   0  31  ; "modifiers"
0138    TGETS    4   4  40  ; "Alt"
0139    ISF          4
0140    JMP      5 => 0173
0141    ISNES    2  41      ; "F4"
0142    JMP      4 => 0173
0143    GGET     4  19      ; "require"
0144    KSTR     5  42      ; "frontend/device"
0145    CALL     4   2   2
0146    GGET     5  19      ; "require"
0147    KSTR     6  43      ; "ui/uimanager"
0148    CALL     5   2   2
0149    KPRI     6   0
0150    FNEW     7  44      ; input.lua:374
0151    GGET     8  19      ; "require"
0152    KSTR     9  45      ; "apps/filemanager/filemanager"
0153    CALL     8   2   2
0154    TGETS    9   8  46  ; "instance"
0155    ISF          9
0156    JMP     10 => 0159
0157    TGETS    9   8  46  ; "instance"
0158    TGETS    6   9  47  ; "menu"
0159 => GGET     9  19      ; "require"
0160    KSTR    10  38      ; "apps/reader/readerui"
0161    CALL     9   2   2
0162    MOV     11   9
0163    TGETS   10   9  48  ; "_getRunningInstance"
0164    CALL    10   2   2
0165    ISF         10
0166    JMP     11 => 0168
0167    TGETS    6  10  47  ; "menu"
0168 => MOV     12   6
0169    TGETS   11   6  49  ; "exitOrRestart"
0170    MOV     13   7
0171    CALL    11   1   3
0172    UCLO     4 => 0173
0173 => TGETS    4   0  31  ; "modifiers"
0174    TGETV    4   4   2
0175    ISEQP    4   0
0176    JMP      4 => 0194
0177    TGETS    4   1  14  ; "value"
0178    UGET     5   2      ; EVENT_VALUE_KEY_PRESS
0179    ISNEV    4   5
0180    JMP      4 => 0185
0181    TGETS    4   0  31  ; "modifiers"
0182    KPRI     5   2
0183    TSETV    5   4   2
0184    JMP      4 => 0192
0185 => TGETS    4   1  14  ; "value"
0186    UGET     5   0      ; EVENT_VALUE_KEY_RELEASE
0187    ISNEV    4   5
0188    JMP      4 => 0192
0189    TGETS    4   0  31  ; "modifiers"
0190    KPRI     5   1
0191    TSETV    5   4   2
0192 => UCLO     0 => 0193
0193 => RET0     0   1
0194 => UGET     4   4      ; Key
0195    MOV      5   4
0196    TGETS    4   4  50  ; "new"
0197    MOV      6   2
0198    TGETS    7   0  31  ; "modifiers"
0199    CALL     4   2   4
0200    TGETS    5   1  14  ; "value"
0201    UGET     6   2      ; EVENT_VALUE_KEY_PRESS
0202    ISNEV    5   6
0203    JMP      5 => 0212
0204    UGET     5   5      ; Event
0205    MOV      6   5
0206    TGETS    5   5  50  ; "new"
0207    KSTR     7  51      ; "KeyPress"
0208    MOV      8   4
0209    UCLO     0 => 0210
0210 => CALLT    5   4
0211    JMP      5 => 0258
0212 => TGETS    5   1  14  ; "value"
0213    UGET     6   6      ; EVENT_VALUE_KEY_REPEAT
0214    ISNEV    5   6
0215    JMP      5 => 0245
0216    ISEQS    2  52      ; "LPgBack"
0217    JMP      5 => 0224
0218    ISEQS    2  53      ; "RPgBack"
0219    JMP      5 => 0224
0220    ISEQS    2  54      ; "LPgFwd"
0221    JMP      5 => 0224
0222    ISNES    2  55      ; "RPgFwd"
0223    JMP      5 => 0258
0224 => TGETS    5   0  56  ; "repeat_count"
0225    ADDVN    5   5   0  ; 1
0226    TSETS    5   0  56  ; "repeat_count"
0227    TGETS    5   0  56  ; "repeat_count"
0228    ISNEN    5   0      ; 1
0229    JMP      5 => 0238
0230    UGET     5   5      ; Event
0231    MOV      6   5
0232    TGETS    5   5  50  ; "new"
0233    KSTR     7  57      ; "KeyRepeat"
0234    MOV      8   4
0235    UCLO     0 => 0236
0236 => CALLT    5   4
0237    JMP      5 => 0258
0238 => TGETS    5   0  56  ; "repeat_count"
0239    KSHORT   6   6
0240    ISGT     6   5
0241    JMP      5 => 0258
0242    KSHORT   5   0
0243    TSETS    5   0  56  ; "repeat_count"
0244    JMP      5 => 0258
0245 => TGETS    5   1  14  ; "value"
0246    UGET     6   0      ; EVENT_VALUE_KEY_RELEASE
0247    ISNEV    5   6
0248    JMP      5 => 0258
0249    KSHORT   5   0
0250    TSETS    5   0  56  ; "repeat_count"
0251    UGET     5   5      ; Event
0252    MOV      6   5
0253    TGETS    5   5  50  ; "new"
0254    KSTR     7  58      ; "KeyRelease"
0255    MOV      8   4
0256    UCLO     0 => 0257
0257 => CALLT    5   4
0258 => RET0     0   1
0259 => RET0     0   1
0260 => CALLT    3   2
0261 => RET1     2   2
0262 => RET0     0   1
0263 => RET1     3   2
0264 => RET1     3   2
0265 => RET0     0   1

-- BYTECODE -- input.lua:434-436
0001    RET0     0   1

-- BYTECODE -- input.lua:438-440
0001    RET0     0   1

-- BYTECODE -- input.lua:469-539
0001    TGETS    2   1   0  ; "type"
0002    UGET     3   0      ; EV_ABS
0003    ISNEV    2   3
0004    JMP      2 => 0108
0005    TGETS    2   0   1  ; "MTSlots"
0006    LEN      2   2
0007    ISNEN    2   0      ; 0
0008    JMP      2 => 0017
0009    GGET     2   2      ; "table"
0010    TGETS    2   2   3  ; "insert"
0011    TGETS    3   0   1  ; "MTSlots"
0012    MOV      5   0
0013    TGETS    4   0   4  ; "getMtSlot"
0014    TGETS    6   0   5  ; "cur_slot"
0015    CALL     4   0   3
0016    CALLM    2   1   1
0017 => TGETS    2   1   6  ; "code"
0018    UGET     3   1      ; ABS_MT_SLOT
0019    ISNEV    2   3
0020    JMP      2 => 0026
0021    MOV      3   0
0022    TGETS    2   0   7  ; "addSlotIfChanged"
0023    TGETS    4   1   8  ; "value"
0024    CALL     2   1   3
0025    JMP      2 => 0202
0026 => TGETS    2   1   6  ; "code"
0027    UGET     3   2      ; ABS_MT_TRACKING_ID
0028    ISNEV    2   3
0029    JMP      2 => 0043
0030    TGETS    2   0   9  ; "snow_protocol"
0031    ISF          2
0032    JMP      3 => 0037
0033    MOV      3   0
0034    TGETS    2   0   7  ; "addSlotIfChanged"
0035    TGETS    4   1   8  ; "value"
0036    CALL     2   1   3
0037 => MOV      3   0
0038    TGETS    2   0  10  ; "setCurrentMtSlot"
0039    KSTR     4  11      ; "id"
0040    TGETS    5   1   8  ; "value"
0041    CALL     2   1   4
0042    JMP      2 => 0202
0043 => TGETS    2   1   6  ; "code"
0044    UGET     3   3      ; ABS_MT_POSITION_X
0045    ISNEV    2   3
0046    JMP      2 => 0053
0047    MOV      3   0
0048    TGETS    2   0  10  ; "setCurrentMtSlot"
0049    KSTR     4  12      ; "x"
0050    TGETS    5   1   8  ; "value"
0051    CALL     2   1   4
0052    JMP      2 => 0202
0053 => TGETS    2   1   6  ; "code"
0054    UGET     3   4      ; ABS_MT_POSITION_Y
0055    ISNEV    2   3
0056    JMP      2 => 0063
0057    MOV      3   0
0058    TGETS    2   0  10  ; "setCurrentMtSlot"
0059    KSTR     4  13      ; "y"
0060    TGETS    5   1   8  ; "value"
0061    CALL     2   1   4
0062    JMP      2 => 0202
0063 => TGETS    2   1   6  ; "code"
0064    UGET     3   5      ; ABS_X
0065    ISNEV    2   3
0066    JMP      2 => 0073
0067    MOV      3   0
0068    TGETS    2   0  10  ; "setCurrentMtSlot"
0069    KSTR     4  14      ; "abs_x"
0070    TGETS    5   1   8  ; "value"
0071    CALL     2   1   4
0072    JMP      2 => 0202
0073 => TGETS    2   1   6  ; "code"
0074    UGET     3   6      ; ABS_Y
0075    ISNEV    2   3
0076    JMP      2 => 0083
0077    MOV      3   0
0078    TGETS    2   0  10  ; "setCurrentMtSlot"
0079    KSTR     4  15      ; "abs_y"
0080    TGETS    5   1   8  ; "value"
0081    CALL     2   1   4
0082    JMP      2 => 0202
0083 => TGETS    2   1   6  ; "code"
0084    UGET     3   7      ; ABS_PRESSURE
0085    ISNEV    2   3
0086    JMP      2 => 0202
0087    TGETS    2   1   8  ; "value"
0088    ISEQN    2   0      ; 0
0089    JMP      2 => 0099
0090    MOV      3   0
0091    TGETS    2   0  10  ; "setCurrentMtSlot"
0092    KSTR     4  11      ; "id"
0093    KSHORT   5   1
0094    CALL     2   1   4
0095    MOV      3   0
0096    TGETS    2   0  16  ; "confirmAbsxy"
0097    CALL     2   1   2
0098    JMP      2 => 0202
0099 => MOV      3   0
0100    TGETS    2   0  17  ; "cleanAbsxy"
0101    CALL     2   1   2
0102    MOV      3   0
0103    TGETS    2   0  10  ; "setCurrentMtSlot"
0104    KSTR     4  11      ; "id"
0105    KSHORT   5  -1
0106    CALL     2   1   4
0107    JMP      2 => 0202
0108 => TGETS    2   1   0  ; "type"
0109    UGET     3   8      ; EV_SYN
0110    ISNEV    2   3
0111    JMP      2 => 0202
0112    TGETS    2   1   6  ; "code"
0113    UGET     3   9      ; SYN_REPORT
0114    ISNEV    2   3
0115    JMP      2 => 0202
0116    GGET     2  18      ; "pairs"
0117    TGETS    3   0   1  ; "MTSlots"
0118    CALL     2   4   2
0119    ISNEXT   5 => 0139
0120 => MOV      8   0
0121    TGETS    7   0  19  ; "setMtSlot"
0122    TGETS    9   6  20  ; "slot"
0123    KSTR    10  21      ; "timev"
0124    UGET    11  10      ; TimeVal
0125    MOV     12  11
0126    TGETS   11  11  22  ; "new"
0127    TGETS   13   1  23  ; "time"
0128    CALL    11   0   3
0129    CALLM    7   1   3
0130    TGETS    7   0   9  ; "snow_protocol"
0131    ISF          7
0132    JMP      8 => 0139
0133    MOV      8   0
0134    TGETS    7   0  19  ; "setMtSlot"
0135    TGETS    9   6  20  ; "slot"
0136    KSTR    10  24      ; "used"
0137    KPRI    11   2
0138    CALL     7   1   5
0139 => ITERN    5   3   3
0140    ITERL    5 => 0120
0141    TGETS    2   0   9  ; "snow_protocol"
0142    ISF          2
0143    JMP      3 => 0168
0144    TNEW     2   0
0145    TSETS    2   0   1  ; "MTSlots"
0146    GGET     2  18      ; "pairs"
0147    TGETS    3   0  25  ; "ev_slots"
0148    CALL     2   4   2
0149    ISNEXT   5 => 0166
0150 => GGET     7   2      ; "table"
0151    TGETS    7   7   3  ; "insert"
0152    TGETS    8   0   1  ; "MTSlots"
0153    MOV      9   6
0154    CALL     7   1   3
0155    TGETS    7   6  24  ; "used"
0156    IST          7
0157    JMP      7 => 0166
0158    KSHORT   7  -1
0159    TSETS    7   6  11  ; "id"
0160    UGET     7  10      ; TimeVal
0161    MOV      8   7
0162    TGETS    7   7  22  ; "new"
0163    TGETS    9   1  23  ; "time"
0164    CALL     7   2   3
0165    TSETS    7   6  21  ; "timev"
0166 => ITERN    5   3   3
0167    ITERL    5 => 0150
0168 => TGETS    2   0  26  ; "gesture_detector"
0169    MOV      3   2
0170    TGETS    2   2  27  ; "feedEvent"
0171    TGETS    4   0   1  ; "MTSlots"
0172    CALL     2   2   3
0173    TNEW     3   0
0174    TSETS    3   0   1  ; "MTSlots"
0175    TGETS    3   0   9  ; "snow_protocol"
0176    ISF          3
0177    JMP      4 => 0186
0178    GGET     3  18      ; "pairs"
0179    TGETS    4   0  25  ; "ev_slots"
0180    CALL     3   4   2
0181    ISNEXT   6 => 0184
0182 => KPRI     8   0
0183    TSETS    8   7  24  ; "used"
0184 => ITERN    6   3   3
0185    ITERL    6 => 0182
0186 => ISF          2
0187    JMP      3 => 0202
0188    MOV      4   0
0189    TGETS    3   0  28  ; "gestureAdjustHook"
0190    MOV      5   2
0191    CALL     3   1   3
0192    UGET     3  11      ; Event
0193    MOV      4   3
0194    TGETS    3   3  22  ; "new"
0195    KSTR     5  29      ; "Gesture"
0196    TGETS    6   0  26  ; "gesture_detector"
0197    MOV      7   6
0198    TGETS    6   6  30  ; "adjustGesCoordinate"
0199    MOV      8   2
0200    CALL     6   0   3
0201    CALLMT   3   2
0202 => RET0     0   1

-- BYTECODE -- input.lua:540-601
0001    TGETS    2   1   0  ; "type"
0002    UGET     3   0      ; EV_ABS
0003    ISNEV    2   3
0004    JMP      2 => 0064
0005    TGETS    2   0   1  ; "MTSlots"
0006    LEN      2   2
0007    ISNEN    2   0      ; 0
0008    JMP      2 => 0017
0009    GGET     2   2      ; "table"
0010    TGETS    2   2   3  ; "insert"
0011    TGETS    3   0   1  ; "MTSlots"
0012    MOV      5   0
0013    TGETS    4   0   4  ; "getMtSlot"
0014    TGETS    6   0   5  ; "cur_slot"
0015    CALL     4   0   3
0016    CALLM    2   1   1
0017 => TGETS    2   1   6  ; "code"
0018    UGET     3   1      ; ABS_MT_TRACKING_ID
0019    ISNEV    2   3
0020    JMP      2 => 0031
0021    MOV      3   0
0022    TGETS    2   0   7  ; "addSlotIfChanged"
0023    TGETS    4   1   8  ; "value"
0024    CALL     2   1   3
0025    MOV      3   0
0026    TGETS    2   0   9  ; "setCurrentMtSlot"
0027    KSTR     4  10      ; "id"
0028    TGETS    5   1   8  ; "value"
0029    CALL     2   1   4
0030    JMP      2 => 0111
0031 => TGETS    2   1   6  ; "code"
0032    UGET     3   2      ; ABS_MT_TOUCH_MAJOR
0033    ISNEV    2   3
0034    JMP      2 => 0044
0035    TGETS    2   1   8  ; "value"
0036    ISNEN    2   0      ; 0
0037    JMP      2 => 0044
0038    MOV      3   0
0039    TGETS    2   0   9  ; "setCurrentMtSlot"
0040    KSTR     4  10      ; "id"
0041    KSHORT   5  -1
0042    CALL     2   1   4
0043    JMP      2 => 0111
0044 => TGETS    2   1   6  ; "code"
0045    UGET     3   3      ; ABS_MT_POSITION_X
0046    ISNEV    2   3
0047    JMP      2 => 0054
0048    MOV      3   0
0049    TGETS    2   0   9  ; "setCurrentMtSlot"
0050    KSTR     4  11      ; "x"
0051    TGETS    5   1   8  ; "value"
0052    CALL     2   1   4
0053    JMP      2 => 0111
0054 => TGETS    2   1   6  ; "code"
0055    UGET     3   4      ; ABS_MT_POSITION_Y
0056    ISNEV    2   3
0057    JMP      2 => 0111
0058    MOV      3   0
0059    TGETS    2   0   9  ; "setCurrentMtSlot"
0060    KSTR     4  12      ; "y"
0061    TGETS    5   1   8  ; "value"
0062    CALL     2   1   4
0063    JMP      2 => 0111
0064 => TGETS    2   1   0  ; "type"
0065    UGET     3   5      ; EV_SYN
0066    ISNEV    2   3
0067    JMP      2 => 0111
0068    TGETS    2   1   6  ; "code"
0069    UGET     3   6      ; SYN_REPORT
0070    ISNEV    2   3
0071    JMP      2 => 0111
0072    GGET     2  13      ; "pairs"
0073    TGETS    3   0   1  ; "MTSlots"
0074    CALL     2   4   2
0075    ISNEXT   5 => 0086
0076 => MOV      8   0
0077    TGETS    7   0  14  ; "setMtSlot"
0078    TGETS    9   6  15  ; "slot"
0079    KSTR    10  16      ; "timev"
0080    UGET    11   7      ; TimeVal
0081    MOV     12  11
0082    TGETS   11  11  17  ; "new"
0083    TGETS   13   1  18  ; "time"
0084    CALL    11   0   3
0085    CALLM    7   1   3
0086 => ITERN    5   3   3
0087    ITERL    5 => 0076
0088    TGETS    2   0  19  ; "gesture_detector"
0089    MOV      3   2
0090    TGETS    2   2  20  ; "feedEvent"
0091    TGETS    4   0   1  ; "MTSlots"
0092    CALL     2   2   3
0093    TNEW     3   0
0094    TSETS    3   0   1  ; "MTSlots"
0095    ISF          2
0096    JMP      3 => 0111
0097    MOV      4   0
0098    TGETS    3   0  21  ; "gestureAdjustHook"
0099    MOV      5   2
0100    CALL     3   1   3
0101    UGET     3   8      ; Event
0102    MOV      4   3
0103    TGETS    3   3  17  ; "new"
0104    KSTR     5  22      ; "Gesture"
0105    TGETS    6   0  19  ; "gesture_detector"
0106    MOV      7   6
0107    TGETS    6   6  23  ; "adjustGesCoordinate"
0108    MOV      8   2
0109    CALL     6   0   3
0110    CALLMT   3   2
0111 => RET0     0   1

-- BYTECODE -- input.lua:602-637
0001    TGETS    2   1   0  ; "type"
0002    UGET     3   0      ; EV_ABS
0003    ISNEV    2   3
0004    JMP      2 => 0056
0005    TGETS    2   0   1  ; "MTSlots"
0006    LEN      2   2
0007    ISNEN    2   0      ; 0
0008    JMP      2 => 0017
0009    GGET     2   2      ; "table"
0010    TGETS    2   2   3  ; "insert"
0011    TGETS    3   0   1  ; "MTSlots"
0012    MOV      5   0
0013    TGETS    4   0   4  ; "getMtSlot"
0014    TGETS    6   0   5  ; "cur_slot"
0015    CALL     4   0   3
0016    CALLM    2   1   1
0017 => TGETS    2   1   6  ; "code"
0018    UGET     3   1      ; ABS_X
0019    ISNEV    2   3
0020    JMP      2 => 0027
0021    MOV      3   0
0022    TGETS    2   0   7  ; "setCurrentMtSlot"
0023    KSTR     4   8      ; "x"
0024    TGETS    5   1   9  ; "value"
0025    CALL     2   1   4
0026    JMP      2 => 0103
0027 => TGETS    2   1   6  ; "code"
0028    UGET     3   2      ; ABS_Y
0029    ISNEV    2   3
0030    JMP      2 => 0037
0031    MOV      3   0
0032    TGETS    2   0   7  ; "setCurrentMtSlot"
0033    KSTR     4  10      ; "y"
0034    TGETS    5   1   9  ; "value"
0035    CALL     2   1   4
0036    JMP      2 => 0103
0037 => TGETS    2   1   6  ; "code"
0038    UGET     3   3      ; ABS_PRESSURE
0039    ISNEV    2   3
0040    JMP      2 => 0103
0041    TGETS    2   1   9  ; "value"
0042    ISEQN    2   0      ; 0
0043    JMP      2 => 0050
0044    MOV      3   0
0045    TGETS    2   0   7  ; "setCurrentMtSlot"
0046    KSTR     4  11      ; "id"
0047    KSHORT   5   1
0048    CALL     2   1   4
0049    JMP      2 => 0103
0050 => MOV      3   0
0051    TGETS    2   0   7  ; "setCurrentMtSlot"
0052    KSTR     4  11      ; "id"
0053    KSHORT   5  -1
0054    CALL     2   1   4
0055    JMP      2 => 0103
0056 => TGETS    2   1   0  ; "type"
0057    UGET     3   4      ; EV_SYN
0058    ISNEV    2   3
0059    JMP      2 => 0103
0060    TGETS    2   1   6  ; "code"
0061    UGET     3   5      ; SYN_REPORT
0062    ISNEV    2   3
0063    JMP      2 => 0103
0064    GGET     2  12      ; "pairs"
0065    TGETS    3   0   1  ; "MTSlots"
0066    CALL     2   4   2
0067    ISNEXT   5 => 0078
0068 => MOV      8   0
0069    TGETS    7   0  13  ; "setMtSlot"
0070    TGETS    9   6  14  ; "slot"
0071    KSTR    10  15      ; "timev"
0072    UGET    11   6      ; TimeVal
0073    MOV     12  11
0074    TGETS   11  11  16  ; "new"
0075    TGETS   13   1  17  ; "time"
0076    CALL    11   0   3
0077    CALLM    7   1   3
0078 => ITERN    5   3   3
0079    ITERL    5 => 0068
0080    TGETS    2   0  18  ; "gesture_detector"
0081    MOV      3   2
0082    TGETS    2   2  19  ; "feedEvent"
0083    TGETS    4   0   1  ; "MTSlots"
0084    CALL     2   2   3
0085    TNEW     3   0
0086    TSETS    3   0   1  ; "MTSlots"
0087    ISF          2
0088    JMP      3 => 0103
0089    MOV      4   0
0090    TGETS    3   0  20  ; "gestureAdjustHook"
0091    MOV      5   2
0092    CALL     3   1   3
0093    UGET     3   7      ; Event
0094    MOV      4   3
0095    TGETS    3   3  16  ; "new"
0096    KSTR     5  21      ; "Gesture"
0097    TGETS    6   0  18  ; "gesture_detector"
0098    MOV      7   6
0099    TGETS    6   6  22  ; "adjustGesCoordinate"
0100    MOV      8   2
0101    CALL     6   0   3
0102    CALLMT   3   2
0103 => RET0     0   1

-- BYTECODE -- input.lua:639-666
0001    KNIL     2   3
0002    TGETS    4   1   0  ; "value"
0003    UGET     5   0      ; DEVICE_ORIENTATION_PORTRAIT
0004    ISEQV    4   5
0005    JMP      4 => 0014
0006    TGETS    4   1   0  ; "value"
0007    UGET     5   1      ; DEVICE_ORIENTATION_PORTRAIT_LEFT
0008    ISEQV    4   5
0009    JMP      4 => 0014
0010    TGETS    4   1   0  ; "value"
0011    UGET     5   2      ; DEVICE_ORIENTATION_PORTRAIT_RIGHT
0012    ISNEV    4   5
0013    JMP      4 => 0018
0014 => UGET     4   3      ; framebuffer
0015    TGETS    2   4   1  ; "ORIENTATION_PORTRAIT"
0016    KSTR     3   2      ; "portrait"
0017    JMP      4 => 0049
0018 => TGETS    4   1   0  ; "value"
0019    UGET     5   4      ; DEVICE_ORIENTATION_LANDSCAPE
0020    ISNEV    4   5
0021    JMP      4 => 0026
0022    UGET     4   3      ; framebuffer
0023    TGETS    2   4   3  ; "ORIENTATION_LANDSCAPE"
0024    KSTR     3   4      ; "landscape"
0025    JMP      4 => 0049
0026 => TGETS    4   1   0  ; "value"
0027    UGET     5   5      ; DEVICE_ORIENTATION_PORTRAIT_ROTATED
0028    ISEQV    4   5
0029    JMP      4 => 0038
0030    TGETS    4   1   0  ; "value"
0031    UGET     5   6      ; DEVICE_ORIENTATION_PORTRAIT_ROTATED_LEFT
0032    ISEQV    4   5
0033    JMP      4 => 0038
0034    TGETS    4   1   0  ; "value"
0035    UGET     5   7      ; DEVICE_ORIENTATION_PORTRAIT_ROTATED_RIGHT
0036    ISNEV    4   5
0037    JMP      4 => 0042
0038 => UGET     4   3      ; framebuffer
0039    TGETS    2   4   5  ; "ORIENTATION_PORTRAIT_ROTATED"
0040    KSTR     3   2      ; "portrait"
0041    JMP      4 => 0049
0042 => TGETS    4   1   0  ; "value"
0043    UGET     5   8      ; DEVICE_ORIENTATION_LANDSCAPE_ROTATED
0044    ISNEV    4   5
0045    JMP      4 => 0049
0046    UGET     4   3      ; framebuffer
0047    TGETS    2   4   6  ; "ORIENTATION_LANDSCAPE_ROTATED"
0048    KSTR     3   4      ; "landscape"
0049 => TGETS    4   0   7  ; "device"
0050    TGETS    4   4   8  ; "screen"
0051    MOV      5   4
0052    TGETS    4   4   9  ; "getRotationMode"
0053    CALL     4   2   2
0054    TGETS    5   0   7  ; "device"
0055    TGETS    5   5   8  ; "screen"
0056    MOV      6   5
0057    TGETS    5   5  10  ; "getScreenMode"
0058    CALL     5   2   2
0059    ISEQV    2   4
0060    JMP      6 => 0075
0061    ISNEV    3   5
0062    JMP      6 => 0075
0063    TGETS    6   0   7  ; "device"
0064    TGETS    6   6   8  ; "screen"
0065    MOV      7   6
0066    TGETS    6   6  11  ; "setRotationMode"
0067    MOV      8   2
0068    CALL     6   1   3
0069    GGET     6  12      ; "require"
0070    KSTR     7  13      ; "ui/uimanager"
0071    CALL     6   2   2
0072    MOV      8   6
0073    TGETS    7   6  14  ; "onRotation"
0074    CALL     7   1   2
0075 => RET0     0   1

-- BYTECODE -- input.lua:669-711
0001    KNIL     2   3
0002    TGETS    4   1   0  ; "code"
0003    UGET     5   0      ; MSC_RAW
0004    ISNEV    4   5
0005    JMP      4 => 0040
0006    TGETS    4   1   1  ; "value"
0007    UGET     5   1      ; MSC_RAW_GSENSOR_PORTRAIT_UP
0008    ISNEV    4   5
0009    JMP      4 => 0014
0010    UGET     4   2      ; framebuffer
0011    TGETS    2   4   2  ; "ORIENTATION_PORTRAIT"
0012    KSTR     3   3      ; "portrait"
0013    JMP      4 => 0041
0014 => TGETS    4   1   1  ; "value"
0015    UGET     5   3      ; MSC_RAW_GSENSOR_LANDSCAPE_RIGHT
0016    ISNEV    4   5
0017    JMP      4 => 0022
0018    UGET     4   2      ; framebuffer
0019    TGETS    2   4   4  ; "ORIENTATION_LANDSCAPE"
0020    KSTR     3   5      ; "landscape"
0021    JMP      4 => 0041
0022 => TGETS    4   1   1  ; "value"
0023    UGET     5   4      ; MSC_RAW_GSENSOR_PORTRAIT_DOWN
0024    ISNEV    4   5
0025    JMP      4 => 0030
0026    UGET     4   2      ; framebuffer
0027    TGETS    2   4   6  ; "ORIENTATION_PORTRAIT_ROTATED"
0028    KSTR     3   3      ; "portrait"
0029    JMP      4 => 0041
0030 => TGETS    4   1   1  ; "value"
0031    UGET     5   5      ; MSC_RAW_GSENSOR_LANDSCAPE_LEFT
0032    ISNEV    4   5
0033    JMP      4 => 0038
0034    UGET     4   2      ; framebuffer
0035    TGETS    2   4   7  ; "ORIENTATION_LANDSCAPE_ROTATED"
0036    KSTR     3   5      ; "landscape"
0037    JMP      4 => 0041
0038 => RET0     0   1
0039    JMP      4 => 0041
0040 => RET0     0   1
0041 => TGETS    4   0   8  ; "device"
0042    TGETS    4   4   9  ; "screen"
0043    MOV      5   4
0044    TGETS    4   4  10  ; "getRotationMode"
0045    CALL     4   2   2
0046    TGETS    5   0   8  ; "device"
0047    TGETS    5   5   9  ; "screen"
0048    MOV      6   5
0049    TGETS    5   5  11  ; "getScreenMode"
0050    CALL     5   2   2
0051    ISEQV    2   4
0052    JMP      6 => 0075
0053    ISEQV    3   5
0054    JMP      6 => 0063
0055    UGET     6   6      ; Event
0056    MOV      7   6
0057    TGETS    6   6  12  ; "new"
0058    KSTR     8  13      ; "SwapScreenMode"
0059    MOV      9   3
0060    MOV     10   2
0061    CALLT    6   5
0062    JMP      6 => 0075
0063 => TGETS    6   0   8  ; "device"
0064    TGETS    6   6   9  ; "screen"
0065    MOV      7   6
0066    TGETS    6   6  14  ; "setRotationMode"
0067    MOV      8   2
0068    CALL     6   1   3
0069    GGET     6  15      ; "require"
0070    KSTR     7  16      ; "ui/uimanager"
0071    CALL     6   2   2
0072    MOV      8   6
0073    TGETS    7   6  17  ; "onRotation"
0074    CALL     7   1   2
0075 => RET0     0   1

-- BYTECODE -- input.lua:724-724
0001    RET0     0   1

-- BYTECODE -- input.lua:730-730
0001    RET0     0   1

-- BYTECODE -- input.lua:714-737
0001    ISF          1
0002    JMP      2 => 0013
0003    ISNEP    1   2
0004    JMP      2 => 0013
0005    TGETS    2   0   0  ; "isNTXAccelHooked"
0006    IST          2
0007    JMP      2 => 0036
0008    TGETS    2   0   2  ; "handleMiscEvNTX"
0009    TSETS    2   0   1  ; "handleMiscEv"
0010    KPRI     2   2
0011    TSETS    2   0   0  ; "isNTXAccelHooked"
0012    JMP      2 => 0036
0013 => ISF          1
0014    JMP      2 => 0025
0015    ISNEP    1   1
0016    JMP      2 => 0025
0017    TGETS    2   0   0  ; "isNTXAccelHooked"
0018    ISF          2
0019    JMP      3 => 0036
0020    FNEW     2   3      ; input.lua:724
0021    TSETS    2   0   1  ; "handleMiscEv"
0022    KPRI     2   1
0023    TSETS    2   0   0  ; "isNTXAccelHooked"
0024    JMP      2 => 0036
0025 => TGETS    2   0   0  ; "isNTXAccelHooked"
0026    ISF          2
0027    JMP      3 => 0031
0028    FNEW     2   4      ; input.lua:730
0029    TSETS    2   0   1  ; "handleMiscEv"
0030    JMP      2 => 0033
0031 => TGETS    2   0   2  ; "handleMiscEvNTX"
0032    TSETS    2   0   1  ; "handleMiscEv"
0033 => TGETS    2   0   0  ; "isNTXAccelHooked"
0034    NOT      2   2
0035    TSETS    2   0   0  ; "isNTXAccelHooked"
0036 => RET0     0   1

-- BYTECODE -- input.lua:741-749
0001    TGETS    4   0   0  ; "ev_slots"
0002    TGETV    4   4   1
0003    IST          4
0004    JMP      4 => 0009
0005    TGETS    4   0   0  ; "ev_slots"
0006    TDUP     5   1
0007    TSETS    1   5   2  ; "slot"
0008    TSETV    5   4   1
0009 => TGETS    4   0   0  ; "ev_slots"
0010    TGETV    4   4   1
0011    TSETV    3   4   2
0012    RET0     0   1

-- BYTECODE -- input.lua:751-753
0001    MOV      4   0
0002    TGETS    3   0   0  ; "setMtSlot"
0003    TGETS    5   0   1  ; "cur_slot"
0004    MOV      6   1
0005    MOV      7   2
0006    CALL     3   1   5
0007    RET0     0   1

-- BYTECODE -- input.lua:755-757
0001    TGETS    2   0   0  ; "ev_slots"
0002    TGETV    2   2   1
0003    RET1     2   2

-- BYTECODE -- input.lua:759-761
0001    MOV      2   0
0002    TGETS    1   0   0  ; "getMtSlot"
0003    TGETS    3   0   1  ; "cur_slot"
0004    CALLT    1   3

-- BYTECODE -- input.lua:763-768
0001    TGETS    2   0   0  ; "cur_slot"
0002    ISEQV    2   1
0003    JMP      2 => 0012
0004    GGET     2   1      ; "table"
0005    TGETS    2   2   2  ; "insert"
0006    TGETS    3   0   3  ; "MTSlots"
0007    MOV      5   0
0008    TGETS    4   0   4  ; "getMtSlot"
0009    MOV      6   1
0010    CALL     4   0   3
0011    CALLM    2   1   1
0012 => TSETS    1   0   0  ; "cur_slot"
0013    RET0     0   1

-- BYTECODE -- input.lua:770-773
0001    MOV      2   0
0002    TGETS    1   0   0  ; "setCurrentMtSlot"
0003    KSTR     3   1      ; "x"
0004    TGETS    4   0   2  ; "ev_slots"
0005    TGETS    5   0   3  ; "cur_slot"
0006    TGETV    4   4   5
0007    TGETS    4   4   4  ; "abs_x"
0008    CALL     1   1   4
0009    MOV      2   0
0010    TGETS    1   0   0  ; "setCurrentMtSlot"
0011    KSTR     3   5      ; "y"
0012    TGETS    4   0   2  ; "ev_slots"
0013    TGETS    5   0   3  ; "cur_slot"
0014    TGETV    4   4   5
0015    TGETS    4   4   6  ; "abs_y"
0016    CALL     1   1   4
0017    RET0     0   1

-- BYTECODE -- input.lua:775-778
0001    MOV      2   0
0002    TGETS    1   0   0  ; "setCurrentMtSlot"
0003    KSTR     3   1      ; "abs_x"
0004    KPRI     4   0
0005    CALL     1   1   4
0006    MOV      2   0
0007    TGETS    1   0   0  ; "setCurrentMtSlot"
0008    KSTR     3   2      ; "abs_y"
0009    KPRI     4   0
0010    CALL     1   1   4
0011    RET0     0   1

-- BYTECODE -- input.lua:780-782
0001    TGETS    2   1   0  ; "value"
0002    UGET     3   0      ; EVENT_VALUE_KEY_PRESS
0003    ISEQV    2   3
0004    JMP      2 => 0007
0005    KPRI     2   1
0006    JMP      3 => 0008
0007 => KPRI     2   2
0008 => RET1     2   2

-- BYTECODE -- input.lua:784-786
0001    TGETS    2   1   0  ; "value"
0002    UGET     3   0      ; EVENT_VALUE_KEY_REPEAT
0003    ISEQV    2   3
0004    JMP      2 => 0007
0005    KPRI     2   1
0006    JMP      3 => 0008
0007 => KPRI     2   2
0008 => RET1     2   2

-- BYTECODE -- input.lua:788-790
0001    TGETS    2   1   0  ; "value"
0002    UGET     3   0      ; EVENT_VALUE_KEY_RELEASE
0003    ISEQV    2   3
0004    JMP      2 => 0007
0005    KPRI     2   1
0006    JMP      3 => 0008
0007 => KPRI     2   2
0008 => RET1     2   2

-- BYTECODE -- input.lua:794-879
0001    KNIL     2   3
0002 => LOOP     4 => 0122
0003    TGETS    4   0   0  ; "timer_callbacks"
0004    LEN      4   4
0005    KSHORT   5   0
0006    ISGE     5   4
0007    JMP      4 => 0079
0008    UGET     4   0      ; TimeVal
0009    MOV      5   4
0010    TGETS    4   4   1  ; "now"
0011    CALL     4   2   2
0012    UGET     5   0      ; TimeVal
0013    MOV      6   5
0014    TGETS    5   5   2  ; "new"
0015    TDUP     7   3
0016    TSETS    1   7   4  ; "usec"
0017    CALL     5   2   3
0018    ADDVV    4   4   5
0019 => TGETS    5   0   0  ; "timer_callbacks"
0020    LEN      5   5
0021    KSHORT   6   0
0022    ISGE     6   5
0023    JMP      5 => 0086
0024    LOOP     5 => 0078
0025    GGET     5   5      ; "pcall"
0026    UGET     6   1      ; input
0027    TGETS    6   6   6  ; "waitForEvent"
0028    KSHORT   7 100
0029    CALL     5   3   3
0030    MOV      3   6
0031    MOV      2   5
0032    ISF          2
0033    JMP      5 => 0035
0034    JMP      5 => 0086
0035 => UGET     5   0      ; TimeVal
0036    MOV      6   5
0037    TGETS    5   5   1  ; "now"
0038    CALL     5   2   2
0039    ISF          1
0040    JMP      6 => 0043
0041    ISGE     5   4
0042    JMP      6 => 0086
0043 => TGETS    6   0   0  ; "timer_callbacks"
0044    TGETB    6   6   1
0045    TGETS    6   6   7  ; "deadline"
0046    ISGT     6   5
0047    JMP      6 => 0019
0048    TGETS    6   0   0  ; "timer_callbacks"
0049    TGETB    6   6   1
0050    TGETS    6   6   8  ; "callback"
0051    CALL     6   2   1
0052    GGET     7   9      ; "table"
0053    TGETS    7   7  10  ; "remove"
0054    TGETS    8   0   0  ; "timer_callbacks"
0055    KSHORT   9   1
0056    CALL     7   1   3
0057    ISF          6
0058    JMP      7 => 0019
0059    TNEW     7   0
0060    TSETS    7   0   0  ; "timer_callbacks"
0061    MOV      8   0
0062    TGETS    7   0  11  ; "gestureAdjustHook"
0063    MOV      9   6
0064    CALL     7   1   3
0065    UGET     7   2      ; Event
0066    MOV      8   7
0067    TGETS    7   7   2  ; "new"
0068    KSTR     9  12      ; "Gesture"
0069    TGETS   10   0  13  ; "gesture_detector"
0070    MOV     11  10
0071    TGETS   10  10  14  ; "adjustGesCoordinate"
0072    MOV     12   6
0073    CALL    10   0   3
0074    CALLMT   7   2
0075    JMP      6 => 0019
0076    JMP      5 => 0086
0077    JMP      5 => 0019
0078 => JMP      4 => 0086
0079 => GGET     4   5      ; "pcall"
0080    UGET     5   1      ; input
0081    TGETS    5   5   6  ; "waitForEvent"
0082    MOV      6   1
0083    CALL     4   3   3
0084    MOV      3   5
0085    MOV      2   4
0086 => ISF          2
0087    JMP      4 => 0089
0088    JMP      4 => 0122
0089 => KSTR     4  15      ; "Waiting for input failed: timeout\n"
0090    ISF          3
0091    JMP      5 => 0107
0092    TGETS    5   3  16  ; "sub"
0093    ISF          5
0094    JMP      6 => 0107
0095    MOV      6   3
0096    TGETS    5   3  16  ; "sub"
0097    MOV      8   4
0098    TGETS    7   4  17  ; "len"
0099    CALL     7   2   2
0100    UNM      7   7
0101    CALL     5   2   3
0102    ISNEV    5   4
0103    JMP      5 => 0107
0104    KPRI     3   0
0105    JMP      4 => 0122
0106    JMP      5 => 0113
0107 => ISNES    3  18      ; "application forced to quit"
0108    JMP      5 => 0113
0109    GGET     5  19      ; "os"
0110    TGETS    5   5  20  ; "exit"
0111    KSHORT   6   0
0112    CALL     5   1   2
0113 => UGET     5   3      ; logger
0114    TGETS    5   5  21  ; "warn"
0115    KSTR     6  22      ; "got error waiting for events:"
0116    MOV      7   3
0117    CALL     5   1   3
0118    ISEQS    3  23      ; "Waiting for input failed: 4\n"
0119    JMP      5 => 0002
0120    JMP      4 => 0122
0121    JMP      4 => 0002
0122 => ISF          2
0123    JMP      4 => 0227
0124    ISF          3
0125    JMP      4 => 0227
0126    UGET     4   4      ; DEBUG
0127    TGETS    4   4  24  ; "is_on"
0128    ISF          4
0129    JMP      5 => 0163
0130    ISF          3
0131    JMP      4 => 0163
0132    UGET     4   4      ; DEBUG
0133    MOV      5   4
0134    TGETS    4   4  25  ; "logEv"
0135    MOV      6   3
0136    CALL     4   1   3
0137    UGET     4   3      ; logger
0138    TGETS    4   4  26  ; "dbg"
0139    GGET     5  27      ; "string"
0140    TGETS    5   5  28  ; "format"
0141    KSTR     6  29      ; "%s event => type: %d, code: %d(%s), valu"~
0142    TGETS    7   3  30  ; "type"
0143    UGET     8   5      ; EV_KEY
0144    ISNEV    7   8
0145    JMP      7 => 0148
0146    KSTR     7  31      ; "key"
0147    JMP      8 => 0149
0148 => KSTR     7  32      ; "input"
0149 => TGETS    8   3  30  ; "type"
0150    TGETS    9   3  33  ; "code"
0151    TGETS   10   0  34  ; "event_map"
0152    TGETS   11   3  33  ; "code"
0153    TGETV   10  10  11
0154    GGET    11  35      ; "tostring"
0155    TGETS   12   3  36  ; "value"
0156    CALL    11   2   2
0157    TGETS   12   3  37  ; "time"
0158    TGETS   12  12  38  ; "sec"
0159    TGETS   13   3  37  ; "time"
0160    TGETS   13  13   4  ; "usec"
0161    CALL     5   0   9
0162    CALLM    4   1   0
0163 => MOV      5   0
0164    TGETS    4   0  39  ; "eventAdjustHook"
0165    MOV      6   3
0166    CALL     4   1   3
0167    TGETS    4   3  30  ; "type"
0168    UGET     5   5      ; EV_KEY
0169    ISNEV    4   5
0170    JMP      4 => 0176
0171    MOV      5   0
0172    TGETS    4   0  40  ; "handleKeyBoardEv"
0173    MOV      6   3
0174    CALLT    4   3
0175    JMP      4 => 0237
0176 => TGETS    4   3  30  ; "type"
0177    UGET     5   6      ; EV_ABS
0178    ISNEV    4   5
0179    JMP      4 => 0189
0180    TGETS    4   3  33  ; "code"
0181    UGET     5   7      ; ABS_OASIS_ORIENTATION
0182    ISNEV    4   5
0183    JMP      4 => 0189
0184    MOV      5   0
0185    TGETS    4   0  41  ; "handleOasisOrientationEv"
0186    MOV      6   3
0187    CALLT    4   3
0188    JMP      4 => 0237
0189 => TGETS    4   3  30  ; "type"
0190    UGET     5   6      ; EV_ABS
0191    ISEQV    4   5
0192    JMP      4 => 0197
0193    TGETS    4   3  30  ; "type"
0194    UGET     5   8      ; EV_SYN
0195    ISNEV    4   5
0196    JMP      4 => 0202
0197 => MOV      5   0
0198    TGETS    4   0  42  ; "handleTouchEv"
0199    MOV      6   3
0200    CALLT    4   3
0201    JMP      4 => 0237
0202 => TGETS    4   3  30  ; "type"
0203    UGET     5   9      ; EV_MSC
0204    ISNEV    4   5
0205    JMP      4 => 0211
0206    MOV      5   0
0207    TGETS    4   0  43  ; "handleMiscEv"
0208    MOV      6   3
0209    CALLT    4   3
0210    JMP      4 => 0237
0211 => TGETS    4   3  30  ; "type"
0212    UGET     5  10      ; EV_SDL
0213    ISNEV    4   5
0214    JMP      4 => 0220
0215    MOV      5   0
0216    TGETS    4   0  44  ; "handleSdlEv"
0217    MOV      6   3
0218    CALLT    4   3
0219    JMP      4 => 0237
0220 => UGET     4   2      ; Event
0221    MOV      5   4
0222    TGETS    4   4   2  ; "new"
0223    KSTR     6  45      ; "GenericInput"
0224    MOV      7   3
0225    CALLT    4   4
0226    JMP      4 => 0237
0227 => IST          2
0228    JMP      4 => 0237
0229    ISF          3
0230    JMP      4 => 0237
0231    UGET     4   2      ; Event
0232    MOV      5   4
0233    TGETS    4   4   2  ; "new"
0234    KSTR     6  46      ; "InputError"
0235    MOV      7   3
0236    CALLT    4   4
0237 => RET0     0   1

-- BYTECODE -- input.lua:0-882
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "datastorage"
0003    CALL     0   2   2
0004    GGET     1   0      ; "require"
0005    KSTR     2   2      ; "dbg"
0006    CALL     1   2   2
0007    GGET     2   0      ; "require"
0008    KSTR     3   3      ; "ui/event"
0009    CALL     2   2   2
0010    GGET     3   0      ; "require"
0011    KSTR     4   4      ; "device/gesturedetector"
0012    CALL     3   2   2
0013    GGET     4   0      ; "require"
0014    KSTR     5   5      ; "device/key"
0015    CALL     4   2   2
0016    GGET     5   0      ; "require"
0017    KSTR     6   6      ; "ui/timeval"
0018    CALL     5   2   2
0019    GGET     6   0      ; "require"
0020    KSTR     7   7      ; "ffi/framebuffer"
0021    CALL     6   2   2
0022    GGET     7   0      ; "require"
0023    KSTR     8   8      ; "ffi/input"
0024    CALL     7   2   2
0025    GGET     8   0      ; "require"
0026    KSTR     9   9      ; "logger"
0027    CALL     8   2   2
0028    GGET     9   0      ; "require"
0029    KSTR    10  10      ; "gettext"
0030    CALL     9   2   2
0031    KSHORT  10   0
0032    KSHORT  11   1
0033    KSHORT  12   3
0034    KSHORT  13   4
0035    KSHORT  14  53
0036    KSHORT  15   1
0037    KSHORT  16   2
0038    KSHORT  17   0
0039    KSHORT  18   0
0040    KSHORT  19   1
0041    KSHORT  20   2
0042    KSHORT  21   0
0043    KSHORT  22   1
0044    KSHORT  23  24
0045    KSHORT  24  47
0046    KSHORT  25  48
0047    KSHORT  26  50
0048    KSHORT  27  53
0049    KSHORT  28  54
0050    KSHORT  29  57
0051    KSHORT  30  58
0052    KSHORT  31 -24
0053    KSHORT  32  15
0054    KSHORT  33  17
0055    KSHORT  34  19
0056    KSHORT  35  16
0057    KSHORT  36  18
0058    KSHORT  37  20
0059    KSHORT  38  21
0060    KSHORT  39  22
0061    KSHORT  40   3
0062    KSHORT  41  23
0063    KSHORT  42  24
0064    KSHORT  43  25
0065    KSHORT  44  26
0066    KSHORT  45  27
0067    KSHORT  46  28
0068    KPRI    47   0
0069    TDUP    48  11
0070    TNEW    49   0
0071    TSETS   49  48  12  ; "event_map"
0072    TNEW    49   0
0073    TSETS   49  48  13  ; "event_map_adapter"
0074    TDUP    49  15
0075    TDUP    50  14
0076    TSETS   50  49  16  ; "Cursor"
0077    TDUP    50  17
0078    TSETS   50  49  18  ; "PgFwd"
0079    TDUP    50  19
0080    TSETS   50  49  20  ; "PgBack"
0081    TDUP    50  21
0082    TSETS   50  49  22  ; "Alphabet"
0083    TDUP    50  23
0084    TSETS   50  49  24  ; "AlphaNumeric"
0085    TDUP    50  25
0086    TSETS   50  49  26  ; "Numeric"
0087    TDUP    50  27
0088    TSETS   50  49  28  ; "Text"
0089    TDUP    50  29
0090    TSETS   50  49  30  ; "Any"
0091    TSETS   49  48  31  ; "group"
0092    TNEW    49 4096
0093    TGETS   50   6  32  ; "ORIENTATION_PORTRAIT"
0094    TNEW    51   0
0095    TSETV   51  49  50
0096    TGETS   50   6  33  ; "ORIENTATION_LANDSCAPE"
0097    TDUP    51  34
0098    TSETV   51  49  50
0099    TGETS   50   6  35  ; "ORIENTATION_PORTRAIT_ROTATED"
0100    TDUP    51  36
0101    TSETV   51  49  50
0102    TGETS   50   6  37  ; "ORIENTATION_LANDSCAPE_ROTATED"
0103    TDUP    51  38
0104    TSETV   51  49  50
0105    TSETS   49  48  39  ; "rotation_map"
0106    TNEW    49   0
0107    TSETS   49  48  40  ; "timer_callbacks"
0108    TDUP    49  41
0109    TSETS   49  48  42  ; "modifiers"
0110    TNEW    49   0
0111    TSETS   49  48  43  ; "MTSlots"
0112    TNEW    49   3
0113    TDUP    50  44
0114    TSETB   50  49   0
0115    TSETS   49  48  45  ; "ev_slots"
0116    FNEW    49  46      ; input.lua:151
0117    TSETS   49  48  47  ; "hasClipboardText"
0118    FNEW    49  48      ; input.lua:154
0119    TSETS   49  48  49  ; "getClipboardText"
0120    FNEW    49  50      ; input.lua:157
0121    TSETS   49  48  51  ; "setClipboardText"
0122    FNEW    49  53      ; input.lua:162
0123    TSETS   49  48  52  ; "new"
0124    FNEW    49  55      ; input.lua:170
0125    TSETS   49  48  54  ; "init"
0126    FNEW    49  57      ; input.lua:203
0127    TSETS   49  48  56  ; "open"
0128    FNEW    49  59      ; input.lua:211
0129    TSETS   49  48  58  ; "registerEventAdjustHook"
0130    FNEW    49  61      ; input.lua:219
0131    TSETS   49  48  60  ; "registerGestureAdjustHook"
0132    FNEW    49  63      ; input.lua:227
0133    TSETS   49  48  62  ; "eventAdjustHook"
0134    FNEW    49  65      ; input.lua:231
0135    TSETS   49  48  64  ; "gestureAdjustHook"
0136    FNEW    49  67      ; input.lua:236
0137    TSETS   49  48  66  ; "adjustTouchSwitchXY"
0138    FNEW    49  69      ; input.lua:250
0139    TSETS   49  48  68  ; "adjustTouchScale"
0140    FNEW    49  71      ; input.lua:261
0141    TSETS   49  48  70  ; "adjustTouchMirrorX"
0142    FNEW    49  73      ; input.lua:268
0143    TSETS   49  48  72  ; "adjustTouchMirrorY"
0144    FNEW    49  75      ; input.lua:275
0145    TSETS   49  48  74  ; "adjustTouchTranslate"
0146    FNEW    49  77      ; input.lua:286
0147    TSETS   49  48  76  ; "adjustKindleOasisOrientation"
0148    FNEW    49  79      ; input.lua:292
0149    TSETS   49  48  78  ; "setTimeout"
0150    FNEW    49  81      ; input.lua:303
0151    TSETS   49  48  80  ; "handleKeyBoardEv"
0152    FNEW    49  83      ; input.lua:434
0153    TSETS   49  48  82  ; "handleMiscEv"
0154    FNEW    49  85      ; input.lua:438
0155    TSETS   49  48  84  ; "handleSdlEv"
0156    FNEW    49  87      ; input.lua:469
0157    TSETS   49  48  86  ; "handleTouchEv"
0158    FNEW    49  89      ; input.lua:540
0159    TSETS   49  48  88  ; "handleTouchEvPhoenix"
0160    FNEW    49  91      ; input.lua:602
0161    TSETS   49  48  90  ; "handleTouchEvLegacy"
0162    FNEW    49  93      ; input.lua:639
0163    TSETS   49  48  92  ; "handleOasisOrientationEv"
0164    FNEW    49  95      ; input.lua:669
0165    TSETS   49  48  94  ; "handleMiscEvNTX"
0166    FNEW    49  97      ; input.lua:714
0167    TSETS   49  48  96  ; "toggleMiscEvNTX"
0168    FNEW    49  99      ; input.lua:741
0169    TSETS   49  48  98  ; "setMtSlot"
0170    FNEW    49 101      ; input.lua:751
0171    TSETS   49  48 100  ; "setCurrentMtSlot"
0172    FNEW    49 103      ; input.lua:755
0173    TSETS   49  48 102  ; "getMtSlot"
0174    FNEW    49 105      ; input.lua:759
0175    TSETS   49  48 104  ; "getCurrentMtSlot"
0176    FNEW    49 107      ; input.lua:763
0177    TSETS   49  48 106  ; "addSlotIfChanged"
0178    FNEW    49 109      ; input.lua:770
0179    TSETS   49  48 108  ; "confirmAbsxy"
0180    FNEW    49 111      ; input.lua:775
0181    TSETS   49  48 110  ; "cleanAbsxy"
0182    FNEW    49 113      ; input.lua:780
0183    TSETS   49  48 112  ; "isEvKeyPress"
0184    FNEW    49 115      ; input.lua:784
0185    TSETS   49  48 114  ; "isEvKeyRepeat"
0186    FNEW    49 117      ; input.lua:788
0187    TSETS   49  48 116  ; "isEvKeyRelease"
0188    FNEW    49 119      ; input.lua:794
0189    TSETS   49  48 118  ; "waitEvent"
0190    UCLO     0 => 0191
0191 => RET1    48   2

