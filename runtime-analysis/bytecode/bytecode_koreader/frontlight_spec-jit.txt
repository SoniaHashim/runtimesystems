-- BYTECODE -- frontlight_spec.lua:21-23
0001    TGETS    1   0   0  ; "frontlight"
0002    RET1     1   2

-- BYTECODE -- frontlight_spec.lua:24-26
0001    TSETS    1   0   0  ; "frontlight"
0002    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:4-27
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "commonrequire"
0003    CALL     0   1   2
0004    GGET     0   2      ; "package"
0005    TGETS    0   0   3  ; "unloadAll"
0006    CALL     0   1   1
0007    GGET     0   0      ; "require"
0008    KSTR     1   4      ; "document/canvascontext"
0009    CALL     0   2   2
0010    MOV      1   0
0011    TGETS    0   0   5  ; "init"
0012    GGET     2   0      ; "require"
0013    KSTR     3   6      ; "device"
0014    CALL     2   0   2
0015    CALLM    0   1   1
0016    GGET     0   0      ; "require"
0017    KSTR     1   7      ; "device/generic/powerd"
0018    CALL     0   2   2
0019    MOV      1   0
0020    TGETS    0   0   8  ; "new"
0021    TDUP     2   9
0022    CALL     0   2   3
0023    USETV    0   0      ; PowerD
0024    TDUP     0  10
0025    USETV    1   0      ; param
0026    UGET     0   0      ; PowerD
0027    FNEW     1  12      ; frontlight_spec.lua:21
0028    TSETS    1   0  11  ; "frontlightIntensityHW"
0029    UGET     0   0      ; PowerD
0030    FNEW     1  14      ; frontlight_spec.lua:24
0031    TSETS    1   0  13  ; "setIntensityHW"
0032    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:29-32
0001    GGET     0   0      ; "package"
0002    TGETS    0   0   1  ; "unloadAll"
0003    CALL     0   1   1
0004    GGET     0   2      ; "require"
0005    KSTR     1   3      ; "document/canvascontext"
0006    CALL     0   2   2
0007    MOV      1   0
0008    TGETS    0   0   4  ; "init"
0009    GGET     2   2      ; "require"
0010    KSTR     3   5      ; "device"
0011    CALL     2   0   2
0012    CALLM    0   1   1
0013    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:36-36
0001    KPRI     0   2
0002    RET1     0   2

-- BYTECODE -- frontlight_spec.lua:38-38
0001    KPRI     0   2
0002    RET1     0   2

-- BYTECODE -- frontlight_spec.lua:34-50
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "device"
0003    CALL     0   2   2
0004    USETV    0   0      ; Device
0005    UGET     0   0      ; Device
0006    FNEW     1   3      ; frontlight_spec.lua:36
0007    TSETS    1   0   2  ; "isKobo"
0008    UGET     0   0      ; Device
0009    KSTR     1   5      ; "Kobo_dahlia"
0010    TSETS    1   0   4  ; "model"
0011    UGET     0   0      ; Device
0012    FNEW     1   7      ; frontlight_spec.lua:38
0013    TSETS    1   0   6  ; "hasFrontlight"
0014    UGET     0   1      ; param
0015    UGET     1   0      ; Device
0016    TSETS    1   0   1  ; "device"
0017    UGET     0   0      ; Device
0018    UGET     1   2      ; PowerD
0019    MOV      2   1
0020    TGETS    1   1   9  ; "new"
0021    TNEW     3   3
0022    UGET     4   1      ; param
0023    TSETB    4   3   1
0024    CALL     1   2   3
0025    TSETS    1   0   8  ; "powerd"
0026    GGET     0  10      ; "stub"
0027    UGET     1   2      ; PowerD
0028    KSTR     2  11      ; "init"
0029    CALL     0   1   3
0030    GGET     0  12      ; "spy"
0031    TGETS    0   0  13  ; "on"
0032    UGET     1   2      ; PowerD
0033    KSTR     2  14      ; "frontlightIntensityHW"
0034    CALL     0   1   3
0035    GGET     0  12      ; "spy"
0036    TGETS    0   0  13  ; "on"
0037    UGET     1   2      ; PowerD
0038    KSTR     2  15      ; "setIntensityHW"
0039    CALL     0   1   3
0040    GGET     0  12      ; "spy"
0041    TGETS    0   0  13  ; "on"
0042    UGET     1   2      ; PowerD
0043    KSTR     2  16      ; "turnOnFrontlightHW"
0044    CALL     0   1   3
0045    GGET     0  12      ; "spy"
0046    TGETS    0   0  13  ; "on"
0047    UGET     1   2      ; PowerD
0048    KSTR     2  17      ; "turnOffFrontlightHW"
0049    CALL     0   1   3
0050    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:52-59
0001    UGET     0   0      ; PowerD
0002    MOV      1   0
0003    TGETS    0   0   0  ; "new"
0004    UGET     2   1      ; param
0005    CALL     0   2   3
0006    GGET     1   1      ; "assert"
0007    TGETS    1   1   2  ; "are"
0008    TGETS    1   1   3  ; "equal"
0009    KSHORT   2   2
0010    MOV      4   0
0011    TGETS    3   0   4  ; "frontlightIntensityHW"
0012    CALL     3   0   2
0013    CALLM    1   1   1
0014    GGET     1   1      ; "assert"
0015    TGETS    1   1   2  ; "are"
0016    TGETS    1   1   3  ; "equal"
0017    KSHORT   2   2
0018    MOV      4   0
0019    TGETS    3   0   5  ; "frontlightIntensity"
0020    CALL     3   0   2
0021    CALLM    1   1   1
0022    GGET     1   1      ; "assert"
0023    TGETS    1   1   6  ; "is"
0024    TGETS    1   1   7  ; "truthy"
0025    MOV      3   0
0026    TGETS    2   0   8  ; "isFrontlightOn"
0027    CALL     2   0   2
0028    CALLM    1   1   0
0029    GGET     1   1      ; "assert"
0030    TGETS    1   1   9  ; "stub"
0031    TGETS    2   0  10  ; "init"
0032    CALL     1   2   2
0033    TGETS    1   1  11  ; "is_called"
0034    KSHORT   2   1
0035    CALL     1   1   2
0036    GGET     1   1      ; "assert"
0037    TGETS    1   1  12  ; "spy"
0038    TGETS    2   0   4  ; "frontlightIntensityHW"
0039    CALL     1   2   2
0040    TGETS    1   1  11  ; "is_called"
0041    KSHORT   2   2
0042    CALL     1   1   2
0043    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:61-138
0001    UGET     1   0      ; param
0002    TSETS    0   1   0  ; "fl_min"
0003    UGET     1   0      ; param
0004    KSHORT   2   0
0005    TSETS    2   1   1  ; "fl_intensity"
0006    UGET     1   1      ; PowerD
0007    MOV      2   1
0008    TGETS    1   1   2  ; "new"
0009    UGET     3   0      ; param
0010    CALL     1   2   3
0011    MOV      3   1
0012    TGETS    2   1   3  ; "setIntensity"
0013    KSHORT   4   0
0014    CALL     2   1   3
0015    GGET     2   4      ; "assert"
0016    TGETS    2   2   5  ; "are"
0017    TGETS    2   2   6  ; "equal"
0018    UGET     3   0      ; param
0019    TGETS    3   3   0  ; "fl_min"
0020    MOV      5   1
0021    TGETS    4   1   7  ; "frontlightIntensityHW"
0022    CALL     4   0   2
0023    CALLM    2   1   1
0024    GGET     2   4      ; "assert"
0025    TGETS    2   2   5  ; "are"
0026    TGETS    2   2   6  ; "equal"
0027    KSHORT   3   0
0028    MOV      5   1
0029    TGETS    4   1   8  ; "frontlightIntensity"
0030    CALL     4   0   2
0031    CALLM    2   1   1
0032    GGET     2   4      ; "assert"
0033    TGETS    2   2   9  ; "is"
0034    TGETS    2   2  10  ; "truthy"
0035    MOV      4   1
0036    TGETS    3   1  11  ; "isFrontlightOff"
0037    CALL     3   0   2
0038    CALLM    2   1   0
0039    GGET     2   4      ; "assert"
0040    TGETS    2   2  12  ; "stub"
0041    TGETS    3   1  13  ; "init"
0042    CALL     2   2   2
0043    TGETS    2   2  14  ; "is_called"
0044    KSHORT   3   1
0045    CALL     2   1   2
0046    GGET     2   4      ; "assert"
0047    TGETS    2   2  15  ; "spy"
0048    TGETS    3   1  16  ; "setIntensityHW"
0049    CALL     2   2   2
0050    TGETS    2   2  14  ; "is_called"
0051    KSHORT   3   1
0052    CALL     2   1   2
0053    GGET     2   4      ; "assert"
0054    TGETS    2   2   5  ; "are"
0055    TGETS    2   2   6  ; "equal"
0056    UGET     3   0      ; param
0057    TGETS    3   3   0  ; "fl_min"
0058    TGETS    4   1  17  ; "frontlight"
0059    CALL     2   1   3
0060    GGET     2   4      ; "assert"
0061    TGETS    2   2  15  ; "spy"
0062    TGETS    3   1   7  ; "frontlightIntensityHW"
0063    CALL     2   2   2
0064    TGETS    2   2  14  ; "is_called"
0065    KSHORT   3   2
0066    CALL     2   1   2
0067    GGET     2   4      ; "assert"
0068    TGETS    2   2  15  ; "spy"
0069    TGETS    3   1  18  ; "turnOnFrontlightHW"
0070    CALL     2   2   2
0071    TGETS    2   2  14  ; "is_called"
0072    KSHORT   3   0
0073    CALL     2   1   2
0074    GGET     2   4      ; "assert"
0075    TGETS    2   2  15  ; "spy"
0076    TGETS    3   1  19  ; "turnOffFrontlightHW"
0077    CALL     2   2   2
0078    TGETS    2   2  14  ; "is_called"
0079    KSHORT   3   0
0080    CALL     2   1   2
0081    GGET     2   4      ; "assert"
0082    TGETS    2   2   9  ; "is"
0083    TGETS    2   2  20  ; "falsy"
0084    MOV      4   1
0085    TGETS    3   1  21  ; "turnOnFrontlight"
0086    CALL     3   0   2
0087    CALLM    2   1   0
0088    GGET     2   4      ; "assert"
0089    TGETS    2   2   5  ; "are"
0090    TGETS    2   2   6  ; "equal"
0091    KSHORT   3   0
0092    MOV      5   1
0093    TGETS    4   1   8  ; "frontlightIntensity"
0094    CALL     4   0   2
0095    CALLM    2   1   1
0096    GGET     2   4      ; "assert"
0097    TGETS    2   2   9  ; "is"
0098    TGETS    2   2  10  ; "truthy"
0099    MOV      4   1
0100    TGETS    3   1  11  ; "isFrontlightOff"
0101    CALL     3   0   2
0102    CALLM    2   1   0
0103    GGET     2   4      ; "assert"
0104    TGETS    2   2  15  ; "spy"
0105    TGETS    3   1  16  ; "setIntensityHW"
0106    CALL     2   2   2
0107    TGETS    2   2  14  ; "is_called"
0108    KSHORT   3   1
0109    CALL     2   1   2
0110    GGET     2   4      ; "assert"
0111    TGETS    2   2  15  ; "spy"
0112    TGETS    3   1  18  ; "turnOnFrontlightHW"
0113    CALL     2   2   2
0114    TGETS    2   2  14  ; "is_called"
0115    KSHORT   3   0
0116    CALL     2   1   2
0117    GGET     2   4      ; "assert"
0118    TGETS    2   2  15  ; "spy"
0119    TGETS    3   1  19  ; "turnOffFrontlightHW"
0120    CALL     2   2   2
0121    TGETS    2   2  14  ; "is_called"
0122    KSHORT   3   0
0123    CALL     2   1   2
0124    GGET     2   4      ; "assert"
0125    TGETS    2   2   9  ; "is"
0126    TGETS    2   2  20  ; "falsy"
0127    MOV      4   1
0128    TGETS    3   1  22  ; "toggleFrontlight"
0129    CALL     3   0   2
0130    CALLM    2   1   0
0131    GGET     2   4      ; "assert"
0132    TGETS    2   2   5  ; "are"
0133    TGETS    2   2   6  ; "equal"
0134    KSHORT   3   0
0135    MOV      5   1
0136    TGETS    4   1   8  ; "frontlightIntensity"
0137    CALL     4   0   2
0138    CALLM    2   1   1
0139    GGET     2   4      ; "assert"
0140    TGETS    2   2   9  ; "is"
0141    TGETS    2   2  10  ; "truthy"
0142    MOV      4   1
0143    TGETS    3   1  11  ; "isFrontlightOff"
0144    CALL     3   0   2
0145    CALLM    2   1   0
0146    GGET     2   4      ; "assert"
0147    TGETS    2   2  15  ; "spy"
0148    TGETS    3   1  16  ; "setIntensityHW"
0149    CALL     2   2   2
0150    TGETS    2   2  14  ; "is_called"
0151    KSHORT   3   1
0152    CALL     2   1   2
0153    GGET     2   4      ; "assert"
0154    TGETS    2   2  15  ; "spy"
0155    TGETS    3   1  18  ; "turnOnFrontlightHW"
0156    CALL     2   2   2
0157    TGETS    2   2  14  ; "is_called"
0158    KSHORT   3   0
0159    CALL     2   1   2
0160    GGET     2   4      ; "assert"
0161    TGETS    2   2  15  ; "spy"
0162    TGETS    3   1  19  ; "turnOffFrontlightHW"
0163    CALL     2   2   2
0164    TGETS    2   2  14  ; "is_called"
0165    KSHORT   3   0
0166    CALL     2   1   2
0167    GGET     2   4      ; "assert"
0168    TGETS    2   2   9  ; "is"
0169    TGETS    2   2  10  ; "truthy"
0170    MOV      4   1
0171    TGETS    3   1   3  ; "setIntensity"
0172    KSHORT   5   2
0173    CALL     3   0   3
0174    CALLM    2   1   0
0175    GGET     2   4      ; "assert"
0176    TGETS    2   2   5  ; "are"
0177    TGETS    2   2   6  ; "equal"
0178    KSHORT   3   2
0179    MOV      5   1
0180    TGETS    4   1   8  ; "frontlightIntensity"
0181    CALL     4   0   2
0182    CALLM    2   1   1
0183    GGET     2   4      ; "assert"
0184    TGETS    2   2   9  ; "is"
0185    TGETS    2   2  10  ; "truthy"
0186    MOV      4   1
0187    TGETS    3   1  23  ; "isFrontlightOn"
0188    CALL     3   0   2
0189    CALLM    2   1   0
0190    GGET     2   4      ; "assert"
0191    TGETS    2   2  15  ; "spy"
0192    TGETS    3   1  16  ; "setIntensityHW"
0193    CALL     2   2   2
0194    TGETS    2   2  14  ; "is_called"
0195    KSHORT   3   2
0196    CALL     2   1   2
0197    GGET     2   4      ; "assert"
0198    TGETS    2   2   5  ; "are"
0199    TGETS    2   2   6  ; "equal"
0200    KSHORT   3   2
0201    TGETS    4   1  17  ; "frontlight"
0202    CALL     2   1   3
0203    GGET     2   4      ; "assert"
0204    TGETS    2   2  15  ; "spy"
0205    TGETS    3   1  18  ; "turnOnFrontlightHW"
0206    CALL     2   2   2
0207    TGETS    2   2  14  ; "is_called"
0208    KSHORT   3   0
0209    CALL     2   1   2
0210    GGET     2   4      ; "assert"
0211    TGETS    2   2  15  ; "spy"
0212    TGETS    3   1  19  ; "turnOffFrontlightHW"
0213    CALL     2   2   2
0214    TGETS    2   2  14  ; "is_called"
0215    KSHORT   3   0
0216    CALL     2   1   2
0217    GGET     2   4      ; "assert"
0218    TGETS    2   2   9  ; "is"
0219    TGETS    2   2  20  ; "falsy"
0220    MOV      4   1
0221    TGETS    3   1  21  ; "turnOnFrontlight"
0222    CALL     3   0   2
0223    CALLM    2   1   0
0224    GGET     2   4      ; "assert"
0225    TGETS    2   2   5  ; "are"
0226    TGETS    2   2   6  ; "equal"
0227    KSHORT   3   2
0228    MOV      5   1
0229    TGETS    4   1   8  ; "frontlightIntensity"
0230    CALL     4   0   2
0231    CALLM    2   1   1
0232    GGET     2   4      ; "assert"
0233    TGETS    2   2   9  ; "is"
0234    TGETS    2   2  10  ; "truthy"
0235    MOV      4   1
0236    TGETS    3   1  23  ; "isFrontlightOn"
0237    CALL     3   0   2
0238    CALLM    2   1   0
0239    GGET     2   4      ; "assert"
0240    TGETS    2   2  15  ; "spy"
0241    TGETS    3   1  16  ; "setIntensityHW"
0242    CALL     2   2   2
0243    TGETS    2   2  14  ; "is_called"
0244    KSHORT   3   2
0245    CALL     2   1   2
0246    GGET     2   4      ; "assert"
0247    TGETS    2   2  15  ; "spy"
0248    TGETS    3   1  18  ; "turnOnFrontlightHW"
0249    CALL     2   2   2
0250    TGETS    2   2  14  ; "is_called"
0251    KSHORT   3   0
0252    CALL     2   1   2
0253    GGET     2   4      ; "assert"
0254    TGETS    2   2  15  ; "spy"
0255    TGETS    3   1  19  ; "turnOffFrontlightHW"
0256    CALL     2   2   2
0257    TGETS    2   2  14  ; "is_called"
0258    KSHORT   3   0
0259    CALL     2   1   2
0260    GGET     2   4      ; "assert"
0261    TGETS    2   2   9  ; "is"
0262    TGETS    2   2  10  ; "truthy"
0263    MOV      4   1
0264    TGETS    3   1  24  ; "turnOffFrontlight"
0265    CALL     3   0   2
0266    CALLM    2   1   0
0267    GGET     2   4      ; "assert"
0268    TGETS    2   2   5  ; "are"
0269    TGETS    2   2   6  ; "equal"
0270    KSHORT   3   0
0271    MOV      5   1
0272    TGETS    4   1   8  ; "frontlightIntensity"
0273    CALL     4   0   2
0274    CALLM    2   1   1
0275    GGET     2   4      ; "assert"
0276    TGETS    2   2   9  ; "is"
0277    TGETS    2   2  10  ; "truthy"
0278    MOV      4   1
0279    TGETS    3   1  11  ; "isFrontlightOff"
0280    CALL     3   0   2
0281    CALLM    2   1   0
0282    GGET     2   4      ; "assert"
0283    TGETS    2   2  15  ; "spy"
0284    TGETS    3   1  16  ; "setIntensityHW"
0285    CALL     2   2   2
0286    TGETS    2   2  14  ; "is_called"
0287    KSHORT   3   3
0288    CALL     2   1   2
0289    GGET     2   4      ; "assert"
0290    TGETS    2   2   5  ; "are"
0291    TGETS    2   2   6  ; "equal"
0292    UGET     3   0      ; param
0293    TGETS    3   3   0  ; "fl_min"
0294    TGETS    4   1  17  ; "frontlight"
0295    CALL     2   1   3
0296    GGET     2   4      ; "assert"
0297    TGETS    2   2  15  ; "spy"
0298    TGETS    3   1  18  ; "turnOnFrontlightHW"
0299    CALL     2   2   2
0300    TGETS    2   2  14  ; "is_called"
0301    KSHORT   3   0
0302    CALL     2   1   2
0303    GGET     2   4      ; "assert"
0304    TGETS    2   2  15  ; "spy"
0305    TGETS    3   1  19  ; "turnOffFrontlightHW"
0306    CALL     2   2   2
0307    TGETS    2   2  14  ; "is_called"
0308    KSHORT   3   1
0309    CALL     2   1   2
0310    GGET     2   4      ; "assert"
0311    TGETS    2   2   9  ; "is"
0312    TGETS    2   2  10  ; "truthy"
0313    MOV      4   1
0314    TGETS    3   1  21  ; "turnOnFrontlight"
0315    CALL     3   0   2
0316    CALLM    2   1   0
0317    GGET     2   4      ; "assert"
0318    TGETS    2   2   5  ; "are"
0319    TGETS    2   2   6  ; "equal"
0320    KSHORT   3   2
0321    MOV      5   1
0322    TGETS    4   1   8  ; "frontlightIntensity"
0323    CALL     4   0   2
0324    CALLM    2   1   1
0325    GGET     2   4      ; "assert"
0326    TGETS    2   2   9  ; "is"
0327    TGETS    2   2  10  ; "truthy"
0328    MOV      4   1
0329    TGETS    3   1  23  ; "isFrontlightOn"
0330    CALL     3   0   2
0331    CALLM    2   1   0
0332    GGET     2   4      ; "assert"
0333    TGETS    2   2  15  ; "spy"
0334    TGETS    3   1  16  ; "setIntensityHW"
0335    CALL     2   2   2
0336    TGETS    2   2  14  ; "is_called"
0337    KSHORT   3   4
0338    CALL     2   1   2
0339    GGET     2   4      ; "assert"
0340    TGETS    2   2   5  ; "are"
0341    TGETS    2   2   6  ; "equal"
0342    KSHORT   3   2
0343    TGETS    4   1  17  ; "frontlight"
0344    CALL     2   1   3
0345    GGET     2   4      ; "assert"
0346    TGETS    2   2  15  ; "spy"
0347    TGETS    3   1  18  ; "turnOnFrontlightHW"
0348    CALL     2   2   2
0349    TGETS    2   2  14  ; "is_called"
0350    KSHORT   3   1
0351    CALL     2   1   2
0352    GGET     2   4      ; "assert"
0353    TGETS    2   2  15  ; "spy"
0354    TGETS    3   1  19  ; "turnOffFrontlightHW"
0355    CALL     2   2   2
0356    TGETS    2   2  14  ; "is_called"
0357    KSHORT   3   1
0358    CALL     2   1   2
0359    GGET     2   4      ; "assert"
0360    TGETS    2   2   9  ; "is"
0361    TGETS    2   2  10  ; "truthy"
0362    MOV      4   1
0363    TGETS    3   1  22  ; "toggleFrontlight"
0364    CALL     3   0   2
0365    CALLM    2   1   0
0366    GGET     2   4      ; "assert"
0367    TGETS    2   2   5  ; "are"
0368    TGETS    2   2   6  ; "equal"
0369    KSHORT   3   0
0370    MOV      5   1
0371    TGETS    4   1   8  ; "frontlightIntensity"
0372    CALL     4   0   2
0373    CALLM    2   1   1
0374    GGET     2   4      ; "assert"
0375    TGETS    2   2   9  ; "is"
0376    TGETS    2   2  10  ; "truthy"
0377    MOV      4   1
0378    TGETS    3   1  11  ; "isFrontlightOff"
0379    CALL     3   0   2
0380    CALLM    2   1   0
0381    GGET     2   4      ; "assert"
0382    TGETS    2   2  15  ; "spy"
0383    TGETS    3   1  16  ; "setIntensityHW"
0384    CALL     2   2   2
0385    TGETS    2   2  14  ; "is_called"
0386    KSHORT   3   5
0387    CALL     2   1   2
0388    GGET     2   4      ; "assert"
0389    TGETS    2   2   5  ; "are"
0390    TGETS    2   2   6  ; "equal"
0391    UGET     3   0      ; param
0392    TGETS    3   3   0  ; "fl_min"
0393    TGETS    4   1  17  ; "frontlight"
0394    CALL     2   1   3
0395    GGET     2   4      ; "assert"
0396    TGETS    2   2  15  ; "spy"
0397    TGETS    3   1  18  ; "turnOnFrontlightHW"
0398    CALL     2   2   2
0399    TGETS    2   2  14  ; "is_called"
0400    KSHORT   3   1
0401    CALL     2   1   2
0402    GGET     2   4      ; "assert"
0403    TGETS    2   2  15  ; "spy"
0404    TGETS    3   1  19  ; "turnOffFrontlightHW"
0405    CALL     2   2   2
0406    TGETS    2   2  14  ; "is_called"
0407    KSHORT   3   2
0408    CALL     2   1   2
0409    GGET     2   4      ; "assert"
0410    TGETS    2   2   9  ; "is"
0411    TGETS    2   2  10  ; "truthy"
0412    MOV      4   1
0413    TGETS    3   1  22  ; "toggleFrontlight"
0414    CALL     3   0   2
0415    CALLM    2   1   0
0416    GGET     2   4      ; "assert"
0417    TGETS    2   2   5  ; "are"
0418    TGETS    2   2   6  ; "equal"
0419    KSHORT   3   2
0420    MOV      5   1
0421    TGETS    4   1   8  ; "frontlightIntensity"
0422    CALL     4   0   2
0423    CALLM    2   1   1
0424    GGET     2   4      ; "assert"
0425    TGETS    2   2   9  ; "is"
0426    TGETS    2   2  10  ; "truthy"
0427    MOV      4   1
0428    TGETS    3   1  23  ; "isFrontlightOn"
0429    CALL     3   0   2
0430    CALLM    2   1   0
0431    GGET     2   4      ; "assert"
0432    TGETS    2   2  15  ; "spy"
0433    TGETS    3   1  16  ; "setIntensityHW"
0434    CALL     2   2   2
0435    TGETS    2   2  14  ; "is_called"
0436    KSHORT   3   6
0437    CALL     2   1   2
0438    GGET     2   4      ; "assert"
0439    TGETS    2   2   5  ; "are"
0440    TGETS    2   2   6  ; "equal"
0441    KSHORT   3   2
0442    TGETS    4   1  17  ; "frontlight"
0443    CALL     2   1   3
0444    GGET     2   4      ; "assert"
0445    TGETS    2   2  15  ; "spy"
0446    TGETS    3   1  18  ; "turnOnFrontlightHW"
0447    CALL     2   2   2
0448    TGETS    2   2  14  ; "is_called"
0449    KSHORT   3   2
0450    CALL     2   1   2
0451    GGET     2   4      ; "assert"
0452    TGETS    2   2  15  ; "spy"
0453    TGETS    3   1  19  ; "turnOffFrontlightHW"
0454    CALL     2   2   2
0455    TGETS    2   2  14  ; "is_called"
0456    KSHORT   3   2
0457    CALL     2   1   2
0458    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:140-194
0001    GGET     1   0      ; "assert"
0002    KSHORT   2   2
0003    ISLT     0   2
0004    JMP      2 => 0007
0005    KPRI     2   1
0006    JMP      3 => 0008
0007 => KPRI     2   2
0008 => CALL     1   1   2
0009    UGET     1   0      ; param
0010    TSETS    0   1   1  ; "fl_min"
0011    UGET     1   0      ; param
0012    KSHORT   2   2
0013    TSETS    2   1   2  ; "fl_intensity"
0014    UGET     1   1      ; PowerD
0015    MOV      2   1
0016    TGETS    1   1   3  ; "new"
0017    UGET     3   0      ; param
0018    CALL     1   2   3
0019    MOV      3   1
0020    TGETS    2   1   4  ; "setIntensity"
0021    KSHORT   4   2
0022    CALL     2   1   3
0023    GGET     2   0      ; "assert"
0024    TGETS    2   2   5  ; "are"
0025    TGETS    2   2   6  ; "equal"
0026    KSHORT   3   2
0027    MOV      5   1
0028    TGETS    4   1   7  ; "frontlightIntensityHW"
0029    CALL     4   0   2
0030    CALLM    2   1   1
0031    GGET     2   0      ; "assert"
0032    TGETS    2   2   5  ; "are"
0033    TGETS    2   2   6  ; "equal"
0034    KSHORT   3   2
0035    MOV      5   1
0036    TGETS    4   1   8  ; "frontlightIntensity"
0037    CALL     4   0   2
0038    CALLM    2   1   1
0039    GGET     2   0      ; "assert"
0040    TGETS    2   2   9  ; "is"
0041    TGETS    2   2  10  ; "truthy"
0042    MOV      4   1
0043    TGETS    3   1  11  ; "isFrontlightOn"
0044    CALL     3   0   2
0045    CALLM    2   1   0
0046    GGET     2   0      ; "assert"
0047    TGETS    2   2  12  ; "stub"
0048    TGETS    3   1  13  ; "init"
0049    CALL     2   2   2
0050    TGETS    2   2  14  ; "is_called"
0051    KSHORT   3   1
0052    CALL     2   1   2
0053    GGET     2   0      ; "assert"
0054    TGETS    2   2   5  ; "are"
0055    TGETS    2   2   6  ; "equal"
0056    KSHORT   3   2
0057    TGETS    4   1  15  ; "frontlight"
0058    CALL     2   1   3
0059    GGET     2   0      ; "assert"
0060    TGETS    2   2  16  ; "spy"
0061    TGETS    3   1  17  ; "turnOnFrontlightHW"
0062    CALL     2   2   2
0063    TGETS    2   2  14  ; "is_called"
0064    KSHORT   3   0
0065    CALL     2   1   2
0066    GGET     2   0      ; "assert"
0067    TGETS    2   2  16  ; "spy"
0068    TGETS    3   1  18  ; "turnOffFrontlightHW"
0069    CALL     2   2   2
0070    TGETS    2   2  14  ; "is_called"
0071    KSHORT   3   0
0072    CALL     2   1   2
0073    GGET     2   0      ; "assert"
0074    TGETS    2   2   9  ; "is"
0075    TGETS    2   2  19  ; "falsy"
0076    MOV      4   1
0077    TGETS    3   1   4  ; "setIntensity"
0078    KSHORT   5   2
0079    CALL     3   0   3
0080    CALLM    2   1   0
0081    GGET     2   0      ; "assert"
0082    TGETS    2   2   5  ; "are"
0083    TGETS    2   2   6  ; "equal"
0084    KSHORT   3   2
0085    MOV      5   1
0086    TGETS    4   1   8  ; "frontlightIntensity"
0087    CALL     4   0   2
0088    CALLM    2   1   1
0089    GGET     2   0      ; "assert"
0090    TGETS    2   2   9  ; "is"
0091    TGETS    2   2  10  ; "truthy"
0092    MOV      4   1
0093    TGETS    3   1  11  ; "isFrontlightOn"
0094    CALL     3   0   2
0095    CALLM    2   1   0
0096    GGET     2   0      ; "assert"
0097    TGETS    2   2   5  ; "are"
0098    TGETS    2   2   6  ; "equal"
0099    KSHORT   3   2
0100    TGETS    4   1  15  ; "frontlight"
0101    CALL     2   1   3
0102    GGET     2   0      ; "assert"
0103    TGETS    2   2  16  ; "spy"
0104    TGETS    3   1  17  ; "turnOnFrontlightHW"
0105    CALL     2   2   2
0106    TGETS    2   2  14  ; "is_called"
0107    KSHORT   3   0
0108    CALL     2   1   2
0109    GGET     2   0      ; "assert"
0110    TGETS    2   2  16  ; "spy"
0111    TGETS    3   1  18  ; "turnOffFrontlightHW"
0112    CALL     2   2   2
0113    TGETS    2   2  14  ; "is_called"
0114    KSHORT   3   0
0115    CALL     2   1   2
0116    GGET     2   0      ; "assert"
0117    TGETS    2   2   9  ; "is"
0118    TGETS    2   2  19  ; "falsy"
0119    MOV      4   1
0120    TGETS    3   1  20  ; "turnOnFrontlight"
0121    CALL     3   0   2
0122    CALLM    2   1   0
0123    GGET     2   0      ; "assert"
0124    TGETS    2   2   5  ; "are"
0125    TGETS    2   2   6  ; "equal"
0126    KSHORT   3   2
0127    MOV      5   1
0128    TGETS    4   1   8  ; "frontlightIntensity"
0129    CALL     4   0   2
0130    CALLM    2   1   1
0131    GGET     2   0      ; "assert"
0132    TGETS    2   2   9  ; "is"
0133    TGETS    2   2  10  ; "truthy"
0134    MOV      4   1
0135    TGETS    3   1  11  ; "isFrontlightOn"
0136    CALL     3   0   2
0137    CALLM    2   1   0
0138    GGET     2   0      ; "assert"
0139    TGETS    2   2   5  ; "are"
0140    TGETS    2   2   6  ; "equal"
0141    KSHORT   3   2
0142    TGETS    4   1  15  ; "frontlight"
0143    CALL     2   1   3
0144    GGET     2   0      ; "assert"
0145    TGETS    2   2  16  ; "spy"
0146    TGETS    3   1  17  ; "turnOnFrontlightHW"
0147    CALL     2   2   2
0148    TGETS    2   2  14  ; "is_called"
0149    KSHORT   3   0
0150    CALL     2   1   2
0151    GGET     2   0      ; "assert"
0152    TGETS    2   2  16  ; "spy"
0153    TGETS    3   1  18  ; "turnOffFrontlightHW"
0154    CALL     2   2   2
0155    TGETS    2   2  14  ; "is_called"
0156    KSHORT   3   0
0157    CALL     2   1   2
0158    GGET     2   0      ; "assert"
0159    TGETS    2   2   9  ; "is"
0160    TGETS    2   2  10  ; "truthy"
0161    MOV      4   1
0162    TGETS    3   1  21  ; "turnOffFrontlight"
0163    CALL     3   0   2
0164    CALLM    2   1   0
0165    GGET     2   0      ; "assert"
0166    TGETS    2   2   5  ; "are"
0167    TGETS    2   2   6  ; "equal"
0168    KSHORT   3   0
0169    MOV      5   1
0170    TGETS    4   1   8  ; "frontlightIntensity"
0171    CALL     4   0   2
0172    CALLM    2   1   1
0173    GGET     2   0      ; "assert"
0174    TGETS    2   2   9  ; "is"
0175    TGETS    2   2  10  ; "truthy"
0176    MOV      4   1
0177    TGETS    3   1  22  ; "isFrontlightOff"
0178    CALL     3   0   2
0179    CALLM    2   1   0
0180    GGET     2   0      ; "assert"
0181    TGETS    2   2   5  ; "are"
0182    TGETS    2   2   6  ; "equal"
0183    UGET     3   0      ; param
0184    TGETS    3   3   1  ; "fl_min"
0185    TGETS    4   1  15  ; "frontlight"
0186    CALL     2   1   3
0187    GGET     2   0      ; "assert"
0188    TGETS    2   2  16  ; "spy"
0189    TGETS    3   1  17  ; "turnOnFrontlightHW"
0190    CALL     2   2   2
0191    TGETS    2   2  14  ; "is_called"
0192    KSHORT   3   0
0193    CALL     2   1   2
0194    GGET     2   0      ; "assert"
0195    TGETS    2   2  16  ; "spy"
0196    TGETS    3   1  18  ; "turnOffFrontlightHW"
0197    CALL     2   2   2
0198    TGETS    2   2  14  ; "is_called"
0199    KSHORT   3   1
0200    CALL     2   1   2
0201    GGET     2   0      ; "assert"
0202    TGETS    2   2   9  ; "is"
0203    TGETS    2   2  10  ; "truthy"
0204    MOV      4   1
0205    TGETS    3   1  23  ; "toggleFrontlight"
0206    CALL     3   0   2
0207    CALLM    2   1   0
0208    GGET     2   0      ; "assert"
0209    TGETS    2   2   5  ; "are"
0210    TGETS    2   2   6  ; "equal"
0211    KSHORT   3   2
0212    MOV      5   1
0213    TGETS    4   1   8  ; "frontlightIntensity"
0214    CALL     4   0   2
0215    CALLM    2   1   1
0216    GGET     2   0      ; "assert"
0217    TGETS    2   2   9  ; "is"
0218    TGETS    2   2  10  ; "truthy"
0219    MOV      4   1
0220    TGETS    3   1  11  ; "isFrontlightOn"
0221    CALL     3   0   2
0222    CALLM    2   1   0
0223    GGET     2   0      ; "assert"
0224    TGETS    2   2   5  ; "are"
0225    TGETS    2   2   6  ; "equal"
0226    KSHORT   3   2
0227    TGETS    4   1  15  ; "frontlight"
0228    CALL     2   1   3
0229    GGET     2   0      ; "assert"
0230    TGETS    2   2  16  ; "spy"
0231    TGETS    3   1  17  ; "turnOnFrontlightHW"
0232    CALL     2   2   2
0233    TGETS    2   2  14  ; "is_called"
0234    KSHORT   3   1
0235    CALL     2   1   2
0236    GGET     2   0      ; "assert"
0237    TGETS    2   2  16  ; "spy"
0238    TGETS    3   1  18  ; "turnOffFrontlightHW"
0239    CALL     2   2   2
0240    TGETS    2   2  14  ; "is_called"
0241    KSHORT   3   1
0242    CALL     2   1   2
0243    GGET     2   0      ; "assert"
0244    TGETS    2   2   9  ; "is"
0245    TGETS    2   2  10  ; "truthy"
0246    MOV      4   1
0247    TGETS    3   1  23  ; "toggleFrontlight"
0248    CALL     3   0   2
0249    CALLM    2   1   0
0250    GGET     2   0      ; "assert"
0251    TGETS    2   2   5  ; "are"
0252    TGETS    2   2   6  ; "equal"
0253    KSHORT   3   0
0254    MOV      5   1
0255    TGETS    4   1   8  ; "frontlightIntensity"
0256    CALL     4   0   2
0257    CALLM    2   1   1
0258    GGET     2   0      ; "assert"
0259    TGETS    2   2   9  ; "is"
0260    TGETS    2   2  10  ; "truthy"
0261    MOV      4   1
0262    TGETS    3   1  22  ; "isFrontlightOff"
0263    CALL     3   0   2
0264    CALLM    2   1   0
0265    GGET     2   0      ; "assert"
0266    TGETS    2   2   5  ; "are"
0267    TGETS    2   2   6  ; "equal"
0268    UGET     3   0      ; param
0269    TGETS    3   3   1  ; "fl_min"
0270    TGETS    4   1  15  ; "frontlight"
0271    CALL     2   1   3
0272    GGET     2   0      ; "assert"
0273    TGETS    2   2  16  ; "spy"
0274    TGETS    3   1  17  ; "turnOnFrontlightHW"
0275    CALL     2   2   2
0276    TGETS    2   2  14  ; "is_called"
0277    KSHORT   3   1
0278    CALL     2   1   2
0279    GGET     2   0      ; "assert"
0280    TGETS    2   2  16  ; "spy"
0281    TGETS    3   1  18  ; "turnOffFrontlightHW"
0282    CALL     2   2   2
0283    TGETS    2   2  14  ; "is_called"
0284    KSHORT   3   2
0285    CALL     2   1   2
0286    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:196-198
0001    UGET     0   0      ; test_when_off
0002    KSHORT   1   0
0003    CALL     0   1   2
0004    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:201-201
0001    UGET     0   0      ; test_when_off
0002    KSHORT   1   1
0003    CALL     0   1   2
0004    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:203-205
0001    UGET     0   0      ; test_when_on
0002    KSHORT   1   0
0003    CALL     0   1   2
0004    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:208-208
0001    UGET     0   0      ; test_when_on
0002    KSHORT   1   1
0003    CALL     0   1   2
0004    RET0     0   1

-- BYTECODE -- frontlight_spec.lua:1-209
0001    KNIL     0   4
0002    GGET     5   0      ; "setup"
0003    FNEW     6   1      ; frontlight_spec.lua:4
0004    CALL     5   1   2
0005    GGET     5   2      ; "teardown"
0006    FNEW     6   3      ; frontlight_spec.lua:29
0007    CALL     5   1   2
0008    GGET     5   4      ; "before_each"
0009    FNEW     6   5      ; frontlight_spec.lua:34
0010    CALL     5   1   2
0011    GGET     5   6      ; "it"
0012    KSTR     6   7      ; "should read frontlight intensity during "~
0013    FNEW     7   8      ; frontlight_spec.lua:52
0014    CALL     5   1   3
0015    FNEW     4   9      ; frontlight_spec.lua:61
0016    FNEW     3  10      ; frontlight_spec.lua:140
0017    GGET     5   6      ; "it"
0018    KSTR     6  11      ; "should turn on and off frontlight when t"~
0019    FNEW     7  12      ; frontlight_spec.lua:196
0020    CALL     5   1   3
0021    GGET     5   6      ; "it"
0022    KSTR     6  13      ; "should turn on and off frontlight when t"~
0023    FNEW     7  14      ; frontlight_spec.lua:201
0024    CALL     5   1   3
0025    GGET     5   6      ; "it"
0026    KSTR     6  15      ; "should turn on and off frontlight when t"~
0027    FNEW     7  16      ; frontlight_spec.lua:203
0028    CALL     5   1   3
0029    GGET     5   6      ; "it"
0030    KSTR     6  17      ; "should turn on and off frontlight when t"~
0031    FNEW     7  18      ; frontlight_spec.lua:208
0032    CALL     5   1   3
0033    UCLO     0 => 0034
0034 => RET0     0   1

-- BYTECODE -- frontlight_spec.lua:0-210
0001    GGET     0   0      ; "describe"
0002    KSTR     1   1      ; "Frontlight function in PowerD"
0003    FNEW     2   2      ; frontlight_spec.lua:1
0004    CALL     0   1   3
0005    RET0     0   1

