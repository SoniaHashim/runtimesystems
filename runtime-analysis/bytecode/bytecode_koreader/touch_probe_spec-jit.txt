-- BYTECODE -- touch_probe_spec.lua:3-5
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "commonrequire"
0003    CALL     0   1   2
0004    RET0     0   1

-- BYTECODE -- touch_probe_spec.lua:11-13
0001    USETV    0   1      ; need_to_switch_xy
0002    RET0     0   1

-- BYTECODE -- touch_probe_spec.lua:7-62
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "device"
0003    CALL     0   2   2
0004    GGET     1   0      ; "require"
0005    KSTR     2   2      ; "tools/kobo_touch_probe"
0006    CALL     1   2   2
0007    MOV      2   1
0008    TGETS    1   1   3  ; "new"
0009    TNEW     3   0
0010    CALL     1   2   3
0011    KPRI     2   0
0012    FNEW     3   5      ; touch_probe_spec.lua:11
0013    TSETS    3   1   4  ; "saveSwitchXYSetting"
0014    TGETS    3   0   6  ; "screen"
0015    MOV      4   3
0016    TGETS    3   3   7  ; "getWidth"
0017    CALL     3   2   2
0018    SUBVN    3   3   0  ; 40
0019    TGETS    4   0   6  ; "screen"
0020    MOV      5   4
0021    TGETS    4   4   8  ; "getHeight"
0022    CALL     4   2   2
0023    SUBVN    4   4   0  ; 40
0024    USETV    1   4      ; y
0025    USETV    0   3      ; x
0026    KPRI     2   0
0027    MOV      4   1
0028    TGETS    3   1   9  ; "onTapProbe"
0029    KPRI     5   0
0030    TDUP     6  13
0031    TDUP     7  10
0032    UGET     8   1      ; y
0033    TSETS    8   7  11  ; "x"
0034    TGETS    8   0   6  ; "screen"
0035    MOV      9   8
0036    TGETS    8   8   7  ; "getWidth"
0037    CALL     8   2   2
0038    UGET     9   0      ; x
0039    SUBVV    8   8   9
0040    TSETS    8   7  12  ; "y"
0041    TSETS    7   6  14  ; "pos"
0042    CALL     3   1   4
0043    GGET     3  15      ; "assert"
0044    TGETS    3   3  16  ; "is"
0045    TGETS    3   3  17  ; "same"
0046    TGETS    4   1  18  ; "curr_probe_step"
0047    KSHORT   5   1
0048    CALL     3   1   3
0049    GGET     3  15      ; "assert"
0050    TGETS    3   3  19  ; "truthy"
0051    MOV      4   2
0052    CALL     3   1   2
0053    TGETS    3   0   6  ; "screen"
0054    MOV      4   3
0055    TGETS    3   3   7  ; "getWidth"
0056    CALL     3   2   2
0057    SUBVN    3   3   0  ; 40
0058    TGETS    4   0   6  ; "screen"
0059    MOV      5   4
0060    TGETS    4   4   8  ; "getHeight"
0061    CALL     4   2   2
0062    SUBVN    4   4   0  ; 40
0063    USETV    1   4      ; y
0064    USETV    0   3      ; x
0065    KPRI     2   0
0066    MOV      4   1
0067    TGETS    3   1   9  ; "onTapProbe"
0068    KPRI     5   0
0069    TDUP     6  21
0070    TDUP     7  20
0071    TGETS    8   0   6  ; "screen"
0072    MOV      9   8
0073    TGETS    8   8   7  ; "getWidth"
0074    CALL     8   2   2
0075    UGET     9   0      ; x
0076    SUBVV    8   8   9
0077    TSETS    8   7  11  ; "x"
0078    UGET     8   1      ; y
0079    TSETS    8   7  12  ; "y"
0080    TSETS    7   6  14  ; "pos"
0081    CALL     3   1   4
0082    GGET     3  15      ; "assert"
0083    TGETS    3   3  16  ; "is"
0084    TGETS    3   3  17  ; "same"
0085    TGETS    4   1  18  ; "curr_probe_step"
0086    KSHORT   5   1
0087    CALL     3   1   3
0088    GGET     3  15      ; "assert"
0089    TGETS    3   3  22  ; "falsy"
0090    MOV      4   2
0091    CALL     3   1   2
0092    TGETS    3   0   6  ; "screen"
0093    MOV      4   3
0094    TGETS    3   3   7  ; "getWidth"
0095    CALL     3   2   2
0096    SUBVN    3   3   0  ; 40
0097    TGETS    4   0   6  ; "screen"
0098    MOV      5   4
0099    TGETS    4   4   8  ; "getHeight"
0100    CALL     4   2   2
0101    SUBVN    4   4   0  ; 40
0102    USETV    1   4      ; y
0103    USETV    0   3      ; x
0104    KPRI     2   0
0105    MOV      4   1
0106    TGETS    3   1   9  ; "onTapProbe"
0107    KPRI     5   0
0108    TDUP     6  24
0109    TDUP     7  23
0110    UGET     8   1      ; y
0111    TSETS    8   7  11  ; "x"
0112    UGET     8   0      ; x
0113    TSETS    8   7  12  ; "y"
0114    TSETS    7   6  14  ; "pos"
0115    CALL     3   1   4
0116    GGET     3  15      ; "assert"
0117    TGETS    3   3  16  ; "is"
0118    TGETS    3   3  17  ; "same"
0119    TGETS    4   1  18  ; "curr_probe_step"
0120    KSHORT   5   2
0121    CALL     3   1   3
0122    GGET     3  15      ; "assert"
0123    TGETS    3   3  22  ; "falsy"
0124    MOV      4   2
0125    CALL     3   1   2
0126    TGETS    3   0   6  ; "screen"
0127    MOV      4   3
0128    TGETS    3   3   7  ; "getWidth"
0129    CALL     3   2   2
0130    SUBVN    3   3   0  ; 40
0131    USETN    1   0      ; y ; 40
0132    USETV    0   3      ; x
0133    MOV      4   1
0134    TGETS    3   1   9  ; "onTapProbe"
0135    KPRI     5   0
0136    TDUP     6  26
0137    TDUP     7  25
0138    UGET     8   1      ; y
0139    TSETS    8   7  11  ; "x"
0140    UGET     8   0      ; x
0141    TSETS    8   7  12  ; "y"
0142    TSETS    7   6  14  ; "pos"
0143    CALL     3   1   4
0144    GGET     3  15      ; "assert"
0145    TGETS    3   3  16  ; "is"
0146    TGETS    3   3  17  ; "same"
0147    TGETS    4   1  18  ; "curr_probe_step"
0148    KSHORT   5   2
0149    CALL     3   1   3
0150    GGET     3  15      ; "assert"
0151    TGETS    3   3  19  ; "truthy"
0152    MOV      4   2
0153    CALL     3   1   2
0154    UCLO     0 => 0155
0155 => RET0     0   1

-- BYTECODE -- touch_probe_spec.lua:1-63
0001    KNIL     0   1
0002    GGET     2   0      ; "setup"
0003    FNEW     3   1      ; touch_probe_spec.lua:3
0004    CALL     2   1   2
0005    GGET     2   2      ; "it"
0006    KSTR     3   3      ; "should probe properly for kobo touch"
0007    FNEW     4   4      ; touch_probe_spec.lua:7
0008    CALL     2   1   3
0009    UCLO     0 => 0010
0010 => RET0     0   1

-- BYTECODE -- touch_probe_spec.lua:0-64
0001    GGET     0   0      ; "describe"
0002    KSTR     1   1      ; "touch probe module"
0003    FNEW     2   2      ; touch_probe_spec.lua:1
0004    CALL     0   1   3
0005    RET0     0   1

