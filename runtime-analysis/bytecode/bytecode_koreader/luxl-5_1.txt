
main <./frontend/luxl.lua:0,0> (715 instructions, 2860 bytes at 0x7fa5984068a0)
0+ params, 78 slots, 0 upvalues, 76 locals, 97 constants, 8 functions
	1	[20]	GETGLOBAL	0 -1	; require
	2	[20]	LOADK    	1 -2	; "ffi"
	3	[20]	CALL     	0 2 2
	4	[21]	GETGLOBAL	1 -1	; require
	5	[21]	LOADK    	2 -3	; "bit"
	6	[21]	CALL     	1 2 2
	7	[22]	GETTABLE 	2 1 -4	; "band"
	8	[33]	GETTABLE 	3 0 -5	; "new"
	9	[33]	LOADK    	4 -6	; "const int[256]"
	10	[33]	NEWTABLE 	5 48 0
	11	[34]	LOADK    	6 -7	; 0
	12	[34]	LOADK    	7 -7	; 0
	13	[34]	LOADK    	8 -7	; 0
	14	[34]	LOADK    	9 -7	; 0
	15	[34]	LOADK    	10 -7	; 0
	16	[34]	LOADK    	11 -7	; 0
	17	[34]	LOADK    	12 -7	; 0
	18	[34]	LOADK    	13 -7	; 0
	19	[34]	LOADK    	14 -7	; 0
	20	[34]	LOADK    	15 -8	; 3
	21	[34]	LOADK    	16 -8	; 3
	22	[34]	LOADK    	17 -7	; 0
	23	[34]	LOADK    	18 -7	; 0
	24	[34]	LOADK    	19 -8	; 3
	25	[34]	LOADK    	20 -7	; 0
	26	[34]	LOADK    	21 -7	; 0
	27	[35]	LOADK    	22 -7	; 0
	28	[35]	LOADK    	23 -7	; 0
	29	[35]	LOADK    	24 -7	; 0
	30	[35]	LOADK    	25 -7	; 0
	31	[35]	LOADK    	26 -7	; 0
	32	[35]	LOADK    	27 -7	; 0
	33	[35]	LOADK    	28 -7	; 0
	34	[35]	LOADK    	29 -7	; 0
	35	[35]	LOADK    	30 -7	; 0
	36	[35]	LOADK    	31 -7	; 0
	37	[35]	LOADK    	32 -7	; 0
	38	[35]	LOADK    	33 -7	; 0
	39	[35]	LOADK    	34 -7	; 0
	40	[35]	LOADK    	35 -7	; 0
	41	[35]	LOADK    	36 -7	; 0
	42	[35]	LOADK    	37 -7	; 0
	43	[36]	LOADK    	38 -8	; 3
	44	[36]	LOADK    	39 -7	; 0
	45	[36]	LOADK    	40 -7	; 0
	46	[36]	LOADK    	41 -7	; 0
	47	[36]	LOADK    	42 -7	; 0
	48	[36]	LOADK    	43 -7	; 0
	49	[36]	LOADK    	44 -7	; 0
	50	[36]	LOADK    	45 -7	; 0
	51	[36]	LOADK    	46 -7	; 0
	52	[36]	LOADK    	47 -7	; 0
	53	[36]	LOADK    	48 -7	; 0
	54	[36]	LOADK    	49 -7	; 0
	55	[36]	LOADK    	50 -7	; 0
	56	[36]	LOADK    	51 -7	; 0
	57	[36]	LOADK    	52 -9	; 2
	58	[36]	LOADK    	53 -7	; 0
	59	[37]	LOADK    	54 -9	; 2
	60	[37]	LOADK    	55 -9	; 2
	61	[37]	SETLIST  	5 50 1	; 1
	62	[37]	LOADK    	6 -9	; 2
	63	[37]	LOADK    	7 -9	; 2
	64	[37]	LOADK    	8 -9	; 2
	65	[37]	LOADK    	9 -9	; 2
	66	[37]	LOADK    	10 -9	; 2
	67	[37]	LOADK    	11 -9	; 2
	68	[37]	LOADK    	12 -9	; 2
	69	[37]	LOADK    	13 -9	; 2
	70	[37]	LOADK    	14 -7	; 0
	71	[37]	LOADK    	15 -7	; 0
	72	[37]	LOADK    	16 -7	; 0
	73	[37]	LOADK    	17 -7	; 0
	74	[37]	LOADK    	18 -7	; 0
	75	[37]	LOADK    	19 -7	; 0
	76	[38]	LOADK    	20 -7	; 0
	77	[38]	LOADK    	21 -10	; 1
	78	[38]	LOADK    	22 -10	; 1
	79	[38]	LOADK    	23 -10	; 1
	80	[38]	LOADK    	24 -10	; 1
	81	[38]	LOADK    	25 -10	; 1
	82	[38]	LOADK    	26 -10	; 1
	83	[38]	LOADK    	27 -10	; 1
	84	[38]	LOADK    	28 -10	; 1
	85	[38]	LOADK    	29 -10	; 1
	86	[38]	LOADK    	30 -10	; 1
	87	[38]	LOADK    	31 -10	; 1
	88	[38]	LOADK    	32 -10	; 1
	89	[38]	LOADK    	33 -10	; 1
	90	[38]	LOADK    	34 -10	; 1
	91	[38]	LOADK    	35 -10	; 1
	92	[39]	LOADK    	36 -10	; 1
	93	[39]	LOADK    	37 -10	; 1
	94	[39]	LOADK    	38 -10	; 1
	95	[39]	LOADK    	39 -10	; 1
	96	[39]	LOADK    	40 -10	; 1
	97	[39]	LOADK    	41 -10	; 1
	98	[39]	LOADK    	42 -10	; 1
	99	[39]	LOADK    	43 -10	; 1
	100	[39]	LOADK    	44 -10	; 1
	101	[39]	LOADK    	45 -10	; 1
	102	[39]	LOADK    	46 -10	; 1
	103	[39]	LOADK    	47 -7	; 0
	104	[39]	LOADK    	48 -7	; 0
	105	[39]	LOADK    	49 -7	; 0
	106	[39]	LOADK    	50 -7	; 0
	107	[39]	LOADK    	51 -7	; 0
	108	[40]	LOADK    	52 -7	; 0
	109	[40]	LOADK    	53 -10	; 1
	110	[40]	LOADK    	54 -10	; 1
	111	[40]	LOADK    	55 -10	; 1
	112	[40]	SETLIST  	5 50 2	; 2
	113	[40]	LOADK    	6 -10	; 1
	114	[40]	LOADK    	7 -10	; 1
	115	[40]	LOADK    	8 -10	; 1
	116	[40]	LOADK    	9 -10	; 1
	117	[40]	LOADK    	10 -10	; 1
	118	[40]	LOADK    	11 -10	; 1
	119	[40]	LOADK    	12 -10	; 1
	120	[40]	LOADK    	13 -10	; 1
	121	[40]	LOADK    	14 -10	; 1
	122	[40]	LOADK    	15 -10	; 1
	123	[40]	LOADK    	16 -10	; 1
	124	[40]	LOADK    	17 -10	; 1
	125	[41]	LOADK    	18 -10	; 1
	126	[41]	LOADK    	19 -10	; 1
	127	[41]	LOADK    	20 -10	; 1
	128	[41]	LOADK    	21 -10	; 1
	129	[41]	LOADK    	22 -10	; 1
	130	[41]	LOADK    	23 -10	; 1
	131	[41]	LOADK    	24 -10	; 1
	132	[41]	LOADK    	25 -10	; 1
	133	[41]	LOADK    	26 -10	; 1
	134	[41]	LOADK    	27 -10	; 1
	135	[41]	LOADK    	28 -10	; 1
	136	[41]	LOADK    	29 -7	; 0
	137	[41]	LOADK    	30 -7	; 0
	138	[41]	LOADK    	31 -7	; 0
	139	[41]	LOADK    	32 -7	; 0
	140	[41]	LOADK    	33 -7	; 0
	141	[42]	LOADK    	34 -7	; 0
	142	[42]	LOADK    	35 -7	; 0
	143	[42]	LOADK    	36 -7	; 0
	144	[42]	LOADK    	37 -7	; 0
	145	[42]	LOADK    	38 -7	; 0
	146	[42]	LOADK    	39 -7	; 0
	147	[42]	LOADK    	40 -7	; 0
	148	[42]	LOADK    	41 -7	; 0
	149	[42]	LOADK    	42 -7	; 0
	150	[42]	LOADK    	43 -7	; 0
	151	[42]	LOADK    	44 -7	; 0
	152	[42]	LOADK    	45 -7	; 0
	153	[42]	LOADK    	46 -7	; 0
	154	[42]	LOADK    	47 -7	; 0
	155	[42]	LOADK    	48 -7	; 0
	156	[42]	LOADK    	49 -7	; 0
	157	[43]	LOADK    	50 -7	; 0
	158	[43]	LOADK    	51 -7	; 0
	159	[43]	LOADK    	52 -7	; 0
	160	[43]	LOADK    	53 -7	; 0
	161	[43]	LOADK    	54 -7	; 0
	162	[43]	LOADK    	55 -7	; 0
	163	[43]	SETLIST  	5 50 3	; 3
	164	[43]	LOADK    	6 -7	; 0
	165	[43]	LOADK    	7 -7	; 0
	166	[43]	LOADK    	8 -7	; 0
	167	[43]	LOADK    	9 -7	; 0
	168	[43]	LOADK    	10 -7	; 0
	169	[43]	LOADK    	11 -7	; 0
	170	[43]	LOADK    	12 -7	; 0
	171	[43]	LOADK    	13 -7	; 0
	172	[43]	LOADK    	14 -7	; 0
	173	[43]	LOADK    	15 -7	; 0
	174	[44]	LOADK    	16 -7	; 0
	175	[44]	LOADK    	17 -7	; 0
	176	[44]	LOADK    	18 -7	; 0
	177	[44]	LOADK    	19 -7	; 0
	178	[44]	LOADK    	20 -7	; 0
	179	[44]	LOADK    	21 -7	; 0
	180	[44]	LOADK    	22 -7	; 0
	181	[44]	LOADK    	23 -7	; 0
	182	[44]	LOADK    	24 -7	; 0
	183	[44]	LOADK    	25 -7	; 0
	184	[44]	LOADK    	26 -7	; 0
	185	[44]	LOADK    	27 -7	; 0
	186	[44]	LOADK    	28 -7	; 0
	187	[44]	LOADK    	29 -7	; 0
	188	[44]	LOADK    	30 -7	; 0
	189	[44]	LOADK    	31 -7	; 0
	190	[45]	LOADK    	32 -7	; 0
	191	[45]	LOADK    	33 -7	; 0
	192	[45]	LOADK    	34 -7	; 0
	193	[45]	LOADK    	35 -7	; 0
	194	[45]	LOADK    	36 -7	; 0
	195	[45]	LOADK    	37 -7	; 0
	196	[45]	LOADK    	38 -7	; 0
	197	[45]	LOADK    	39 -7	; 0
	198	[45]	LOADK    	40 -7	; 0
	199	[45]	LOADK    	41 -7	; 0
	200	[45]	LOADK    	42 -7	; 0
	201	[45]	LOADK    	43 -7	; 0
	202	[45]	LOADK    	44 -7	; 0
	203	[45]	LOADK    	45 -7	; 0
	204	[45]	LOADK    	46 -7	; 0
	205	[45]	LOADK    	47 -7	; 0
	206	[46]	LOADK    	48 -7	; 0
	207	[46]	LOADK    	49 -7	; 0
	208	[46]	LOADK    	50 -7	; 0
	209	[46]	LOADK    	51 -7	; 0
	210	[46]	LOADK    	52 -7	; 0
	211	[46]	LOADK    	53 -7	; 0
	212	[46]	LOADK    	54 -7	; 0
	213	[46]	LOADK    	55 -7	; 0
	214	[46]	SETLIST  	5 50 4	; 4
	215	[46]	LOADK    	6 -7	; 0
	216	[46]	LOADK    	7 -7	; 0
	217	[46]	LOADK    	8 -7	; 0
	218	[46]	LOADK    	9 -7	; 0
	219	[46]	LOADK    	10 -7	; 0
	220	[46]	LOADK    	11 -7	; 0
	221	[46]	LOADK    	12 -7	; 0
	222	[46]	LOADK    	13 -7	; 0
	223	[47]	LOADK    	14 -7	; 0
	224	[47]	LOADK    	15 -7	; 0
	225	[47]	LOADK    	16 -7	; 0
	226	[47]	LOADK    	17 -7	; 0
	227	[47]	LOADK    	18 -7	; 0
	228	[47]	LOADK    	19 -7	; 0
	229	[47]	LOADK    	20 -7	; 0
	230	[47]	LOADK    	21 -7	; 0
	231	[47]	LOADK    	22 -7	; 0
	232	[47]	LOADK    	23 -7	; 0
	233	[47]	LOADK    	24 -7	; 0
	234	[47]	LOADK    	25 -7	; 0
	235	[47]	LOADK    	26 -7	; 0
	236	[47]	LOADK    	27 -7	; 0
	237	[47]	LOADK    	28 -7	; 0
	238	[47]	LOADK    	29 -7	; 0
	239	[48]	LOADK    	30 -7	; 0
	240	[48]	LOADK    	31 -7	; 0
	241	[48]	LOADK    	32 -7	; 0
	242	[48]	LOADK    	33 -7	; 0
	243	[48]	LOADK    	34 -7	; 0
	244	[48]	LOADK    	35 -7	; 0
	245	[48]	LOADK    	36 -7	; 0
	246	[48]	LOADK    	37 -7	; 0
	247	[48]	LOADK    	38 -7	; 0
	248	[48]	LOADK    	39 -7	; 0
	249	[48]	LOADK    	40 -7	; 0
	250	[48]	LOADK    	41 -7	; 0
	251	[48]	LOADK    	42 -7	; 0
	252	[48]	LOADK    	43 -7	; 0
	253	[48]	LOADK    	44 -7	; 0
	254	[48]	LOADK    	45 -7	; 0
	255	[49]	LOADK    	46 -7	; 0
	256	[49]	LOADK    	47 -7	; 0
	257	[49]	LOADK    	48 -7	; 0
	258	[49]	LOADK    	49 -7	; 0
	259	[49]	LOADK    	50 -7	; 0
	260	[49]	LOADK    	51 -7	; 0
	261	[49]	LOADK    	52 -7	; 0
	262	[49]	LOADK    	53 -7	; 0
	263	[49]	LOADK    	54 -7	; 0
	264	[49]	LOADK    	55 -7	; 0
	265	[49]	SETLIST  	5 50 5	; 5
	266	[49]	LOADK    	6 -7	; 0
	267	[49]	LOADK    	7 -7	; 0
	268	[49]	LOADK    	8 -7	; 0
	269	[49]	LOADK    	9 -7	; 0
	270	[49]	LOADK    	10 -7	; 0
	271	[50]	LOADK    	11 -7	; 0
	272	[50]	SETLIST  	5 6 6	; 6
	273	[33]	CALL     	3 3 2
	274	[55]	LOADK    	4 -7	; 0
	275	[56]	LOADK    	5 -10	; 1
	276	[57]	LOADK    	6 -9	; 2
	277	[58]	LOADK    	7 -8	; 3
	278	[59]	LOADK    	8 -11	; 4
	279	[60]	LOADK    	9 -12	; 5
	280	[61]	LOADK    	10 -13	; 6
	281	[62]	LOADK    	11 -14	; 7
	282	[63]	LOADK    	12 -15	; 8
	283	[64]	LOADK    	13 -16	; 9
	284	[65]	LOADK    	14 -17	; 10
	285	[66]	LOADK    	15 -18	; 11
	286	[67]	LOADK    	16 -19	; 12
	287	[68]	LOADK    	17 -20	; 13
	288	[69]	LOADK    	18 -21	; 14
	289	[73]	LOADK    	19 -7	; 0
	290	[74]	LOADK    	20 -10	; 1
	291	[75]	LOADK    	21 -9	; 2
	292	[76]	LOADK    	22 -8	; 3
	293	[77]	LOADK    	23 -11	; 4
	294	[78]	LOADK    	24 -12	; 5
	295	[79]	LOADK    	25 -13	; 6
	296	[80]	LOADK    	26 -14	; 7
	297	[81]	LOADK    	27 -15	; 8
	298	[85]	LOADK    	28 -7	; 0
	299	[86]	LOADK    	29 -10	; 1
	300	[87]	LOADK    	30 -9	; 2
	301	[88]	LOADK    	31 -8	; 3
	302	[89]	LOADK    	32 -11	; 4
	303	[90]	LOADK    	33 -12	; 5
	304	[91]	LOADK    	34 -13	; 6
	305	[92]	LOADK    	35 -14	; 7
	306	[94]	NEWTABLE 	36 0 5
	307	[95]	SETTABLE 	36 -22 -23	; "&lt;" "<"
	308	[96]	SETTABLE 	36 -24 -25	; "&gt;" ">"
	309	[97]	SETTABLE 	36 -26 -27	; "&amp;" "&"
	310	[98]	SETTABLE 	36 -28 -29	; "&apos;" "'"
	311	[99]	SETTABLE 	36 -30 -31	; "&quot;" "\""
	312	[103]	NEWTABLE 	37 0 15
	313	[104]	SETTABLE 	37 4 -32	; - "ST_START"
	314	[105]	SETTABLE 	37 5 -33	; - "ST_TEXT"
	315	[106]	SETTABLE 	37 6 -34	; - "ST_START_TAG"
	316	[107]	SETTABLE 	37 7 -35	; - "ST_START_TAGNAME"
	317	[108]	SETTABLE 	37 8 -36	; - "ST_START_TAGNAME_END"
	318	[109]	SETTABLE 	37 9 -37	; - "ST_END_TAG"
	319	[110]	SETTABLE 	37 10 -38	; - "ST_END_TAGNAME"
	320	[111]	SETTABLE 	37 11 -39	; - "ST_END_TAGNAME_END"
	321	[112]	SETTABLE 	37 12 -40	; - "ST_EMPTY_TAG"
	322	[113]	SETTABLE 	37 13 -41	; - "ST_SPACE"
	323	[114]	SETTABLE 	37 14 -42	; - "ST_ATTR_NAME"
	324	[115]	SETTABLE 	37 15 -43	; - "ST_ATTR_NAME_END"
	325	[116]	SETTABLE 	37 16 -44	; - "ST_ATTR_VAL"
	326	[117]	SETTABLE 	37 17 -45	; - "ST_ATTR_VAL2"
	327	[118]	SETTABLE 	37 18 -46	; - "ST_ERROR"
	328	[130]	NEWTABLE 	38 26 0
	329	[130]	NEWTABLE 	39 0 4
	330	[132]	SETTABLE 	39 -47 4	; "state" -
	331	[132]	SETTABLE 	39 -48 26	; "cclass" -
	332	[132]	SETTABLE 	39 -49 13	; "next_state" -
	333	[132]	SETTABLE 	39 -50 35	; "event" -
	334	[132]	NEWTABLE 	40 0 4
	335	[133]	SETTABLE 	40 -47 4	; "state" -
	336	[133]	SETTABLE 	40 -48 20	; "cclass" -
	337	[133]	SETTABLE 	40 -49 6	; "next_state" -
	338	[133]	SETTABLE 	40 -50 35	; "event" -
	339	[133]	NEWTABLE 	41 0 4
	340	[134]	SETTABLE 	41 -47 4	; "state" -
	341	[134]	SETTABLE 	41 -48 27	; "cclass" -
	342	[134]	SETTABLE 	41 -49 5	; "next_state" -
	343	[134]	SETTABLE 	41 -50 34	; "event" -
	344	[134]	NEWTABLE 	42 0 4
	345	[137]	SETTABLE 	42 -47 13	; "state" -
	346	[137]	SETTABLE 	42 -48 26	; "cclass" -
	347	[137]	SETTABLE 	42 -49 13	; "next_state" -
	348	[137]	SETTABLE 	42 -50 35	; "event" -
	349	[137]	NEWTABLE 	43 0 4
	350	[138]	SETTABLE 	43 -47 13	; "state" -
	351	[138]	SETTABLE 	43 -48 20	; "cclass" -
	352	[138]	SETTABLE 	43 -49 6	; "next_state" -
	353	[138]	SETTABLE 	43 -50 30	; "event" -
	354	[138]	NEWTABLE 	44 0 4
	355	[139]	SETTABLE 	44 -47 13	; "state" -
	356	[139]	SETTABLE 	44 -48 27	; "cclass" -
	357	[139]	SETTABLE 	44 -49 5	; "next_state" -
	358	[139]	SETTABLE 	44 -50 34	; "event" -
	359	[139]	NEWTABLE 	45 0 4
	360	[142]	SETTABLE 	45 -47 6	; "state" -
	361	[142]	SETTABLE 	45 -48 25	; "cclass" -
	362	[142]	SETTABLE 	45 -49 7	; "next_state" -
	363	[142]	SETTABLE 	45 -50 34	; "event" -
	364	[142]	NEWTABLE 	46 0 4
	365	[143]	SETTABLE 	46 -47 6	; "state" -
	366	[143]	SETTABLE 	46 -48 21	; "cclass" -
	367	[143]	SETTABLE 	46 -49 9	; "next_state" -
	368	[143]	SETTABLE 	46 -50 34	; "event" -
	369	[143]	NEWTABLE 	47 0 4
	370	[144]	SETTABLE 	47 -47 6	; "state" -
	371	[144]	SETTABLE 	47 -48 26	; "cclass" -
	372	[144]	SETTABLE 	47 -49 6	; "next_state" -
	373	[144]	SETTABLE 	47 -50 35	; "event" -
	374	[144]	NEWTABLE 	48 0 4
	375	[147]	SETTABLE 	48 -47 7	; "state" -
	376	[147]	SETTABLE 	48 -48 25	; "cclass" -
	377	[147]	SETTABLE 	48 -49 7	; "next_state" -
	378	[147]	SETTABLE 	48 -50 35	; "event" -
	379	[147]	NEWTABLE 	49 0 4
	380	[148]	SETTABLE 	49 -47 7	; "state" -
	381	[148]	SETTABLE 	49 -48 26	; "cclass" -
	382	[148]	SETTABLE 	49 -49 8	; "next_state" -
	383	[148]	SETTABLE 	49 -50 28	; "event" -
	384	[148]	NEWTABLE 	50 0 4
	385	[149]	SETTABLE 	50 -47 7	; "state" -
	386	[149]	SETTABLE 	50 -48 21	; "cclass" -
	387	[149]	SETTABLE 	50 -49 12	; "next_state" -
	388	[149]	SETTABLE 	50 -50 29	; "event" -
	389	[149]	NEWTABLE 	51 0 4
	390	[150]	SETTABLE 	51 -47 7	; "state" -
	391	[150]	SETTABLE 	51 -48 22	; "cclass" -
	392	[150]	SETTABLE 	51 -49 4	; "next_state" -
	393	[150]	SETTABLE 	51 -50 28	; "event" -
	394	[150]	NEWTABLE 	52 0 4
	395	[153]	SETTABLE 	52 -47 8	; "state" -
	396	[153]	SETTABLE 	52 -48 25	; "cclass" -
	397	[153]	SETTABLE 	52 -49 14	; "next_state" -
	398	[153]	SETTABLE 	52 -50 34	; "event" -
	399	[153]	NEWTABLE 	53 0 4
	400	[154]	SETTABLE 	53 -47 8	; "state" -
	401	[154]	SETTABLE 	53 -48 26	; "cclass" -
	402	[154]	SETTABLE 	53 -49 8	; "next_state" -
	403	[154]	SETTABLE 	53 -50 35	; "event" -
	404	[154]	NEWTABLE 	54 0 4
	405	[155]	SETTABLE 	54 -47 8	; "state" -
	406	[155]	SETTABLE 	54 -48 22	; "cclass" -
	407	[155]	SETTABLE 	54 -49 4	; "next_state" -
	408	[155]	SETTABLE 	54 -50 28	; "event" -
	409	[155]	NEWTABLE 	55 0 4
	410	[156]	SETTABLE 	55 -47 8	; "state" -
	411	[156]	SETTABLE 	55 -48 21	; "cclass" -
	412	[156]	SETTABLE 	55 -49 12	; "next_state" -
	413	[156]	SETTABLE 	55 -50 34	; "event" -
	414	[156]	NEWTABLE 	56 0 4
	415	[159]	SETTABLE 	56 -47 12	; "state" -
	416	[159]	SETTABLE 	56 -48 22	; "cclass" -
	417	[159]	SETTABLE 	56 -49 4	; "next_state" -
	418	[159]	SETTABLE 	56 -50 29	; "event" -
	419	[159]	NEWTABLE 	57 0 4
	420	[162]	SETTABLE 	57 -47 9	; "state" -
	421	[162]	SETTABLE 	57 -48 25	; "cclass" -
	422	[162]	SETTABLE 	57 -49 10	; "next_state" -
	423	[162]	SETTABLE 	57 -50 35	; "event" -
	424	[162]	NEWTABLE 	58 0 4
	425	[165]	SETTABLE 	58 -47 10	; "state" -
	426	[165]	SETTABLE 	58 -48 25	; "cclass" -
	427	[165]	SETTABLE 	58 -49 10	; "next_state" -
	428	[165]	SETTABLE 	58 -50 35	; "event" -
	429	[165]	NEWTABLE 	59 0 4
	430	[166]	SETTABLE 	59 -47 10	; "state" -
	431	[166]	SETTABLE 	59 -48 22	; "cclass" -
	432	[166]	SETTABLE 	59 -49 4	; "next_state" -
	433	[166]	SETTABLE 	59 -50 29	; "event" -
	434	[166]	NEWTABLE 	60 0 4
	435	[167]	SETTABLE 	60 -47 10	; "state" -
	436	[167]	SETTABLE 	60 -48 26	; "cclass" -
	437	[167]	SETTABLE 	60 -49 11	; "next_state" -
	438	[167]	SETTABLE 	60 -50 29	; "event" -
	439	[167]	NEWTABLE 	61 0 4
	440	[170]	SETTABLE 	61 -47 11	; "state" -
	441	[170]	SETTABLE 	61 -48 26	; "cclass" -
	442	[170]	SETTABLE 	61 -49 11	; "next_state" -
	443	[170]	SETTABLE 	61 -50 35	; "event" -
	444	[170]	NEWTABLE 	62 0 4
	445	[171]	SETTABLE 	62 -47 11	; "state" -
	446	[171]	SETTABLE 	62 -48 22	; "cclass" -
	447	[171]	SETTABLE 	62 -49 4	; "next_state" -
	448	[171]	SETTABLE 	62 -50 35	; "event" -
	449	[171]	NEWTABLE 	63 0 4
	450	[174]	SETTABLE 	63 -47 5	; "state" -
	451	[174]	SETTABLE 	63 -48 26	; "cclass" -
	452	[174]	SETTABLE 	63 -49 13	; "next_state" -
	453	[174]	SETTABLE 	63 -50 35	; "event" -
	454	[174]	NEWTABLE 	64 0 4
	455	[175]	SETTABLE 	64 -47 5	; "state" -
	456	[175]	SETTABLE 	64 -48 20	; "cclass" -
	457	[175]	SETTABLE 	64 -49 6	; "next_state" -
	458	[175]	SETTABLE 	64 -50 30	; "event" -
	459	[175]	NEWTABLE 	65 0 4
	460	[176]	SETTABLE 	65 -47 5	; "state" -
	461	[176]	SETTABLE 	65 -48 27	; "cclass" -
	462	[176]	SETTABLE 	65 -49 5	; "next_state" -
	463	[176]	SETTABLE 	65 -50 35	; "event" -
	464	[176]	NEWTABLE 	66 0 4
	465	[179]	SETTABLE 	66 -47 14	; "state" -
	466	[179]	SETTABLE 	66 -48 25	; "cclass" -
	467	[179]	SETTABLE 	66 -49 14	; "next_state" -
	468	[179]	SETTABLE 	66 -50 34	; "event" -
	469	[179]	NEWTABLE 	67 0 4
	470	[180]	SETTABLE 	67 -47 14	; "state" -
	471	[180]	SETTABLE 	67 -48 26	; "cclass" -
	472	[180]	SETTABLE 	67 -49 15	; "next_state" -
	473	[180]	SETTABLE 	67 -50 31	; "event" -
	474	[180]	NEWTABLE 	68 0 4
	475	[181]	SETTABLE 	68 -47 14	; "state" -
	476	[181]	SETTABLE 	68 -48 23	; "cclass" -
	477	[181]	SETTABLE 	68 -49 16	; "next_state" -
	478	[181]	SETTABLE 	68 -50 31	; "event" -
	479	[181]	NEWTABLE 	69 0 4
	480	[184]	SETTABLE 	69 -47 15	; "state" -
	481	[184]	SETTABLE 	69 -48 26	; "cclass" -
	482	[184]	SETTABLE 	69 -49 15	; "next_state" -
	483	[184]	SETTABLE 	69 -50 35	; "event" -
	484	[184]	NEWTABLE 	70 0 4
	485	[185]	SETTABLE 	70 -47 15	; "state" -
	486	[185]	SETTABLE 	70 -48 25	; "cclass" -
	487	[185]	SETTABLE 	70 -49 14	; "next_state" -
	488	[185]	SETTABLE 	70 -50 34	; "event" -
	489	[185]	NEWTABLE 	71 0 4
	490	[186]	SETTABLE 	71 -47 15	; "state" -
	491	[186]	SETTABLE 	71 -48 23	; "cclass" -
	492	[186]	SETTABLE 	71 -49 16	; "next_state" -
	493	[186]	SETTABLE 	71 -50 35	; "event" -
	494	[186]	NEWTABLE 	72 0 4
	495	[189]	SETTABLE 	72 -47 16	; "state" -
	496	[189]	SETTABLE 	72 -48 24	; "cclass" -
	497	[189]	SETTABLE 	72 -49 17	; "next_state" -
	498	[189]	SETTABLE 	72 -50 35	; "event" -
	499	[189]	NEWTABLE 	73 0 4
	500	[190]	SETTABLE 	73 -47 16	; "state" -
	501	[190]	SETTABLE 	73 -48 26	; "cclass" -
	502	[190]	SETTABLE 	73 -49 16	; "next_state" -
	503	[190]	SETTABLE 	73 -50 35	; "event" -
	504	[190]	NEWTABLE 	74 0 4
	505	[193]	SETTABLE 	74 -47 17	; "state" -
	506	[193]	SETTABLE 	74 -48 24	; "cclass" -
	507	[193]	SETTABLE 	74 -49 8	; "next_state" -
	508	[193]	SETTABLE 	74 -50 32	; "event" -
	509	[193]	NEWTABLE 	75 0 4
	510	[194]	SETTABLE 	75 -47 17	; "state" -
	511	[194]	SETTABLE 	75 -48 25	; "cclass" -
	512	[194]	SETTABLE 	75 -49 17	; "next_state" -
	513	[194]	SETTABLE 	75 -50 34	; "event" -
	514	[194]	NEWTABLE 	76 0 4
	515	[195]	SETTABLE 	76 -47 17	; "state" -
	516	[195]	SETTABLE 	76 -48 21	; "cclass" -
	517	[195]	SETTABLE 	76 -49 17	; "next_state" -
	518	[195]	SETTABLE 	76 -50 34	; "event" -
	519	[195]	NEWTABLE 	77 0 4
	520	[198]	SETTABLE 	77 -47 18	; "state" -
	521	[198]	SETTABLE 	77 -48 19	; "cclass" -
	522	[198]	SETTABLE 	77 -49 18	; "next_state" -
	523	[198]	SETTABLE 	77 -50 35	; "event" -
	524	[199]	SETLIST  	38 39 1	; 1
	525	[201]	GETTABLE 	39 0 -51	; "cdef"
	526	[210]	LOADK    	40 -52	; "struct parse_state {\n    const char* buf;      /* reference to buffer */\n    int bufsz;            /* size of buf */\n    int mark;\n    int i;\n    int ix;               /* index into buffer */\n};\n\n"
	527	[210]	CALL     	39 2 1
	528	[212]	NEWTABLE 	39 0 8
	529	[213]	SETTABLE 	39 25 -53	; - "(ctype == 1 or ctype == 2)"
	530	[214]	SETTABLE 	39 20 -54	; - "(c == T_LT)"
	531	[215]	SETTABLE 	39 21 -55	; - "(c == T_SLASH)"
	532	[216]	SETTABLE 	39 22 -56	; - "(c == T_GT)"
	533	[217]	SETTABLE 	39 23 -57	; - "(c == T_EQ)"
	534	[218]	SETTABLE 	39 24 -58	; - "(c == T_QUOTE)"
	535	[219]	SETTABLE 	39 26 -59	; - "(ctype == 3)"
	536	[220]	SETTABLE 	39 27 -60	; - "true"
	537	[223]	NEWTABLE 	40 0 0
	538	[224]	NEWTABLE 	41 0 0
	539	[240]	CLOSURE  	42 0	; 0x7fa598407290
	540	[240]	MOVE     	0 33
	541	[240]	MOVE     	0 2
	542	[240]	MOVE     	0 41
	543	[243]	LOADK    	43 -61	; ""
	544	[248]	CLOSURE  	44 1	; 0x7fa598407a30
	545	[248]	MOVE     	0 43
	546	[249]	MOVE     	45 44
	547	[258]	LOADK    	46 -62	; "local STATES, next_char, char_type = ...\n\nlocal T_LT = string.byte('<')\nlocal T_SLASH = string.byte('/')\nlocal T_GT = string.byte('>')\nlocal T_EQ = string.byte('=')\nlocal T_QUOTE = string.byte('\"')\n\n"
	548	[258]	CALL     	45 2 1
	549	[260]	LOADK    	45 -7	; 0
	550	[260]	LEN      	46 37
	551	[260]	LOADK    	47 -10	; 1
	552	[260]	FORPREP  	45 6	; to 559
	553	[261]	GETTABLE 	49 37 48
	554	[262]	MOVE     	50 44
	555	[262]	LOADK    	51 -63	; "local "
	556	[262]	MOVE     	52 49
	557	[262]	LOADK    	53 -64	; "_f\n"
	558	[262]	CALL     	50 4 1
	559	[260]	FORLOOP  	45 -7	; to 553
	560	[265]	LOADK    	45 -10	; 1
	561	[265]	LEN      	46 38
	562	[265]	LOADK    	47 -10	; 1
	563	[265]	FORPREP  	45 20	; to 584
	564	[266]	GETTABLE 	49 38 48
	565	[267]	GETTABLE 	50 49 -47	; "state"
	566	[267]	GETTABLE 	50 40 50
	567	[268]	LOADNIL  	51 51
	568	[269]	TEST     	50 0 1
	569	[269]	JMP      	10	; to 580
	570	[270]	NEWTABLE 	52 0 0
	571	[270]	MOVE     	51 52
	572	[271]	NEWTABLE 	52 0 2
	573	[271]	GETTABLE 	53 49 -47	; "state"
	574	[271]	SETTABLE 	52 -47 53	; "state" -
	575	[271]	SETTABLE 	52 -65 51	; "cclasses" -
	576	[271]	MOVE     	50 52
	577	[272]	GETTABLE 	52 49 -47	; "state"
	578	[272]	SETTABLE 	40 52 50
	579	[272]	JMP      	1	; to 581
	580	[274]	GETTABLE 	51 50 -65	; "cclasses"
	581	[276]	LEN      	52 51
	582	[276]	ADD      	52 52 -10	; - 1
	583	[276]	SETTABLE 	51 52 49
	584	[265]	FORLOOP  	45 -21	; to 564
	585	[288]	CLOSURE  	45 2	; 0x7fa598407db0
	586	[288]	MOVE     	0 37
	587	[288]	MOVE     	0 34
	588	[288]	MOVE     	0 44
	589	[288]	MOVE     	0 35
	590	[290]	LOADK    	46 -7	; 0
	591	[290]	LEN      	47 37
	592	[290]	LOADK    	48 -10	; 1
	593	[290]	FORPREP  	46 77	; to 671
	594	[291]	GETTABLE 	50 37 49
	595	[292]	GETTABLE 	51 40 49
	596	[293]	GETTABLE 	52 51 -65	; "cclasses"
	597	[294]	MOVE     	53 44
	598	[294]	LOADK    	54 -66	; "function "
	599	[294]	MOVE     	55 50
	600	[294]	LOADK    	56 -67	; "_f(ps, c, verbose)\n"
	601	[294]	CALL     	53 4 1
	602	[295]	MOVE     	53 44
	603	[295]	LOADK    	54 -68	; "  local ctype = char_type[c]\n"
	604	[295]	CALL     	53 2 1
	605	[296]	LOADNIL  	53 53
	606	[297]	LOADK    	54 -10	; 1
	607	[297]	LEN      	55 52
	608	[297]	LOADK    	56 -10	; 1
	609	[297]	FORPREP  	54 28	; to 638
	610	[298]	GETTABLE 	58 52 57
	611	[299]	GETTABLE 	59 58 -48	; "cclass"
	612	[300]	GETTABLE 	60 39 59
	613	[301]	EQ       	0 59 27
	614	[301]	JMP      	2	; to 617
	615	[302]	MOVE     	53 58
	616	[302]	JMP      	21	; to 638
	617	[303]	EQ       	0 57 -10	; - 1
	618	[303]	JMP      	10	; to 629
	619	[304]	MOVE     	61 44
	620	[304]	LOADK    	62 -69	; "  if "
	621	[304]	MOVE     	63 60
	622	[304]	LOADK    	64 -70	; " then\n"
	623	[304]	CALL     	61 4 1
	624	[305]	MOVE     	61 45
	625	[305]	LOADK    	62 -71	; "    "
	626	[305]	MOVE     	63 58
	627	[305]	CALL     	61 3 1
	628	[305]	JMP      	9	; to 638
	629	[307]	MOVE     	61 44
	630	[307]	LOADK    	62 -72	; "  elseif "
	631	[307]	MOVE     	63 60
	632	[307]	LOADK    	64 -70	; " then\n"
	633	[307]	CALL     	61 4 1
	634	[308]	MOVE     	61 45
	635	[308]	LOADK    	62 -71	; "    "
	636	[308]	MOVE     	63 58
	637	[308]	CALL     	61 3 1
	638	[297]	FORLOOP  	54 -29	; to 610
	639	[311]	MOVE     	54 44
	640	[311]	LOADK    	55 -73	; "  end\n"
	641	[311]	CALL     	54 2 1
	642	[313]	TEST     	53 0 0
	643	[313]	JMP      	5	; to 649
	644	[314]	MOVE     	54 45
	645	[314]	LOADK    	55 -74	; "  "
	646	[314]	MOVE     	56 53
	647	[314]	CALL     	54 3 1
	648	[314]	JMP      	5	; to 654
	649	[317]	MOVE     	54 44
	650	[317]	LOADK    	55 -75	; "  return nil, "
	651	[317]	MOVE     	56 50
	652	[317]	LOADK    	57 -76	; "_f, c\n"
	653	[317]	CALL     	54 4 1
	654	[319]	MOVE     	54 44
	655	[319]	LOADK    	55 -77	; "end\n"
	656	[319]	CALL     	54 2 1
	657	[321]	MOVE     	54 44
	658	[321]	LOADK    	55 -78	; "STATES["
	659	[321]	MOVE     	56 49
	660	[321]	LOADK    	57 -79	; "] = "
	661	[321]	MOVE     	58 50
	662	[321]	LOADK    	59 -64	; "_f\n"
	663	[321]	CALL     	54 6 1
	664	[323]	MOVE     	54 44
	665	[323]	LOADK    	55 -78	; "STATES["
	666	[323]	MOVE     	56 50
	667	[323]	LOADK    	57 -80	; "_f] = "
	668	[323]	MOVE     	58 49
	669	[323]	LOADK    	59 -81	; "\n"
	670	[323]	CALL     	54 6 1
	671	[290]	FORLOOP  	46 -78	; to 594
	672	[326]	GETGLOBAL	46 -82	; assert
	673	[326]	GETGLOBAL	47 -83	; loadstring
	674	[326]	MOVE     	48 43
	675	[326]	LOADK    	49 -84	; "luxl FSM code"
	676	[326]	CALL     	47 3 0
	677	[326]	CALL     	46 0 2
	678	[327]	MOVE     	47 46
	679	[327]	MOVE     	48 41
	680	[327]	MOVE     	49 42
	681	[327]	MOVE     	50 3
	682	[327]	CALL     	47 4 1
	683	[328]	LOADNIL  	43 43
	684	[331]	NEWTABLE 	47 0 8
	685	[332]	SETTABLE 	47 -85 28	; "EVENT_START" -
	686	[333]	SETTABLE 	47 -86 29	; "EVENT_END" -
	687	[334]	SETTABLE 	47 -87 30	; "EVENT_TEXT" -
	688	[335]	SETTABLE 	47 -88 31	; "EVENT_ATTR_NAME" -
	689	[336]	SETTABLE 	47 -89 32	; "EVENT_ATTR_VAL" -
	690	[337]	SETTABLE 	47 -90 33	; "EVENT_END_DOC" -
	691	[338]	SETTABLE 	47 -91 34	; "EVENT_MARK" -
	692	[339]	SETTABLE 	47 -92 35	; "EVENT_NONE" -
	693	[341]	NEWTABLE 	48 0 1
	694	[341]	SETTABLE 	48 -93 47	; "__index" -
	695	[366]	CLOSURE  	49 3	; 0x7fa5984088a0
	696	[366]	MOVE     	0 0
	697	[366]	MOVE     	0 4
	698	[366]	MOVE     	0 35
	699	[366]	MOVE     	0 48
	700	[343]	SETTABLE 	47 -5 49	; "new" -
	701	[382]	CLOSURE  	49 4	; 0x7fa5984090a0
	702	[382]	MOVE     	0 4
	703	[382]	MOVE     	0 35
	704	[368]	SETTABLE 	47 -94 49	; "Reset" -
	705	[386]	CLOSURE  	49 5	; 0x7fa598409720
	706	[384]	SETTABLE 	47 -95 49	; "SetMessageHandler" -
	707	[432]	CLOSURE  	49 6	; 0x7fa5984097a0
	708	[432]	MOVE     	0 41
	709	[432]	MOVE     	0 42
	710	[403]	SETTABLE 	47 -96 49	; "GetNext" -
	711	[443]	CLOSURE  	49 7	; 0x7fa598409c00
	712	[443]	MOVE     	0 33
	713	[434]	SETTABLE 	47 -97 49	; "Lexemes" -
	714	[445]	RETURN   	47 2
	715	[445]	RETURN   	0 1

function <./frontend/luxl.lua:226,240> (32 instructions, 128 bytes at 0x7fa598407290)
3 params, 9 slots, 3 upvalues, 5 locals, 7 constants, 0 functions
	1	[227]	GETTABLE 	3 0 -1	; "ix"
	2	[228]	GETTABLE 	4 0 -2	; "bufsz"
	3	[228]	LE       	0 4 3
	4	[228]	JMP      	5	; to 10
	5	[229]	GETUPVAL 	4 0	; EVENT_END_DOC
	6	[229]	LOADK    	5 -3	; 0
	7	[229]	MOVE     	6 3
	8	[229]	MOVE     	7 1
	9	[229]	RETURN   	4 5
	10	[231]	SETTABLE 	0 -4 3	; "i" -
	11	[232]	GETUPVAL 	4 1	; band
	12	[232]	GETTABLE 	5 0 -5	; "buf"
	13	[232]	GETTABLE 	5 5 3
	14	[232]	LOADK    	6 -6	; 255
	15	[232]	CALL     	4 3 2
	16	[233]	ADD      	5 3 -7	; - 1
	17	[233]	SETTABLE 	0 -1 5	; "ix" -
	18	[234]	TEST     	2 0 0
	19	[234]	JMP      	6	; to 26
	20	[235]	MOVE     	5 2
	21	[235]	MOVE     	6 3
	22	[235]	GETUPVAL 	7 2	; STATE_FUNCS
	23	[235]	GETTABLE 	7 7 1
	24	[235]	MOVE     	8 4
	25	[235]	CALL     	5 4 1
	26	[239]	MOVE     	5 1
	27	[239]	MOVE     	6 0
	28	[239]	MOVE     	7 4
	29	[239]	MOVE     	8 2
	30	[239]	TAILCALL 	5 4 0
	31	[239]	RETURN   	5 0
	32	[240]	RETURN   	0 1

function <./frontend/luxl.lua:244,248> (18 instructions, 72 bytes at 0x7fa598407a30)
0+ params, 10 slots, 1 upvalue, 5 locals, 4 constants, 0 functions
	1	[245]	LOADK    	1 -1	; 1
	2	[245]	GETGLOBAL	2 -2	; select
	3	[245]	LOADK    	3 -3	; "#"
	4	[245]	VARARG   	4 0
	5	[245]	CALL     	2 0 2
	6	[245]	LOADK    	3 -1	; 1
	7	[245]	FORPREP  	1 9	; to 17
	8	[246]	GETUPVAL 	5 0	; fsm_code
	9	[246]	GETGLOBAL	6 -4	; tostring
	10	[246]	GETGLOBAL	7 -2	; select
	11	[246]	MOVE     	8 4
	12	[246]	VARARG   	9 0
	13	[246]	CALL     	7 0 0
	14	[246]	CALL     	6 0 2
	15	[246]	CONCAT   	5 5 6
	16	[246]	SETUPVAL 	5 0	; fsm_code
	17	[245]	FORLOOP  	1 -10	; to 8
	18	[248]	RETURN   	0 1

function <./frontend/luxl.lua:278,288> (39 instructions, 156 bytes at 0x7fa598407db0)
2 params, 10 slots, 4 upvalues, 3 locals, 10 constants, 0 functions
	1	[279]	GETUPVAL 	2 0	; STATE_NAMES
	2	[279]	GETTABLE 	3 1 -1	; "next_state"
	3	[279]	GETTABLE 	2 2 3
	4	[280]	GETTABLE 	3 1 -2	; "event"
	5	[280]	GETUPVAL 	4 1	; EVENT_MARK
	6	[280]	EQ       	0 3 4
	7	[280]	JMP      	5	; to 13
	8	[281]	GETUPVAL 	3 2	; code
	9	[281]	MOVE     	4 0
	10	[281]	LOADK    	5 -3	; "if(ps.mark == 0) then ps.mark = ps.i end -- mark the position\n"
	11	[281]	CALL     	3 3 1
	12	[281]	JMP      	20	; to 33
	13	[282]	GETTABLE 	3 1 -2	; "event"
	14	[282]	GETUPVAL 	4 3	; EVENT_NONE
	15	[282]	EQ       	1 3 4
	16	[282]	JMP      	16	; to 33
	17	[283]	GETUPVAL 	3 2	; code
	18	[283]	MOVE     	4 0
	19	[283]	LOADK    	5 -4	; "if(ps.mark > 0) then\n"
	20	[283]	CALL     	3 3 1
	21	[284]	GETUPVAL 	3 2	; code
	22	[284]	MOVE     	4 0
	23	[284]	LOADK    	5 -5	; "  return "
	24	[284]	GETTABLE 	6 1 -2	; "event"
	25	[284]	LOADK    	7 -6	; ", "
	26	[284]	MOVE     	8 2
	27	[284]	LOADK    	9 -7	; "_f\n"
	28	[284]	CALL     	3 7 1
	29	[285]	GETUPVAL 	3 2	; code
	30	[285]	MOVE     	4 0
	31	[285]	LOADK    	5 -8	; "end\n"
	32	[285]	CALL     	3 3 1
	33	[287]	GETUPVAL 	3 2	; code
	34	[287]	MOVE     	4 0
	35	[287]	LOADK    	5 -9	; "return next_char(ps, "
	36	[287]	MOVE     	6 2
	37	[287]	LOADK    	7 -10	; "_f, verbose)\n"
	38	[287]	CALL     	3 5 1
	39	[288]	RETURN   	0 1

function <./frontend/luxl.lua:343,366> (35 instructions, 140 bytes at 0x7fa5984088a0)
2 params, 6 slots, 4 upvalues, 3 locals, 21 constants, 0 functions
	1	[344]	NEWTABLE 	2 0 11
	2	[345]	GETUPVAL 	3 0	; ffi
	3	[345]	GETTABLE 	3 3 -2	; "cast"
	4	[345]	LOADK    	4 -3	; "const uint8_t *"
	5	[345]	MOVE     	5 0
	6	[345]	CALL     	3 3 2
	7	[345]	SETTABLE 	2 -1 3	; "buf" -
	8	[346]	SETTABLE 	2 -4 1	; "bufsz" -
	9	[347]	GETUPVAL 	3 1	; ST_START
	10	[347]	SETTABLE 	2 -5 3	; "state" -
	11	[348]	GETUPVAL 	3 2	; EVENT_NONE
	12	[348]	SETTABLE 	2 -6 3	; "event" -
	13	[349]	SETTABLE 	2 -7 -8	; "err" 0
	14	[350]	SETTABLE 	2 -9 -8	; "markix" 0
	15	[351]	SETTABLE 	2 -10 -8	; "marksz" 0
	16	[352]	SETTABLE 	2 -11 -12	; "MsgHandler" nil
	17	[353]	SETTABLE 	2 -13 -12	; "ErrHandler" nil
	18	[354]	SETTABLE 	2 -14 -12	; "EventHandler" nil
	19	[355]	GETUPVAL 	3 0	; ffi
	20	[355]	GETTABLE 	3 3 -16	; "new"
	21	[355]	LOADK    	4 -17	; "struct parse_state"
	22	[355]	NEWTABLE 	5 0 5
	23	[356]	SETTABLE 	5 -1 0	; "buf" -
	24	[357]	SETTABLE 	5 -4 1	; "bufsz" -
	25	[358]	SETTABLE 	5 -18 -8	; "mark" 0
	26	[359]	SETTABLE 	5 -19 -8	; "i" 0
	27	[360]	SETTABLE 	5 -20 -8	; "ix" 0
	28	[355]	CALL     	3 3 2
	29	[361]	SETTABLE 	2 -15 3	; "ps" -
	30	[363]	GETGLOBAL	3 -21	; setmetatable
	31	[363]	MOVE     	4 2
	32	[363]	GETUPVAL 	5 3	; luxl_mt
	33	[363]	CALL     	3 3 1
	34	[365]	RETURN   	2 2
	35	[366]	RETURN   	0 1

function <./frontend/luxl.lua:368,382> (16 instructions, 64 bytes at 0x7fa5984090a0)
3 params, 4 slots, 2 upvalues, 4 locals, 12 constants, 0 functions
	1	[369]	SETTABLE 	0 -1 1	; "buf" -
	2	[370]	SETTABLE 	0 -2 2	; "bufsz" -
	3	[371]	GETUPVAL 	3 0	; ST_START
	4	[371]	SETTABLE 	0 -3 3	; "state" -
	5	[372]	GETUPVAL 	3 1	; EVENT_NONE
	6	[372]	SETTABLE 	0 -4 3	; "event" -
	7	[373]	SETTABLE 	0 -5 -6	; "err" 0
	8	[374]	SETTABLE 	0 -7 -6	; "markix" 0
	9	[375]	SETTABLE 	0 -8 -6	; "marksz" 0
	10	[376]	GETTABLE 	3 0 -9	; "ps"
	11	[377]	SETTABLE 	3 -1 1	; "buf" -
	12	[378]	SETTABLE 	3 -2 2	; "bufsz" -
	13	[379]	SETTABLE 	3 -10 -6	; "mark" 0
	14	[380]	SETTABLE 	3 -11 -6	; "i" 0
	15	[381]	SETTABLE 	3 -12 -6	; "ix" 0
	16	[382]	RETURN   	0 1

function <./frontend/luxl.lua:384,386> (2 instructions, 8 bytes at 0x7fa598409720)
2 params, 2 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[385]	SETTABLE 	0 -1 1	; "MsgHandler" -
	2	[386]	RETURN   	0 1

function <./frontend/luxl.lua:403,432> (51 instructions, 204 bytes at 0x7fa5984097a0)
1 param, 11 slots, 2 upvalues, 7 locals, 13 constants, 0 functions
	1	[405]	GETTABLE 	4 0 -1	; "ps"
	2	[406]	SETTABLE 	4 -2 -3	; "mark" 0
	3	[407]	GETUPVAL 	5 0	; STATE_FUNCS
	4	[407]	GETTABLE 	6 0 -4	; "state"
	5	[407]	GETTABLE 	2 5 6
	6	[409]	GETUPVAL 	5 1	; next_char
	7	[409]	MOVE     	6 4
	8	[409]	MOVE     	7 2
	9	[409]	GETTABLE 	8 0 -5	; "MsgHandler"
	10	[409]	CALL     	5 4 4
	11	[409]	MOVE     	3 7
	12	[409]	MOVE     	2 6
	13	[409]	MOVE     	1 5
	14	[411]	GETUPVAL 	5 0	; STATE_FUNCS
	15	[411]	GETTABLE 	5 5 2
	16	[411]	SETTABLE 	0 -4 5	; "state" -
	17	[412]	TEST     	1 0 1
	18	[412]	JMP      	11	; to 30
	19	[415]	GETTABLE 	5 0 -6	; "err"
	20	[415]	ADD      	5 5 -7	; - 1
	21	[415]	SETTABLE 	0 -6 5	; "err" -
	22	[416]	GETTABLE 	5 0 -8	; "ErrHandler"
	23	[416]	TEST     	5 0 0
	24	[416]	JMP      	5	; to 30
	25	[417]	GETTABLE 	5 0 -8	; "ErrHandler"
	26	[417]	GETTABLE 	6 4 -9	; "i"
	27	[417]	GETTABLE 	7 0 -4	; "state"
	28	[417]	MOVE     	8 3
	29	[417]	CALL     	5 4 1
	30	[420]	TEST     	1 0 0
	31	[420]	JMP      	-26	; to 6
	32	[423]	SETTABLE 	0 -10 1	; "event" -
	33	[424]	GETTABLE 	5 4 -2	; "mark"
	34	[425]	GETTABLE 	6 4 -9	; "i"
	35	[425]	GETTABLE 	7 4 -2	; "mark"
	36	[425]	SUB      	6 6 7
	37	[426]	SETTABLE 	0 -11 5	; "markix" -
	38	[427]	SETTABLE 	0 -12 6	; "marksz" -
	39	[428]	GETTABLE 	7 0 -13	; "EventHandler"
	40	[428]	TEST     	7 0 0
	41	[428]	JMP      	5	; to 47
	42	[429]	GETTABLE 	7 0 -13	; "EventHandler"
	43	[429]	MOVE     	8 1
	44	[429]	MOVE     	9 5
	45	[429]	MOVE     	10 6
	46	[429]	CALL     	7 4 1
	47	[431]	MOVE     	7 1
	48	[431]	MOVE     	8 5
	49	[431]	MOVE     	9 6
	50	[431]	RETURN   	7 4
	51	[432]	RETURN   	0 1

function <./frontend/luxl.lua:434,443> (5 instructions, 20 bytes at 0x7fa598409c00)
1 param, 2 slots, 1 upvalue, 1 local, 0 constants, 1 function
	1	[442]	CLOSURE  	1 0	; 0x7fa59840a040
	2	[442]	MOVE     	0 0
	3	[442]	GETUPVAL 	0 0	; EVENT_END_DOC
	4	[442]	RETURN   	1 2
	5	[443]	RETURN   	0 1

function <./frontend/luxl.lua:435,442> (14 instructions, 56 bytes at 0x7fa59840a040)
0 params, 6 slots, 2 upvalues, 3 locals, 1 constant, 0 functions
	1	[436]	GETUPVAL 	0 0	; self
	2	[436]	SELF     	0 0 -1	; "GetNext"
	3	[436]	CALL     	0 2 4
	4	[437]	GETUPVAL 	3 1	; EVENT_END_DOC
	5	[437]	EQ       	0 0 3
	6	[437]	JMP      	3	; to 10
	7	[438]	LOADNIL  	3 3
	8	[438]	RETURN   	3 2
	9	[438]	JMP      	4	; to 14
	10	[440]	MOVE     	3 0
	11	[440]	MOVE     	4 1
	12	[440]	MOVE     	5 2
	13	[440]	RETURN   	3 4
	14	[442]	RETURN   	0 1
