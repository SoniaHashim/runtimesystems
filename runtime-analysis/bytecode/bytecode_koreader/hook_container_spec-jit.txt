-- BYTECODE -- hook_container_spec.lua:2-4
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "commonrequire"
0003    CALL     0   1   2
0004    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:8-8
0001    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:9-9
0001    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:10-10
0001    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:6-34
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "ui/hook_container"
0003    CALL     0   2   2
0004    MOV      1   0
0005    TGETS    0   0   2  ; "new"
0006    CALL     0   2   2
0007    GGET     1   3      ; "spy"
0008    TGETS    1   1   2  ; "new"
0009    FNEW     2   4      ; hook_container_spec.lua:8
0010    CALL     1   2   2
0011    GGET     2   3      ; "spy"
0012    TGETS    2   2   2  ; "new"
0013    FNEW     3   5      ; hook_container_spec.lua:9
0014    CALL     2   2   2
0015    GGET     3   3      ; "spy"
0016    TGETS    3   3   2  ; "new"
0017    FNEW     4   6      ; hook_container_spec.lua:10
0018    CALL     3   2   2
0019    MOV      5   0
0020    TGETS    4   0   7  ; "register"
0021    KSTR     6   8      ; "a"
0022    MOV      7   1
0023    CALL     4   1   4
0024    MOV      5   0
0025    TGETS    4   0   7  ; "register"
0026    KSTR     6   8      ; "a"
0027    MOV      7   2
0028    CALL     4   1   4
0029    MOV      5   0
0030    TGETS    4   0   7  ; "register"
0031    KSTR     6   9      ; "b"
0032    MOV      7   3
0033    CALL     4   1   4
0034    GGET     4  10      ; "assert"
0035    TGETS    4   4  11  ; "are"
0036    TGETS    4   4  12  ; "equal"
0037    MOV      6   0
0038    TGETS    5   0  13  ; "execute"
0039    KSTR     7   8      ; "a"
0040    KSHORT   8 100
0041    CALL     5   2   4
0042    KSHORT   6   2
0043    CALL     4   1   3
0044    GGET     4  10      ; "assert"
0045    TGETS    4   4  11  ; "are"
0046    TGETS    4   4  12  ; "equal"
0047    MOV      6   0
0048    TGETS    5   0  13  ; "execute"
0049    KSTR     7   9      ; "b"
0050    KSHORT   8 200
0051    CALL     5   2   4
0052    KSHORT   6   1
0053    CALL     4   1   3
0054    GGET     4  10      ; "assert"
0055    TGETS    4   4   3  ; "spy"
0056    MOV      5   1
0057    CALL     4   2   2
0058    TGETS    4   4  14  ; "was_called"
0059    KSHORT   5   1
0060    CALL     4   1   2
0061    GGET     4  10      ; "assert"
0062    TGETS    4   4   3  ; "spy"
0063    MOV      5   1
0064    CALL     4   2   2
0065    TGETS    4   4  15  ; "was_called_with"
0066    KSHORT   5 100
0067    CALL     4   1   2
0068    GGET     4  10      ; "assert"
0069    TGETS    4   4   3  ; "spy"
0070    MOV      5   2
0071    CALL     4   2   2
0072    TGETS    4   4  14  ; "was_called"
0073    KSHORT   5   1
0074    CALL     4   1   2
0075    GGET     4  10      ; "assert"
0076    TGETS    4   4   3  ; "spy"
0077    MOV      5   2
0078    CALL     4   2   2
0079    TGETS    4   4  15  ; "was_called_with"
0080    KSHORT   5 100
0081    CALL     4   1   2
0082    GGET     4  10      ; "assert"
0083    TGETS    4   4   3  ; "spy"
0084    MOV      5   3
0085    CALL     4   2   2
0086    TGETS    4   4  14  ; "was_called"
0087    KSHORT   5   1
0088    CALL     4   1   2
0089    GGET     4  10      ; "assert"
0090    TGETS    4   4   3  ; "spy"
0091    MOV      5   3
0092    CALL     4   2   2
0093    TGETS    4   4  15  ; "was_called_with"
0094    KSHORT   5 200
0095    CALL     4   1   2
0096    GGET     4  10      ; "assert"
0097    TGETS    4   4  16  ; "is"
0098    TGETS    4   4  17  ; "truthy"
0099    MOV      6   0
0100    TGETS    5   0  18  ; "unregister"
0101    KSTR     7   8      ; "a"
0102    MOV      8   1
0103    CALL     5   0   4
0104    CALLM    4   1   0
0105    GGET     4  10      ; "assert"
0106    TGETS    4   4  16  ; "is"
0107    TGETS    4   4  19  ; "falsy"
0108    MOV      6   0
0109    TGETS    5   0  18  ; "unregister"
0110    KSTR     7   9      ; "b"
0111    MOV      8   2
0112    CALL     5   0   4
0113    CALLM    4   1   0
0114    GGET     4  10      ; "assert"
0115    TGETS    4   4  11  ; "are"
0116    TGETS    4   4  12  ; "equal"
0117    MOV      6   0
0118    TGETS    5   0  13  ; "execute"
0119    KSTR     7   8      ; "a"
0120    KSHORT   8 300
0121    CALL     5   2   4
0122    KSHORT   6   1
0123    CALL     4   1   3
0124    GGET     4  10      ; "assert"
0125    TGETS    4   4  11  ; "are"
0126    TGETS    4   4  12  ; "equal"
0127    MOV      6   0
0128    TGETS    5   0  13  ; "execute"
0129    KSTR     7   9      ; "b"
0130    KSHORT   8 400
0131    CALL     5   2   4
0132    KSHORT   6   1
0133    CALL     4   1   3
0134    GGET     4  10      ; "assert"
0135    TGETS    4   4   3  ; "spy"
0136    MOV      5   1
0137    CALL     4   2   2
0138    TGETS    4   4  14  ; "was_called"
0139    KSHORT   5   1
0140    CALL     4   1   2
0141    GGET     4  10      ; "assert"
0142    TGETS    4   4   3  ; "spy"
0143    MOV      5   1
0144    CALL     4   2   2
0145    TGETS    4   4  15  ; "was_called_with"
0146    KSHORT   5 100
0147    CALL     4   1   2
0148    GGET     4  10      ; "assert"
0149    TGETS    4   4   3  ; "spy"
0150    MOV      5   2
0151    CALL     4   2   2
0152    TGETS    4   4  14  ; "was_called"
0153    KSHORT   5   2
0154    CALL     4   1   2
0155    GGET     4  10      ; "assert"
0156    TGETS    4   4   3  ; "spy"
0157    MOV      5   2
0158    CALL     4   2   2
0159    TGETS    4   4  15  ; "was_called_with"
0160    KSHORT   5 300
0161    CALL     4   1   2
0162    GGET     4  10      ; "assert"
0163    TGETS    4   4   3  ; "spy"
0164    MOV      5   3
0165    CALL     4   2   2
0166    TGETS    4   4  14  ; "was_called"
0167    KSHORT   5   2
0168    CALL     4   1   2
0169    GGET     4  10      ; "assert"
0170    TGETS    4   4   3  ; "spy"
0171    MOV      5   3
0172    CALL     4   2   2
0173    TGETS    4   4  15  ; "was_called_with"
0174    KSHORT   5 400
0175    CALL     4   1   2
0176    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:39-39
0001    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:40-40
0001    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:36-50
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "ui/hook_container"
0003    CALL     0   2   2
0004    MOV      1   0
0005    TGETS    0   0   2  ; "new"
0006    CALL     0   2   2
0007    GGET     1   0      ; "require"
0008    KSTR     2   3      ; "ui/widget/widget"
0009    CALL     1   2   2
0010    MOV      2   1
0011    TGETS    1   1   2  ; "new"
0012    CALL     1   2   2
0013    GGET     2   5      ; "spy"
0014    TGETS    2   2   2  ; "new"
0015    FNEW     3   6      ; hook_container_spec.lua:39
0016    CALL     2   2   2
0017    TSETS    2   1   4  ; "onEvent"
0018    GGET     2   5      ; "spy"
0019    TGETS    2   2   2  ; "new"
0020    FNEW     3   7      ; hook_container_spec.lua:40
0021    CALL     2   2   2
0022    TSETS    2   1   8  ; "onCloseWidget"
0023    MOV      4   0
0024    TGETS    3   0   9  ; "registerWidget"
0025    KSTR     5  10      ; "Event"
0026    MOV      6   1
0027    CALL     3   1   4
0028    GGET     3  11      ; "assert"
0029    TGETS    3   3  12  ; "are"
0030    TGETS    3   3  13  ; "equal"
0031    MOV      5   0
0032    TGETS    4   0  14  ; "execute"
0033    KSTR     6  10      ; "Event"
0034    TDUP     7  15
0035    CALL     4   2   4
0036    KSHORT   5   1
0037    CALL     3   1   3
0038    GGET     3  11      ; "assert"
0039    TGETS    3   3   5  ; "spy"
0040    TGETS    4   1   4  ; "onEvent"
0041    CALL     3   2   2
0042    TGETS    3   3  16  ; "was_called"
0043    KSHORT   4   1
0044    CALL     3   1   2
0045    GGET     3  11      ; "assert"
0046    TGETS    3   3   5  ; "spy"
0047    TGETS    4   1   4  ; "onEvent"
0048    CALL     3   2   2
0049    TGETS    3   3  17  ; "was_called_with"
0050    MOV      4   1
0051    TDUP     5  18
0052    CALL     3   1   3
0053    MOV      4   1
0054    TGETS    3   1   8  ; "onCloseWidget"
0055    CALL     3   1   2
0056    GGET     3  11      ; "assert"
0057    TGETS    3   3   5  ; "spy"
0058    MOV      4   2
0059    CALL     3   2   2
0060    TGETS    3   3  16  ; "was_called"
0061    KSHORT   4   1
0062    CALL     3   1   2
0063    GGET     3  11      ; "assert"
0064    TGETS    3   3   5  ; "spy"
0065    MOV      4   2
0066    CALL     3   2   2
0067    TGETS    3   3  17  ; "was_called_with"
0068    MOV      4   1
0069    CALL     3   1   2
0070    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:57-61
0001    GGET     2   0      ; "assert"
0002    TGETS    2   2   1  ; "is"
0003    TGETS    2   2   2  ; "truthy"
0004    ISNEP    0   0
0005    JMP      3 => 0008
0006    KPRI     3   1
0007    JMP      4 => 0009
0008 => KPRI     3   2
0009 => CALL     2   1   2
0010    GGET     2   0      ; "assert"
0011    TGETS    2   2   3  ; "are"
0012    TGETS    2   2   4  ; "same"
0013    MOV      3   1
0014    TDUP     4   5
0015    CALL     2   1   3
0016    USETP    0   2      ; onEvent_called
0017    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:62-65
0001    GGET     1   0      ; "assert"
0002    TGETS    1   1   1  ; "is"
0003    TGETS    1   1   2  ; "truthy"
0004    ISNEP    0   0
0005    JMP      2 => 0008
0006    KPRI     2   1
0007    JMP      3 => 0009
0008 => KPRI     2   2
0009 => CALL     1   1   2
0010    USETP    0   2      ; onCloseWidget_called
0011    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:52-71
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "ui/hook_container"
0003    CALL     0   2   2
0004    MOV      1   0
0005    TGETS    0   0   2  ; "new"
0006    CALL     0   2   2
0007    GGET     1   0      ; "require"
0008    KSTR     2   3      ; "ui/widget/widget"
0009    CALL     1   2   2
0010    MOV      2   1
0011    TGETS    1   1   2  ; "new"
0012    CALL     1   2   2
0013    KPRI     2   1
0014    KPRI     3   1
0015    FNEW     4   5      ; hook_container_spec.lua:57
0016    TSETS    4   1   4  ; "onEvent"
0017    FNEW     4   7      ; hook_container_spec.lua:62
0018    TSETS    4   1   6  ; "onCloseWidget"
0019    MOV      5   0
0020    TGETS    4   0   8  ; "registerWidget"
0021    KSTR     6   9      ; "Event"
0022    MOV      7   1
0023    CALL     4   1   4
0024    GGET     4  10      ; "assert"
0025    TGETS    4   4  11  ; "are"
0026    TGETS    4   4  12  ; "equal"
0027    MOV      6   0
0028    TGETS    5   0  13  ; "execute"
0029    KSTR     7   9      ; "Event"
0030    TDUP     8  14
0031    CALL     5   2   4
0032    KSHORT   6   1
0033    CALL     4   1   3
0034    MOV      5   1
0035    TGETS    4   1   6  ; "onCloseWidget"
0036    CALL     4   1   2
0037    GGET     4  10      ; "assert"
0038    TGETS    4   4  15  ; "is"
0039    TGETS    4   4  16  ; "truthy"
0040    MOV      5   2
0041    CALL     4   1   2
0042    GGET     4  10      ; "assert"
0043    TGETS    4   4  15  ; "is"
0044    TGETS    4   4  16  ; "truthy"
0045    MOV      5   3
0046    CALL     4   1   2
0047    UCLO     0 => 0048
0048 => RET0     0   1

-- BYTECODE -- hook_container_spec.lua:1-72
0001    GGET     0   0      ; "setup"
0002    FNEW     1   1      ; hook_container_spec.lua:2
0003    CALL     0   1   2
0004    GGET     0   2      ; "it"
0005    KSTR     1   3      ; "should register and unregister functions"
0006    FNEW     2   4      ; hook_container_spec.lua:6
0007    CALL     0   1   3
0008    GGET     0   2      ; "it"
0009    KSTR     1   5      ; "should register and automatically unregi"~
0010    FNEW     2   6      ; hook_container_spec.lua:36
0011    CALL     0   1   3
0012    GGET     0   2      ; "it"
0013    KSTR     1   7      ; "should pass widget itself"
0014    FNEW     2   8      ; hook_container_spec.lua:52
0015    CALL     0   1   3
0016    RET0     0   1

-- BYTECODE -- hook_container_spec.lua:0-73
0001    GGET     0   0      ; "describe"
0002    KSTR     1   1      ; "HookContainer tests"
0003    FNEW     2   2      ; hook_container_spec.lua:1
0004    CALL     0   1   3
0005    RET0     0   1

