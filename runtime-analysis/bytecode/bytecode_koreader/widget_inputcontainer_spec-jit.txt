-- BYTECODE -- widget_inputcontainer_spec.lua:3-7
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "commonrequire"
0003    CALL     0   1   2
0004    GGET     0   0      ; "require"
0005    KSTR     1   2      ; "ui/widget/container/inputcontainer"
0006    CALL     0   2   2
0007    USETV    0   0      ; InputContainer
0008    GGET     0   0      ; "require"
0009    KSTR     1   3      ; "device"
0010    CALL     0   2   2
0011    TGETS    0   0   4  ; "screen"
0012    USETV    1   0      ; Screen
0013    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:20-20
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:28-28
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:9-42
0001    UGET     0   0      ; InputContainer
0002    MOV      1   0
0003    TGETS    0   0   0  ; "new"
0004    TNEW     2   0
0005    CALL     0   2   3
0006    GGET     1   1      ; "assert"
0007    TGETS    1   1   2  ; "is"
0008    TGETS    1   1   3  ; "same"
0009    TGETS    2   0   4  ; "_ordered_touch_zones"
0010    LEN      2   2
0011    KSHORT   3   0
0012    CALL     1   1   3
0013    MOV      2   0
0014    TGETS    1   0   5  ; "registerTouchZones"
0015    TNEW     3   3
0016    TDUP     4   6
0017    TDUP     5   7
0018    TSETS    5   4   8  ; "screen_zone"
0019    FNEW     5   9      ; widget_inputcontainer_spec.lua:20
0020    TSETS    5   4  10  ; "handler"
0021    TSETB    4   3   1
0022    TDUP     4  11
0023    TDUP     5  12
0024    TSETS    5   4   8  ; "screen_zone"
0025    FNEW     5  13      ; widget_inputcontainer_spec.lua:28
0026    TSETS    5   4  10  ; "handler"
0027    TSETB    4   3   2
0028    CALL     1   1   3
0029    UGET     1   1      ; Screen
0030    MOV      2   1
0031    TGETS    1   1  14  ; "getWidth"
0032    CALL     1   2   2
0033    UGET     2   1      ; Screen
0034    MOV      3   2
0035    TGETS    2   2  15  ; "getHeight"
0036    CALL     2   2   2
0037    GGET     3   1      ; "assert"
0038    TGETS    3   3   2  ; "is"
0039    TGETS    3   3   3  ; "same"
0040    TGETS    4   0   4  ; "_ordered_touch_zones"
0041    LEN      4   4
0042    KSHORT   5   2
0043    CALL     3   1   3
0044    GGET     3   1      ; "assert"
0045    TGETS    3   3   2  ; "is"
0046    TGETS    3   3   3  ; "same"
0047    KSTR     4  16      ; "foo"
0048    TGETS    5   0   4  ; "_ordered_touch_zones"
0049    TGETB    5   5   1
0050    TGETS    5   5  17  ; "def"
0051    TGETS    5   5  18  ; "id"
0052    CALL     3   1   3
0053    GGET     3   1      ; "assert"
0054    TGETS    3   3   2  ; "is"
0055    TGETS    3   3   3  ; "same"
0056    TGETS    4   0   4  ; "_ordered_touch_zones"
0057    TGETB    4   4   1
0058    TGETS    4   4  17  ; "def"
0059    TGETS    4   4  10  ; "handler"
0060    TGETS    5   0   4  ; "_ordered_touch_zones"
0061    TGETB    5   5   1
0062    TGETS    5   5  10  ; "handler"
0063    CALL     3   1   3
0064    GGET     3   1      ; "assert"
0065    TGETS    3   3   2  ; "is"
0066    TGETS    3   3   3  ; "same"
0067    KSTR     4  19      ; "bar"
0068    TGETS    5   0   4  ; "_ordered_touch_zones"
0069    TGETB    5   5   2
0070    TGETS    5   5  17  ; "def"
0071    TGETS    5   5  18  ; "id"
0072    CALL     3   1   3
0073    GGET     3   1      ; "assert"
0074    TGETS    3   3   2  ; "is"
0075    TGETS    3   3   3  ; "same"
0076    KSTR     4  20      ; "tap"
0077    TGETS    5   0   4  ; "_ordered_touch_zones"
0078    TGETB    5   5   2
0079    TGETS    5   5  21  ; "gs_range"
0080    TGETS    5   5  22  ; "ges"
0081    CALL     3   1   3
0082    GGET     3   1      ; "assert"
0083    TGETS    3   3   2  ; "is"
0084    TGETS    3   3   3  ; "same"
0085    KSHORT   4   0
0086    TGETS    5   0   4  ; "_ordered_touch_zones"
0087    TGETB    5   5   2
0088    TGETS    5   5  21  ; "gs_range"
0089    TGETS    5   5  23  ; "range"
0090    TGETS    5   5  24  ; "x"
0091    CALL     3   1   3
0092    GGET     3   1      ; "assert"
0093    TGETS    3   3   2  ; "is"
0094    TGETS    3   3   3  ; "same"
0095    MULVN    4   2   0  ; 0.1
0096    TGETS    5   0   4  ; "_ordered_touch_zones"
0097    TGETB    5   5   2
0098    TGETS    5   5  21  ; "gs_range"
0099    TGETS    5   5  23  ; "range"
0100    TGETS    5   5  25  ; "y"
0101    CALL     3   1   3
0102    GGET     3   1      ; "assert"
0103    TGETS    3   3   2  ; "is"
0104    TGETS    3   3   3  ; "same"
0105    DIVVN    4   1   1  ; 2
0106    TGETS    5   0   4  ; "_ordered_touch_zones"
0107    TGETB    5   5   2
0108    TGETS    5   5  21  ; "gs_range"
0109    TGETS    5   5  23  ; "range"
0110    TGETS    5   5  26  ; "w"
0111    CALL     3   1   3
0112    GGET     3   1      ; "assert"
0113    TGETS    3   3   2  ; "is"
0114    TGETS    3   3   3  ; "same"
0115    MOV      4   2
0116    TGETS    5   0   4  ; "_ordered_touch_zones"
0117    TGETB    5   5   2
0118    TGETS    5   5  21  ; "gs_range"
0119    TGETS    5   5  23  ; "range"
0120    TGETS    5   5  27  ; "h"
0121    CALL     3   1   3
0122    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:53-53
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:61-61
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:70-70
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:44-76
0001    UGET     0   0      ; InputContainer
0002    MOV      1   0
0003    TGETS    0   0   0  ; "new"
0004    TNEW     2   0
0005    CALL     0   2   3
0006    MOV      2   0
0007    TGETS    1   0   1  ; "registerTouchZones"
0008    TNEW     3   4
0009    TDUP     4   2
0010    TDUP     5   3
0011    TSETS    5   4   4  ; "screen_zone"
0012    FNEW     5   5      ; widget_inputcontainer_spec.lua:53
0013    TSETS    5   4   6  ; "handler"
0014    TSETB    4   3   1
0015    TDUP     4   7
0016    TDUP     5   8
0017    TSETS    5   4   4  ; "screen_zone"
0018    FNEW     5   9      ; widget_inputcontainer_spec.lua:61
0019    TSETS    5   4   6  ; "handler"
0020    TSETB    4   3   2
0021    TDUP     4  10
0022    TDUP     5  11
0023    TSETS    5   4   4  ; "screen_zone"
0024    TDUP     5  12
0025    TSETS    5   4  13  ; "overrides"
0026    FNEW     5  14      ; widget_inputcontainer_spec.lua:70
0027    TSETS    5   4   6  ; "handler"
0028    TSETB    4   3   3
0029    CALL     1   1   3
0030    GGET     1  15      ; "assert"
0031    TGETS    1   1  16  ; "is"
0032    TGETS    1   1  17  ; "same"
0033    TGETS    2   0  18  ; "_ordered_touch_zones"
0034    TGETB    2   2   1
0035    TGETS    2   2  19  ; "def"
0036    TGETS    2   2  20  ; "id"
0037    KSTR     3  21      ; "baz"
0038    CALL     1   1   3
0039    GGET     1  15      ; "assert"
0040    TGETS    1   1  16  ; "is"
0041    TGETS    1   1  17  ; "same"
0042    TGETS    2   0  18  ; "_ordered_touch_zones"
0043    TGETB    2   2   2
0044    TGETS    2   2  19  ; "def"
0045    TGETS    2   2  20  ; "id"
0046    KSTR     3  22      ; "foo"
0047    CALL     1   1   3
0048    GGET     1  15      ; "assert"
0049    TGETS    1   1  16  ; "is"
0050    TGETS    1   1  17  ; "same"
0051    TGETS    2   0  18  ; "_ordered_touch_zones"
0052    TGETB    2   2   3
0053    TGETS    2   2  19  ; "def"
0054    TGETS    2   2  20  ; "id"
0055    KSTR     3  23      ; "bar"
0056    CALL     1   1   3
0057    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:89-89
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:96-96
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:103-103
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:109-109
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:115-115
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:122-122
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:128-128
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:134-134
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:141-141
0001    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:78-154
0001    UGET     0   0      ; InputContainer
0002    MOV      1   0
0003    TGETS    0   0   0  ; "new"
0004    TNEW     2   0
0005    CALL     0   2   3
0006    TDUP     1   1
0007    MOV      3   0
0008    TGETS    2   0   2  ; "registerTouchZones"
0009    TNEW     4  10
0010    TDUP     5   3
0011    TSETS    1   5   4  ; "screen_zone"
0012    TDUP     6   5
0013    TSETS    6   5   6  ; "overrides"
0014    FNEW     6   7      ; widget_inputcontainer_spec.lua:89
0015    TSETS    6   5   8  ; "handler"
0016    TSETB    5   4   1
0017    TDUP     5   9
0018    TSETS    1   5   4  ; "screen_zone"
0019    TDUP     6  10
0020    TSETS    6   5   6  ; "overrides"
0021    FNEW     6  11      ; widget_inputcontainer_spec.lua:96
0022    TSETS    6   5   8  ; "handler"
0023    TSETB    5   4   2
0024    TDUP     5  12
0025    TSETS    1   5   4  ; "screen_zone"
0026    TDUP     6  13
0027    TSETS    6   5   6  ; "overrides"
0028    FNEW     6  14      ; widget_inputcontainer_spec.lua:103
0029    TSETS    6   5   8  ; "handler"
0030    TSETB    5   4   3
0031    TDUP     5  15
0032    TSETS    1   5   4  ; "screen_zone"
0033    FNEW     6  16      ; widget_inputcontainer_spec.lua:109
0034    TSETS    6   5   8  ; "handler"
0035    TSETB    5   4   4
0036    TDUP     5  17
0037    TSETS    1   5   4  ; "screen_zone"
0038    FNEW     6  18      ; widget_inputcontainer_spec.lua:115
0039    TSETS    6   5   8  ; "handler"
0040    TSETB    5   4   5
0041    TDUP     5  19
0042    TSETS    1   5   4  ; "screen_zone"
0043    FNEW     6  20      ; widget_inputcontainer_spec.lua:122
0044    TSETS    6   5   8  ; "handler"
0045    TSETB    5   4   6
0046    TDUP     5  21
0047    TSETS    1   5   4  ; "screen_zone"
0048    FNEW     6  22      ; widget_inputcontainer_spec.lua:128
0049    TSETS    6   5   8  ; "handler"
0050    TSETB    5   4   7
0051    TDUP     5  23
0052    TSETS    1   5   4  ; "screen_zone"
0053    FNEW     6  24      ; widget_inputcontainer_spec.lua:134
0054    TSETS    6   5   8  ; "handler"
0055    TSETB    5   4   8
0056    TDUP     5  25
0057    TDUP     6  26
0058    TSETS    6   5   6  ; "overrides"
0059    TSETS    1   5   4  ; "screen_zone"
0060    FNEW     6  27      ; widget_inputcontainer_spec.lua:141
0061    TSETS    6   5   8  ; "handler"
0062    TSETB    5   4   9
0063    CALL     2   1   3
0064    GGET     2  28      ; "assert"
0065    TGETS    2   2  29  ; "is"
0066    TGETS    2   2  30  ; "same"
0067    KSTR     3  31      ; "readerfooter_tap"
0068    TGETS    4   0  32  ; "_ordered_touch_zones"
0069    TGETB    4   4   1
0070    TGETS    4   4  33  ; "def"
0071    TGETS    4   4  34  ; "id"
0072    CALL     2   1   3
0073    GGET     2  28      ; "assert"
0074    TGETS    2   2  29  ; "is"
0075    TGETS    2   2  30  ; "same"
0076    KSTR     3  35      ; "readerhighlight_tap"
0077    TGETS    4   0  32  ; "_ordered_touch_zones"
0078    TGETB    4   4   2
0079    TGETS    4   4  33  ; "def"
0080    TGETS    4   4  34  ; "id"
0081    CALL     2   1   3
0082    GGET     2  28      ; "assert"
0083    TGETS    2   2  29  ; "is"
0084    TGETS    2   2  30  ; "same"
0085    KSTR     3  36      ; "readermenu_tap"
0086    TGETS    4   0  32  ; "_ordered_touch_zones"
0087    TGETB    4   4   3
0088    TGETS    4   4  33  ; "def"
0089    TGETS    4   4  34  ; "id"
0090    CALL     2   1   3
0091    GGET     2  28      ; "assert"
0092    TGETS    2   2  29  ; "is"
0093    TGETS    2   2  30  ; "same"
0094    KSTR     3  37      ; "tap_backward"
0095    TGETS    4   0  32  ; "_ordered_touch_zones"
0096    TGETB    4   4   4
0097    TGETS    4   4  33  ; "def"
0098    TGETS    4   4  34  ; "id"
0099    CALL     2   1   3
0100    GGET     2  28      ; "assert"
0101    TGETS    2   2  29  ; "is"
0102    TGETS    2   2  30  ; "same"
0103    KSTR     3  38      ; "readerhighlight_hold_pan"
0104    TGETS    4   0  32  ; "_ordered_touch_zones"
0105    TGETB    4   4   5
0106    TGETS    4   4  33  ; "def"
0107    TGETS    4   4  34  ; "id"
0108    CALL     2   1   3
0109    GGET     2  28      ; "assert"
0110    TGETS    2   2  29  ; "is"
0111    TGETS    2   2  30  ; "same"
0112    KSTR     3  39      ; "readerfooter_hold"
0113    TGETS    4   0  32  ; "_ordered_touch_zones"
0114    TGETB    4   4   6
0115    TGETS    4   4  33  ; "def"
0116    TGETS    4   4  34  ; "id"
0117    CALL     2   1   3
0118    GGET     2  28      ; "assert"
0119    TGETS    2   2  29  ; "is"
0120    TGETS    2   2  30  ; "same"
0121    KSTR     3  40      ; "readerhighlight_hold"
0122    TGETS    4   0  32  ; "_ordered_touch_zones"
0123    TGETB    4   4   7
0124    TGETS    4   4  33  ; "def"
0125    TGETS    4   4  34  ; "id"
0126    CALL     2   1   3
0127    GGET     2  28      ; "assert"
0128    TGETS    2   2  29  ; "is"
0129    TGETS    2   2  30  ; "same"
0130    KSTR     3  41      ; "tap_forward"
0131    TGETS    4   0  32  ; "_ordered_touch_zones"
0132    TGETB    4   4   8
0133    TGETS    4   4  33  ; "def"
0134    TGETS    4   4  34  ; "id"
0135    CALL     2   1   3
0136    GGET     2  28      ; "assert"
0137    TGETS    2   2  29  ; "is"
0138    TGETS    2   2  30  ; "same"
0139    KSTR     3  42      ; "readerhighlight_hold_release"
0140    TGETS    4   0  32  ; "_ordered_touch_zones"
0141    TGETB    4   4   9
0142    TGETS    4   4  33  ; "def"
0143    TGETS    4   4  34  ; "id"
0144    CALL     2   1   3
0145    RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:1-155
0001    KNIL     0   1
0002    GGET     2   0      ; "setup"
0003    FNEW     3   1      ; widget_inputcontainer_spec.lua:3
0004    CALL     2   1   2
0005    GGET     2   2      ; "it"
0006    KSTR     3   3      ; "should register touch zones"
0007    FNEW     4   4      ; widget_inputcontainer_spec.lua:9
0008    CALL     2   1   3
0009    GGET     2   2      ; "it"
0010    KSTR     3   5      ; "should support overrides for touch zones"
0011    FNEW     4   6      ; widget_inputcontainer_spec.lua:44
0012    CALL     2   1   3
0013    GGET     2   2      ; "it"
0014    KSTR     3   7      ; "should support indirect overrides for to"~
0015    FNEW     4   8      ; widget_inputcontainer_spec.lua:78
0016    CALL     2   1   3
0017    UCLO     0 => 0018
0018 => RET0     0   1

-- BYTECODE -- widget_inputcontainer_spec.lua:0-156
0001    GGET     0   0      ; "describe"
0002    KSTR     1   1      ; "InputContainer widget"
0003    FNEW     2   2      ; widget_inputcontainer_spec.lua:1
0004    CALL     0   1   3
0005    RET0     0   1

