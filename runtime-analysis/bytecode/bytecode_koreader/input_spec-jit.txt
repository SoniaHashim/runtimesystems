-- BYTECODE -- input_spec.lua:3-6
0001    GGET     0   0      ; "require"
0002    KSTR     1   1      ; "commonrequire"
0003    CALL     0   1   2
0004    GGET     0   0      ; "require"
0005    KSTR     1   2      ; "device/input"
0006    CALL     0   2   2
0007    USETV    0   0      ; Input
0008    RET0     0   1

-- BYTECODE -- input_spec.lua:40-126
0001    KPRI     0   0
0002    TDUP     0   0
0003    UGET     1   0      ; Input
0004    MOV      2   1
0005    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0006    MOV      3   0
0007    CALL     1   1   3
0008    GGET     1   2      ; "assert"
0009    TGETS    1   1   3  ; "is_equal"
0010    KSHORT   2   1
0011    UGET     3   0      ; Input
0012    TGETS    3   3   4  ; "cur_slot"
0013    CALL     1   1   3
0014    TDUP     0   5
0015    UGET     1   0      ; Input
0016    MOV      2   1
0017    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0018    MOV      3   0
0019    CALL     1   1   3
0020    GGET     1   2      ; "assert"
0021    TGETS    1   1   3  ; "is_equal"
0022    KSHORT   2   1
0023    UGET     3   0      ; Input
0024    TGETS    3   3   4  ; "cur_slot"
0025    CALL     1   1   3
0026    TDUP     0   6
0027    UGET     1   0      ; Input
0028    MOV      2   1
0029    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0030    MOV      3   0
0031    CALL     1   1   3
0032    GGET     1   2      ; "assert"
0033    TGETS    1   1   3  ; "is_equal"
0034    KSHORT   2   1
0035    UGET     3   0      ; Input
0036    TGETS    3   3   4  ; "cur_slot"
0037    CALL     1   1   3
0038    TDUP     0   7
0039    UGET     1   0      ; Input
0040    MOV      2   1
0041    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0042    MOV      3   0
0043    CALL     1   1   3
0044    GGET     1   2      ; "assert"
0045    TGETS    1   1   3  ; "is_equal"
0046    KSHORT   2   1
0047    UGET     3   0      ; Input
0048    TGETS    3   3   4  ; "cur_slot"
0049    CALL     1   1   3
0050    TDUP     0   8
0051    UGET     1   0      ; Input
0052    MOV      2   1
0053    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0054    MOV      3   0
0055    CALL     1   1   3
0056    GGET     1   2      ; "assert"
0057    TGETS    1   1   3  ; "is_equal"
0058    KSHORT   2   1
0059    UGET     3   0      ; Input
0060    TGETS    3   3   4  ; "cur_slot"
0061    CALL     1   1   3
0062    TDUP     0   9
0063    UGET     1   0      ; Input
0064    MOV      2   1
0065    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0066    MOV      3   0
0067    CALL     1   1   3
0068    GGET     1   2      ; "assert"
0069    TGETS    1   1   3  ; "is_equal"
0070    KSHORT   2   2
0071    UGET     3   0      ; Input
0072    TGETS    3   3   4  ; "cur_slot"
0073    CALL     1   1   3
0074    TDUP     0  10
0075    UGET     1   0      ; Input
0076    MOV      2   1
0077    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0078    MOV      3   0
0079    CALL     1   1   3
0080    GGET     1   2      ; "assert"
0081    TGETS    1   1   3  ; "is_equal"
0082    KSHORT   2   2
0083    UGET     3   0      ; Input
0084    TGETS    3   3   4  ; "cur_slot"
0085    CALL     1   1   3
0086    TDUP     0  11
0087    UGET     1   0      ; Input
0088    MOV      2   1
0089    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0090    MOV      3   0
0091    CALL     1   1   3
0092    GGET     1   2      ; "assert"
0093    TGETS    1   1   3  ; "is_equal"
0094    KSHORT   2   2
0095    UGET     3   0      ; Input
0096    TGETS    3   3   4  ; "cur_slot"
0097    CALL     1   1   3
0098    TDUP     0  12
0099    UGET     1   0      ; Input
0100    MOV      2   1
0101    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0102    MOV      3   0
0103    CALL     1   1   3
0104    GGET     1   2      ; "assert"
0105    TGETS    1   1   3  ; "is_equal"
0106    KSHORT   2   2
0107    UGET     3   0      ; Input
0108    TGETS    3   3   4  ; "cur_slot"
0109    CALL     1   1   3
0110    TDUP     0  13
0111    UGET     1   0      ; Input
0112    MOV      2   1
0113    TGETS    1   1   1  ; "handleTouchEvPhoenix"
0114    MOV      3   0
0115    CALL     1   1   3
0116    GGET     1   2      ; "assert"
0117    TGETS    1   1   3  ; "is_equal"
0118    KSHORT   2   2
0119    UGET     3   0      ; Input
0120    TGETS    3   3   4  ; "cur_slot"
0121    CALL     1   1   3
0122    RET0     0   1

-- BYTECODE -- input_spec.lua:8-127
0001    GGET     0   0      ; "it"
0002    KSTR     1   1      ; "should set cur_slot correctly"
0003    FNEW     2   2      ; input_spec.lua:40
0004    CALL     0   1   3
0005    RET0     0   1

-- BYTECODE -- input_spec.lua:1-129
0001    KPRI     0   0
0002    GGET     1   0      ; "setup"
0003    FNEW     2   1      ; input_spec.lua:3
0004    CALL     1   1   2
0005    GGET     1   2      ; "describe"
0006    KSTR     2   3      ; "handleTouchEvPhoenix"
0007    FNEW     3   4      ; input_spec.lua:8
0008    CALL     1   1   3
0009    UCLO     0 => 0010
0010 => RET0     0   1

-- BYTECODE -- input_spec.lua:0-130
0001    GGET     0   0      ; "describe"
0002    KSTR     1   1      ; "input module"
0003    FNEW     2   2      ; input_spec.lua:1
0004    CALL     0   1   3
0005    RET0     0   1

