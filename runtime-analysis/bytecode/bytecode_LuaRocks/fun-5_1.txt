
main <./fun.lua:0,0> (32 instructions, 128 bytes at 0x7fde1a4068a0)
0+ params, 3 slots, 0 upvalues, 2 locals, 13 constants, 11 functions
	1	[3]	NEWTABLE 	0 0 0
	2	[5]	GETGLOBAL	1 -1	; table
	3	[5]	GETTABLE 	1 1 -2	; "unpack"
	4	[5]	TEST     	1 0 1
	5	[5]	JMP      	1	; to 7
	6	[5]	GETGLOBAL	1 -2	; unpack
	7	[17]	CLOSURE  	2 0	; 0x7fde1a406aa0
	8	[7]	SETTABLE 	0 -3 2	; "concat" -
	9	[26]	CLOSURE  	2 1	; 0x7fde1a406f40
	10	[19]	SETTABLE 	0 -4 2	; "contains" -
	11	[34]	CLOSURE  	2 2	; 0x7fde1a4075f0
	12	[28]	SETTABLE 	0 -5 2	; "map" -
	13	[45]	CLOSURE  	2 3	; 0x7fde1a406600
	14	[36]	SETTABLE 	0 -6 2	; "filter" -
	15	[51]	CLOSURE  	2 4	; 0x7fde1a407d60
	16	[51]	MOVE     	0 0
	17	[47]	SETTABLE 	0 -7 2	; "traverse" -
	18	[61]	CLOSURE  	2 5	; 0x7fde1a4089e0
	19	[53]	SETTABLE 	0 -8 2	; "reverse_in" -
	20	[66]	CLOSURE  	2 6	; 0x7fde1a406b20
	21	[63]	SETTABLE 	0 -9 2	; "sort_in" -
	22	[72]	CLOSURE  	2 7	; 0x7fde1a408e20
	23	[68]	SETTABLE 	0 -10 2	; "flip" -
	24	[90]	CLOSURE  	2 8	; 0x7fde1a409270
	25	[74]	SETTABLE 	0 -11 2	; "find" -
	26	[120]	CLOSURE  	2 9	; 0x7fde1a4094a0
	27	[120]	MOVE     	0 1
	28	[92]	SETTABLE 	0 -12 2	; "partial" -
	29	[142]	CLOSURE  	2 10	; 0x7fde1a408140
	30	[122]	SETTABLE 	0 -13 2	; "memoize" -
	31	[144]	RETURN   	0 2
	32	[144]	RETURN   	0 1

function <./fun.lua:7,17> (19 instructions, 76 bytes at 0x7fde1a406aa0)
2 params, 10 slots, 0 upvalues, 12 locals, 1 constant, 0 functions
	1	[8]	NEWTABLE 	2 0 0
	2	[9]	LEN      	3 0
	3	[10]	LOADK    	4 -1	; 1
	4	[10]	MOVE     	5 3
	5	[10]	LOADK    	6 -1	; 1
	6	[10]	FORPREP  	4 2	; to 9
	7	[11]	GETTABLE 	8 0 7
	8	[11]	SETTABLE 	2 7 8
	9	[10]	FORLOOP  	4 -3	; to 7
	10	[13]	LOADK    	4 -1	; 1
	11	[13]	LEN      	5 1
	12	[13]	LOADK    	6 -1	; 1
	13	[13]	FORPREP  	4 3	; to 17
	14	[14]	ADD      	8 7 3
	15	[14]	GETTABLE 	9 1 7
	16	[14]	SETTABLE 	2 8 9
	17	[13]	FORLOOP  	4 -4	; to 14
	18	[16]	RETURN   	2 2
	19	[17]	RETURN   	0 1

function <./fun.lua:19,26> (13 instructions, 52 bytes at 0x7fde1a406f40)
2 params, 8 slots, 0 upvalues, 7 locals, 1 constant, 0 functions
	1	[20]	GETGLOBAL	2 -1	; ipairs
	2	[20]	MOVE     	3 0
	3	[20]	CALL     	2 2 4
	4	[20]	JMP      	4	; to 9
	5	[21]	EQ       	0 1 6
	6	[21]	JMP      	2	; to 9
	7	[22]	LOADBOOL 	7 1 0
	8	[22]	RETURN   	7 2
	9	[20]	TFORLOOP 	2 2
	10	[23]	JMP      	-6	; to 5
	11	[25]	LOADBOOL 	2 0 0
	12	[25]	RETURN   	2 2
	13	[26]	RETURN   	0 1

function <./fun.lua:28,34> (12 instructions, 48 bytes at 0x7fde1a4075f0)
2 params, 9 slots, 0 upvalues, 7 locals, 1 constant, 0 functions
	1	[29]	NEWTABLE 	2 0 0
	2	[30]	LOADK    	3 -1	; 1
	3	[30]	LEN      	4 0
	4	[30]	LOADK    	5 -1	; 1
	5	[30]	FORPREP  	3 4	; to 10
	6	[31]	MOVE     	7 1
	7	[31]	GETTABLE 	8 0 6
	8	[31]	CALL     	7 2 2
	9	[31]	SETTABLE 	2 6 7
	10	[30]	FORLOOP  	3 -5	; to 6
	11	[33]	RETURN   	2 2
	12	[34]	RETURN   	0 1

function <./fun.lua:36,45> (17 instructions, 68 bytes at 0x7fde1a406600)
2 params, 10 slots, 0 upvalues, 8 locals, 1 constant, 0 functions
	1	[37]	NEWTABLE 	2 0 0
	2	[38]	LOADK    	3 -1	; 1
	3	[38]	LEN      	4 0
	4	[38]	LOADK    	5 -1	; 1
	5	[38]	FORPREP  	3 9	; to 15
	6	[39]	GETTABLE 	7 0 6
	7	[40]	MOVE     	8 1
	8	[40]	MOVE     	9 7
	9	[40]	CALL     	8 2 2
	10	[40]	TEST     	8 0 0
	11	[40]	JMP      	3	; to 15
	12	[41]	LEN      	8 2
	13	[41]	ADD      	8 8 -1	; - 1
	14	[41]	SETTABLE 	2 8 7
	15	[38]	FORLOOP  	3 -10	; to 6
	16	[44]	RETURN   	2 2
	17	[45]	RETURN   	0 1

function <./fun.lua:47,51> (9 instructions, 36 bytes at 0x7fde1a407d60)
2 params, 5 slots, 1 upvalue, 2 locals, 1 constant, 1 function
	1	[48]	GETUPVAL 	2 0	; fun
	2	[48]	GETTABLE 	2 2 -1	; "map"
	3	[48]	MOVE     	3 0
	4	[50]	CLOSURE  	4 0	; 0x7fde1a408340
	5	[50]	GETUPVAL 	0 0	; fun
	6	[50]	MOVE     	0 1
	7	[48]	TAILCALL 	2 3 0
	8	[50]	RETURN   	2 0
	9	[51]	RETURN   	0 1

function <./fun.lua:48,50> (17 instructions, 68 bytes at 0x7fde1a408340)
1 param, 4 slots, 2 upvalues, 1 local, 3 constants, 0 functions
	1	[49]	GETGLOBAL	1 -1	; type
	2	[49]	MOVE     	2 0
	3	[49]	CALL     	1 2 2
	4	[49]	EQ       	0 1 -2	; - "table"
	5	[49]	JMP      	7	; to 13
	6	[49]	GETUPVAL 	1 0	; fun
	7	[49]	GETTABLE 	1 1 -3	; "traverse"
	8	[49]	MOVE     	2 0
	9	[49]	GETUPVAL 	3 1	; f
	10	[49]	CALL     	1 3 2
	11	[49]	TEST     	1 0 1
	12	[49]	JMP      	3	; to 16
	13	[49]	GETUPVAL 	1 1	; f
	14	[49]	MOVE     	2 0
	15	[49]	CALL     	1 2 2
	16	[49]	RETURN   	1 2
	17	[50]	RETURN   	0 1

function <./fun.lua:53,61> (19 instructions, 76 bytes at 0x7fde1a4089e0)
1 param, 9 slots, 0 upvalues, 9 locals, 4 constants, 0 functions
	1	[54]	LOADK    	1 -1	; 1
	2	[54]	GETGLOBAL	2 -2	; math
	3	[54]	GETTABLE 	2 2 -3	; "floor"
	4	[54]	LEN      	3 0
	5	[54]	DIV      	3 3 -4	; - 2
	6	[54]	CALL     	2 2 2
	7	[54]	LOADK    	3 -1	; 1
	8	[54]	FORPREP  	1 8	; to 17
	9	[55]	MOVE     	5 4
	10	[55]	LEN      	6 0
	11	[55]	SUB      	6 6 4
	12	[55]	ADD      	6 6 -1	; - 1
	13	[56]	GETTABLE 	7 0 5
	14	[56]	GETTABLE 	8 0 6
	15	[57]	SETTABLE 	0 5 8
	16	[58]	SETTABLE 	0 6 7
	17	[54]	FORLOOP  	1 -9	; to 9
	18	[60]	RETURN   	0 2
	19	[61]	RETURN   	0 1

function <./fun.lua:63,66> (7 instructions, 28 bytes at 0x7fde1a406b20)
2 params, 5 slots, 0 upvalues, 2 locals, 2 constants, 0 functions
	1	[64]	GETGLOBAL	2 -1	; table
	2	[64]	GETTABLE 	2 2 -2	; "sort"
	3	[64]	MOVE     	3 0
	4	[64]	MOVE     	4 1
	5	[64]	CALL     	2 3 1
	6	[65]	RETURN   	0 2
	7	[66]	RETURN   	0 1

function <./fun.lua:68,72> (4 instructions, 16 bytes at 0x7fde1a408e20)
1 param, 2 slots, 0 upvalues, 1 local, 0 constants, 1 function
	1	[71]	CLOSURE  	1 0	; 0x7fde1a4091b0
	2	[71]	MOVE     	0 0
	3	[71]	RETURN   	1 2
	4	[72]	RETURN   	0 1

function <./fun.lua:69,71> (6 instructions, 24 bytes at 0x7fde1a4091b0)
2 params, 5 slots, 1 upvalue, 2 locals, 0 constants, 0 functions
	1	[70]	GETUPVAL 	2 0	; f
	2	[70]	MOVE     	3 1
	3	[70]	MOVE     	4 0
	4	[70]	TAILCALL 	2 3 0
	5	[70]	RETURN   	2 0
	6	[71]	RETURN   	0 1

function <./fun.lua:74,90> (35 instructions, 140 bytes at 0x7fde1a409270)
2 params, 9 slots, 0 upvalues, 13 locals, 4 constants, 0 functions
	1	[75]	GETGLOBAL	2 -1	; type
	2	[75]	MOVE     	3 0
	3	[75]	CALL     	2 2 2
	4	[75]	EQ       	0 2 -2	; - "function"
	5	[75]	JMP      	12	; to 18
	6	[76]	MOVE     	2 0
	7	[76]	LOADNIL  	3 4
	8	[76]	JMP      	6	; to 15
	9	[77]	MOVE     	6 1
	10	[77]	MOVE     	7 5
	11	[77]	CALL     	6 2 2
	12	[78]	TEST     	6 0 0
	13	[78]	JMP      	1	; to 15
	14	[79]	RETURN   	6 2
	15	[76]	TFORLOOP 	2 1
	16	[80]	JMP      	-8	; to 9
	17	[81]	JMP      	17	; to 35
	18	[82]	GETGLOBAL	2 -1	; type
	19	[82]	MOVE     	3 0
	20	[82]	CALL     	2 2 2
	21	[82]	EQ       	0 2 -3	; - "table"
	22	[82]	JMP      	12	; to 35
	23	[83]	GETGLOBAL	2 -4	; ipairs
	24	[83]	MOVE     	3 0
	25	[83]	CALL     	2 2 4
	26	[83]	JMP      	6	; to 33
	27	[84]	MOVE     	7 1
	28	[84]	MOVE     	8 6
	29	[84]	CALL     	7 2 2
	30	[85]	TEST     	7 0 0
	31	[85]	JMP      	1	; to 33
	32	[86]	RETURN   	7 2
	33	[83]	TFORLOOP 	2 2
	34	[87]	JMP      	-8	; to 27
	35	[90]	RETURN   	0 1

function <./fun.lua:92,120> (35 instructions, 140 bytes at 0x7fde1a4094a0)
1+ param, 6 slots, 1 upvalue, 7 locals, 5 constants, 3 functions
	1	[93]	GETGLOBAL	2 -1	; select
	2	[93]	LOADK    	3 -2	; "#"
	3	[93]	VARARG   	4 0
	4	[93]	CALL     	2 0 2
	5	[94]	EQ       	0 2 -3	; - 1
	6	[94]	JMP      	7	; to 14
	7	[95]	VARARG   	3 2
	8	[98]	CLOSURE  	4 0	; 0x7fde1a4079e0
	9	[98]	MOVE     	0 0
	10	[98]	MOVE     	0 3
	11	[98]	RETURN   	4 2
	12	[98]	CLOSE    	3
	13	[98]	JMP      	21	; to 35
	14	[99]	EQ       	0 2 -4	; - 2
	15	[99]	JMP      	8	; to 24
	16	[100]	VARARG   	3 3
	17	[103]	CLOSURE  	5 1	; 0x7fde1a407a60
	18	[103]	MOVE     	0 0
	19	[103]	MOVE     	0 3
	20	[103]	MOVE     	0 4
	21	[103]	RETURN   	5 2
	22	[103]	CLOSE    	3
	23	[103]	JMP      	11	; to 35
	24	[105]	NEWTABLE 	3 0 1
	25	[105]	SETTABLE 	3 -5 2	; "n" -
	26	[105]	VARARG   	4 0
	27	[105]	SETLIST  	3 0 1	; 1
	28	[118]	CLOSURE  	4 2	; 0x7fde1a4086d0
	29	[118]	MOVE     	0 2
	30	[118]	MOVE     	0 3
	31	[118]	GETUPVAL 	0 0	; unpack
	32	[118]	MOVE     	0 0
	33	[118]	RETURN   	4 2
	34	[118]	CLOSE    	3
	35	[120]	RETURN   	0 1

function <./fun.lua:96,98> (6 instructions, 24 bytes at 0x7fde1a4079e0)
0+ params, 4 slots, 2 upvalues, 1 local, 0 constants, 0 functions
	1	[97]	GETUPVAL 	1 0	; f
	2	[97]	GETUPVAL 	2 1	; a
	3	[97]	VARARG   	3 0
	4	[97]	TAILCALL 	1 0 0
	5	[97]	RETURN   	1 0
	6	[98]	RETURN   	0 1

function <./fun.lua:101,103> (7 instructions, 28 bytes at 0x7fde1a407a60)
0+ params, 5 slots, 3 upvalues, 1 local, 0 constants, 0 functions
	1	[102]	GETUPVAL 	1 0	; f
	2	[102]	GETUPVAL 	2 1	; a
	3	[102]	GETUPVAL 	3 2	; b
	4	[102]	VARARG   	4 0
	5	[102]	TAILCALL 	1 0 0
	6	[102]	RETURN   	1 0
	7	[103]	RETURN   	0 1

function <./fun.lua:106,118> (40 instructions, 160 bytes at 0x7fde1a4086d0)
0+ params, 10 slots, 4 upvalues, 13 locals, 5 constants, 0 functions
	1	[107]	GETGLOBAL	1 -1	; select
	2	[107]	LOADK    	2 -2	; "#"
	3	[107]	VARARG   	3 0
	4	[107]	CALL     	1 0 2
	5	[108]	NEWTABLE 	2 0 0
	6	[108]	VARARG   	3 0
	7	[108]	SETLIST  	2 0 1	; 1
	8	[109]	NEWTABLE 	3 0 0
	9	[110]	LOADK    	4 -3	; 1
	10	[110]	GETUPVAL 	5 0	; n
	11	[110]	LOADK    	6 -3	; 1
	12	[110]	FORPREP  	4 3	; to 16
	13	[111]	GETUPVAL 	8 1	; pargs
	14	[111]	GETTABLE 	8 8 7
	15	[111]	SETTABLE 	3 7 8
	16	[110]	FORLOOP  	4 -4	; to 13
	17	[113]	LOADK    	4 -3	; 1
	18	[113]	MOVE     	5 1
	19	[113]	LOADK    	6 -3	; 1
	20	[113]	FORPREP  	4 4	; to 25
	21	[114]	GETUPVAL 	8 0	; n
	22	[114]	ADD      	8 7 8
	23	[114]	GETTABLE 	9 2 7
	24	[114]	SETTABLE 	3 8 9
	25	[113]	FORLOOP  	4 -5	; to 21
	26	[116]	GETUPVAL 	4 2	; unpack
	27	[116]	TEST     	4 0 1
	28	[116]	JMP      	2	; to 31
	29	[116]	GETGLOBAL	4 -4	; table
	30	[116]	GETTABLE 	4 4 -5	; "unpack"
	31	[117]	GETUPVAL 	5 3	; f
	32	[117]	MOVE     	6 4
	33	[117]	MOVE     	7 3
	34	[117]	LOADK    	8 -3	; 1
	35	[117]	GETUPVAL 	9 0	; n
	36	[117]	ADD      	9 9 1
	37	[117]	CALL     	6 4 0
	38	[117]	TAILCALL 	5 0 0
	39	[117]	RETURN   	5 0
	40	[118]	RETURN   	0 1

function <./fun.lua:122,142> (18 instructions, 72 bytes at 0x7fde1a408140)
1 param, 5 slots, 0 upvalues, 4 locals, 3 constants, 1 function
	1	[123]	GETGLOBAL	1 -1	; setmetatable
	2	[123]	NEWTABLE 	2 0 0
	3	[123]	NEWTABLE 	3 0 1
	4	[123]	SETTABLE 	3 -2 -3	; "__mode" "k"
	5	[123]	CALL     	1 3 2
	6	[124]	GETGLOBAL	2 -1	; setmetatable
	7	[124]	NEWTABLE 	3 0 0
	8	[124]	NEWTABLE 	4 0 1
	9	[124]	SETTABLE 	4 -2 -3	; "__mode" "k"
	10	[124]	CALL     	2 3 2
	11	[125]	NEWTABLE 	3 0 0
	12	[141]	CLOSURE  	4 0	; 0x7fde1a407960
	13	[141]	MOVE     	0 1
	14	[141]	MOVE     	0 3
	15	[141]	MOVE     	0 2
	16	[141]	MOVE     	0 0
	17	[141]	RETURN   	4 2
	18	[142]	RETURN   	0 1

function <./fun.lua:126,141> (33 instructions, 132 bytes at 0x7fde1a407960)
1 param, 5 slots, 4 upvalues, 3 locals, 1 constant, 0 functions
	1	[127]	GETUPVAL 	1 0	; memory
	2	[127]	GETTABLE 	1 1 0
	3	[127]	TEST     	1 0 0
	4	[127]	JMP      	12	; to 17
	5	[128]	GETUPVAL 	1 0	; memory
	6	[128]	GETTABLE 	1 1 0
	7	[128]	GETUPVAL 	2 1	; NIL
	8	[128]	EQ       	0 1 2
	9	[128]	JMP      	4	; to 14
	10	[129]	LOADNIL  	1 1
	11	[129]	GETUPVAL 	2 2	; errors
	12	[129]	GETTABLE 	2 2 0
	13	[129]	RETURN   	1 3
	14	[131]	GETUPVAL 	1 0	; memory
	15	[131]	GETTABLE 	1 1 0
	16	[131]	RETURN   	1 2
	17	[133]	GETUPVAL 	1 3	; fn
	18	[133]	MOVE     	2 0
	19	[133]	CALL     	1 2 3
	20	[134]	EQ       	1 1 -1	; - nil
	21	[134]	JMP      	3	; to 25
	22	[135]	GETUPVAL 	3 0	; memory
	23	[135]	SETTABLE 	3 0 1
	24	[135]	JMP      	5	; to 30
	25	[137]	GETUPVAL 	3 0	; memory
	26	[137]	GETUPVAL 	4 1	; NIL
	27	[137]	SETTABLE 	3 0 4
	28	[138]	GETUPVAL 	3 2	; errors
	29	[138]	SETTABLE 	3 0 2
	30	[140]	MOVE     	3 1
	31	[140]	MOVE     	4 2
	32	[140]	RETURN   	3 3
	33	[141]	RETURN   	0 1
