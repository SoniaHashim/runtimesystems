-- BYTECODE -- argparse.lua:23-33
0001    GGET     2   0      ; "pairs"
0002    MOV      3   1
0003    CALL     2   4   2
0004    ISNEXT   5 => 0016
0005 => GGET     7   1      ; "type"
0006    MOV      8   6
0007    CALL     7   2   2
0008    ISNES    7   2      ; "table"
0009    JMP      7 => 0015
0010    UGET     7   0      ; deep_update
0011    TNEW     8   0
0012    MOV      9   6
0013    CALL     7   2   3
0014    MOV      6   7
0015 => TSETV    6   0   5
0016 => ITERN    5   3   3
0017    ITERL    5 => 0005
0018    RET1     0   2

-- BYTECODE -- argparse.lua:56-62
0001    UGET     2   0      ; callback
0002    MOV      3   0
0003    MOV      4   1
0004    CALL     2   2   3
0005    IST          2
0006    JMP      2 => 0011
0007    KSTR     2   0      ; "_"
0008    UGET     3   1      ; name
0009    CAT      2   2   3
0010    TSETV    1   0   2
0011 => RET1     0   2

-- BYTECODE -- argparse.lua:67-94
0001    GGET     1   0      ; "type"
0002    VARG     2   2   1
0003    CALL     1   2   2
0004    ISNES    1   1      ; "table"
0005    JMP      1 => 0021
0006    GGET     1   2      ; "pairs"
0007    VARG     2   2   1
0008    CALL     1   4   2
0009    ISNEXT   4 => 0018
0010 => UGET     6   0      ; names
0011    TGETV    6   6   4
0012    ISF          6
0013    JMP      7 => 0018
0014    TGETV    6   0   4
0015    MOV      7   0
0016    MOV      8   5
0017    CALL     6   1   3
0018 => ITERN    4   3   3
0019    ITERL    4 => 0010
0020    JMP      1 => 0049
0021 => GGET     1   3      ; "select"
0022    KSTR     2   4      ; "#"
0023    VARG     3   0   1
0024    CALLM    1   2   1
0025    GGET     2   5      ; "ipairs"
0026    UGET     3   1      ; properties
0027    CALL     2   4   2
0028    JMP      5 => 0047
0029 => ISLT     1   5
0030    JMP      7 => 0049
0031    UGET     7   1      ; properties
0032    TGETS    7   7   6  ; "args"
0033    ISGE     7   5
0034    JMP      7 => 0036
0035    JMP      2 => 0049
0036 => GGET     7   3      ; "select"
0037    MOV      8   5
0038    VARG     9   0   1
0039    CALLM    7   2   1
0040    ISEQP    7   0
0041    JMP      8 => 0047
0042    TGETB    8   6   1
0043    TGETV    8   0   8
0044    MOV      9   0
0045    MOV     10   7
0046    CALL     8   1   3
0047 => ITERC    5   3   3
0048    ITERL    5 => 0029
0049 => RET1     0   2

-- BYTECODE -- argparse.lua:101-107
0001    UGET     1   0      ; deep_update
0002    TNEW     2   0
0003    TGETS    3   0   0  ; "__prototype"
0004    CALL     1   2   3
0005    GGET     2   1      ; "setmetatable"
0006    MOV      3   1
0007    MOV      4   0
0008    CALL     2   1   3
0009    MOV      2   1
0010    VARG     3   0   1
0011    CALLMT   2   0

-- BYTECODE -- argparse.lua:38-110
0001    TNEW     3   0
0002    TSETS    3   3   0  ; "__index"
0003    ISF          2
0004    JMP      4 => 0014
0005    UGET     4   0      ; deep_update
0006    UGET     5   0      ; deep_update
0007    TNEW     6   0
0008    TGETS    7   2   1  ; "__prototype"
0009    CALL     5   2   3
0010    MOV      6   0
0011    CALL     4   2   3
0012    TSETS    4   3   1  ; "__prototype"
0013    JMP      4 => 0015
0014 => TSETS    0   3   1  ; "__prototype"
0015 => ISF          1
0016    JMP      4 => 0034
0017    TNEW     4   0
0018    GGET     5   2      ; "ipairs"
0019    MOV      6   1
0020    CALL     5   4   2
0021    JMP      8 => 0029
0022 => TGETB   10   9   1
0023    TGETB   11   9   2
0024    FNEW    12   3      ; argparse.lua:56
0025    TSETV   12   3  10
0026    KPRI    12   2
0027    TSETV   12   4  10
0028    UCLO    10 => 0029
0029 => ITERC    8   3   3
0030    ITERL    8 => 0022
0031    FNEW     5   5      ; argparse.lua:67
0032    TSETS    5   3   4  ; "__call"
0033    UCLO     4 => 0034
0034 => TNEW     4   0
0035    TSETS    2   4   0  ; "__index"
0036    FNEW     5   6      ; argparse.lua:101
0037    TSETS    5   4   4  ; "__call"
0038    GGET     5   7      ; "setmetatable"
0039    MOV      6   3
0040    MOV      7   4
0041    UCLO     0 => 0042
0042 => CALLT    5   3

-- BYTECODE -- argparse.lua:112-120
0001    GGET     3   0      ; "ipairs"
0002    MOV      4   1
0003    CALL     3   4   2
0004    JMP      6 => 0012
0005 => GGET     8   1      ; "type"
0006    MOV      9   2
0007    CALL     8   2   2
0008    ISNEV    8   7
0009    JMP      8 => 0012
0010    KPRI     8   2
0011    RET1     8   2
0012 => ITERC    6   3   3
0013    ITERL    6 => 0005
0014    GGET     3   2      ; "error"
0015    KSTR     4   3      ; "bad property '%s' (%s expected, got %s)"
0016    MOV      5   4
0017    TGETS    4   4   4  ; "format"
0018    MOV      6   0
0019    GGET     7   5      ; "table"
0020    TGETS    7   7   6  ; "concat"
0021    MOV      8   1
0022    KSTR     9   7      ; " or "
0023    CALL     7   2   3
0024    GGET     8   1      ; "type"
0025    MOV      9   2
0026    CALL     8   0   2
0027    CALLM    4   0   3
0028    CALLM    3   1   0
0029    RET0     0   1

-- BYTECODE -- argparse.lua:124-124
0001    UGET     2   0      ; typecheck
0002    UGET     3   1      ; name
0003    UGET     4   2      ; types
0004    MOV      5   1
0005    CALL     2   1   4
0006    RET0     0   1

-- BYTECODE -- argparse.lua:122-125
0001    TNEW     1   3
0002    VARG     2   0   1
0003    TSETM    2   0      ; 1
0004    TNEW     2   3
0005    TSETB    0   2   1
0006    FNEW     3   0      ; argparse.lua:124
0007    TSETB    3   2   2
0008    UCLO     0 => 0009
0009 => RET1     2   2

-- BYTECODE -- argparse.lua:127-142
0001    UGET     2   0      ; typecheck
0002    KSTR     3   0      ; "name"
0003    TDUP     4   1
0004    MOV      5   1
0005    CALL     2   1   4
0006    MOV      3   1
0007    TGETS    2   1   2  ; "gmatch"
0008    KSTR     4   3      ; "%S+"
0009    CALL     2   4   3
0010    JMP      5 => 0043
0011 => TGETS    6   0   4  ; "_name"
0012    IST          6
0013    JMP      7 => 0015
0014    MOV      6   5
0015 => TSETS    6   0   4  ; "_name"
0016    GGET     6   5      ; "table"
0017    TGETS    6   6   6  ; "insert"
0018    TGETS    7   0   7  ; "_aliases"
0019    MOV      8   5
0020    CALL     6   1   3
0021    GGET     6   5      ; "table"
0022    TGETS    6   6   6  ; "insert"
0023    TGETS    7   0   8  ; "_public_aliases"
0024    MOV      8   5
0025    CALL     6   1   3
0026    MOV      7   5
0027    TGETS    6   5   9  ; "find"
0028    KSTR     8  10      ; "_"
0029    KSHORT   9   1
0030    KPRI    10   2
0031    CALL     6   2   5
0032    ISF          6
0033    JMP      7 => 0043
0034    GGET     6   5      ; "table"
0035    TGETS    6   6   6  ; "insert"
0036    TGETS    7   0   7  ; "_aliases"
0037    MOV      9   5
0038    TGETS    8   5  11  ; "gsub"
0039    KSTR    10  10      ; "_"
0040    KSTR    11  12      ; "-"
0041    CALL     8   2   4
0042    CALL     6   1   3
0043 => ITERC    5   2   3
0044    ITERL    5 => 0011
0045    KPRI     2   2
0046    RET1     2   2

-- BYTECODE -- argparse.lua:144-155
0001    UGET     2   0      ; typecheck
0002    KSTR     3   0      ; "hidden_name"
0003    TDUP     4   1
0004    MOV      5   1
0005    CALL     2   1   4
0006    MOV      3   1
0007    TGETS    2   1   2  ; "gmatch"
0008    KSTR     4   3      ; "%S+"
0009    CALL     2   4   3
0010    JMP      5 => 0033
0011 => GGET     6   4      ; "table"
0012    TGETS    6   6   5  ; "insert"
0013    TGETS    7   0   6  ; "_aliases"
0014    MOV      8   5
0015    CALL     6   1   3
0016    MOV      7   5
0017    TGETS    6   5   7  ; "find"
0018    KSTR     8   8      ; "_"
0019    KSHORT   9   1
0020    KPRI    10   2
0021    CALL     6   2   5
0022    ISF          6
0023    JMP      7 => 0033
0024    GGET     6   4      ; "table"
0025    TGETS    6   6   5  ; "insert"
0026    TGETS    7   0   6  ; "_aliases"
0027    MOV      9   5
0028    TGETS    8   5   9  ; "gsub"
0029    KSTR    10   8      ; "_"
0030    KSTR    11  10      ; "-"
0031    CALL     8   2   4
0032    CALL     6   1   3
0033 => ITERC    5   2   3
0034    ITERL    5 => 0011
0035    KPRI     2   2
0036    RET1     2   2

-- BYTECODE -- argparse.lua:157-183
0001    GGET     1   0      ; "tonumber"
0002    MOV      2   0
0003    CALL     1   2   2
0004    ISF          1
0005    JMP      2 => 0013
0006    GGET     1   0      ; "tonumber"
0007    MOV      2   0
0008    CALL     1   2   2
0009    GGET     2   0      ; "tonumber"
0010    MOV      3   0
0011    CALL     2   0   2
0012    RETM     1   1
0013 => ISNES    0   1      ; "*"
0014    JMP      1 => 0019
0015    KSHORT   1   0
0016    GGET     2   2      ; "math"
0017    TGETS    2   2   3  ; "huge"
0018    RET      1   3
0019 => ISNES    0   4      ; "+"
0020    JMP      1 => 0025
0021    KSHORT   1   1
0022    GGET     2   2      ; "math"
0023    TGETS    2   2   3  ; "huge"
0024    RET      1   3
0025 => ISNES    0   5      ; "?"
0026    JMP      1 => 0030
0027    KSHORT   1   0
0028    KSHORT   2   1
0029    RET      1   3
0030 => MOV      2   0
0031    TGETS    1   0   6  ; "match"
0032    KSTR     3   7      ; "^%d+%-%d+$"
0033    CALL     1   2   3
0034    ISF          1
0035    JMP      2 => 0047
0036    MOV      2   0
0037    TGETS    1   0   6  ; "match"
0038    KSTR     3   8      ; "^(%d+)%-(%d+)$"
0039    CALL     1   3   3
0040    GGET     3   0      ; "tonumber"
0041    MOV      4   1
0042    CALL     3   2   2
0043    GGET     4   0      ; "tonumber"
0044    MOV      5   2
0045    CALL     4   0   2
0046    RETM     3   1
0047 => MOV      2   0
0048    TGETS    1   0   6  ; "match"
0049    KSTR     3   9      ; "^%d+%+$"
0050    CALL     1   2   3
0051    ISF          1
0052    JMP      2 => 0063
0053    MOV      2   0
0054    TGETS    1   0   6  ; "match"
0055    KSTR     3  10      ; "^(%d+)%+$"
0056    CALL     1   2   3
0057    GGET     2   0      ; "tonumber"
0058    MOV      3   1
0059    CALL     2   2   2
0060    GGET     3   2      ; "math"
0061    TGETS    3   3   3  ; "huge"
0062    RET      2   3
0063 => RET0     0   1

-- BYTECODE -- argparse.lua:186-196
0001    UGET     2   0      ; typecheck
0002    UGET     3   1      ; name
0003    TDUP     4   0
0004    MOV      5   1
0005    CALL     2   1   4
0006    UGET     2   2      ; parse_boundaries
0007    MOV      3   1
0008    CALL     2   3   2
0009    IST          2
0010    JMP      4 => 0018
0011    GGET     4   1      ; "error"
0012    KSTR     5   2      ; "bad property '%s'"
0013    MOV      6   5
0014    TGETS    5   5   3  ; "format"
0015    UGET     7   1      ; name
0016    CALL     5   0   3
0017    CALLM    4   1   0
0018 => KSTR     4   4      ; "_min"
0019    UGET     5   1      ; name
0020    CAT      4   4   5
0021    KSTR     5   5      ; "_max"
0022    UGET     6   1      ; name
0023    CAT      5   5   6
0024    MOV      6   2
0025    TSETV    3   0   5
0026    TSETV    6   0   4
0027    RET0     0   1

-- BYTECODE -- argparse.lua:185-197
0001    TNEW     1   3
0002    TSETB    0   1   1
0003    FNEW     2   0      ; argparse.lua:186
0004    TSETB    2   1   2
0005    UCLO     0 => 0006
0006 => RET1     1   2

-- BYTECODE -- argparse.lua:201-207
0001    UGET     2   0      ; typecheck
0002    KSTR     3   0      ; "action"
0003    TDUP     4   1
0004    MOV      5   1
0005    CALL     2   1   4
0006    GGET     2   2      ; "type"
0007    MOV      3   1
0008    CALL     2   2   2
0009    ISNES    2   3      ; "string"
0010    JMP      2 => 0022
0011    UGET     2   1      ; actions
0012    TGETV    2   2   1
0013    IST          2
0014    JMP      2 => 0022
0015    GGET     2   4      ; "error"
0016    KSTR     3   5      ; "unknown action '%s'"
0017    MOV      4   3
0018    TGETS    3   3   6  ; "format"
0019    MOV      5   1
0020    CALL     3   0   3
0021    CALLM    2   1   0
0022 => RET0     0   1

-- BYTECODE -- argparse.lua:209-211
0001    KPRI     1   2
0002    TSETS    1   0   0  ; "_has_init"
0003    RET0     0   1

-- BYTECODE -- argparse.lua:213-219
0001    GGET     2   0      ; "type"
0002    MOV      3   1
0003    CALL     2   2   2
0004    ISEQS    2   1      ; "string"
0005    JMP      2 => 0011
0006    TSETS    1   0   2  ; "_init"
0007    KPRI     2   2
0008    TSETS    2   0   3  ; "_has_init"
0009    KPRI     2   2
0010    RET1     2   2
0011 => RET0     0   1

-- BYTECODE -- argparse.lua:232-235
0001    GGET     0   0      ; "print"
0002    UGET     1   0      ; self
0003    MOV      2   1
0004    TGETS    1   1   1  ; "get_help"
0005    CALL     1   0   2
0006    CALLM    0   1   0
0007    GGET     0   2      ; "os"
0008    TGETS    0   0   3  ; "exit"
0009    KSHORT   1   0
0010    CALL     0   1   2
0011    RET0     0   1

-- BYTECODE -- argparse.lua:221-247
0001    UGET     2   0      ; typecheck
0002    KSTR     3   0      ; "add_help"
0003    TDUP     4   1
0004    MOV      5   1
0005    CALL     2   1   4
0006    TGETS    2   0   2  ; "_help_option_idx"
0007    ISF          2
0008    JMP      3 => 0016
0009    GGET     2   3      ; "table"
0010    TGETS    2   2   4  ; "remove"
0011    TGETS    3   0   5  ; "_options"
0012    TGETS    4   0   2  ; "_help_option_idx"
0013    CALL     2   1   3
0014    KPRI     2   0
0015    TSETS    2   0   2  ; "_help_option_idx"
0016 => ISF          1
0017    JMP      2 => 0046
0018    MOV      3   0
0019    TGETS    2   0   6  ; "flag"
0020    CALL     2   2   2
0021    MOV      3   2
0022    TGETS    2   2   7  ; "description"
0023    KSTR     4   8      ; "Show this help message and exit."
0024    CALL     2   2   3
0025    MOV      3   2
0026    TGETS    2   2   9  ; "action"
0027    FNEW     4  10      ; argparse.lua:232
0028    CALL     2   2   3
0029    ISEQP    1   2
0030    JMP      3 => 0035
0031    MOV      3   2
0032    MOV      4   1
0033    CALL     3   2   2
0034    MOV      2   3
0035 => TGETS    3   2  11  ; "_name"
0036    IST          3
0037    JMP      3 => 0043
0038    MOV      3   2
0039    KSTR     4  12      ; "-h"
0040    CALL     3   2   2
0041    KSTR     4  13      ; "--help"
0042    CALL     3   1   2
0043 => TGETS    3   0   5  ; "_options"
0044    LEN      3   3
0045    TSETS    3   0   2  ; "_help_option_idx"
0046 => UCLO     0 => 0047
0047 => RET0     0   1

-- BYTECODE -- argparse.lua:353-369
0001    MOV      3   0
0002 => LOOP     4 => 0016
0003    KSTR     4   0      ; "_"
0004    MOV      5   1
0005    CAT      4   4   5
0006    TGETV    4   3   4
0007    ISEQP    4   0
0008    JMP      5 => 0010
0009    RET1     4   2
0010 => TGETS    5   3   1  ; "_parent"
0011    IST          5
0012    JMP      5 => 0014
0013    RET1     2   2
0014 => TGETS    3   3   1  ; "_parent"
0015    JMP      4 => 0002
0016 => RET0     0   1

-- BYTECODE -- argparse.lua:371-400
0001    TNEW     1   0
0002    KSHORT   2   1
0003 => GGET     3   0      ; "math"
0004    TGETS    3   3   1  ; "min"
0005    TGETS    4   0   2  ; "_minargs"
0006    KSHORT   5   3
0007    CALL     3   2   3
0008    ISGT     2   3
0009    JMP      3 => 0036
0010    LOOP     3 => 0036
0011    MOV      4   0
0012    TGETS    3   0   3  ; "_get_argname"
0013    MOV      5   2
0014    CALL     3   2   3
0015    TGETS    4   0   4  ; "_default"
0016    ISF          4
0017    JMP      5 => 0029
0018    TGETS    4   0   5  ; "_defmode"
0019    MOV      5   4
0020    TGETS    4   4   6  ; "find"
0021    KSTR     6   7      ; "a"
0022    CALL     4   2   3
0023    ISF          4
0024    JMP      5 => 0029
0025    KSTR     4   8      ; "["
0026    MOV      5   3
0027    KSTR     6   9      ; "]"
0028    CAT      3   4   6
0029 => GGET     4  10      ; "table"
0030    TGETS    4   4  11  ; "insert"
0031    MOV      5   1
0032    MOV      6   3
0033    CALL     4   1   3
0034    ADDVN    2   2   0  ; 1
0035    JMP      3 => 0003
0036 => GGET     3   0      ; "math"
0037    TGETS    3   3   1  ; "min"
0038    TGETS    4   0  12  ; "_maxargs"
0039    KSHORT   5   3
0040    CALL     3   2   3
0041    ISGT     2   3
0042    JMP      3 => 0063
0043    LOOP     3 => 0063
0044    GGET     3  10      ; "table"
0045    TGETS    3   3  11  ; "insert"
0046    MOV      4   1
0047    KSTR     5   8      ; "["
0048    MOV      7   0
0049    TGETS    6   0   3  ; "_get_argname"
0050    MOV      8   2
0051    CALL     6   2   3
0052    KSTR     7   9      ; "]"
0053    CAT      5   5   7
0054    CALL     3   1   3
0055    ADDVN    2   2   0  ; 1
0056    TGETS    3   0  12  ; "_maxargs"
0057    GGET     4   0      ; "math"
0058    TGETS    4   4  13  ; "huge"
0059    ISNEV    3   4
0060    JMP      3 => 0036
0061    JMP      3 => 0063
0062    JMP      3 => 0036
0063 => TGETS    3   0  12  ; "_maxargs"
0064    ISGE     2   3
0065    JMP      3 => 0071
0066    GGET     3  10      ; "table"
0067    TGETS    3   3  11  ; "insert"
0068    MOV      4   1
0069    KSTR     5  14      ; "..."
0070    CALL     3   1   3
0071 => RET1     1   2

-- BYTECODE -- argparse.lua:402-412
0001    GGET     1   0      ; "table"
0002    TGETS    1   1   1  ; "concat"
0003    MOV      3   0
0004    TGETS    2   0   2  ; "_get_argument_list"
0005    CALL     2   2   2
0006    KSTR     3   3      ; " "
0007    CALL     1   2   3
0008    TGETS    2   0   4  ; "_default"
0009    ISF          2
0010    JMP      3 => 0036
0011    TGETS    2   0   5  ; "_defmode"
0012    MOV      3   2
0013    TGETS    2   2   6  ; "find"
0014    KSTR     4   7      ; "u"
0015    CALL     2   2   3
0016    ISF          2
0017    JMP      3 => 0036
0018    TGETS    2   0   8  ; "_maxargs"
0019    KSHORT   3   1
0020    ISLT     3   2
0021    JMP      2 => 0032
0022    TGETS    2   0   9  ; "_minargs"
0023    ISNEN    2   0      ; 1
0024    JMP      2 => 0036
0025    TGETS    2   0   5  ; "_defmode"
0026    MOV      3   2
0027    TGETS    2   2   6  ; "find"
0028    KSTR     4  10      ; "a"
0029    CALL     2   2   3
0030    IST          2
0031    JMP      2 => 0036
0032 => KSTR     2  11      ; "["
0033    MOV      3   1
0034    KSTR     4  12      ; "]"
0035    CAT      1   2   4
0036 => RET1     1   2

-- BYTECODE -- argparse.lua:414-416
0001    KPRI     2   2
0002    TSETV    2   0   1
0003    RET0     0   1

-- BYTECODE -- argparse.lua:418-420
0001    KPRI     2   1
0002    TSETV    2   0   1
0003    RET0     0   1

-- BYTECODE -- argparse.lua:422-424
0001    TSETV    2   0   1
0002    RET0     0   1

-- BYTECODE -- argparse.lua:426-430
0001    IST          3
0002    JMP      4 => 0006
0003    TGETV    4   0   1
0004    ADDVN    4   4   0  ; 1
0005    TSETV    4   0   1
0006 => RET0     0   1

-- BYTECODE -- argparse.lua:432-439
0001    TGETV    4   0   1
0002    IST          4
0003    JMP      5 => 0005
0004    TNEW     4   0
0005 => TSETV    4   0   1
0006    GGET     4   0      ; "table"
0007    TGETS    4   4   1  ; "insert"
0008    TGETV    5   0   1
0009    MOV      6   2
0010    CALL     4   1   3
0011    ISF          3
0012    JMP      4 => 0018
0013    GGET     4   0      ; "table"
0014    TGETS    4   4   2  ; "remove"
0015    TGETV    5   0   1
0016    KSHORT   6   1
0017    CALL     4   1   3
0018 => RET0     0   1

-- BYTECODE -- argparse.lua:441-451
0001    ISF          3
0002    JMP      4 => 0006
0003    GGET     4   0      ; "error"
0004    KSTR     5   1      ; "'concat' action can't handle too many in"~
0005    CALL     4   1   2
0006 => TGETV    4   0   1
0007    IST          4
0008    JMP      5 => 0010
0009    TNEW     4   0
0010 => TSETV    4   0   1
0011    GGET     4   2      ; "ipairs"
0012    MOV      5   2
0013    CALL     4   4   2
0014    JMP      7 => 0020
0015 => GGET     9   3      ; "table"
0016    TGETS    9   9   4  ; "insert"
0017    TGETV   10   0   1
0018    MOV     11   8
0019    CALL     9   1   3
0020 => ITERC    7   3   3
0021    ITERL    7 => 0015
0022    RET0     0   1

-- BYTECODE -- argparse.lua:453-483
0001    KNIL     1   2
0002    TGETS    3   0   0  ; "_maxcount"
0003    ISNEN    3   0      ; 1
0004    JMP      3 => 0016
0005    TGETS    3   0   1  ; "_maxargs"
0006    ISNEN    3   1      ; 0
0007    JMP      3 => 0012
0008    KSTR     3   2      ; "store_true"
0009    KPRI     2   0
0010    MOV      1   3
0011    JMP      3 => 0026
0012 => KSTR     3   3      ; "store"
0013    KPRI     2   0
0014    MOV      1   3
0015    JMP      3 => 0026
0016 => TGETS    3   0   1  ; "_maxargs"
0017    ISNEN    3   1      ; 0
0018    JMP      3 => 0023
0019    KSTR     3   4      ; "count"
0020    KSHORT   2   0
0021    MOV      1   3
0022    JMP      3 => 0026
0023 => KSTR     3   5      ; "append"
0024    TNEW     2   0
0025    MOV      1   3
0026 => TGETS    3   0   6  ; "_action"
0027    ISF          3
0028    JMP      4 => 0030
0029    TGETS    1   0   6  ; "_action"
0030 => TGETS    3   0   7  ; "_has_init"
0031    ISF          3
0032    JMP      4 => 0034
0033    TGETS    2   0   8  ; "_init"
0034 => GGET     3   9      ; "type"
0035    MOV      4   1
0036    CALL     3   2   2
0037    ISNES    3  10      ; "string"
0038    JMP      3 => 0041
0039    UGET     3   0      ; actions
0040    TGETV    1   3   1
0041 => MOV      3   1
0042    MOV      4   2
0043    RET      3   3

-- BYTECODE -- argparse.lua:486-494
0001    TGETS    2   0   0  ; "_argname"
0002    IST          2
0003    JMP      3 => 0007
0004    MOV      3   0
0005    TGETS    2   0   1  ; "_get_default_argname"
0006    CALL     2   2   2
0007 => GGET     3   2      ; "type"
0008    MOV      4   2
0009    CALL     3   2   2
0010    ISNES    3   3      ; "table"
0011    JMP      3 => 0015
0012    TGETV    3   2   1
0013    RET1     3   2
0014    JMP      3 => 0016
0015 => RET1     2   2
0016 => RET0     0   1

-- BYTECODE -- argparse.lua:496-498
0001    KSTR     1   0      ; "{"
0002    GGET     2   1      ; "table"
0003    TGETS    2   2   2  ; "concat"
0004    TGETS    3   0   3  ; "_choices"
0005    KSTR     4   4      ; ","
0006    CALL     2   2   3
0007    KSTR     3   5      ; "}"
0008    CAT      1   1   3
0009    RET1     1   2

-- BYTECODE -- argparse.lua:500-506
0001    TGETS    1   0   0  ; "_choices"
0002    ISF          1
0003    JMP      2 => 0008
0004    MOV      2   0
0005    TGETS    1   0   1  ; "_get_choices_list"
0006    CALLT    1   2
0007    JMP      1 => 0013
0008 => KSTR     1   2      ; "<"
0009    TGETS    2   0   3  ; "_name"
0010    KSTR     3   4      ; ">"
0011    CAT      1   1   3
0012    RET1     1   2
0013 => RET0     0   1

-- BYTECODE -- argparse.lua:508-514
0001    TGETS    1   0   0  ; "_choices"
0002    ISF          1
0003    JMP      2 => 0008
0004    MOV      2   0
0005    TGETS    1   0   1  ; "_get_choices_list"
0006    CALLT    1   2
0007    JMP      1 => 0015
0008 => KSTR     1   2      ; "<"
0009    MOV      3   0
0010    TGETS    2   0   3  ; "_get_default_target"
0011    CALL     2   2   2
0012    KSTR     3   4      ; ">"
0013    CAT      1   1   3
0014    RET1     1   2
0015 => RET0     0   1

-- BYTECODE -- argparse.lua:517-523
0001    TGETS    1   0   0  ; "_choices"
0002    ISF          1
0003    JMP      2 => 0011
0004    TNEW     1   3
0005    MOV      3   0
0006    TGETS    2   0   1  ; "_get_choices_list"
0007    CALL     2   0   2
0008    TSETM    2   0      ; 1
0009    RET1     1   2
0010    JMP      1 => 0015
0011 => TNEW     1   3
0012    TGETS    2   0   2  ; "_name"
0013    TSETB    2   1   1
0014    RET1     1   2
0015 => RET0     0   1

-- BYTECODE -- argparse.lua:525-553
0001    MOV      2   0
0002    TGETS    1   0   0  ; "_get_argument_list"
0003    CALL     1   2   2
0004    LEN      2   1
0005    ISNEN    2   0      ; 0
0006    JMP      2 => 0015
0007    TNEW     2   3
0008    GGET     3   1      ; "table"
0009    TGETS    3   3   2  ; "concat"
0010    TGETS    4   0   3  ; "_public_aliases"
0011    KSTR     5   4      ; ", "
0012    CALL     3   0   3
0013    TSETM    3   1      ; 1
0014    RET1     2   2
0015 => KSHORT   2  -1
0016    GGET     3   5      ; "ipairs"
0017    TGETS    4   0   3  ; "_public_aliases"
0018    CALL     3   4   2
0019    JMP      6 => 0026
0020 => GGET     8   6      ; "math"
0021    TGETS    8   8   7  ; "max"
0022    MOV      9   2
0023    LEN     10   7
0024    CALL     8   2   3
0025    MOV      2   8
0026 => ITERC    6   3   3
0027    ITERL    6 => 0020
0028    GGET     3   1      ; "table"
0029    TGETS    3   3   2  ; "concat"
0030    MOV      4   1
0031    KSTR     5   8      ; " "
0032    CALL     3   2   3
0033    TNEW     4   0
0034    GGET     5   5      ; "ipairs"
0035    TGETS    6   0   3  ; "_public_aliases"
0036    CALL     5   4   2
0037    JMP      8 => 0060
0038 => KSTR    10   8      ; " "
0039    MOV     11  10
0040    TGETS   10  10   9  ; "rep"
0041    LEN     12   9
0042    SUBVV   12   2  12
0043    CALL    10   2   3
0044    MOV     11   9
0045    KSTR    12   8      ; " "
0046    MOV     13   3
0047    CAT     10  10  13
0048    TGETS   11   0   3  ; "_public_aliases"
0049    LEN     11  11
0050    ISEQV    8  11
0051    JMP     11 => 0055
0052    MOV     11  10
0053    KSTR    12  10      ; ","
0054    CAT     10  11  12
0055 => GGET    11   1      ; "table"
0056    TGETS   11  11  11  ; "insert"
0057    MOV     12   4
0058    MOV     13  10
0059    CALL    11   1   3
0060 => ITERC    8   3   3
0061    ITERL    8 => 0038
0062    RET1     4   2

-- BYTECODE -- argparse.lua:555-557
0001    TNEW     1   3
0002    GGET     2   0      ; "table"
0003    TGETS    2   2   1  ; "concat"
0004    TGETS    3   0   2  ; "_public_aliases"
0005    KSTR     4   3      ; ", "
0006    CALL     2   0   3
0007    TSETM    2   0      ; 1
0008    RET1     1   2

-- BYTECODE -- argparse.lua:559-569
0001    TGETS    1   0   0  ; "_default"
0002    ISF          1
0003    JMP      2 => 0023
0004    TGETS    1   0   1  ; "_show_default"
0005    ISF          1
0006    JMP      2 => 0023
0007    TGETS    1   0   2  ; "_description"
0008    ISF          1
0009    JMP      2 => 0017
0010    KSTR     1   3      ; "%s (default: %s)"
0011    MOV      2   1
0012    TGETS    1   1   4  ; "format"
0013    TGETS    3   0   2  ; "_description"
0014    TGETS    4   0   0  ; "_default"
0015    CALLT    1   4
0016    JMP      1 => 0028
0017 => KSTR     1   5      ; "default: %s"
0018    MOV      2   1
0019    TGETS    1   1   4  ; "format"
0020    TGETS    3   0   0  ; "_default"
0021    CALLT    1   3
0022    JMP      1 => 0028
0023 => TGETS    1   0   2  ; "_description"
0024    IST          1
0025    JMP      2 => 0027
0026    KSTR     1   6      ; ""
0027 => RET1     1   2
0028 => RET0     0   1

-- BYTECODE -- argparse.lua:571-573
0001    TGETS    1   0   0  ; "_summary"
0002    IST          1
0003    JMP      2 => 0008
0004    TGETS    1   0   1  ; "_description"
0005    IST          1
0006    JMP      2 => 0008
0007    KSTR     1   2      ; ""
0008 => RET1     1   2

-- BYTECODE -- argparse.lua:575-585
0001    MOV      2   0
0002    TGETS    1   0   0  ; "_get_argument_list"
0003    CALL     1   2   2
0004    GGET     2   1      ; "table"
0005    TGETS    2   2   2  ; "insert"
0006    MOV      3   1
0007    KSHORT   4   1
0008    TGETS    5   0   3  ; "_name"
0009    CALL     2   1   4
0010    GGET     2   1      ; "table"
0011    TGETS    2   2   4  ; "concat"
0012    MOV      3   1
0013    KSTR     4   5      ; " "
0014    CALL     2   2   3
0015    MOV      1   2
0016    TGETS    2   0   6  ; "_mincount"
0017    ISEQN    2   0      ; 0
0018    JMP      2 => 0022
0019    TGETS    2   0   7  ; "_default"
0020    ISF          2
0021    JMP      3 => 0026
0022 => KSTR     2   8      ; "["
0023    MOV      3   1
0024    KSTR     4   9      ; "]"
0025    CAT      1   2   4
0026 => RET1     1   2

-- BYTECODE -- argparse.lua:587-589
0001    TGETS    1   0   0  ; "_name"
0002    RET1     1   2

-- BYTECODE -- argparse.lua:591-603
0001    KPRI     1   0
0002    GGET     2   0      ; "ipairs"
0003    TGETS    3   0   1  ; "_public_aliases"
0004    CALL     2   4   2
0005    JMP      5 => 0024
0006 => MOV      8   6
0007    TGETS    7   6   2  ; "sub"
0008    KSHORT   9   1
0009    KSHORT  10   1
0010    CALL     7   2   4
0011    MOV      9   6
0012    TGETS    8   6   2  ; "sub"
0013    KSHORT  10   2
0014    KSHORT  11   2
0015    CALL     8   2   4
0016    ISNEV    7   8
0017    JMP      7 => 0024
0018    MOV      8   6
0019    TGETS    7   6   2  ; "sub"
0020    KSHORT   9   3
0021    CALL     7   2   3
0022    MOV      1   7
0023    JMP      2 => 0026
0024 => ITERC    5   3   3
0025    ITERL    5 => 0006
0026 => IST          1
0027    JMP      2 => 0034
0028    TGETS    2   0   3  ; "_name"
0029    MOV      3   2
0030    TGETS    2   2   2  ; "sub"
0031    KSHORT   4   2
0032    CALL     2   2   3
0033    MOV      1   2
0034 => MOV      3   1
0035    TGETS    2   1   4  ; "gsub"
0036    KSTR     4   5      ; "-"
0037    KSTR     5   6      ; "_"
0038    CALL     2   2   4
0039    RET1     2   2

-- BYTECODE -- argparse.lua:605-607
0001    TGETS    1   0   0  ; "_maxargs"
0002    TGETS    2   0   1  ; "_minargs"
0003    ISNEV    1   2
0004    JMP      1 => 0007
0005    KPRI     1   1
0006    JMP      2 => 0008
0007 => KPRI     1   2
0008 => RET1     1   2

-- BYTECODE -- argparse.lua:609-624
0001    TGETS    2   0   0  ; "_parent"
0002    ISF          1
0003    JMP      3 => 0008
0004    IST          2
0005    JMP      3 => 0008
0006    KSTR     3   1      ; ""
0007    RET1     3   2
0008 => TNEW     3   3
0009    TGETS    4   0   2  ; "_name"
0010    TSETB    4   3   1
0011 => ISF          2
0012    JMP      4 => 0027
0013    LOOP     4 => 0027
0014    ISF          1
0015    JMP      4 => 0019
0016    TGETS    4   2   0  ; "_parent"
0017    ISF          4
0018    JMP      5 => 0025
0019 => GGET     4   3      ; "table"
0020    TGETS    4   4   4  ; "insert"
0021    MOV      5   3
0022    KSHORT   6   1
0023    TGETS    7   2   2  ; "_name"
0024    CALL     4   1   4
0025 => TGETS    2   2   0  ; "_parent"
0026    JMP      4 => 0011
0027 => GGET     4   3      ; "table"
0028    TGETS    4   4   5  ; "concat"
0029    MOV      5   3
0030    KSTR     6   6      ; " "
0031    CALLT    4   3

-- BYTECODE -- argparse.lua:626-640
0001    IST          1
0002    JMP      2 => 0004
0003    TNEW     1   0
0004 => GGET     2   0      ; "ipairs"
0005    TGETS    3   0   1  ; "_commands"
0006    CALL     2   4   2
0007    JMP      5 => 0012
0008 => MOV      8   6
0009    TGETS    7   6   2  ; "_update_charset"
0010    MOV      9   1
0011    CALL     7   1   3
0012 => ITERC    5   3   3
0013    ITERL    5 => 0008
0014    GGET     2   0      ; "ipairs"
0015    TGETS    3   0   3  ; "_options"
0016    CALL     2   4   2
0017    JMP      5 => 0031
0018 => GGET     7   0      ; "ipairs"
0019    TGETS    8   6   4  ; "_aliases"
0020    CALL     7   4   2
0021    JMP     10 => 0029
0022 => MOV     13  11
0023    TGETS   12  11   5  ; "sub"
0024    KSHORT  14   1
0025    KSHORT  15   1
0026    CALL    12   2   4
0027    KPRI    13   2
0028    TSETV   13   1  12
0029 => ITERC   10   3   3
0030    ITERL   10 => 0022
0031 => ITERC    5   3   3
0032    ITERL    5 => 0018
0033    RET1     1   2

-- BYTECODE -- argparse.lua:642-646
0001    UGET     1   0      ; Argument
0002    VARG     2   0   1
0003    CALLM    1   2   0
0004    GGET     2   0      ; "table"
0005    TGETS    2   2   1  ; "insert"
0006    TGETS    3   0   2  ; "_arguments"
0007    MOV      4   1
0008    CALL     2   1   3
0009    RET1     1   2

-- BYTECODE -- argparse.lua:648-652
0001    UGET     1   0      ; Option
0002    VARG     2   0   1
0003    CALLM    1   2   0
0004    GGET     2   0      ; "table"
0005    TGETS    2   2   1  ; "insert"
0006    TGETS    3   0   2  ; "_options"
0007    MOV      4   1
0008    CALL     2   1   3
0009    RET1     1   2

-- BYTECODE -- argparse.lua:654-656
0001    MOV      2   0
0002    TGETS    1   0   0  ; "option"
0003    CALL     1   2   2
0004    MOV      2   1
0005    TGETS    1   1   1  ; "args"
0006    KSHORT   3   0
0007    CALL     1   2   3
0008    VARG     2   0   1
0009    CALLMT   1   0

-- BYTECODE -- argparse.lua:658-663
0001    UGET     1   0      ; Command
0002    CALL     1   2   1
0003    MOV      2   1
0004    TGETS    1   1   0  ; "add_help"
0005    KPRI     3   2
0006    CALL     1   2   3
0007    VARG     2   0   1
0008    CALLM    1   2   0
0009    TSETS    0   1   1  ; "_parent"
0010    GGET     2   2      ; "table"
0011    TGETS    2   2   3  ; "insert"
0012    TGETS    3   0   4  ; "_commands"
0013    MOV      4   1
0014    CALL     2   1   3
0015    RET1     1   2

-- BYTECODE -- argparse.lua:665-675
0001    TNEW     1   3
0002    VARG     2   0   1
0003    TSETM    2   0      ; 1
0004    GGET     2   0      ; "ipairs"
0005    MOV      3   1
0006    CALL     2   4   2
0007    JMP      5 => 0027
0008 => GGET     7   1      ; "getmetatable"
0009    MOV      8   6
0010    CALL     7   2   2
0011    GGET     8   2      ; "assert"
0012    UGET     9   0      ; Option
0013    ISEQV    7   9
0014    JMP      9 => 0020
0015    UGET     9   1      ; Argument
0016    ISEQV    7   9
0017    JMP      9 => 0020
0018    KPRI     9   1
0019    JMP     10 => 0021
0020 => KPRI     9   2
0021 => KSTR    10   3      ; "bad argument #%d to 'mutex' (Option or A"~
0022    MOV     11  10
0023    TGETS   10  10   4  ; "format"
0024    MOV     12   5
0025    CALL    10   0   3
0026    CALLM    8   1   1
0027 => ITERC    5   3   3
0028    ITERL    5 => 0008
0029    GGET     2   5      ; "table"
0030    TGETS    2   2   6  ; "insert"
0031    TGETS    3   0   7  ; "_mutexes"
0032    MOV      4   1
0033    CALL     2   1   3
0034    RET1     0   2

-- BYTECODE -- argparse.lua:677-690
0001    GGET     2   0      ; "assert"
0002    GGET     3   1      ; "type"
0003    MOV      4   1
0004    CALL     3   2   2
0005    ISEQS    3   2      ; "string"
0006    JMP      3 => 0009
0007    KPRI     3   1
0008    JMP      4 => 0010
0009 => KPRI     3   2
0010 => KSTR     4   3      ; "bad argument #1 to 'group' (string expec"~
0011    MOV      5   4
0012    TGETS    4   4   4  ; "format"
0013    GGET     6   1      ; "type"
0014    MOV      7   1
0015    CALL     6   0   2
0016    CALLM    4   0   1
0017    CALLM    2   1   1
0018    TDUP     2   5
0019    TSETS    1   2   6  ; "name"
0020    VARG     3   0   2
0021    TSETM    3   0      ; 1
0022    GGET     3   7      ; "ipairs"
0023    MOV      4   2
0024    CALL     3   4   2
0025    JMP      6 => 0048
0026 => GGET     8   8      ; "getmetatable"
0027    MOV      9   7
0028    CALL     8   2   2
0029    GGET     9   0      ; "assert"
0030    UGET    10   0      ; Option
0031    ISEQV    8  10
0032    JMP     10 => 0041
0033    UGET    10   1      ; Argument
0034    ISEQV    8  10
0035    JMP     10 => 0041
0036    UGET    10   2      ; Command
0037    ISEQV    8  10
0038    JMP     10 => 0041
0039    KPRI    10   1
0040    JMP     11 => 0042
0041 => KPRI    10   2
0042 => KSTR    11   9      ; "bad argument #%d to 'group' (Option or A"~
0043    MOV     12  11
0044    TGETS   11  11   4  ; "format"
0045    ADDVN   13   6   1  ; 1
0046    CALL    11   0   3
0047    CALLM    9   1   1
0048 => ITERC    6   3   3
0049    ITERL    6 => 0026
0050    GGET     3  10      ; "table"
0051    TGETS    3   3  11  ; "insert"
0052    TGETS    4   0  12  ; "_groups"
0053    MOV      5   2
0054    CALL     3   1   3
0055    RET1     0   2

-- BYTECODE -- argparse.lua:703-709
0001    UGET     1   0      ; lines
0002    UGET     2   0      ; lines
0003    LEN      2   2
0004    TGETV    1   1   2
0005    LEN      1   1
0006    ADDVN    1   1   0  ; 1
0007    LEN      2   0
0008    ADDVV    1   1   2
0009    UGET     2   1      ; max_usage_width
0010    ISGT     1   2
0011    JMP      1 => 0024
0012    UGET     1   0      ; lines
0013    UGET     2   0      ; lines
0014    LEN      2   2
0015    UGET     3   0      ; lines
0016    UGET     4   0      ; lines
0017    LEN      4   4
0018    TGETV    3   3   4
0019    KSTR     4   0      ; " "
0020    MOV      5   0
0021    CAT      3   3   5
0022    TSETV    3   1   2
0023    JMP      1 => 0036
0024 => UGET     1   0      ; lines
0025    UGET     2   0      ; lines
0026    LEN      2   2
0027    ADDVN    2   2   0  ; 1
0028    KSTR     3   0      ; " "
0029    MOV      4   3
0030    TGETS    3   3   1  ; "rep"
0031    UGET     5   2      ; usage_margin
0032    CALL     3   2   3
0033    MOV      4   0
0034    CAT      3   3   4
0035    TSETV    3   1   2
0036 => RET0     0   1

-- BYTECODE -- argparse.lua:727-749
0001    UGET     2   0      ; added_mutexes
0002    TGETV    2   2   0
0003    ISF          2
0004    JMP      3 => 0006
0005    RET0     0   1
0006 => UGET     2   0      ; added_mutexes
0007    KPRI     3   2
0008    TSETV    3   2   0
0009    TNEW     2   0
0010    GGET     3   0      ; "ipairs"
0011    MOV      4   0
0012    CALL     3   4   2
0013    JMP      6 => 0039
0014 => TGETS    8   7   1  ; "_hidden"
0015    IST          8
0016    JMP      8 => 0039
0017    UGET     8   1      ; added_elements
0018    TGETV    8   8   7
0019    IST          8
0020    JMP      8 => 0039
0021    GGET     8   2      ; "getmetatable"
0022    MOV      9   7
0023    CALL     8   2   2
0024    UGET     9   2      ; Option
0025    ISEQV    8   9
0026    JMP      8 => 0029
0027    ISNEV    7   1
0028    JMP      8 => 0039
0029 => GGET     8   3      ; "table"
0030    TGETS    8   8   4  ; "insert"
0031    MOV      9   2
0032    MOV     11   7
0033    TGETS   10   7   5  ; "_get_usage"
0034    CALL    10   0   2
0035    CALLM    8   1   1
0036    UGET     8   1      ; added_elements
0037    KPRI     9   2
0038    TSETV    9   8   7
0039 => ITERC    6   3   3
0040    ITERL    6 => 0014
0041    LEN      3   2
0042    ISNEN    3   0      ; 1
0043    JMP      3 => 0048
0044    UGET     3   3      ; add
0045    TGETB    4   2   1
0046    CALL     3   1   2
0047    JMP      3 => 0062
0048 => LEN      3   2
0049    KSHORT   4   1
0050    ISGE     4   3
0051    JMP      3 => 0062
0052    UGET     3   3      ; add
0053    KSTR     4   6      ; "("
0054    GGET     5   3      ; "table"
0055    TGETS    5   5   7  ; "concat"
0056    MOV      6   2
0057    KSTR     7   8      ; " | "
0058    CALL     5   2   3
0059    KSTR     6   9      ; ")"
0060    CAT      4   4   6
0061    CALL     3   1   2
0062 => RET0     0   1

-- BYTECODE -- argparse.lua:751-756
0001    TGETS    1   0   0  ; "_hidden"
0002    IST          1
0003    JMP      1 => 0016
0004    UGET     1   0      ; added_elements
0005    TGETV    1   1   0
0006    IST          1
0007    JMP      1 => 0016
0008    UGET     1   1      ; add
0009    MOV      3   0
0010    TGETS    2   0   1  ; "_get_usage"
0011    CALL     2   0   2
0012    CALLM    1   1   0
0013    UGET     1   0      ; added_elements
0014    KPRI     2   2
0015    TSETV    2   1   0
0016 => RET0     0   1

-- BYTECODE -- argparse.lua:694-826
0001    TGETS    1   0   0  ; "_usage"
0002    ISF          1
0003    JMP      2 => 0006
0004    TGETS    1   0   0  ; "_usage"
0005    UCLO     0 => 0167
0006 => MOV      2   0
0007    TGETS    1   0   1  ; "_inherit_property"
0008    KSTR     3   2      ; "usage_margin"
0009    UGET     4   0      ; usage_welcome
0010    LEN      4   4
0011    CALL     1   2   4
0012    MOV      3   0
0013    TGETS    2   0   1  ; "_inherit_property"
0014    KSTR     4   3      ; "usage_max_width"
0015    KSHORT   5  70
0016    CALL     2   2   4
0017    TNEW     3   3
0018    UGET     4   0      ; usage_welcome
0019    MOV      6   0
0020    TGETS    5   0   4  ; "_get_fullname"
0021    CALL     5   2   2
0022    CAT      4   4   5
0023    TSETB    4   3   1
0024    FNEW     4   5      ; argparse.lua:703
0025    TNEW     5   0
0026    TNEW     6   0
0027    TNEW     7   0
0028    TNEW     8   0
0029    FNEW     9   6      ; argparse.lua:727
0030    FNEW    10   7      ; argparse.lua:751
0031    GGET    11   8      ; "ipairs"
0032    TGETS   12   0   9  ; "_mutexes"
0033    CALL    11   4   2
0034    JMP     14 => 0076
0035 => KPRI    16   1
0036    KPRI    17   1
0037    GGET    18   8      ; "ipairs"
0038    MOV     19  15
0039    CALL    18   4   2
0040    JMP     21 => 0067
0041 => GGET    23  10      ; "getmetatable"
0042    MOV     24  22
0043    CALL    23   2   2
0044    UGET    24   1      ; Option
0045    ISNEV   23  24
0046    JMP     23 => 0054
0047    MOV     24  22
0048    TGETS   23  22  11  ; "_is_vararg"
0049    CALL    23   2   2
0050    ISF         23
0051    JMP     24 => 0065
0052    KPRI    16   2
0053    JMP     23 => 0065
0054 => KPRI    17   2
0055    TGETV   23   8  22
0056    IST         23
0057    JMP     24 => 0059
0058    TNEW    23   0
0059 => TSETV   23   8  22
0060    GGET    23  12      ; "table"
0061    TGETS   23  23  13  ; "insert"
0062    TGETV   24   8  22
0063    MOV     25  15
0064    CALL    23   1   3
0065 => KPRI    23   2
0066    TSETV   23   5  22
0067 => ITERC   21   3   3
0068    ITERL   21 => 0041
0069    IST         16
0070    JMP     18 => 0076
0071    IST         17
0072    JMP     18 => 0076
0073    MOV     18   9
0074    MOV     19  15
0075    CALL    18   1   2
0076 => ITERC   14   3   3
0077    ITERL   14 => 0035
0078    GGET    11   8      ; "ipairs"
0079    TGETS   12   0  14  ; "_options"
0080    CALL    11   4   2
0081    JMP     14 => 0093
0082 => TGETV   16   5  15
0083    IST         16
0084    JMP     16 => 0093
0085    MOV     17  15
0086    TGETS   16  15  11  ; "_is_vararg"
0087    CALL    16   2   2
0088    IST         16
0089    JMP     16 => 0093
0090    MOV     16  10
0091    MOV     17  15
0092    CALL    16   1   2
0093 => ITERC   14   3   3
0094    ITERL   14 => 0082
0095    GGET    11   8      ; "ipairs"
0096    TGETS   12   0  15  ; "_arguments"
0097    CALL    11   4   2
0098    JMP     14 => 0123
0099 => KPRI    16   0
0100    TGETV   17   5  15
0101    ISF         17
0102    JMP     18 => 0113
0103    GGET    17   8      ; "ipairs"
0104    TGETV   18   8  15
0105    CALL    17   4   2
0106    JMP     20 => 0111
0107 => TGETV   22   7  21
0108    IST         22
0109    JMP     22 => 0111
0110    MOV     16  21
0111 => ITERC   20   3   3
0112    ITERL   20 => 0107
0113 => ISF         16
0114    JMP     17 => 0120
0115    MOV     17   9
0116    MOV     18  16
0117    MOV     19  15
0118    CALL    17   1   3
0119    JMP     17 => 0123
0120 => MOV     17  10
0121    MOV     18  15
0122    CALL    17   1   2
0123 => ITERC   14   3   3
0124    ITERL   14 => 0099
0125    GGET    11   8      ; "ipairs"
0126    TGETS   12   0   9  ; "_mutexes"
0127    CALL    11   4   2
0128    JMP     14 => 0132
0129 => MOV     16   9
0130    MOV     17  15
0131    CALL    16   1   2
0132 => ITERC   14   3   3
0133    ITERL   14 => 0129
0134    GGET    11   8      ; "ipairs"
0135    TGETS   12   0  14  ; "_options"
0136    CALL    11   4   2
0137    JMP     14 => 0141
0138 => MOV     16  10
0139    MOV     17  15
0140    CALL    16   1   2
0141 => ITERC   14   3   3
0142    ITERL   14 => 0138
0143    TGETS   11   0  16  ; "_commands"
0144    LEN     11  11
0145    KSHORT  12   0
0146    ISGE    12  11
0147    JMP     11 => 0161
0148    TGETS   11   0  17  ; "_require_command"
0149    ISF         11
0150    JMP     12 => 0155
0151    MOV     11   4
0152    KSTR    12  18      ; "<command>"
0153    CALL    11   1   2
0154    JMP     11 => 0158
0155 => MOV     11   4
0156    KSTR    12  19      ; "[<command>]"
0157    CALL    11   1   2
0158 => MOV     11   4
0159    KSTR    12  20      ; "..."
0160    CALL    11   1   2
0161 => GGET    11  12      ; "table"
0162    TGETS   11  11  21  ; "concat"
0163    MOV     12   3
0164    KSTR    13  22      ; "\n"
0165    UCLO     0 => 0166
0166 => CALLT   11   3
0167 => RET1     1   2

-- BYTECODE -- argparse.lua:828-844
0001    ISNES    0   0      ; ""
0002    JMP      1 => 0005
0003    TNEW     1   0
0004    RET1     1   2
0005 => TNEW     1   0
0006    MOV      3   0
0007    TGETS    2   0   1  ; "sub"
0008    KSHORT   4  -1
0009    CALL     2   2   3
0010    ISEQS    2   2      ; "\n"
0011    JMP      2 => 0015
0012    MOV      2   0
0013    KSTR     3   2      ; "\n"
0014    CAT      0   2   3
0015 => MOV      3   0
0016    TGETS    2   0   3  ; "gmatch"
0017    KSTR     4   4      ; "([^\n]*)\n"
0018    CALL     2   4   3
0019    JMP      5 => 0025
0020 => GGET     6   5      ; "table"
0021    TGETS    6   6   6  ; "insert"
0022    MOV      7   1
0023    MOV      8   5
0024    CALL     6   1   3
0025 => ITERC    5   2   3
0026    ITERL    5 => 0020
0027    RET1     1   2

-- BYTECODE -- argparse.lua:846-902
0001    TNEW     2   0
0002    MOV      4   0
0003    TGETS    3   0   0  ; "match"
0004    KSTR     5   1      ; "^ *"
0005    CALL     3   2   3
0006    MOV      5   0
0007    TGETS    4   0   2  ; "find"
0008    KSTR     6   3      ; "^ *[%*%+%-]"
0009    CALL     4   2   3
0010    ISF          4
0011    JMP      5 => 0019
0012    MOV      4   3
0013    KSTR     5   4      ; " "
0014    MOV      7   0
0015    TGETS    6   0   0  ; "match"
0016    KSTR     8   5      ; "^ *[%*%+%-]( *)"
0017    CALL     6   2   3
0018    CAT      3   4   6
0019 => TNEW     4   0
0020    KSHORT   5   0
0021    KSHORT   6   1
0022 => LOOP     7 => 0077
0023    MOV      8   0
0024    TGETS    7   0   2  ; "find"
0025    KSTR     9   6      ; "([^ ]+)"
0026    MOV     10   6
0027    CALL     7   4   4
0028    IST          7
0029    JMP     10 => 0031
0030    JMP      7 => 0077
0031 => MOV     11   0
0032    TGETS   10   0   7  ; "sub"
0033    MOV     12   6
0034    SUBVN   13   7   0  ; 1
0035    CALL    10   2   4
0036    ADDVN    6   8   0  ; 1
0037    LEN     11   4
0038    ISEQN   11   1      ; 0
0039    JMP     11 => 0046
0040    LEN     11  10
0041    ADDVV   11   5  11
0042    LEN     12   9
0043    ADDVV   11  11  12
0044    ISGT    11   1
0045    JMP     11 => 0061
0046 => GGET    11   8      ; "table"
0047    TGETS   11  11   9  ; "insert"
0048    MOV     12   4
0049    MOV     13  10
0050    CALL    11   1   3
0051    GGET    11   8      ; "table"
0052    TGETS   11  11   9  ; "insert"
0053    MOV     12   4
0054    MOV     13   9
0055    CALL    11   1   3
0056    LEN     11  10
0057    ADDVV   11   5  11
0058    LEN     12   9
0059    ADDVV    5  11  12
0060    JMP     11 => 0022
0061 => GGET    11   8      ; "table"
0062    TGETS   11  11   9  ; "insert"
0063    MOV     12   2
0064    GGET    13   8      ; "table"
0065    TGETS   13  13  10  ; "concat"
0066    MOV     14   4
0067    CALL    13   0   2
0068    CALLM   11   1   1
0069    TNEW    11   3
0070    TSETB    3  11   1
0071    TSETB    9  11   2
0072    MOV      4  11
0073    LEN     11   3
0074    LEN     12   9
0075    ADDVV    5  11  12
0076    JMP      7 => 0022
0077 => LEN      7   4
0078    KSHORT   8   0
0079    ISGE     8   7
0080    JMP      7 => 0089
0081    GGET     7   8      ; "table"
0082    TGETS    7   7   9  ; "insert"
0083    MOV      8   2
0084    GGET     9   8      ; "table"
0085    TGETS    9   9  10  ; "concat"
0086    MOV     10   4
0087    CALL     9   0   2
0088    CALLM    7   1   1
0089 => LEN      7   2
0090    ISNEN    7   1      ; 0
0091    JMP      7 => 0094
0092    KSTR     7  11      ; ""
0093    TSETB    7   2   1
0094 => RET1     2   2

-- BYTECODE -- argparse.lua:907-919
0001    TNEW     2   0
0002    GGET     3   0      ; "ipairs"
0003    MOV      4   0
0004    CALL     3   4   2
0005    JMP      6 => 0021
0006 => UGET     8   0      ; autowrap_line
0007    MOV      9   7
0008    MOV     10   1
0009    CALL     8   2   3
0010    GGET     9   0      ; "ipairs"
0011    MOV     10   8
0012    CALL     9   4   2
0013    JMP     12 => 0019
0014 => GGET    14   1      ; "table"
0015    TGETS   14  14   2  ; "insert"
0016    MOV     15   2
0017    MOV     16  13
0018    CALL    14   1   3
0019 => ITERC   12   3   3
0020    ITERL   12 => 0014
0021 => ITERC    6   3   3
0022    ITERL    6 => 0006
0023    RET1     2   2

-- BYTECODE -- argparse.lua:921-971
0001    MOV      3   1
0002    TGETS    2   1   0  ; "_get_label_lines"
0003    CALL     2   2   2
0004    UGET     3   0      ; split_lines
0005    MOV      5   1
0006    TGETS    4   1   1  ; "_get_description"
0007    CALL     4   0   2
0008    CALLM    3   2   0
0009    TNEW     4   0
0010    MOV      6   0
0011    TGETS    5   0   2  ; "_inherit_property"
0012    KSTR     7   3      ; "help_usage_margin"
0013    KSHORT   8   3
0014    CALL     5   2   4
0015    KSTR     6   4      ; " "
0016    MOV      7   6
0017    TGETS    6   6   5  ; "rep"
0018    MOV      8   5
0019    CALL     6   2   3
0020    MOV      8   0
0021    TGETS    7   0   2  ; "_inherit_property"
0022    KSTR     9   6      ; "help_description_margin"
0023    KSHORT  10  25
0024    CALL     7   2   4
0025    KSTR     8   4      ; " "
0026    MOV      9   8
0027    TGETS    8   8   5  ; "rep"
0028    MOV     10   7
0029    CALL     8   2   3
0030    MOV     10   0
0031    TGETS    9   0   2  ; "_inherit_property"
0032    KSTR    11   7      ; "help_max_width"
0033    CALL     9   2   3
0034    ISF          9
0035    JMP     10 => 0046
0036    GGET    10   8      ; "math"
0037    TGETS   10  10   9  ; "max"
0038    SUBVV   11   9   7
0039    KSHORT  12  10
0040    CALL    10   2   3
0041    UGET    11   1      ; autowrap
0042    MOV     12   3
0043    MOV     13  10
0044    CALL    11   2   3
0045    MOV      3  11
0046 => TGETB   10   2   1
0047    LEN     10  10
0048    SUBVV   11   7   5
0049    ISGT    11  10
0050    JMP     10 => 0078
0051    GGET    10  10      ; "ipairs"
0052    MOV     11   2
0053    CALL    10   4   2
0054    JMP     13 => 0062
0055 => GGET    15  11      ; "table"
0056    TGETS   15  15  12  ; "insert"
0057    MOV     16   4
0058    MOV     17   6
0059    MOV     18  14
0060    CAT     17  17  18
0061    CALL    15   1   3
0062 => ITERC   13   3   3
0063    ITERL   13 => 0055
0064    GGET    10  10      ; "ipairs"
0065    MOV     11   3
0066    CALL    10   4   2
0067    JMP     13 => 0075
0068 => GGET    15  11      ; "table"
0069    TGETS   15  15  12  ; "insert"
0070    MOV     16   4
0071    MOV     17   8
0072    MOV     18  14
0073    CAT     17  17  18
0074    CALL    15   1   3
0075 => ITERC   13   3   3
0076    ITERL   13 => 0068
0077    JMP     10 => 0113
0078 => KSHORT  10   1
0079    GGET    11   8      ; "math"
0080    TGETS   11  11   9  ; "max"
0081    LEN     12   2
0082    LEN     13   3
0083    CALL    11   2   3
0084    KSHORT  12   1
0085    FORI    10 => 0113
0086 => TGETV   14   2  13
0087    TGETV   15   3  13
0088    KSTR    16  13      ; ""
0089    ISF         14
0090    JMP     17 => 0094
0091    MOV     17   6
0092    MOV     18  14
0093    CAT     16  17  18
0094 => ISF         15
0095    JMP     17 => 0107
0096    ISEQS   15  13      ; ""
0097    JMP     17 => 0107
0098    MOV     17  16
0099    KSTR    18   4      ; " "
0100    MOV     19  18
0101    TGETS   18  18   5  ; "rep"
0102    LEN     20  16
0103    SUBVV   20   7  20
0104    CALL    18   2   3
0105    MOV     19  15
0106    CAT     16  17  19
0107 => GGET    17  11      ; "table"
0108    TGETS   17  17  12  ; "insert"
0109    MOV     18   4
0110    MOV     19  16
0111    CALL    17   1   3
0112    FORL    10 => 0086
0113 => GGET    10  11      ; "table"
0114    TGETS   10  10  14  ; "concat"
0115    MOV     11   4
0116    KSTR    12  15      ; "\n"
0117    CALLT   10   3

-- BYTECODE -- argparse.lua:973-981
0001    TNEW     1   0
0002    GGET     2   0      ; "ipairs"
0003    MOV      3   0
0004    CALL     2   4   2
0005    JMP      5 => 0011
0006 => GGET     7   1      ; "getmetatable"
0007    MOV      8   6
0008    CALL     7   2   2
0009    KPRI     8   2
0010    TSETV    8   1   7
0011 => ITERC    5   3   3
0012    ITERL    5 => 0006
0013    RET1     1   2

-- BYTECODE -- argparse.lua:983-996
0001    TNEW     5   3
0002    TSETB    3   5   1
0003    GGET     6   0      ; "ipairs"
0004    MOV      7   4
0005    CALL     6   4   2
0006    JMP      9 => 0023
0007 => TGETS   11  10   1  ; "_hidden"
0008    IST         11
0009    JMP     11 => 0023
0010    TGETV   11   2  10
0011    IST         11
0012    JMP     11 => 0023
0013    KPRI    11   2
0014    TSETV   11   2  10
0015    GGET    11   2      ; "table"
0016    TGETS   11  11   3  ; "insert"
0017    MOV     12   5
0018    MOV     14   0
0019    TGETS   13   0   4  ; "_get_element_help"
0020    MOV     15  10
0021    CALL    13   0   3
0022    CALLM   11   1   1
0023 => ITERC    9   3   3
0024    ITERL    9 => 0007
0025    LEN      6   5
0026    KSHORT   7   1
0027    ISGE     7   6
0028    JMP      6 => 0047
0029    GGET     6   2      ; "table"
0030    TGETS    6   6   3  ; "insert"
0031    MOV      7   1
0032    GGET     8   2      ; "table"
0033    TGETS    8   8   5  ; "concat"
0034    MOV      9   5
0035    KSTR    10   6      ; "\n"
0036    MOV     11  10
0037    TGETS   10  10   7  ; "rep"
0038    MOV     13   0
0039    TGETS   12   0   8  ; "_inherit_property"
0040    KSTR    14   9      ; "help_vertical_space"
0041    KSHORT  15   0
0042    CALL    12   2   4
0043    ADDVN   12  12   0  ; 1
0044    CALL    10   0   3
0045    CALLM    8   0   1
0046    CALLM    6   1   1
0047 => RET0     0   1

-- BYTECODE -- argparse.lua:998-1073
0001    TGETS    1   0   0  ; "_help"
0002    ISF          1
0003    JMP      2 => 0006
0004    TGETS    1   0   0  ; "_help"
0005    RET1     1   2
0006 => TNEW     1   3
0007    MOV      3   0
0008    TGETS    2   0   1  ; "get_usage"
0009    CALL     2   0   2
0010    TSETM    2   0      ; 1
0011    MOV      3   0
0012    TGETS    2   0   2  ; "_inherit_property"
0013    KSTR     4   3      ; "help_max_width"
0014    CALL     2   2   3
0015    TGETS    3   0   4  ; "_description"
0016    ISF          3
0017    JMP      4 => 0037
0018    TGETS    3   0   4  ; "_description"
0019    ISF          2
0020    JMP      4 => 0032
0021    GGET     4   5      ; "table"
0022    TGETS    4   4   6  ; "concat"
0023    UGET     5   0      ; autowrap
0024    UGET     6   1      ; split_lines
0025    MOV      7   3
0026    CALL     6   2   2
0027    MOV      7   2
0028    CALL     5   2   3
0029    KSTR     6   7      ; "\n"
0030    CALL     4   2   3
0031    MOV      3   4
0032 => GGET     4   5      ; "table"
0033    TGETS    4   4   8  ; "insert"
0034    MOV      5   1
0035    MOV      6   3
0036    CALL     4   1   3
0037 => TNEW     3 4096
0038    UGET     4   2      ; Argument
0039    TNEW     5   0
0040    TSETV    5   3   4
0041    UGET     4   3      ; Option
0042    TNEW     5   0
0043    TSETV    5   3   4
0044    UGET     4   4      ; Command
0045    TNEW     5   0
0046    TSETV    5   3   4
0047    GGET     4   9      ; "ipairs"
0048    TGETS    5   0  10  ; "_groups"
0049    CALL     4   4   2
0050    JMP      7 => 0075
0051 => UGET     9   5      ; get_group_types
0052    MOV     10   8
0053    CALL     9   2   2
0054    GGET    10   9      ; "ipairs"
0055    TNEW    11   4
0056    UGET    12   2      ; Argument
0057    TSETB   12  11   1
0058    UGET    12   3      ; Option
0059    TSETB   12  11   2
0060    UGET    12   4      ; Command
0061    TSETB   12  11   3
0062    CALL    10   4   2
0063    JMP     13 => 0073
0064 => TGETV   15   9  14
0065    ISF         15
0066    JMP     16 => 0073
0067    GGET    15   5      ; "table"
0068    TGETS   15  15   8  ; "insert"
0069    TGETV   16   3  14
0070    MOV     17   8
0071    CALL    15   1   3
0072    JMP     10 => 0075
0073 => ITERC   13   3   3
0074    ITERL   13 => 0064
0075 => ITERC    7   3   3
0076    ITERL    7 => 0051
0077    TNEW     4   4
0078    TDUP     5  11
0079    UGET     6   2      ; Argument
0080    TSETS    6   5  12  ; "type"
0081    TGETS    6   0  13  ; "_arguments"
0082    TSETS    6   5  14  ; "elements"
0083    TSETB    5   4   1
0084    TDUP     5  15
0085    UGET     6   3      ; Option
0086    TSETS    6   5  12  ; "type"
0087    TGETS    6   0  16  ; "_options"
0088    TSETS    6   5  14  ; "elements"
0089    TSETB    5   4   2
0090    TDUP     5  17
0091    UGET     6   4      ; Command
0092    TSETS    6   5  12  ; "type"
0093    TGETS    6   0  18  ; "_commands"
0094    TSETS    6   5  14  ; "elements"
0095    TSETB    5   4   3
0096    TNEW     5   0
0097    GGET     6   9      ; "ipairs"
0098    MOV      7   4
0099    CALL     6   4   2
0100    JMP      9 => 0140
0101 => TGETS   11  10  12  ; "type"
0102    TGETV   11   3  11
0103    GGET    12   9      ; "ipairs"
0104    MOV     13  11
0105    CALL    12   4   2
0106    JMP     15 => 0116
0107 => MOV     18   0
0108    TGETS   17   0  19  ; "_add_group_help"
0109    MOV     19   1
0110    MOV     20   5
0111    TGETS   21  16  20  ; "name"
0112    KSTR    22  21      ; ":"
0113    CAT     21  21  22
0114    MOV     22  16
0115    CALL    17   1   6
0116 => ITERC   15   3   3
0117    ITERL   15 => 0107
0118    TGETS   12  10  20  ; "name"
0119    KSTR    13  21      ; ":"
0120    CAT     12  12  13
0121    LEN     13  11
0122    KSHORT  14   0
0123    ISGE    14  13
0124    JMP     13 => 0133
0125    KSTR    13  22      ; "Other "
0126    MOV     15  12
0127    TGETS   14  12  23  ; "gsub"
0128    KSTR    16  24      ; "^."
0129    GGET    17  25      ; "string"
0130    TGETS   17  17  26  ; "lower"
0131    CALL    14   2   4
0132    CAT     12  13  14
0133 => MOV     14   0
0134    TGETS   13   0  19  ; "_add_group_help"
0135    MOV     15   1
0136    MOV     16   5
0137    MOV     17  12
0138    TGETS   18  10  14  ; "elements"
0139    CALL    13   1   6
0140 => ITERC    9   3   3
0141    ITERL    9 => 0101
0142    TGETS    6   0  27  ; "_epilog"
0143    ISF          6
0144    JMP      7 => 0164
0145    TGETS    6   0  27  ; "_epilog"
0146    ISF          2
0147    JMP      7 => 0159
0148    GGET     7   5      ; "table"
0149    TGETS    7   7   6  ; "concat"
0150    UGET     8   0      ; autowrap
0151    UGET     9   1      ; split_lines
0152    MOV     10   6
0153    CALL     9   2   2
0154    MOV     10   2
0155    CALL     8   2   3
0156    KSTR     9   7      ; "\n"
0157    CALL     7   2   3
0158    MOV      6   7
0159 => GGET     7   5      ; "table"
0160    TGETS    7   7   8  ; "insert"
0161    MOV      8   1
0162    MOV      9   6
0163    CALL     7   1   3
0164 => GGET     6   5      ; "table"
0165    TGETS    6   6   6  ; "concat"
0166    MOV      7   1
0167    KSTR     8  28      ; "\n\n"
0168    CALLT    6   3

-- BYTECODE -- argparse.lua:1086-1101
0001    IST          2
0002    JMP      3 => 0014
0003    GGET     3   0      ; "print"
0004    UGET     4   0      ; self
0005    MOV      5   4
0006    TGETS    4   4   1  ; "get_help"
0007    CALL     4   0   2
0008    CALLM    3   1   0
0009    GGET     3   2      ; "os"
0010    TGETS    3   3   3  ; "exit"
0011    KSHORT   4   0
0012    CALL     3   1   2
0013    JMP      3 => 0038
0014 => GGET     3   4      ; "ipairs"
0015    UGET     4   0      ; self
0016    TGETS    4   4   5  ; "_commands"
0017    CALL     3   4   2
0018    JMP      6 => 0036
0019 => GGET     8   4      ; "ipairs"
0020    TGETS    9   7   6  ; "_aliases"
0021    CALL     8   4   2
0022    JMP     11 => 0034
0023 => ISNEV   12   2
0024    JMP     13 => 0034
0025    GGET    13   0      ; "print"
0026    MOV     15   7
0027    TGETS   14   7   1  ; "get_help"
0028    CALL    14   0   2
0029    CALLM   13   1   0
0030    GGET    13   2      ; "os"
0031    TGETS   13  13   3  ; "exit"
0032    KSHORT  14   0
0033    CALL    13   1   2
0034 => ITERC   11   3   3
0035    ITERL   11 => 0023
0036 => ITERC    6   3   3
0037    ITERL    6 => 0019
0038 => UGET     3   1      ; help
0039    MOV      4   3
0040    TGETS    3   3   7  ; "error"
0041    KSTR     5   8      ; "unknown command '%s'"
0042    MOV      6   5
0043    TGETS    5   5   9  ; "format"
0044    MOV      7   2
0045    CALL     5   0   3
0046    CALLM    3   1   1
0047    RET0     0   1

-- BYTECODE -- argparse.lua:1075-1113
0001    ISF          1
0002    JMP      2 => 0025
0003    GGET     2   0      ; "assert"
0004    GGET     3   1      ; "type"
0005    MOV      4   1
0006    CALL     3   2   2
0007    ISEQS    3   2      ; "string"
0008    JMP      3 => 0016
0009    GGET     3   1      ; "type"
0010    MOV      4   1
0011    CALL     3   2   2
0012    ISEQS    3   3      ; "table"
0013    JMP      3 => 0016
0014    KPRI     3   1
0015    JMP      4 => 0017
0016 => KPRI     3   2
0017 => KSTR     4   4      ; "bad argument #1 to 'add_help_command' (s"~
0018    MOV      5   4
0019    TGETS    4   4   5  ; "format"
0020    GGET     6   1      ; "type"
0021    MOV      7   1
0022    CALL     6   0   2
0023    CALLM    4   0   1
0024    CALLM    2   1   1
0025 => MOV      3   0
0026    TGETS    2   0   6  ; "command"
0027    CALL     2   2   2
0028    MOV      3   2
0029    TGETS    2   2   7  ; "description"
0030    KSTR     4   8      ; "Show help for commands."
0031    CALL     2   2   3
0032    MOV      4   2
0033    TGETS    3   2   9  ; "argument"
0034    KSTR     5   6      ; "command"
0035    CALL     3   2   3
0036    MOV      4   3
0037    TGETS    3   3   7  ; "description"
0038    KSTR     5  10      ; "The command to show help for."
0039    CALL     3   2   3
0040    MOV      4   3
0041    TGETS    3   3  11  ; "args"
0042    KSTR     5  12      ; "?"
0043    CALL     3   2   3
0044    MOV      4   3
0045    TGETS    3   3  13  ; "action"
0046    FNEW     5  14      ; argparse.lua:1086
0047    CALL     3   1   3
0048    ISF          1
0049    JMP      3 => 0054
0050    MOV      3   2
0051    MOV      4   1
0052    CALL     3   2   2
0053    MOV      2   3
0054 => TGETS    3   2  15  ; "_name"
0055    IST          3
0056    JMP      3 => 0060
0057    MOV      3   2
0058    KSTR     4  16      ; "help"
0059    CALL     3   1   2
0060 => KPRI     3   2
0061    TSETS    3   2  17  ; "_is_help_command"
0062    UCLO     0 => 0063
0063 => RET1     0   2

-- BYTECODE -- argparse.lua:1115-1156
0001    TGETS    1   0   0  ; "_basename"
0002    ISF          1
0003    JMP      2 => 0014
0004    TGETS    1   0   0  ; "_basename"
0005    MOV      2   1
0006    TGETS    1   1   1  ; "find"
0007    KSTR     3   2      ; "[^%w_%-%+%.]"
0008    CALL     1   2   3
0009    ISF          1
0010    JMP      2 => 0028
0011    KPRI     1   1
0012    RET1     1   2
0013    JMP      1 => 0028
0014 => GGET     1   3      ; "ipairs"
0015    TGETS    2   0   4  ; "_aliases"
0016    CALL     1   4   2
0017    JMP      4 => 0026
0018 => MOV      7   5
0019    TGETS    6   5   1  ; "find"
0020    KSTR     8   2      ; "[^%w_%-%+%.]"
0021    CALL     6   2   3
0022    ISF          6
0023    JMP      7 => 0026
0024    KPRI     6   1
0025    RET1     6   2
0026 => ITERC    4   3   3
0027    ITERL    4 => 0018
0028 => GGET     1   3      ; "ipairs"
0029    TGETS    2   0   5  ; "_options"
0030    CALL     1   4   2
0031    JMP      4 => 0063
0032 => GGET     6   3      ; "ipairs"
0033    TGETS    7   5   4  ; "_aliases"
0034    CALL     6   4   2
0035    JMP      9 => 0044
0036 => MOV     12  10
0037    TGETS   11  10   1  ; "find"
0038    KSTR    13   2      ; "[^%w_%-%+%.]"
0039    CALL    11   2   3
0040    ISF         11
0041    JMP     12 => 0044
0042    KPRI    11   1
0043    RET1    11   2
0044 => ITERC    9   3   3
0045    ITERL    9 => 0036
0046    TGETS    6   5   6  ; "_choices"
0047    ISF          6
0048    JMP      7 => 0063
0049    GGET     6   3      ; "ipairs"
0050    TGETS    7   5   6  ; "_choices"
0051    CALL     6   4   2
0052    JMP      9 => 0061
0053 => MOV     12  10
0054    TGETS   11  10   1  ; "find"
0055    KSTR    13   7      ; "[%s'"]"
0056    CALL    11   2   3
0057    ISF         11
0058    JMP     12 => 0061
0059    KPRI    11   1
0060    RET1    11   2
0061 => ITERC    9   3   3
0062    ITERL    9 => 0053
0063 => ITERC    4   3   3
0064    ITERL    4 => 0032
0065    GGET     1   3      ; "ipairs"
0066    TGETS    2   0   8  ; "_arguments"
0067    CALL     1   4   2
0068    JMP      4 => 0086
0069 => TGETS    6   5   6  ; "_choices"
0070    ISF          6
0071    JMP      7 => 0086
0072    GGET     6   3      ; "ipairs"
0073    TGETS    7   5   6  ; "_choices"
0074    CALL     6   4   2
0075    JMP      9 => 0084
0076 => MOV     12  10
0077    TGETS   11  10   1  ; "find"
0078    KSTR    13   7      ; "[%s'"]"
0079    CALL    11   2   3
0080    ISF         11
0081    JMP     12 => 0084
0082    KPRI    11   1
0083    RET1    11   2
0084 => ITERC    9   3   3
0085    ITERL    9 => 0076
0086 => ITERC    4   3   3
0087    ITERL    4 => 0069
0088    GGET     1   3      ; "ipairs"
0089    TGETS    2   0   9  ; "_commands"
0090    CALL     1   4   2
0091    JMP      4 => 0099
0092 => MOV      7   5
0093    TGETS    6   5  10  ; "_is_shell_safe"
0094    CALL     6   2   2
0095    IST          6
0096    JMP      6 => 0099
0097    KPRI     6   1
0098    RET1     6   2
0099 => ITERC    4   3   3
0100    ITERL    4 => 0092
0101    KPRI     1   2
0102    RET1     1   2

-- BYTECODE -- argparse.lua:1168-1171
0001    GGET     3   0      ; "io"
0002    TGETS    3   3   1  ; "write"
0003    UGET     4   0      ; self
0004    KSTR     5   2      ; "get_"
0005    MOV      6   2
0006    KSTR     7   3      ; "_complete"
0007    CAT      5   5   7
0008    TGETV    4   4   5
0009    UGET     5   0      ; self
0010    CALL     4   0   2
0011    CALLM    3   1   0
0012    GGET     3   4      ; "os"
0013    TGETS    3   3   5  ; "exit"
0014    KSHORT   4   0
0015    CALL     3   1   2
0016    RET0     0   1

-- BYTECODE -- argparse.lua:1158-1182
0001    ISF          1
0002    JMP      2 => 0025
0003    GGET     2   0      ; "assert"
0004    GGET     3   1      ; "type"
0005    MOV      4   1
0006    CALL     3   2   2
0007    ISEQS    3   2      ; "string"
0008    JMP      3 => 0016
0009    GGET     3   1      ; "type"
0010    MOV      4   1
0011    CALL     3   2   2
0012    ISEQS    3   3      ; "table"
0013    JMP      3 => 0016
0014    KPRI     3   1
0015    JMP      4 => 0017
0016 => KPRI     3   2
0017 => KSTR     4   4      ; "bad argument #1 to 'add_complete' (strin"~
0018    MOV      5   4
0019    TGETS    4   4   5  ; "format"
0020    GGET     6   1      ; "type"
0021    MOV      7   1
0022    CALL     6   0   2
0023    CALLM    4   0   1
0024    CALLM    2   1   1
0025 => MOV      3   0
0026    TGETS    2   0   6  ; "option"
0027    CALL     2   2   2
0028    MOV      3   2
0029    TGETS    2   2   7  ; "description"
0030    KSTR     4   8      ; "Output a shell completion script for the"~
0031    CALL     2   2   3
0032    MOV      3   2
0033    TGETS    2   2   9  ; "args"
0034    KSHORT   4   1
0035    CALL     2   2   3
0036    MOV      3   2
0037    TGETS    2   2  10  ; "choices"
0038    TDUP     4  11
0039    CALL     2   2   3
0040    MOV      3   2
0041    TGETS    2   2  12  ; "action"
0042    FNEW     4  13      ; argparse.lua:1168
0043    CALL     2   2   3
0044    ISF          1
0045    JMP      3 => 0050
0046    MOV      3   2
0047    MOV      4   1
0048    CALL     3   2   2
0049    MOV      2   3
0050 => TGETS    3   2  14  ; "_name"
0051    IST          3
0052    JMP      3 => 0056
0053    MOV      3   2
0054    KSTR     4  15      ; "--completion"
0055    CALL     3   1   2
0056 => UCLO     0 => 0057
0057 => RET1     0   2

-- BYTECODE -- argparse.lua:1195-1198
0001    GGET     3   0      ; "io"
0002    TGETS    3   3   1  ; "write"
0003    UGET     4   0      ; self
0004    KSTR     5   2      ; "get_"
0005    MOV      6   2
0006    KSTR     7   3      ; "_complete"
0007    CAT      5   5   7
0008    TGETV    4   4   5
0009    UGET     5   0      ; self
0010    CALL     4   0   2
0011    CALLM    3   1   0
0012    GGET     3   4      ; "os"
0013    TGETS    3   3   5  ; "exit"
0014    KSHORT   4   0
0015    CALL     3   1   2
0016    RET0     0   1

-- BYTECODE -- argparse.lua:1184-1209
0001    ISF          1
0002    JMP      2 => 0025
0003    GGET     2   0      ; "assert"
0004    GGET     3   1      ; "type"
0005    MOV      4   1
0006    CALL     3   2   2
0007    ISEQS    3   2      ; "string"
0008    JMP      3 => 0016
0009    GGET     3   1      ; "type"
0010    MOV      4   1
0011    CALL     3   2   2
0012    ISEQS    3   3      ; "table"
0013    JMP      3 => 0016
0014    KPRI     3   1
0015    JMP      4 => 0017
0016 => KPRI     3   2
0017 => KSTR     4   4      ; "bad argument #1 to 'add_complete_command"~
0018    MOV      5   4
0019    TGETS    4   4   5  ; "format"
0020    GGET     6   1      ; "type"
0021    MOV      7   1
0022    CALL     6   0   2
0023    CALLM    4   0   1
0024    CALLM    2   1   1
0025 => MOV      3   0
0026    TGETS    2   0   6  ; "command"
0027    CALL     2   2   2
0028    MOV      3   2
0029    TGETS    2   2   7  ; "description"
0030    KSTR     4   8      ; "Output a shell completion script."
0031    CALL     2   2   3
0032    MOV      4   2
0033    TGETS    3   2   9  ; "argument"
0034    KSTR     5  10      ; "shell"
0035    CALL     3   2   3
0036    MOV      4   3
0037    TGETS    3   3   7  ; "description"
0038    KSTR     5  11      ; "The shell to output a completion script "~
0039    CALL     3   2   3
0040    MOV      4   3
0041    TGETS    3   3  12  ; "choices"
0042    TDUP     5  13
0043    CALL     3   2   3
0044    MOV      4   3
0045    TGETS    3   3  14  ; "action"
0046    FNEW     5  15      ; argparse.lua:1195
0047    CALL     3   1   3
0048    ISF          1
0049    JMP      3 => 0054
0050    MOV      3   2
0051    MOV      4   1
0052    CALL     3   2   2
0053    MOV      2   3
0054 => TGETS    3   2  16  ; "_name"
0055    IST          3
0056    JMP      3 => 0060
0057    MOV      3   2
0058    KSTR     4  17      ; "completion"
0059    CALL     3   1   2
0060 => UCLO     0 => 0061
0061 => RET1     0   2

-- BYTECODE -- argparse.lua:1211-1213
0001    MOV      2   0
0002    TGETS    1   0   0  ; "gsub"
0003    KSTR     3   1      ; "[/\]*$"
0004    KSTR     4   2      ; ""
0005    CALL     1   2   4
0006    MOV      2   1
0007    TGETS    1   1   3  ; "match"
0008    KSTR     3   4      ; ".*[/\]([^/\]*)"
0009    CALL     1   2   3
0010    IST          1
0011    JMP      2 => 0013
0012    MOV      1   0
0013 => RET1     1   2

-- BYTECODE -- argparse.lua:1215-1218
0001    MOV      2   0
0002    TGETS    1   0   0  ; "_get_description"
0003    CALL     1   2   2
0004    MOV      2   1
0005    TGETS    1   1   1  ; "match"
0006    KSTR     3   2      ; "^(.-)%.%s"
0007    CALL     1   2   3
0008    ISTC     2   1
0009    JMP      2 => 0017
0010    MOV      3   0
0011    TGETS    2   0   0  ; "_get_description"
0012    CALL     2   2   2
0013    MOV      3   2
0014    TGETS    2   2   1  ; "match"
0015    KSTR     4   3      ; "^(.-)%.?$"
0016    CALL     2   2   3
0017 => RET1     2   2

-- BYTECODE -- argparse.lua:1220-1228
0001    TNEW     1   0
0002    GGET     2   0      ; "ipairs"
0003    TGETS    3   0   1  ; "_options"
0004    CALL     2   4   2
0005    JMP      5 => 0017
0006 => GGET     7   0      ; "ipairs"
0007    TGETS    8   6   2  ; "_aliases"
0008    CALL     7   4   2
0009    JMP     10 => 0015
0010 => GGET    12   3      ; "table"
0011    TGETS   12  12   4  ; "insert"
0012    MOV     13   1
0013    MOV     14  11
0014    CALL    12   1   3
0015 => ITERC   10   3   3
0016    ITERL   10 => 0010
0017 => ITERC    5   3   3
0018    ITERL    5 => 0006
0019    GGET     2   3      ; "table"
0020    TGETS    2   2   5  ; "concat"
0021    MOV      3   1
0022    KSTR     4   6      ; " "
0023    CALLT    2   3

-- BYTECODE -- argparse.lua:1230-1238
0001    TNEW     1   0
0002    GGET     2   0      ; "ipairs"
0003    TGETS    3   0   1  ; "_commands"
0004    CALL     2   4   2
0005    JMP      5 => 0017
0006 => GGET     7   0      ; "ipairs"
0007    TGETS    8   6   2  ; "_aliases"
0008    CALL     7   4   2
0009    JMP     10 => 0015
0010 => GGET    12   3      ; "table"
0011    TGETS   12  12   4  ; "insert"
0012    MOV     13   1
0013    MOV     14  11
0014    CALL    12   1   3
0015 => ITERC   10   3   3
0016    ITERL   10 => 0010
0017 => ITERC    5   3   3
0018    ITERL    5 => 0006
0019    GGET     2   3      ; "table"
0020    TGETS    2   2   5  ; "concat"
0021    MOV      3   1
0022    KSTR     4   6      ; " "
0023    CALLT    2   3

-- BYTECODE -- argparse.lua:1240-1262
0001    TNEW     3   0
0002    GGET     4   0      ; "ipairs"
0003    TGETS    5   0   1  ; "_options"
0004    CALL     4   4   2
0005    JMP      7 => 0076
0006 => TGETS    9   8   2  ; "_choices"
0007    IST          9
0008    JMP     10 => 0013
0009    TGETS    9   8   3  ; "_minargs"
0010    KSHORT  10   0
0011    ISGE    10   9
0012    JMP      9 => 0076
0013 => KPRI     9   0
0014    TGETS   10   8   2  ; "_choices"
0015    ISF         10
0016    JMP     11 => 0026
0017    KSTR    10   4      ; "COMPREPLY=($(compgen -W ""
0018    GGET    11   5      ; "table"
0019    TGETS   11  11   6  ; "concat"
0020    TGETS   12   8   2  ; "_choices"
0021    KSTR    13   7      ; " "
0022    CALL    11   2   3
0023    KSTR    12   8      ; "" -- "$cur"))"
0024    CAT      9  10  12
0025    JMP     10 => 0027
0026 => KSTR     9   9      ; "COMPREPLY=($(compgen -f -- "$cur"))"
0027 => GGET    10   5      ; "table"
0028    TGETS   10  10  10  ; "insert"
0029    MOV     11   3
0030    KSTR    12   7      ; " "
0031    MOV     13  12
0032    TGETS   12  12  11  ; "rep"
0033    ADDVN   14   2   0  ; 4
0034    CALL    12   2   3
0035    GGET    13   5      ; "table"
0036    TGETS   13  13   6  ; "concat"
0037    TGETS   14   8  12  ; "_aliases"
0038    KSTR    15  13      ; "|"
0039    CALL    13   2   3
0040    KSTR    14  14      ; ")"
0041    CAT     12  12  14
0042    CALL    10   1   3
0043    GGET    10   5      ; "table"
0044    TGETS   10  10  10  ; "insert"
0045    MOV     11   3
0046    KSTR    12   7      ; " "
0047    MOV     13  12
0048    TGETS   12  12  11  ; "rep"
0049    ADDVN   14   2   1  ; 8
0050    CALL    12   2   3
0051    MOV     13   9
0052    CAT     12  12  13
0053    CALL    10   1   3
0054    GGET    10   5      ; "table"
0055    TGETS   10  10  10  ; "insert"
0056    MOV     11   3
0057    KSTR    12   7      ; " "
0058    MOV     13  12
0059    TGETS   12  12  11  ; "rep"
0060    ADDVN   14   2   1  ; 8
0061    CALL    12   2   3
0062    KSTR    13  15      ; "return 0"
0063    CAT     12  12  13
0064    CALL    10   1   3
0065    GGET    10   5      ; "table"
0066    TGETS   10  10  10  ; "insert"
0067    MOV     11   3
0068    KSTR    12   7      ; " "
0069    MOV     13  12
0070    TGETS   12  12  11  ; "rep"
0071    ADDVN   14   2   1  ; 8
0072    CALL    12   2   3
0073    KSTR    13  16      ; ";;"
0074    CAT     12  12  13
0075    CALL    10   1   3
0076 => ITERC    7   3   3
0077    ITERL    7 => 0006
0078    LEN      4   3
0079    KSHORT   5   0
0080    ISGE     5   4
0081    JMP      4 => 0113
0082    GGET     4   5      ; "table"
0083    TGETS    4   4  10  ; "insert"
0084    MOV      5   1
0085    KSTR     6   7      ; " "
0086    MOV      7   6
0087    TGETS    6   6  11  ; "rep"
0088    MOV      8   2
0089    CALL     6   2   3
0090    KSTR     7  17      ; "case "$prev" in"
0091    CAT      6   6   7
0092    CALL     4   1   3
0093    GGET     4   5      ; "table"
0094    TGETS    4   4  10  ; "insert"
0095    MOV      5   1
0096    GGET     6   5      ; "table"
0097    TGETS    6   6   6  ; "concat"
0098    MOV      7   3
0099    KSTR     8  18      ; "\n"
0100    CALL     6   0   3
0101    CALLM    4   1   1
0102    GGET     4   5      ; "table"
0103    TGETS    4   4  10  ; "insert"
0104    MOV      5   1
0105    KSTR     6   7      ; " "
0106    MOV      7   6
0107    TGETS    6   6  11  ; "rep"
0108    MOV      8   2
0109    CALL     6   2   3
0110    KSTR     7  19      ; "esac\n"
0111    CAT      6   6   7
0112    CALL     4   1   3
0113 => RET0     0   1

-- BYTECODE -- argparse.lua:1264-1288
0001    TGETS    3   0   0  ; "_commands"
0002    LEN      3   3
0003    ISNEN    3   0      ; 0
0004    JMP      3 => 0006
0005    RET0     0   1
0006 => GGET     3   1      ; "table"
0007    TGETS    3   3   2  ; "insert"
0008    MOV      4   1
0009    KSTR     5   3      ; " "
0010    MOV      6   5
0011    TGETS    5   5   4  ; "rep"
0012    MOV      7   2
0013    CALL     5   2   3
0014    KSTR     6   5      ; "args=("${args[@]:1}")"
0015    CAT      5   5   6
0016    CALL     3   1   3
0017    GGET     3   1      ; "table"
0018    TGETS    3   3   2  ; "insert"
0019    MOV      4   1
0020    KSTR     5   3      ; " "
0021    MOV      6   5
0022    TGETS    5   5   4  ; "rep"
0023    MOV      7   2
0024    CALL     5   2   3
0025    KSTR     6   6      ; "for arg in "${args[@]}"; do"
0026    CAT      5   5   6
0027    CALL     3   1   3
0028    GGET     3   1      ; "table"
0029    TGETS    3   3   2  ; "insert"
0030    MOV      4   1
0031    KSTR     5   3      ; " "
0032    MOV      6   5
0033    TGETS    5   5   4  ; "rep"
0034    ADDVN    7   2   1  ; 4
0035    CALL     5   2   3
0036    KSTR     6   7      ; "case "$arg" in"
0037    CAT      5   5   6
0038    CALL     3   1   3
0039    GGET     3   8      ; "ipairs"
0040    TGETS    4   0   0  ; "_commands"
0041    CALL     3   4   2
0042    JMP      6 => 0131
0043 => GGET     8   1      ; "table"
0044    TGETS    8   8   2  ; "insert"
0045    MOV      9   1
0046    KSTR    10   3      ; " "
0047    MOV     11  10
0048    TGETS   10  10   4  ; "rep"
0049    ADDVN   12   2   2  ; 8
0050    CALL    10   2   3
0051    GGET    11   1      ; "table"
0052    TGETS   11  11   9  ; "concat"
0053    TGETS   12   7  10  ; "_aliases"
0054    KSTR    13  11      ; "|"
0055    CALL    11   2   3
0056    KSTR    12  12      ; ")"
0057    CAT     10  10  12
0058    CALL     8   1   3
0059    TGETS    8   0  13  ; "_parent"
0060    ISF          8
0061    JMP      9 => 0076
0062    GGET     8   1      ; "table"
0063    TGETS    8   8   2  ; "insert"
0064    MOV      9   1
0065    KSTR    10   3      ; " "
0066    MOV     11  10
0067    TGETS   10  10   4  ; "rep"
0068    ADDVN   12   2   3  ; 12
0069    CALL    10   2   3
0070    KSTR    11  14      ; "cmd="$cmd "
0071    TGETS   12   7  15  ; "_name"
0072    KSTR    13  16      ; """
0073    CAT     10  10  13
0074    CALL     8   1   3
0075    JMP      8 => 0089
0076 => GGET     8   1      ; "table"
0077    TGETS    8   8   2  ; "insert"
0078    MOV      9   1
0079    KSTR    10   3      ; " "
0080    MOV     11  10
0081    TGETS   10  10   4  ; "rep"
0082    ADDVN   12   2   3  ; 12
0083    CALL    10   2   3
0084    KSTR    11  17      ; "cmd=""
0085    TGETS   12   7  15  ; "_name"
0086    KSTR    13  16      ; """
0087    CAT     10  10  13
0088    CALL     8   1   3
0089 => GGET     8   1      ; "table"
0090    TGETS    8   8   2  ; "insert"
0091    MOV      9   1
0092    KSTR    10   3      ; " "
0093    MOV     11  10
0094    TGETS   10  10   4  ; "rep"
0095    ADDVN   12   2   3  ; 12
0096    CALL    10   2   3
0097    KSTR    11  18      ; "opts="$opts "
0098    MOV     13   7
0099    TGETS   12   7  19  ; "_get_options"
0100    CALL    12   2   2
0101    KSTR    13  16      ; """
0102    CAT     10  10  13
0103    CALL     8   1   3
0104    MOV      9   7
0105    TGETS    8   7  20  ; "_bash_get_cmd"
0106    MOV     10   1
0107    ADDVN   11   2   3  ; 12
0108    CALL     8   1   4
0109    GGET     8   1      ; "table"
0110    TGETS    8   8   2  ; "insert"
0111    MOV      9   1
0112    KSTR    10   3      ; " "
0113    MOV     11  10
0114    TGETS   10  10   4  ; "rep"
0115    ADDVN   12   2   3  ; 12
0116    CALL    10   2   3
0117    KSTR    11  21      ; "break"
0118    CAT     10  10  11
0119    CALL     8   1   3
0120    GGET     8   1      ; "table"
0121    TGETS    8   8   2  ; "insert"
0122    MOV      9   1
0123    KSTR    10   3      ; " "
0124    MOV     11  10
0125    TGETS   10  10   4  ; "rep"
0126    ADDVN   12   2   3  ; 12
0127    CALL    10   2   3
0128    KSTR    11  22      ; ";;"
0129    CAT     10  10  11
0130    CALL     8   1   3
0131 => ITERC    6   3   3
0132    ITERL    6 => 0043
0133    GGET     3   1      ; "table"
0134    TGETS    3   3   2  ; "insert"
0135    MOV      4   1
0136    KSTR     5   3      ; " "
0137    MOV      6   5
0138    TGETS    5   5   4  ; "rep"
0139    ADDVN    7   2   1  ; 4
0140    CALL     5   2   3
0141    KSTR     6  23      ; "esac"
0142    CAT      5   5   6
0143    CALL     3   1   3
0144    GGET     3   1      ; "table"
0145    TGETS    3   3   2  ; "insert"
0146    MOV      4   1
0147    KSTR     5   3      ; " "
0148    MOV      6   5
0149    TGETS    5   5   4  ; "rep"
0150    MOV      7   2
0151    CALL     5   2   3
0152    KSTR     6  24      ; "done"
0153    CAT      5   5   6
0154    CALL     3   1   3
0155    RET0     0   1

-- BYTECODE -- argparse.lua:1290-1312
0001    TNEW     2   0
0002    TGETS    3   0   0  ; "_parent"
0003    ISF          3
0004    JMP      4 => 0010
0005    MOV      4   0
0006    TGETS    3   0   1  ; "_bash_option_args"
0007    MOV      5   2
0008    KSHORT   6  12
0009    CALL     3   1   4
0010 => TGETS    3   0   2  ; "_commands"
0011    LEN      3   3
0012    KSHORT   4   0
0013    ISGE     4   3
0014    JMP      3 => 0031
0015    GGET     3   3      ; "table"
0016    TGETS    3   3   4  ; "insert"
0017    MOV      4   2
0018    KSTR     5   5      ; " "
0019    MOV      6   5
0020    TGETS    5   5   6  ; "rep"
0021    KSHORT   7  12
0022    CALL     5   2   3
0023    KSTR     6   7      ; "COMPREPLY=($(compgen -W ""
0024    MOV      8   0
0025    TGETS    7   0   8  ; "_get_commands"
0026    CALL     7   2   2
0027    KSTR     8   9      ; "" -- "$cur"))"
0028    CAT      5   5   8
0029    CALL     3   1   3
0030    JMP      3 => 0050
0031 => TGETS    3   0  10  ; "_is_help_command"
0032    ISF          3
0033    JMP      4 => 0050
0034    GGET     3   3      ; "table"
0035    TGETS    3   3   4  ; "insert"
0036    MOV      4   2
0037    KSTR     5   5      ; " "
0038    MOV      6   5
0039    TGETS    5   5   6  ; "rep"
0040    KSHORT   7  12
0041    CALL     5   2   3
0042    KSTR     6   7      ; "COMPREPLY=($(compgen -W ""
0043    TGETS    7   0   0  ; "_parent"
0044    MOV      8   7
0045    TGETS    7   7   8  ; "_get_commands"
0046    CALL     7   2   2
0047    KSTR     8   9      ; "" -- "$cur"))"
0048    CAT      5   5   8
0049    CALL     3   1   3
0050 => LEN      3   2
0051    KSHORT   4   0
0052    ISGE     4   3
0053    JMP      3 => 0090
0054    GGET     3   3      ; "table"
0055    TGETS    3   3   4  ; "insert"
0056    MOV      4   1
0057    KSTR     5   5      ; " "
0058    MOV      6   5
0059    TGETS    5   5   6  ; "rep"
0060    KSHORT   7   8
0061    CALL     5   2   3
0062    KSTR     6  11      ; "'"
0063    MOV      8   0
0064    TGETS    7   0  12  ; "_get_fullname"
0065    KPRI     9   2
0066    CALL     7   2   3
0067    KSTR     8  13      ; "')"
0068    CAT      5   5   8
0069    CALL     3   1   3
0070    GGET     3   3      ; "table"
0071    TGETS    3   3   4  ; "insert"
0072    MOV      4   1
0073    GGET     5   3      ; "table"
0074    TGETS    5   5  14  ; "concat"
0075    MOV      6   2
0076    KSTR     7  15      ; "\n"
0077    CALL     5   0   3
0078    CALLM    3   1   1
0079    GGET     3   3      ; "table"
0080    TGETS    3   3   4  ; "insert"
0081    MOV      4   1
0082    KSTR     5   5      ; " "
0083    MOV      6   5
0084    TGETS    5   5   6  ; "rep"
0085    KSHORT   7  12
0086    CALL     5   2   3
0087    KSTR     6  16      ; ";;"
0088    CAT      5   5   6
0089    CALL     3   1   3
0090 => GGET     3  17      ; "ipairs"
0091    TGETS    4   0   2  ; "_commands"
0092    CALL     3   4   2
0093    JMP      6 => 0098
0094 => MOV      9   7
0095    TGETS    8   7  18  ; "_bash_cmd_completions"
0096    MOV     10   1
0097    CALL     8   1   3
0098 => ITERC    6   3   3
0099    ITERL    6 => 0094
0100    RET0     0   1

-- BYTECODE -- argparse.lua:1314-1346
0001    UGET     1   0      ; base_name
0002    TGETS    2   0   1  ; "_name"
0003    CALL     1   2   2
0004    TSETS    1   0   0  ; "_basename"
0005    GGET     1   2      ; "assert"
0006    MOV      3   0
0007    TGETS    2   0   3  ; "_is_shell_safe"
0008    CALL     2   0   2
0009    CALLM    1   1   0
0010    TNEW     1   3
0011    KSTR     2   4      ; "_%s() {\n    local IFS=$' \t\n'\n    loc"~
0012    MOV      3   2
0013    TGETS    2   2   5  ; "format"
0014    TGETS    4   0   0  ; "_basename"
0015    MOV      6   0
0016    TGETS    5   0   6  ; "_get_options"
0017    CALL     5   0   2
0018    CALLM    2   0   2
0019    TSETM    2   0      ; 1
0020    MOV      3   0
0021    TGETS    2   0   7  ; "_bash_option_args"
0022    MOV      4   1
0023    KSHORT   5   4
0024    CALL     2   1   4
0025    MOV      3   0
0026    TGETS    2   0   8  ; "_bash_get_cmd"
0027    MOV      4   1
0028    KSHORT   5   4
0029    CALL     2   1   4
0030    TGETS    2   0   9  ; "_commands"
0031    LEN      2   2
0032    KSHORT   3   0
0033    ISGE     3   2
0034    JMP      2 => 0066
0035    GGET     2  10      ; "table"
0036    TGETS    2   2  11  ; "insert"
0037    MOV      3   1
0038    KSTR     4  12      ; ""
0039    CALL     2   1   3
0040    GGET     2  10      ; "table"
0041    TGETS    2   2  11  ; "insert"
0042    MOV      3   1
0043    KSTR     4  13      ; " "
0044    MOV      5   4
0045    TGETS    4   4  14  ; "rep"
0046    KSHORT   6   4
0047    CALL     4   2   3
0048    KSTR     5  15      ; "case "$cmd" in"
0049    CAT      4   4   5
0050    CALL     2   1   3
0051    MOV      3   0
0052    TGETS    2   0  16  ; "_bash_cmd_completions"
0053    MOV      4   1
0054    CALL     2   1   3
0055    GGET     2  10      ; "table"
0056    TGETS    2   2  11  ; "insert"
0057    MOV      3   1
0058    KSTR     4  13      ; " "
0059    MOV      5   4
0060    TGETS    4   4  14  ; "rep"
0061    KSHORT   6   4
0062    CALL     4   2   3
0063    KSTR     5  17      ; "esac\n"
0064    CAT      4   4   5
0065    CALL     2   1   3
0066 => GGET     2  10      ; "table"
0067    TGETS    2   2  11  ; "insert"
0068    MOV      3   1
0069    KSTR     4  18      ; "    if [[ "$cur" = -* ]]; then\n        "~
0070    MOV      5   4
0071    TGETS    4   4   5  ; "format"
0072    TGETS    6   0   0  ; "_basename"
0073    TGETS    7   0   0  ; "_basename"
0074    CALL     4   0   4
0075    CALLM    2   1   1
0076    GGET     2  10      ; "table"
0077    TGETS    2   2  19  ; "concat"
0078    MOV      3   1
0079    KSTR     4  20      ; "\n"
0080    CALLT    2   3

-- BYTECODE -- argparse.lua:1348-1416
0001    TGETS    4   0   0  ; "_parent"
0002    ISF          4
0003    JMP      5 => 0027
0004    GGET     4   1      ; "table"
0005    TGETS    4   4   2  ; "insert"
0006    MOV      5   1
0007    KSTR     6   3      ; " "
0008    MOV      7   6
0009    TGETS    6   6   4  ; "rep"
0010    MOV      8   3
0011    CALL     6   2   3
0012    KSTR     7   5      ; "options=("
0013    CAT      6   6   7
0014    CALL     4   1   3
0015    GGET     4   1      ; "table"
0016    TGETS    4   4   2  ; "insert"
0017    MOV      5   1
0018    KSTR     6   3      ; " "
0019    MOV      7   6
0020    TGETS    6   6   4  ; "rep"
0021    ADDVN    8   3   0  ; 2
0022    CALL     6   2   3
0023    KSTR     7   6      ; "$options"
0024    CAT      6   6   7
0025    CALL     4   1   3
0026    JMP      4 => 0038
0027 => GGET     4   1      ; "table"
0028    TGETS    4   4   2  ; "insert"
0029    MOV      5   1
0030    KSTR     6   3      ; " "
0031    MOV      7   6
0032    TGETS    6   6   4  ; "rep"
0033    MOV      8   3
0034    CALL     6   2   3
0035    KSTR     7   7      ; "local -a options=("
0036    CAT      6   6   7
0037    CALL     4   1   3
0038 => GGET     4   8      ; "ipairs"
0039    TGETS    5   0   9  ; "_options"
0040    CALL     4   4   2
0041    JMP      7 => 0162
0042 => TNEW     9   0
0043    TGETS   10   8  10  ; "_aliases"
0044    LEN     10  10
0045    KSHORT  11   1
0046    ISGE    11  10
0047    JMP     10 => 0070
0048    TGETS   10   8  11  ; "_maxcount"
0049    KSHORT  11   1
0050    ISGE    11  10
0051    JMP     10 => 0057
0052    GGET    10   1      ; "table"
0053    TGETS   10  10   2  ; "insert"
0054    MOV     11   9
0055    KSTR    12  12      ; ""*""
0056    CALL    10   1   3
0057 => GGET    10   1      ; "table"
0058    TGETS   10  10   2  ; "insert"
0059    MOV     11   9
0060    KSTR    12  13      ; "{"
0061    GGET    13   1      ; "table"
0062    TGETS   13  13  14  ; "concat"
0063    TGETS   14   8  10  ; "_aliases"
0064    KSTR    15  15      ; ","
0065    CALL    13   2   3
0066    KSTR    14  16      ; "}""
0067    CAT     12  12  14
0068    CALL    10   1   3
0069    JMP     10 => 0089
0070 => GGET    10   1      ; "table"
0071    TGETS   10  10   2  ; "insert"
0072    MOV     11   9
0073    KSTR    12  17      ; """
0074    CALL    10   1   3
0075    TGETS   10   8  11  ; "_maxcount"
0076    KSHORT  11   1
0077    ISGE    11  10
0078    JMP     10 => 0084
0079    GGET    10   1      ; "table"
0080    TGETS   10  10   2  ; "insert"
0081    MOV     11   9
0082    KSTR    12  18      ; "*"
0083    CALL    10   1   3
0084 => GGET    10   1      ; "table"
0085    TGETS   10  10   2  ; "insert"
0086    MOV     11   9
0087    TGETS   12   8  19  ; "_name"
0088    CALL    10   1   3
0089 => TGETS   10   8  20  ; "_description"
0090    ISF         10
0091    JMP     11 => 0108
0092    UGET    10   0      ; get_short_description
0093    MOV     11   8
0094    CALL    10   2   2
0095    MOV     11  10
0096    TGETS   10  10  21  ; "gsub"
0097    KSTR    12  22      ; "["%]:`$]"
0098    KSTR    13  23      ; "\%0"
0099    CALL    10   2   4
0100    GGET    11   1      ; "table"
0101    TGETS   11  11   2  ; "insert"
0102    MOV     12   9
0103    KSTR    13  24      ; "["
0104    MOV     14  10
0105    KSTR    15  25      ; "]"
0106    CAT     13  13  15
0107    CALL    11   1   3
0108 => TGETS   10   8  26  ; "_maxargs"
0109    GGET    11  27      ; "math"
0110    TGETS   11  11  28  ; "huge"
0111    ISNEV   10  11
0112    JMP     10 => 0118
0113    GGET    10   1      ; "table"
0114    TGETS   10  10   2  ; "insert"
0115    MOV     11   9
0116    KSTR    12  29      ; ":*"
0117    CALL    10   1   3
0118 => TGETS   10   8  30  ; "_choices"
0119    ISF         10
0120    JMP     11 => 0134
0121    GGET    10   1      ; "table"
0122    TGETS   10  10   2  ; "insert"
0123    MOV     11   9
0124    KSTR    12  31      ; ": :("
0125    GGET    13   1      ; "table"
0126    TGETS   13  13  14  ; "concat"
0127    TGETS   14   8  30  ; "_choices"
0128    KSTR    15   3      ; " "
0129    CALL    13   2   3
0130    KSTR    14  32      ; ")"
0131    CAT     12  12  14
0132    CALL    10   1   3
0133    JMP     10 => 0143
0134 => TGETS   10   8  26  ; "_maxargs"
0135    KSHORT  11   0
0136    ISGE    11  10
0137    JMP     10 => 0143
0138    GGET    10   1      ; "table"
0139    TGETS   10  10   2  ; "insert"
0140    MOV     11   9
0141    KSTR    12  33      ; ": :_files"
0142    CALL    10   1   3
0143 => GGET    10   1      ; "table"
0144    TGETS   10  10   2  ; "insert"
0145    MOV     11   9
0146    KSTR    12  17      ; """
0147    CALL    10   1   3
0148    GGET    10   1      ; "table"
0149    TGETS   10  10   2  ; "insert"
0150    MOV     11   1
0151    KSTR    12   3      ; " "
0152    MOV     13  12
0153    TGETS   12  12   4  ; "rep"
0154    ADDVN   14   3   0  ; 2
0155    CALL    12   2   3
0156    GGET    13   1      ; "table"
0157    TGETS   13  13  14  ; "concat"
0158    MOV     14   9
0159    CALL    13   2   2
0160    CAT     12  12  13
0161    CALL    10   1   3
0162 => ITERC    7   3   3
0163    ITERL    7 => 0042
0164    GGET     4   1      ; "table"
0165    TGETS    4   4   2  ; "insert"
0166    MOV      5   1
0167    KSTR     6   3      ; " "
0168    MOV      7   6
0169    TGETS    6   6   4  ; "rep"
0170    MOV      8   3
0171    CALL     6   2   3
0172    KSTR     7  32      ; ")"
0173    CAT      6   6   7
0174    CALL     4   1   3
0175    GGET     4   1      ; "table"
0176    TGETS    4   4   2  ; "insert"
0177    MOV      5   1
0178    KSTR     6   3      ; " "
0179    MOV      7   6
0180    TGETS    6   6   4  ; "rep"
0181    MOV      8   3
0182    CALL     6   2   3
0183    KSTR     7  34      ; "_arguments -s -S \"
0184    CAT      6   6   7
0185    CALL     4   1   3
0186    GGET     4   1      ; "table"
0187    TGETS    4   4   2  ; "insert"
0188    MOV      5   1
0189    KSTR     6   3      ; " "
0190    MOV      7   6
0191    TGETS    6   6   4  ; "rep"
0192    ADDVN    8   3   0  ; 2
0193    CALL     6   2   3
0194    KSTR     7  35      ; "$options \"
0195    CAT      6   6   7
0196    CALL     4   1   3
0197    TGETS    4   0  36  ; "_is_help_command"
0198    ISF          4
0199    JMP      5 => 0217
0200    GGET     4   1      ; "table"
0201    TGETS    4   4   2  ; "insert"
0202    MOV      5   1
0203    KSTR     6   3      ; " "
0204    MOV      7   6
0205    TGETS    6   6   4  ; "rep"
0206    ADDVN    8   3   0  ; 2
0207    CALL     6   2   3
0208    KSTR     7  37      ; "": :("
0209    TGETS    8   0   0  ; "_parent"
0210    MOV      9   8
0211    TGETS    8   8  38  ; "_get_commands"
0212    CALL     8   2   2
0213    KSTR     9  39      ; ")" \"
0214    CAT      6   6   9
0215    CALL     4   1   3
0216    JMP      4 => 0303
0217 => GGET     4   8      ; "ipairs"
0218    TGETS    5   0  40  ; "_arguments"
0219    CALL     4   4   2
0220    JMP      7 => 0272
0221 => KPRI     9   0
0222    TGETS   10   8  30  ; "_choices"
0223    ISF         10
0224    JMP     11 => 0234
0225    KSTR    10  31      ; ": :("
0226    GGET    11   1      ; "table"
0227    TGETS   11  11  14  ; "concat"
0228    TGETS   12   8  30  ; "_choices"
0229    KSTR    13   3      ; " "
0230    CALL    11   2   3
0231    KSTR    12  32      ; ")"
0232    CAT      9  10  12
0233    JMP     10 => 0235
0234 => KSTR     9  33      ; ": :_files"
0235 => TGETS   10   8  26  ; "_maxargs"
0236    GGET    11  27      ; "math"
0237    TGETS   11  11  28  ; "huge"
0238    ISNEV   10  11
0239    JMP     10 => 0254
0240    GGET    10   1      ; "table"
0241    TGETS   10  10   2  ; "insert"
0242    MOV     11   1
0243    KSTR    12   3      ; " "
0244    MOV     13  12
0245    TGETS   12  12   4  ; "rep"
0246    ADDVN   14   3   0  ; 2
0247    CALL    12   2   3
0248    KSTR    13  41      ; ""*"
0249    MOV     14   9
0250    KSTR    15  42      ; "" \"
0251    CAT     12  12  15
0252    CALL    10   1   3
0253    JMP      4 => 0274
0254 => KSHORT  10   1
0255    TGETS   11   8  26  ; "_maxargs"
0256    KSHORT  12   1
0257    FORI    10 => 0272
0258 => GGET    14   1      ; "table"
0259    TGETS   14  14   2  ; "insert"
0260    MOV     15   1
0261    KSTR    16   3      ; " "
0262    MOV     17  16
0263    TGETS   16  16   4  ; "rep"
0264    ADDVN   18   3   0  ; 2
0265    CALL    16   2   3
0266    KSTR    17  17      ; """
0267    MOV     18   9
0268    KSTR    19  42      ; "" \"
0269    CAT     16  16  19
0270    CALL    14   1   3
0271    FORL    10 => 0258
0272 => ITERC    7   3   3
0273    ITERL    7 => 0221
0274 => TGETS    4   0  43  ; "_commands"
0275    LEN      4   4
0276    KSHORT   5   0
0277    ISGE     5   4
0278    JMP      4 => 0303
0279    GGET     4   1      ; "table"
0280    TGETS    4   4   2  ; "insert"
0281    MOV      5   1
0282    KSTR     6   3      ; " "
0283    MOV      7   6
0284    TGETS    6   6   4  ; "rep"
0285    ADDVN    8   3   0  ; 2
0286    CALL     6   2   3
0287    KSTR     7  44      ; "": :_"
0288    MOV      8   2
0289    KSTR     9  45      ; "_cmds" \"
0290    CAT      6   6   9
0291    CALL     4   1   3
0292    GGET     4   1      ; "table"
0293    TGETS    4   4   2  ; "insert"
0294    MOV      5   1
0295    KSTR     6   3      ; " "
0296    MOV      7   6
0297    TGETS    6   6   4  ; "rep"
0298    ADDVN    8   3   0  ; 2
0299    CALL     6   2   3
0300    KSTR     7  46      ; ""*:: :->args" \"
0301    CAT      6   6   7
0302    CALL     4   1   3
0303 => GGET     4   1      ; "table"
0304    TGETS    4   4   2  ; "insert"
0305    MOV      5   1
0306    KSTR     6   3      ; " "
0307    MOV      7   6
0308    TGETS    6   6   4  ; "rep"
0309    ADDVN    8   3   0  ; 2
0310    CALL     6   2   3
0311    KSTR     7  47      ; "&& return 0"
0312    CAT      6   6   7
0313    CALL     4   1   3
0314    RET0     0   1

-- BYTECODE -- argparse.lua:1418-1436
0001    GGET     3   0      ; "table"
0002    TGETS    3   3   1  ; "insert"
0003    MOV      4   1
0004    KSTR     5   2      ; "\n_"
0005    MOV      6   2
0006    KSTR     7   3      ; "_cmds() {"
0007    CAT      5   5   7
0008    CALL     3   1   3
0009    GGET     3   0      ; "table"
0010    TGETS    3   3   1  ; "insert"
0011    MOV      4   1
0012    KSTR     5   4      ; "  local -a commands=("
0013    CALL     3   1   3
0014    GGET     3   5      ; "ipairs"
0015    TGETS    4   0   6  ; "_commands"
0016    CALL     3   4   2
0017    JMP      6 => 0072
0018 => TNEW     8   0
0019    TGETS    9   7   7  ; "_aliases"
0020    LEN      9   9
0021    KSHORT  10   1
0022    ISGE    10   9
0023    JMP      9 => 0037
0024    GGET     9   0      ; "table"
0025    TGETS    9   9   1  ; "insert"
0026    MOV     10   8
0027    KSTR    11   8      ; "{"
0028    GGET    12   0      ; "table"
0029    TGETS   12  12   9  ; "concat"
0030    TGETS   13   7   7  ; "_aliases"
0031    KSTR    14  10      ; ","
0032    CALL    12   2   3
0033    KSTR    13  11      ; "}""
0034    CAT     11  11  13
0035    CALL     9   1   3
0036    JMP      9 => 0044
0037 => GGET     9   0      ; "table"
0038    TGETS    9   9   1  ; "insert"
0039    MOV     10   8
0040    KSTR    11  12      ; """
0041    TGETS   12   7  13  ; "_name"
0042    CAT     11  11  12
0043    CALL     9   1   3
0044 => TGETS    9   7  14  ; "_description"
0045    ISF          9
0046    JMP     10 => 0061
0047    GGET     9   0      ; "table"
0048    TGETS    9   9   1  ; "insert"
0049    MOV     10   8
0050    KSTR    11  15      ; ":"
0051    UGET    12   0      ; get_short_description
0052    MOV     13   7
0053    CALL    12   2   2
0054    MOV     13  12
0055    TGETS   12  12  16  ; "gsub"
0056    KSTR    14  17      ; "["`$]"
0057    KSTR    15  18      ; "\%0"
0058    CALL    12   2   4
0059    CAT     11  11  12
0060    CALL     9   1   3
0061 => GGET     9   0      ; "table"
0062    TGETS    9   9   1  ; "insert"
0063    MOV     10   1
0064    KSTR    11  19      ; "    "
0065    GGET    12   0      ; "table"
0066    TGETS   12  12   9  ; "concat"
0067    MOV     13   8
0068    CALL    12   2   2
0069    KSTR    13  12      ; """
0070    CAT     11  11  13
0071    CALL     9   1   3
0072 => ITERC    6   3   3
0073    ITERL    6 => 0018
0074    GGET     3   0      ; "table"
0075    TGETS    3   3   1  ; "insert"
0076    MOV      4   1
0077    KSTR     5  20      ; "  )\n  _describe "command" commands\n}"
0078    CALL     3   1   3
0079    RET0     0   1

-- BYTECODE -- argparse.lua:1438-1455
0001    TGETS    5   0   0  ; "_commands"
0002    LEN      5   5
0003    ISNEN    5   0      ; 0
0004    JMP      5 => 0006
0005    RET0     0   1
0006 => MOV      6   0
0007    TGETS    5   0   1  ; "_zsh_cmds"
0008    MOV      7   2
0009    MOV      8   3
0010    CALL     5   1   4
0011    GGET     5   2      ; "table"
0012    TGETS    5   5   3  ; "insert"
0013    MOV      6   1
0014    KSTR     7   4      ; "\n"
0015    KSTR     8   5      ; " "
0016    MOV      9   8
0017    TGETS    8   8   6  ; "rep"
0018    MOV     10   4
0019    CALL     8   2   3
0020    KSTR     9   7      ; "case $words[1] in"
0021    CAT      7   7   9
0022    CALL     5   1   3
0023    GGET     5   8      ; "ipairs"
0024    TGETS    6   0   0  ; "_commands"
0025    CALL     5   4   2
0026    JMP      8 => 0071
0027 => MOV     10   3
0028    KSTR    11   9      ; "_"
0029    TGETS   12   9  10  ; "_name"
0030    CAT     10  10  12
0031    GGET    11   2      ; "table"
0032    TGETS   11  11   3  ; "insert"
0033    MOV     12   1
0034    KSTR    13   5      ; " "
0035    MOV     14  13
0036    TGETS   13  13   6  ; "rep"
0037    ADDVN   15   4   1  ; 2
0038    CALL    13   2   3
0039    GGET    14   2      ; "table"
0040    TGETS   14  14  11  ; "concat"
0041    TGETS   15   9  12  ; "_aliases"
0042    KSTR    16  13      ; "|"
0043    CALL    14   2   3
0044    KSTR    15  14      ; ")"
0045    CAT     13  13  15
0046    CALL    11   1   3
0047    MOV     12   9
0048    TGETS   11   9  15  ; "_zsh_arguments"
0049    MOV     13   1
0050    MOV     14  10
0051    ADDVN   15   4   2  ; 4
0052    CALL    11   1   5
0053    MOV     12   9
0054    TGETS   11   9  16  ; "_zsh_complete_help"
0055    MOV     13   1
0056    MOV     14   2
0057    MOV     15  10
0058    ADDVN   16   4   2  ; 4
0059    CALL    11   1   6
0060    GGET    11   2      ; "table"
0061    TGETS   11  11   3  ; "insert"
0062    MOV     12   1
0063    KSTR    13   5      ; " "
0064    MOV     14  13
0065    TGETS   13  13   6  ; "rep"
0066    ADDVN   15   4   2  ; 4
0067    CALL    13   2   3
0068    KSTR    14  17      ; ";;\n"
0069    CAT     13  13  14
0070    CALL    11   1   3
0071 => ITERC    8   3   3
0072    ITERL    8 => 0027
0073    GGET     5   2      ; "table"
0074    TGETS    5   5   3  ; "insert"
0075    MOV      6   1
0076    KSTR     7   5      ; " "
0077    MOV      8   7
0078    TGETS    7   7   6  ; "rep"
0079    MOV      9   4
0080    CALL     7   2   3
0081    KSTR     8  18      ; "esac"
0082    CAT      7   7   8
0083    CALL     5   1   3
0084    RET0     0   1

-- BYTECODE -- argparse.lua:1457-1477
0001    UGET     1   0      ; base_name
0002    TGETS    2   0   1  ; "_name"
0003    CALL     1   2   2
0004    TSETS    1   0   0  ; "_basename"
0005    GGET     1   2      ; "assert"
0006    MOV      3   0
0007    TGETS    2   0   3  ; "_is_shell_safe"
0008    CALL     2   0   2
0009    CALLM    1   1   0
0010    TNEW     1   3
0011    KSTR     2   4      ; "#compdef %s\n"
0012    MOV      3   2
0013    TGETS    2   2   5  ; "format"
0014    TGETS    4   0   0  ; "_basename"
0015    CALL     2   0   3
0016    TSETM    2   0      ; 1
0017    TNEW     2   0
0018    GGET     3   6      ; "table"
0019    TGETS    3   3   7  ; "insert"
0020    MOV      4   1
0021    KSTR     5   8      ; "_"
0022    TGETS    6   0   0  ; "_basename"
0023    KSTR     7   9      ; "() {"
0024    CAT      5   5   7
0025    CALL     3   1   3
0026    TGETS    3   0  10  ; "_commands"
0027    LEN      3   3
0028    KSHORT   4   0
0029    ISGE     4   3
0030    JMP      3 => 0041
0031    GGET     3   6      ; "table"
0032    TGETS    3   3   7  ; "insert"
0033    MOV      4   1
0034    KSTR     5  11      ; "  local context state state_descr line"
0035    CALL     3   1   3
0036    GGET     3   6      ; "table"
0037    TGETS    3   3   7  ; "insert"
0038    MOV      4   1
0039    KSTR     5  12      ; "  typeset -A opt_args\n"
0040    CALL     3   1   3
0041 => MOV      4   0
0042    TGETS    3   0  13  ; "_zsh_arguments"
0043    MOV      5   1
0044    TGETS    6   0   0  ; "_basename"
0045    KSHORT   7   2
0046    CALL     3   1   5
0047    MOV      4   0
0048    TGETS    3   0  14  ; "_zsh_complete_help"
0049    MOV      5   1
0050    MOV      6   2
0051    TGETS    7   0   0  ; "_basename"
0052    KSHORT   8   2
0053    CALL     3   1   6
0054    GGET     3   6      ; "table"
0055    TGETS    3   3   7  ; "insert"
0056    MOV      4   1
0057    KSTR     5  15      ; "\n  return 1"
0058    CALL     3   1   3
0059    GGET     3   6      ; "table"
0060    TGETS    3   3   7  ; "insert"
0061    MOV      4   1
0062    KSTR     5  16      ; "}"
0063    CALL     3   1   3
0064    GGET     3   6      ; "table"
0065    TGETS    3   3  17  ; "concat"
0066    MOV      4   1
0067    KSTR     5  18      ; "\n"
0068    CALL     3   2   3
0069    LEN      4   2
0070    KSHORT   5   0
0071    ISGE     5   4
0072    JMP      4 => 0081
0073    MOV      4   3
0074    KSTR     5  18      ; "\n"
0075    GGET     6   6      ; "table"
0076    TGETS    6   6  17  ; "concat"
0077    MOV      7   2
0078    KSTR     8  18      ; "\n"
0079    CALL     6   2   3
0080    CAT      3   4   6
0081 => MOV      4   3
0082    KSTR     5  19      ; "\n\n_"
0083    TGETS    6   0   0  ; "_basename"
0084    KSTR     7  18      ; "\n"
0085    CAT      4   4   7
0086    RET1     4   2

-- BYTECODE -- argparse.lua:1479-1481
0001    MOV      2   0
0002    TGETS    1   0   0  ; "gsub"
0003    KSTR     3   1      ; "[\']"
0004    KSTR     4   2      ; "\%0"
0005    CALLT    1   4

-- BYTECODE -- argparse.lua:1483-1501
0001    TGETS    3   0   0  ; "_commands"
0002    LEN      3   3
0003    ISNEN    3   0      ; 0
0004    JMP      3 => 0006
0005    RET0     0   1
0006 => GGET     3   1      ; "table"
0007    TGETS    3   3   2  ; "insert"
0008    MOV      4   1
0009    KSTR     5   3      ; " "
0010    MOV      6   5
0011    TGETS    5   5   4  ; "rep"
0012    MOV      7   2
0013    CALL     5   2   3
0014    KSTR     6   5      ; "set -e cmdline[1]"
0015    CAT      5   5   6
0016    CALL     3   1   3
0017    GGET     3   1      ; "table"
0018    TGETS    3   3   2  ; "insert"
0019    MOV      4   1
0020    KSTR     5   3      ; " "
0021    MOV      6   5
0022    TGETS    5   5   4  ; "rep"
0023    MOV      7   2
0024    CALL     5   2   3
0025    KSTR     6   6      ; "for arg in $cmdline"
0026    CAT      5   5   6
0027    CALL     3   1   3
0028    GGET     3   1      ; "table"
0029    TGETS    3   3   2  ; "insert"
0030    MOV      4   1
0031    KSTR     5   3      ; " "
0032    MOV      6   5
0033    TGETS    5   5   4  ; "rep"
0034    ADDVN    7   2   1  ; 4
0035    CALL     5   2   3
0036    KSTR     6   7      ; "switch $arg"
0037    CAT      5   5   6
0038    CALL     3   1   3
0039    GGET     3   8      ; "ipairs"
0040    TGETS    4   0   0  ; "_commands"
0041    CALL     3   4   2
0042    JMP      6 => 0087
0043 => GGET     8   1      ; "table"
0044    TGETS    8   8   2  ; "insert"
0045    MOV      9   1
0046    KSTR    10   3      ; " "
0047    MOV     11  10
0048    TGETS   10  10   4  ; "rep"
0049    ADDVN   12   2   2  ; 8
0050    CALL    10   2   3
0051    KSTR    11   9      ; "case "
0052    GGET    12   1      ; "table"
0053    TGETS   12  12  10  ; "concat"
0054    TGETS   13   7  11  ; "_aliases"
0055    KSTR    14   3      ; " "
0056    CALL    12   2   3
0057    CAT     10  10  12
0058    CALL     8   1   3
0059    GGET     8   1      ; "table"
0060    TGETS    8   8   2  ; "insert"
0061    MOV      9   1
0062    KSTR    10   3      ; " "
0063    MOV     11  10
0064    TGETS   10  10   4  ; "rep"
0065    ADDVN   12   2   3  ; 12
0066    CALL    10   2   3
0067    KSTR    11  12      ; "set cmd $cmd "
0068    TGETS   12   7  13  ; "_name"
0069    CAT     10  10  12
0070    CALL     8   1   3
0071    MOV      9   7
0072    TGETS    8   7  14  ; "_fish_get_cmd"
0073    MOV     10   1
0074    ADDVN   11   2   3  ; 12
0075    CALL     8   1   4
0076    GGET     8   1      ; "table"
0077    TGETS    8   8   2  ; "insert"
0078    MOV      9   1
0079    KSTR    10   3      ; " "
0080    MOV     11  10
0081    TGETS   10  10   4  ; "rep"
0082    ADDVN   12   2   3  ; 12
0083    CALL    10   2   3
0084    KSTR    11  15      ; "break"
0085    CAT     10  10  11
0086    CALL     8   1   3
0087 => ITERC    6   3   3
0088    ITERL    6 => 0043
0089    GGET     3   1      ; "table"
0090    TGETS    3   3   2  ; "insert"
0091    MOV      4   1
0092    KSTR     5   3      ; " "
0093    MOV      6   5
0094    TGETS    5   5   4  ; "rep"
0095    ADDVN    7   2   1  ; 4
0096    CALL     5   2   3
0097    KSTR     6  16      ; "end"
0098    CAT      5   5   6
0099    CALL     3   1   3
0100    GGET     3   1      ; "table"
0101    TGETS    3   3   2  ; "insert"
0102    MOV      4   1
0103    KSTR     5   3      ; " "
0104    MOV      6   5
0105    TGETS    5   5   4  ; "rep"
0106    MOV      7   2
0107    CALL     5   2   3
0108    KSTR     6  16      ; "end"
0109    CAT      5   5   6
0110    CALL     3   1   3
0111    RET0     0   1

-- BYTECODE -- argparse.lua:1503-1559
0001    KSTR     3   0      ; "complete -c "
0002    MOV      4   2
0003    CAT      3   3   4
0004    GGET     4   1      ; "table"
0005    TGETS    4   4   2  ; "insert"
0006    MOV      5   1
0007    KSTR     6   3      ; ""
0008    CALL     4   1   3
0009    GGET     4   4      ; "ipairs"
0010    TGETS    5   0   5  ; "_commands"
0011    CALL     4   4   2
0012    JMP      7 => 0062
0013 => GGET     9   1      ; "table"
0014    TGETS    9   9   6  ; "concat"
0015    TGETS   10   8   7  ; "_aliases"
0016    KSTR    11   8      ; " "
0017    CALL     9   2   3
0018    KPRI    10   0
0019    TGETS   11   0   9  ; "_parent"
0020    ISF         11
0021    JMP     12 => 0035
0022    KSTR    11  10      ; "%s -n '__fish_%s_using_command %s' -xa '"~
0023    MOV     12  11
0024    TGETS   11  11  11  ; "format"
0025    MOV     13   3
0026    MOV     14   2
0027    MOV     16   0
0028    TGETS   15   0  12  ; "_get_fullname"
0029    KPRI    17   2
0030    CALL    15   2   3
0031    MOV     16   9
0032    CALL    11   2   6
0033    MOV     10  11
0034    JMP     11 => 0043
0035 => KSTR    11  13      ; "%s -n '__fish_%s_using_command' -xa '%s'"
0036    MOV     12  11
0037    TGETS   11  11  11  ; "format"
0038    MOV     13   3
0039    MOV     14   2
0040    MOV     15   9
0041    CALL    11   2   5
0042    MOV     10  11
0043 => TGETS   11   8  14  ; "_description"
0044    ISF         11
0045    JMP     12 => 0057
0046    KSTR    11  15      ; "%s -d '%s'"
0047    MOV     12  11
0048    TGETS   11  11  11  ; "format"
0049    MOV     13  10
0050    UGET    14   0      ; fish_escape
0051    UGET    15   1      ; get_short_description
0052    MOV     16   8
0053    CALL    15   0   2
0054    CALLM   14   0   0
0055    CALLM   11   2   2
0056    MOV     10  11
0057 => GGET    11   1      ; "table"
0058    TGETS   11  11   2  ; "insert"
0059    MOV     12   1
0060    MOV     13  10
0061    CALL    11   1   3
0062 => ITERC    7   3   3
0063    ITERL    7 => 0013
0064    TGETS    4   0  16  ; "_is_help_command"
0065    ISF          4
0066    JMP      5 => 0086
0067    KSTR     4  10      ; "%s -n '__fish_%s_using_command %s' -xa '"~
0068    MOV      5   4
0069    TGETS    4   4  11  ; "format"
0070    MOV      6   3
0071    MOV      7   2
0072    MOV      9   0
0073    TGETS    8   0  12  ; "_get_fullname"
0074    KPRI    10   2
0075    CALL     8   2   3
0076    TGETS    9   0   9  ; "_parent"
0077    MOV     10   9
0078    TGETS    9   9  17  ; "_get_commands"
0079    CALL     9   0   2
0080    CALLM    4   2   4
0081    GGET     5   1      ; "table"
0082    TGETS    5   5   2  ; "insert"
0083    MOV      6   1
0084    MOV      7   4
0085    CALL     5   1   3
0086 => GGET     4   4      ; "ipairs"
0087    TGETS    5   0  18  ; "_options"
0088    CALL     4   4   2
0089    JMP      7 => 0196
0090 => TNEW     9   3
0091    TSETB    3   9   1
0092    TGETS   10   0   9  ; "_parent"
0093    ISF         10
0094    JMP     11 => 0108
0095    GGET    10   1      ; "table"
0096    TGETS   10  10   2  ; "insert"
0097    MOV     11   9
0098    KSTR    12  19      ; "-n '__fish_"
0099    MOV     13   2
0100    KSTR    14  20      ; "_seen_command "
0101    MOV     16   0
0102    TGETS   15   0  12  ; "_get_fullname"
0103    KPRI    17   2
0104    CALL    15   2   3
0105    KSTR    16  21      ; "'"
0106    CAT     12  12  16
0107    CALL    10   1   3
0108 => GGET    10   4      ; "ipairs"
0109    TGETS   11   8   7  ; "_aliases"
0110    CALL    10   4   2
0111    JMP     13 => 0145
0112 => MOV     16  14
0113    TGETS   15  14  22  ; "match"
0114    KSTR    17  23      ; "^%-.$"
0115    CALL    15   2   3
0116    ISF         15
0117    JMP     16 => 0129
0118    GGET    15   1      ; "table"
0119    TGETS   15  15   2  ; "insert"
0120    MOV     16   9
0121    KSTR    17  24      ; "-s "
0122    MOV     19  14
0123    TGETS   18  14  25  ; "sub"
0124    KSHORT  20   2
0125    CALL    18   2   3
0126    CAT     17  17  18
0127    CALL    15   1   3
0128    JMP     15 => 0145
0129 => MOV     16  14
0130    TGETS   15  14  22  ; "match"
0131    KSTR    17  26      ; "^%-%-.+"
0132    CALL    15   2   3
0133    ISF         15
0134    JMP     16 => 0145
0135    GGET    15   1      ; "table"
0136    TGETS   15  15   2  ; "insert"
0137    MOV     16   9
0138    KSTR    17  27      ; "-l "
0139    MOV     19  14
0140    TGETS   18  14  25  ; "sub"
0141    KSHORT  20   3
0142    CALL    18   2   3
0143    CAT     17  17  18
0144    CALL    15   1   3
0145 => ITERC   13   3   3
0146    ITERL   13 => 0112
0147    TGETS   10   8  28  ; "_choices"
0148    ISF         10
0149    JMP     11 => 0163
0150    GGET    10   1      ; "table"
0151    TGETS   10  10   2  ; "insert"
0152    MOV     11   9
0153    KSTR    12  29      ; "-xa '"
0154    GGET    13   1      ; "table"
0155    TGETS   13  13   6  ; "concat"
0156    TGETS   14   8  28  ; "_choices"
0157    KSTR    15   8      ; " "
0158    CALL    13   2   3
0159    KSTR    14  21      ; "'"
0160    CAT     12  12  14
0161    CALL    10   1   3
0162    JMP     10 => 0172
0163 => TGETS   10   8  30  ; "_minargs"
0164    KSHORT  11   0
0165    ISGE    11  10
0166    JMP     10 => 0172
0167    GGET    10   1      ; "table"
0168    TGETS   10  10   2  ; "insert"
0169    MOV     11   9
0170    KSTR    12  31      ; "-r"
0171    CALL    10   1   3
0172 => TGETS   10   8  14  ; "_description"
0173    ISF         10
0174    JMP     11 => 0187
0175    GGET    10   1      ; "table"
0176    TGETS   10  10   2  ; "insert"
0177    MOV     11   9
0178    KSTR    12  32      ; "-d '"
0179    UGET    13   0      ; fish_escape
0180    UGET    14   1      ; get_short_description
0181    MOV     15   8
0182    CALL    14   0   2
0183    CALLM   13   2   0
0184    KSTR    14  21      ; "'"
0185    CAT     12  12  14
0186    CALL    10   1   3
0187 => GGET    10   1      ; "table"
0188    TGETS   10  10   2  ; "insert"
0189    MOV     11   1
0190    GGET    12   1      ; "table"
0191    TGETS   12  12   6  ; "concat"
0192    MOV     13   9
0193    KSTR    14   8      ; " "
0194    CALL    12   0   3
0195    CALLM   10   1   1
0196 => ITERC    7   3   3
0197    ITERL    7 => 0090
0198    GGET     4   4      ; "ipairs"
0199    TGETS    5   0   5  ; "_commands"
0200    CALL     4   4   2
0201    JMP      7 => 0207
0202 => MOV     10   8
0203    TGETS    9   8  33  ; "_fish_complete_help"
0204    MOV     11   1
0205    MOV     12   2
0206    CALL     9   1   4
0207 => ITERC    7   3   3
0208    ITERL    7 => 0202
0209    RET0     0   1

-- BYTECODE -- argparse.lua:1561-1591
0001    UGET     1   0      ; base_name
0002    TGETS    2   0   1  ; "_name"
0003    CALL     1   2   2
0004    TSETS    1   0   0  ; "_basename"
0005    GGET     1   2      ; "assert"
0006    MOV      3   0
0007    TGETS    2   0   3  ; "_is_shell_safe"
0008    CALL     2   0   2
0009    CALLM    1   1   0
0010    TNEW     1   0
0011    TGETS    2   0   4  ; "_commands"
0012    LEN      2   2
0013    KSHORT   3   0
0014    ISGE     3   2
0015    JMP      2 => 0042
0016    GGET     2   5      ; "table"
0017    TGETS    2   2   6  ; "insert"
0018    MOV      3   1
0019    KSTR     4   7      ; "function __fish_%s_print_command\n    se"~
0020    MOV      5   4
0021    TGETS    4   4   8  ; "format"
0022    TGETS    6   0   0  ; "_basename"
0023    CALL     4   0   3
0024    CALLM    2   1   1
0025    MOV      3   0
0026    TGETS    2   0   9  ; "_fish_get_cmd"
0027    MOV      4   1
0028    KSHORT   5   4
0029    CALL     2   1   4
0030    GGET     2   5      ; "table"
0031    TGETS    2   2   6  ; "insert"
0032    MOV      3   1
0033    KSTR     4  10      ; "    echo "$cmd"\nend\n\nfunction __fish_"~
0034    MOV      5   4
0035    TGETS    4   4   8  ; "format"
0036    TGETS    6   0   0  ; "_basename"
0037    TGETS    7   0   0  ; "_basename"
0038    TGETS    8   0   0  ; "_basename"
0039    TGETS    9   0   0  ; "_basename"
0040    CALL     4   0   6
0041    CALLM    2   1   1
0042 => MOV      3   0
0043    TGETS    2   0  11  ; "_fish_complete_help"
0044    MOV      4   1
0045    TGETS    5   0   0  ; "_basename"
0046    CALL     2   1   4
0047    GGET     2   5      ; "table"
0048    TGETS    2   2  12  ; "concat"
0049    MOV      3   1
0050    KSTR     4  13      ; "\n"
0051    CALL     2   2   3
0052    KSTR     3  13      ; "\n"
0053    CAT      2   2   3
0054    RET1     2   2

-- BYTECODE -- argparse.lua:1593-1642
0001    TNEW     2   0
0002    KPRI     3   0
0003    TNEW     4   0
0004    GGET     5   0      ; "pairs"
0005    MOV      6   0
0006    CALL     5   4   2
0007    ISNEXT   8 => 0038
0008 => GGET     9   1      ; "type"
0009    MOV     10   8
0010    CALL     9   2   2
0011    ISNES    9   2      ; "string"
0012    JMP      9 => 0038
0013    KSHORT   9   1
0014    LEN     10   8
0015    KSHORT  11   1
0016    FORI     9 => 0038
0017 => MOV     14   8
0018    TGETS   13   8   3  ; "sub"
0019    KSHORT  15   1
0020    SUBVN   16  12   0  ; 1
0021    CALL    13   2   4
0022    MOV     15   8
0023    TGETS   14   8   3  ; "sub"
0024    ADDVN   16  12   0  ; 1
0025    CALL    14   2   3
0026    CAT      3  13  14
0027    TGETV   13   2   3
0028    IST         13
0029    JMP     13 => 0032
0030    TNEW    13   0
0031    TSETV   13   2   3
0032 => GGET    13   4      ; "table"
0033    TGETS   13  13   5  ; "insert"
0034    TGETV   14   2   3
0035    MOV     15   8
0036    CALL    13   1   3
0037    FORL     9 => 0017
0038 => ITERN    8   2   3
0039    ITERL    8 => 0008
0040    KSHORT   5   1
0041    LEN      6   1
0042    ADDVN    6   6   0  ; 1
0043    KSHORT   7   1
0044    FORI     5 => 0073
0045 => MOV     10   1
0046    TGETS    9   1   3  ; "sub"
0047    KSHORT  11   1
0048    SUBVN   12   8   0  ; 1
0049    CALL     9   2   4
0050    MOV     11   1
0051    TGETS   10   1   3  ; "sub"
0052    ADDVN   12   8   0  ; 1
0053    CALL    10   2   3
0054    CAT      3   9  10
0055    TGETV    9   0   3
0056    ISF          9
0057    JMP     10 => 0061
0058    KPRI     9   2
0059    TSETV    9   4   3
0060    JMP      9 => 0072
0061 => TGETV    9   2   3
0062    ISF          9
0063    JMP     10 => 0072
0064    GGET     9   6      ; "ipairs"
0065    TGETV   10   2   3
0066    CALL     9   4   2
0067    JMP     12 => 0070
0068 => KPRI    14   2
0069    TSETV   14   4  13
0070 => ITERC   12   3   3
0071    ITERL   12 => 0068
0072 => FORL     5 => 0045
0073 => GGET     5   7      ; "next"
0074    MOV      6   4
0075    CALL     5   2   2
0076    ISF          5
0077    JMP      6 => 0119
0078    GGET     6   7      ; "next"
0079    MOV      7   4
0080    MOV      8   5
0081    CALL     6   2   3
0082    ISF          6
0083    JMP      7 => 0113
0084    TNEW     6   0
0085    GGET     7   0      ; "pairs"
0086    MOV      8   4
0087    CALL     7   4   2
0088    ISNEXT  10 => 0097
0089 => GGET    11   4      ; "table"
0090    TGETS   11  11   5  ; "insert"
0091    MOV     12   6
0092    KSTR    13   8      ; "'"
0093    MOV     14  10
0094    KSTR    15   8      ; "'"
0095    CAT     13  13  15
0096    CALL    11   1   3
0097 => ITERN   10   2   3
0098    ITERL   10 => 0089
0099    GGET     7   4      ; "table"
0100    TGETS    7   7   9  ; "sort"
0101    MOV      8   6
0102    CALL     7   1   2
0103    KSTR     7  10      ; "\nDid you mean one of these: "
0104    GGET     8   4      ; "table"
0105    TGETS    8   8  11  ; "concat"
0106    MOV      9   6
0107    KSTR    10  12      ; " "
0108    CALL     8   2   3
0109    KSTR     9  13      ; "?"
0110    CAT      7   7   9
0111    RET1     7   2
0112    JMP      6 => 0121
0113 => KSTR     6  14      ; "\nDid you mean '"
0114    MOV      7   5
0115    KSTR     8  15      ; "'?"
0116    CAT      6   6   8
0117    RET1     6   2
0118    JMP      6 => 0121
0119 => KSTR     6  16      ; ""
0120    RET1     6   2
0121 => RET0     0   1

-- BYTECODE -- argparse.lua:1648-1655
0001    TSETS    1   0   0  ; "state"
0002    TGETS    3   1   1  ; "result"
0003    TSETS    3   0   1  ; "result"
0004    TSETS    2   0   2  ; "element"
0005    TGETS    3   2   4  ; "_target"
0006    IST          3
0007    JMP      4 => 0011
0008    MOV      4   2
0009    TGETS    3   2   5  ; "_get_default_target"
0010    CALL     3   2   2
0011 => TSETS    3   0   3  ; "target"
0012    TGETS    3   0   1  ; "result"
0013    TGETS    4   0   3  ; "target"
0014    MOV      6   2
0015    TGETS    5   2   7  ; "_get_action"
0016    CALL     5   3   2
0017    TSETV    6   3   4
0018    TSETS    5   0   6  ; "action"
0019    RET1     0   2

-- BYTECODE -- argparse.lua:1657-1659
0001    TGETS    2   0   0  ; "state"
0002    MOV      3   2
0003    TGETS    2   2   1  ; "error"
0004    MOV      4   1
0005    VARG     5   0   2
0006    CALLM    2   1   2
0007    RET0     0   1

-- BYTECODE -- argparse.lua:1661-1683
0001    TGETS    3   0   0  ; "element"
0002    TGETS    3   3   1  ; "_convert"
0003    ISF          3
0004    JMP      4 => 0043
0005    KNIL     4   5
0006    GGET     6   2      ; "type"
0007    MOV      7   3
0008    CALL     6   2   2
0009    ISNES    6   3      ; "function"
0010    JMP      6 => 0017
0011    MOV      6   3
0012    MOV      7   1
0013    CALL     6   3   2
0014    MOV      5   7
0015    MOV      4   6
0016    JMP      6 => 0029
0017 => GGET     6   2      ; "type"
0018    TGETV    7   3   2
0019    CALL     6   2   2
0020    ISNES    6   3      ; "function"
0021    JMP      6 => 0028
0022    TGETV    6   3   2
0023    MOV      7   1
0024    CALL     6   3   2
0025    MOV      5   7
0026    MOV      4   6
0027    JMP      6 => 0029
0028 => TGETV    4   3   1
0029 => ISNEP    4   0
0030    JMP      6 => 0042
0031    MOV      7   0
0032    TGETS    6   0   4  ; "error"
0033    ISF          5
0034    JMP      8 => 0037
0035    KSTR     8   5      ; "%s"
0036    JMP      9 => 0038
0037 => KSTR     8   6      ; "malformed argument '%s'"
0038 => ISTC     9   5
0039    JMP      9 => 0041
0040    MOV      9   1
0041 => CALL     6   1   4
0042 => MOV      1   4
0043 => RET1     1   2

-- BYTECODE -- argparse.lua:1685-1687
0001    TGETS    2   0   0  ; "element"
0002    TGETS    2   2   1  ; "_defmode"
0003    MOV      3   2
0004    TGETS    2   2   2  ; "find"
0005    MOV      4   1
0006    CALL     2   2   3
0007    ISF          2
0008    JMP      3 => 0011
0009    TGETS    2   0   0  ; "element"
0010    TGETS    2   2   3  ; "_default"
0011 => RET1     2   2

-- BYTECODE -- argparse.lua:1689-1698
0001    KSTR     4   0      ; ""
0002    ISEQV    1   2
0003    JMP      5 => 0012
0004    KSTR     5   1      ; "at "
0005    ISF          3
0006    JMP      6 => 0009
0007    KSTR     6   2      ; "most"
0008    JMP      7 => 0010
0009 => KSTR     6   3      ; "least"
0010 => KSTR     7   4      ; " "
0011    CAT      4   5   7
0012 => ISF          3
0013    JMP      5 => 0016
0014    ISTC     5   2
0015    JMP      5 => 0017
0016 => MOV      5   1
0017 => MOV      6   4
0018    GGET     7   5      ; "tostring"
0019    MOV      8   5
0020    CALL     7   2   2
0021    KSTR     8   4      ; " "
0022    MOV      9   0
0023    ISNEN    5   0      ; 1
0024    JMP     10 => 0027
0025    KSTR    10   0      ; ""
0026    JMP     11 => 0028
0027 => KSTR    10   6      ; "s"
0028 => CAT      6   6  10
0029    RET1     6   2

-- BYTECODE -- argparse.lua:1700-1702
0001    KSTR     2   1      ; "%s '%s'"
0002    MOV      3   2
0003    TGETS    2   2   2  ; "format"
0004    ISF          1
0005    JMP      4 => 0008
0006    KSTR     4   3      ; "option"
0007    JMP      5 => 0009
0008 => KSTR     4   4      ; "argument"
0009 => ISTC     5   1
0010    JMP      5 => 0013
0011    TGETS    5   0   5  ; "element"
0012    TGETS    5   5   6  ; "_name"
0013 => CALL     2   2   4
0014    TSETS    2   0   0  ; "name"
0015    RET0     0   1

-- BYTECODE -- argparse.lua:1704-1726
0001    KPRI     1   2
0002    TSETS    1   0   0  ; "open"
0003    KPRI     1   1
0004    TSETS    1   0   1  ; "overwrite"
0005    TGETS    1   0   2  ; "invocations"
0006    TGETS    2   0   3  ; "element"
0007    TGETS    2   2   4  ; "_maxcount"
0008    ISGT     2   1
0009    JMP      1 => 0032
0010    TGETS    1   0   3  ; "element"
0011    TGETS    1   1   5  ; "_overwrite"
0012    ISF          1
0013    JMP      2 => 0017
0014    KPRI     1   2
0015    TSETS    1   0   1  ; "overwrite"
0016    JMP      1 => 0035
0017 => UGET     1   0      ; bound
0018    KSTR     2   6      ; "time"
0019    TGETS    3   0   3  ; "element"
0020    TGETS    3   3   7  ; "_mincount"
0021    TGETS    4   0   3  ; "element"
0022    TGETS    4   4   4  ; "_maxcount"
0023    KPRI     5   2
0024    CALL     1   2   5
0025    MOV      3   0
0026    TGETS    2   0   8  ; "error"
0027    KSTR     4   9      ; "%s must be used %s"
0028    TGETS    5   0  10  ; "name"
0029    MOV      6   1
0030    CALL     2   1   5
0031    JMP      1 => 0035
0032 => TGETS    1   0   2  ; "invocations"
0033    ADDVN    1   1   0  ; 1
0034    TSETS    1   0   2  ; "invocations"
0035 => TNEW     1   0
0036    TSETS    1   0  11  ; "args"
0037    TGETS    1   0   3  ; "element"
0038    TGETS    1   1  12  ; "_maxargs"
0039    KSHORT   2   0
0040    ISGT     1   2
0041    JMP      1 => 0045
0042    MOV      2   0
0043    TGETS    1   0  13  ; "close"
0044    CALL     1   1   2
0045 => TGETS    1   0   0  ; "open"
0046    RET1     1   2

-- BYTECODE -- argparse.lua:1728-1739
0001    TGETS    2   0   0  ; "element"
0002    TGETS    2   2   1  ; "_choices"
0003    ISF          2
0004    JMP      3 => 0044
0005    GGET     2   2      ; "ipairs"
0006    TGETS    3   0   0  ; "element"
0007    TGETS    3   3   1  ; "_choices"
0008    CALL     2   4   2
0009    JMP      5 => 0013
0010 => ISNEV    1   6
0011    JMP      7 => 0013
0012    RET0     0   1
0013 => ITERC    5   3   3
0014    ITERL    5 => 0010
0015    KSTR     2   3      ; "'"
0016    GGET     3   4      ; "table"
0017    TGETS    3   3   5  ; "concat"
0018    TGETS    4   0   0  ; "element"
0019    TGETS    4   4   1  ; "_choices"
0020    KSTR     5   6      ; "', '"
0021    CALL     3   2   3
0022    KSTR     4   3      ; "'"
0023    CAT      2   2   4
0024    GGET     3   7      ; "getmetatable"
0025    TGETS    4   0   0  ; "element"
0026    CALL     3   2   2
0027    UGET     4   0      ; Option
0028    ISEQV    3   4
0029    JMP      3 => 0032
0030    KPRI     3   1
0031    JMP      4 => 0033
0032 => KPRI     3   2
0033 => MOV      5   0
0034    TGETS    4   0   8  ; "error"
0035    KSTR     6   9      ; "%s%s must be one of %s"
0036    ISF          3
0037    JMP      7 => 0040
0038    KSTR     7  10      ; "argument for "
0039    JMP      8 => 0041
0040 => KSTR     7  11      ; ""
0041 => TGETS    8   0  12  ; "name"
0042    MOV      9   2
0043    CALL     4   1   6
0044 => RET0     0   1

-- BYTECODE -- argparse.lua:1741-1751
0001    MOV      3   0
0002    TGETS    2   0   0  ; "check_choices"
0003    MOV      4   1
0004    CALL     2   1   3
0005    MOV      3   0
0006    TGETS    2   0   1  ; "convert"
0007    MOV      4   1
0008    TGETS    5   0   2  ; "args"
0009    LEN      5   5
0010    ADDVN    5   5   0  ; 1
0011    CALL     2   2   4
0012    MOV      1   2
0013    GGET     2   3      ; "table"
0014    TGETS    2   2   4  ; "insert"
0015    TGETS    3   0   2  ; "args"
0016    MOV      4   1
0017    CALL     2   1   3
0018    TGETS    2   0   2  ; "args"
0019    LEN      2   2
0020    TGETS    3   0   5  ; "element"
0021    TGETS    3   3   6  ; "_maxargs"
0022    ISGT     3   2
0023    JMP      2 => 0027
0024    MOV      3   0
0025    TGETS    2   0   7  ; "close"
0026    CALL     2   1   2
0027 => TGETS    2   0   8  ; "open"
0028    RET1     2   2

-- BYTECODE -- argparse.lua:1753-1757
0001 => TGETS    1   0   0  ; "args"
0002    LEN      1   1
0003    TGETS    2   0   1  ; "element"
0004    TGETS    2   2   2  ; "_minargs"
0005    ISGE     1   2
0006    JMP      1 => 0014
0007    LOOP     1 => 0014
0008    MOV      2   0
0009    TGETS    1   0   3  ; "pass"
0010    TGETS    3   0   1  ; "element"
0011    TGETS    3   3   4  ; "_default"
0012    CALL     1   1   3
0013    JMP      1 => 0001
0014 => RET0     0   1

-- BYTECODE -- argparse.lua:1759-1795
0001    TGETS    1   0   0  ; "open"
0002    ISF          1
0003    JMP      2 => 0093
0004    KPRI     1   1
0005    TSETS    1   0   0  ; "open"
0006    TGETS    1   0   1  ; "args"
0007    LEN      1   1
0008    TGETS    2   0   2  ; "element"
0009    TGETS    2   2   3  ; "_minargs"
0010    ISGE     1   2
0011    JMP      1 => 0059
0012    MOV      2   0
0013    TGETS    1   0   4  ; "default"
0014    KSTR     3   5      ; "a"
0015    CALL     1   2   3
0016    ISF          1
0017    JMP      2 => 0022
0018    MOV      2   0
0019    TGETS    1   0   6  ; "complete_invocation"
0020    CALL     1   1   2
0021    JMP      1 => 0059
0022 => TGETS    1   0   1  ; "args"
0023    LEN      1   1
0024    ISNEN    1   0      ; 0
0025    JMP      1 => 0047
0026    GGET     1   7      ; "getmetatable"
0027    TGETS    2   0   2  ; "element"
0028    CALL     1   2   2
0029    UGET     2   0      ; Argument
0030    ISNEV    1   2
0031    JMP      1 => 0038
0032    MOV      2   0
0033    TGETS    1   0   8  ; "error"
0034    KSTR     3   9      ; "missing %s"
0035    TGETS    4   0  10  ; "name"
0036    CALL     1   1   4
0037    JMP      1 => 0047
0038 => TGETS    1   0   2  ; "element"
0039    TGETS    1   1  11  ; "_maxargs"
0040    ISNEN    1   1      ; 1
0041    JMP      1 => 0047
0042    MOV      2   0
0043    TGETS    1   0   8  ; "error"
0044    KSTR     3  12      ; "%s requires an argument"
0045    TGETS    4   0  10  ; "name"
0046    CALL     1   1   4
0047 => MOV      2   0
0048    TGETS    1   0   8  ; "error"
0049    KSTR     3  13      ; "%s requires %s"
0050    TGETS    4   0  10  ; "name"
0051    UGET     5   1      ; bound
0052    KSTR     6  14      ; "argument"
0053    TGETS    7   0   2  ; "element"
0054    TGETS    7   7   3  ; "_minargs"
0055    TGETS    8   0   2  ; "element"
0056    TGETS    8   8  11  ; "_maxargs"
0057    CALL     5   0   4
0058    CALLM    1   1   3
0059 => KPRI     1   0
0060    TGETS    2   0   2  ; "element"
0061    TGETS    2   2  11  ; "_maxargs"
0062    ISNEN    2   0      ; 0
0063    JMP      2 => 0067
0064    TGETS    2   0   1  ; "args"
0065    TGETB    1   2   1
0066    JMP      2 => 0087
0067 => TGETS    2   0   2  ; "element"
0068    TGETS    2   2  11  ; "_maxargs"
0069    ISNEN    2   1      ; 1
0070    JMP      2 => 0086
0071    TGETS    2   0   2  ; "element"
0072    TGETS    2   2   3  ; "_minargs"
0073    ISNEN    2   0      ; 0
0074    JMP      2 => 0083
0075    TGETS    2   0   2  ; "element"
0076    TGETS    2   2  15  ; "_mincount"
0077    TGETS    3   0   2  ; "element"
0078    TGETS    3   3  16  ; "_maxcount"
0079    ISEQV    2   3
0080    JMP      2 => 0083
0081    TGETS    1   0   1  ; "args"
0082    JMP      2 => 0087
0083 => TGETS    2   0   1  ; "args"
0084    TGETB    1   2   1
0085    JMP      2 => 0087
0086 => TGETS    1   0   1  ; "args"
0087 => TGETS    2   0  17  ; "action"
0088    TGETS    3   0  18  ; "result"
0089    TGETS    4   0  19  ; "target"
0090    MOV      5   1
0091    TGETS    6   0  20  ; "overwrite"
0092    CALL     2   1   5
0093 => RET0     0   1

-- BYTECODE -- argparse.lua:1807-1813
0001    TSETS    1   0   0  ; "parser"
0002    TSETS    2   0   1  ; "error_handler"
0003    MOV      4   1
0004    TGETS    3   1   3  ; "_update_charset"
0005    CALL     3   2   2
0006    TSETS    3   0   2  ; "charset"
0007    MOV      4   0
0008    TGETS    3   0   4  ; "switch"
0009    MOV      5   1
0010    CALL     3   1   3
0011    RET1     0   2

-- BYTECODE -- argparse.lua:1815-1817
0001    TGETS    2   0   0  ; "error_handler"
0002    TGETS    3   0   1  ; "parser"
0003    MOV      5   1
0004    TGETS    4   1   2  ; "format"
0005    VARG     6   0   2
0006    CALLM    4   0   1
0007    CALLM    2   1   1
0008    RET0     0   1

-- BYTECODE -- argparse.lua:1819-1861
0001    TSETS    1   0   0  ; "parser"
0002    TGETS    2   1   1  ; "_action"
0003    ISF          2
0004    JMP      3 => 0014
0005    GGET     2   2      ; "table"
0006    TGETS    2   2   3  ; "insert"
0007    TGETS    3   0   4  ; "command_actions"
0008    TDUP     4   5
0009    TGETS    5   1   1  ; "_action"
0010    TSETS    5   4   6  ; "action"
0011    TGETS    5   1   7  ; "_name"
0012    TSETS    5   4   8  ; "name"
0013    CALL     2   1   3
0014 => GGET     2   9      ; "ipairs"
0015    TGETS    3   1  10  ; "_options"
0016    CALL     2   4   2
0017    JMP      5 => 0037
0018 => UGET     7   0      ; ElementState
0019    MOV      8   0
0020    MOV      9   6
0021    CALL     7   2   3
0022    MOV      6   7
0023    GGET     7   2      ; "table"
0024    TGETS    7   7   3  ; "insert"
0025    TGETS    8   0  11  ; "options"
0026    MOV      9   6
0027    CALL     7   1   3
0028    GGET     7   9      ; "ipairs"
0029    TGETS    8   6  12  ; "element"
0030    TGETS    8   8  13  ; "_aliases"
0031    CALL     7   4   2
0032    JMP     10 => 0035
0033 => TGETS   12   0  11  ; "options"
0034    TSETV    6  12  11
0035 => ITERC   10   3   3
0036    ITERL   10 => 0033
0037 => ITERC    5   3   3
0038    ITERL    5 => 0018
0039    GGET     2   9      ; "ipairs"
0040    TGETS    3   1  14  ; "_mutexes"
0041    CALL     2   4   2
0042    JMP      5 => 0062
0043 => GGET     7   9      ; "ipairs"
0044    MOV      8   6
0045    CALL     7   4   2
0046    JMP     10 => 0060
0047 => TGETS   12   0  15  ; "element_to_mutexes"
0048    TGETV   12  12  11
0049    IST         12
0050    JMP     12 => 0054
0051    TGETS   12   0  15  ; "element_to_mutexes"
0052    TNEW    13   0
0053    TSETV   13  12  11
0054 => GGET    12   2      ; "table"
0055    TGETS   12  12   3  ; "insert"
0056    TGETS   13   0  15  ; "element_to_mutexes"
0057    TGETV   13  13  11
0058    MOV     14   6
0059    CALL    12   1   3
0060 => ITERC   10   3   3
0061    ITERL   10 => 0047
0062 => ITERC    5   3   3
0063    ITERL    5 => 0043
0064    GGET     2   9      ; "ipairs"
0065    TGETS    3   1  16  ; "_arguments"
0066    CALL     2   4   2
0067    JMP      5 => 0084
0068 => UGET     7   0      ; ElementState
0069    MOV      8   0
0070    MOV      9   6
0071    CALL     7   2   3
0072    MOV      6   7
0073    GGET     7   2      ; "table"
0074    TGETS    7   7   3  ; "insert"
0075    TGETS    8   0  17  ; "arguments"
0076    MOV      9   6
0077    CALL     7   1   3
0078    MOV      8   6
0079    TGETS    7   6  18  ; "set_name"
0080    CALL     7   1   2
0081    MOV      8   6
0082    TGETS    7   6  19  ; "invoke"
0083    CALL     7   1   2
0084 => ITERC    5   3   3
0085    ITERL    5 => 0068
0086    TGETS    2   1  21  ; "_handle_options"
0087    TSETS    2   0  20  ; "handle_options"
0088    TGETS    2   0  17  ; "arguments"
0089    TGETS    3   0  23  ; "argument_i"
0090    TGETV    2   2   3
0091    TSETS    2   0  22  ; "argument"
0092    TGETS    2   1  25  ; "_commands"
0093    TSETS    2   0  24  ; "commands"
0094    GGET     2   9      ; "ipairs"
0095    TGETS    3   0  24  ; "commands"
0096    CALL     2   4   2
0097    JMP      5 => 0106
0098 => GGET     7   9      ; "ipairs"
0099    TGETS    8   6  13  ; "_aliases"
0100    CALL     7   4   2
0101    JMP     10 => 0104
0102 => TGETS   12   0  24  ; "commands"
0103    TSETV    6  12  11
0104 => ITERC   10   3   3
0105    ITERL   10 => 0102
0106 => ITERC    5   3   3
0107    ITERL    5 => 0098
0108    RET0     0   1

-- BYTECODE -- argparse.lua:1863-1871
0001    TGETS    2   0   0  ; "options"
0002    TGETV    2   2   1
0003    IST          2
0004    JMP      3 => 0015
0005    MOV      4   0
0006    TGETS    3   0   1  ; "error"
0007    KSTR     5   2      ; "unknown option '%s'%s"
0008    MOV      6   1
0009    UGET     7   0      ; get_tip
0010    TGETS    8   0   0  ; "options"
0011    MOV      9   1
0012    CALL     7   0   3
0013    CALLM    3   1   3
0014    JMP      3 => 0016
0015 => RET1     2   2
0016 => RET0     0   1

-- BYTECODE -- argparse.lua:1873-1885
0001    TGETS    2   0   0  ; "commands"
0002    TGETV    2   2   1
0003    IST          2
0004    JMP      3 => 0025
0005    TGETS    3   0   0  ; "commands"
0006    LEN      3   3
0007    KSHORT   4   0
0008    ISGE     4   3
0009    JMP      3 => 0020
0010    MOV      4   0
0011    TGETS    3   0   1  ; "error"
0012    KSTR     5   2      ; "unknown command '%s'%s"
0013    MOV      6   1
0014    UGET     7   0      ; get_tip
0015    TGETS    8   0   0  ; "commands"
0016    MOV      9   1
0017    CALL     7   0   3
0018    CALLM    3   1   3
0019    JMP      3 => 0026
0020 => MOV      4   0
0021    TGETS    3   0   1  ; "error"
0022    KSTR     5   3      ; "too many arguments"
0023    CALL     3   1   3
0024    JMP      3 => 0026
0025 => RET1     2   2
0026 => RET0     0   1

-- BYTECODE -- argparse.lua:1887-1899
0001    TGETS    2   0   0  ; "element_to_mutexes"
0002    TGETS    3   1   1  ; "element"
0003    TGETV    2   2   3
0004    ISF          2
0005    JMP      3 => 0029
0006    GGET     2   2      ; "ipairs"
0007    TGETS    3   0   0  ; "element_to_mutexes"
0008    TGETS    4   1   1  ; "element"
0009    TGETV    3   3   4
0010    CALL     2   4   2
0011    JMP      5 => 0027
0012 => TGETS    7   0   3  ; "mutex_to_element_state"
0013    TGETV    7   7   6
0014    ISF          7
0015    JMP      8 => 0025
0016    ISEQV    7   1
0017    JMP      8 => 0025
0018    MOV      9   0
0019    TGETS    8   0   4  ; "error"
0020    KSTR    10   5      ; "%s can not be used together with %s"
0021    TGETS   11   1   6  ; "name"
0022    TGETS   12   7   6  ; "name"
0023    CALL     8   1   5
0024    JMP      8 => 0027
0025 => TGETS    8   0   3  ; "mutex_to_element_state"
0026    TSETV    1   8   6
0027 => ITERC    5   3   3
0028    ITERL    5 => 0012
0029 => RET0     0   1

-- BYTECODE -- argparse.lua:1901-1909
0001    MOV      4   0
0002    TGETS    3   0   0  ; "close"
0003    CALL     3   1   2
0004    MOV      4   1
0005    TGETS    3   1   1  ; "set_name"
0006    MOV      5   2
0007    CALL     3   1   3
0008    MOV      4   0
0009    TGETS    3   0   2  ; "check_mutexes"
0010    MOV      5   1
0011    MOV      6   2
0012    CALL     3   1   4
0013    MOV      4   1
0014    TGETS    3   1   3  ; "invoke"
0015    CALL     3   2   2
0016    ISF          3
0017    JMP      4 => 0019
0018    TSETS    1   0   4  ; "option"
0019 => RET0     0   1

-- BYTECODE -- argparse.lua:1911-1933
0001    TGETS    2   0   0  ; "option"
0002    ISF          2
0003    JMP      3 => 0014
0004    TGETS    2   0   0  ; "option"
0005    MOV      3   2
0006    TGETS    2   2   1  ; "pass"
0007    MOV      4   1
0008    CALL     2   2   3
0009    IST          2
0010    JMP      2 => 0060
0011    KPRI     2   0
0012    TSETS    2   0   0  ; "option"
0013    JMP      2 => 0060
0014 => TGETS    2   0   2  ; "argument"
0015    ISF          2
0016    JMP      3 => 0036
0017    MOV      3   0
0018    TGETS    2   0   3  ; "check_mutexes"
0019    TGETS    4   0   2  ; "argument"
0020    CALL     2   1   3
0021    TGETS    2   0   2  ; "argument"
0022    MOV      3   2
0023    TGETS    2   2   1  ; "pass"
0024    MOV      4   1
0025    CALL     2   2   3
0026    IST          2
0027    JMP      2 => 0060
0028    TGETS    2   0   4  ; "argument_i"
0029    ADDVN    2   2   0  ; 1
0030    TSETS    2   0   4  ; "argument_i"
0031    TGETS    2   0   5  ; "arguments"
0032    TGETS    3   0   4  ; "argument_i"
0033    TGETV    2   2   3
0034    TSETS    2   0   2  ; "argument"
0035    JMP      2 => 0060
0036 => MOV      3   0
0037    TGETS    2   0   6  ; "get_command"
0038    MOV      4   1
0039    CALL     2   2   3
0040    TGETS    3   0   7  ; "result"
0041    TGETS    4   2   8  ; "_target"
0042    IST          4
0043    JMP      5 => 0045
0044    TGETS    4   2   9  ; "_name"
0045 => KPRI     5   2
0046    TSETV    5   3   4
0047    TGETS    3   0  10  ; "parser"
0048    TGETS    3   3  11  ; "_command_target"
0049    ISF          3
0050    JMP      4 => 0056
0051    TGETS    3   0   7  ; "result"
0052    TGETS    4   0  10  ; "parser"
0053    TGETS    4   4  11  ; "_command_target"
0054    TGETS    5   2   9  ; "_name"
0055    TSETV    5   3   4
0056 => MOV      4   0
0057    TGETS    3   0  12  ; "switch"
0058    MOV      5   2
0059    CALL     3   1   3
0060 => RET0     0   1

-- BYTECODE -- argparse.lua:1935-1940
0001    TGETS    1   0   0  ; "option"
0002    ISF          1
0003    JMP      2 => 0010
0004    TGETS    1   0   0  ; "option"
0005    MOV      2   1
0006    TGETS    1   1   1  ; "close"
0007    CALL     1   1   2
0008    KPRI     1   0
0009    TSETS    1   0   0  ; "option"
0010 => RET0     0   1

-- BYTECODE -- argparse.lua:1942-1988
0001    MOV      2   0
0002    TGETS    1   0   0  ; "close"
0003    CALL     1   1   2
0004    TGETS    1   0   1  ; "argument_i"
0005    TGETS    2   0   2  ; "arguments"
0006    LEN      2   2
0007    KSHORT   3   1
0008    FORI     1 => 0029
0009 => TGETS    5   0   2  ; "arguments"
0010    TGETV    5   5   4
0011    TGETS    6   5   3  ; "args"
0012    LEN      6   6
0013    ISNEN    6   0      ; 0
0014    JMP      6 => 0025
0015    MOV      7   5
0016    TGETS    6   5   4  ; "default"
0017    KSTR     8   5      ; "u"
0018    CALL     6   2   3
0019    ISF          6
0020    JMP      7 => 0025
0021    MOV      7   5
0022    TGETS    6   5   6  ; "complete_invocation"
0023    CALL     6   1   2
0024    JMP      6 => 0028
0025 => MOV      7   5
0026    TGETS    6   5   0  ; "close"
0027    CALL     6   1   2
0028 => FORL     1 => 0009
0029 => TGETS    1   0   7  ; "parser"
0030    TGETS    1   1   8  ; "_require_command"
0031    ISF          1
0032    JMP      2 => 0042
0033    TGETS    1   0   9  ; "commands"
0034    LEN      1   1
0035    KSHORT   2   0
0036    ISGE     2   1
0037    JMP      1 => 0042
0038    MOV      2   0
0039    TGETS    1   0  10  ; "error"
0040    KSTR     3  11      ; "a command is required"
0041    CALL     1   1   3
0042 => GGET     1  12      ; "ipairs"
0043    TGETS    2   0  13  ; "options"
0044    CALL     1   4   2
0045    JMP      4 => 0117
0046 => TGETS    6   5  14  ; "name"
0047    IST          6
0048    JMP      7 => 0055
0049    KSTR     6  15      ; "option '%s'"
0050    MOV      7   6
0051    TGETS    6   6  16  ; "format"
0052    TGETS    8   5  17  ; "element"
0053    TGETS    8   8  18  ; "_name"
0054    CALL     6   2   3
0055 => TSETS    6   5  14  ; "name"
0056    TGETS    6   5  19  ; "invocations"
0057    ISNEN    6   0      ; 0
0058    JMP      6 => 0074
0059    MOV      7   5
0060    TGETS    6   5   4  ; "default"
0061    KSTR     8   5      ; "u"
0062    CALL     6   2   3
0063    ISF          6
0064    JMP      7 => 0074
0065    MOV      7   5
0066    TGETS    6   5  20  ; "invoke"
0067    CALL     6   1   2
0068    MOV      7   5
0069    TGETS    6   5   6  ; "complete_invocation"
0070    CALL     6   1   2
0071    MOV      7   5
0072    TGETS    6   5   0  ; "close"
0073    CALL     6   1   2
0074 => TGETS    6   5  17  ; "element"
0075    TGETS    6   6  21  ; "_mincount"
0076    TGETS    7   5  19  ; "invocations"
0077    ISGE     7   6
0078    JMP      7 => 0117
0079    MOV      8   5
0080    TGETS    7   5   4  ; "default"
0081    KSTR     9  22      ; "a"
0082    CALL     7   2   3
0083    ISF          7
0084    JMP      8 => 0097
0085 => TGETS    7   5  19  ; "invocations"
0086    ISGE     7   6
0087    JMP      7 => 0117
0088    LOOP     7 => 0096
0089    MOV      8   5
0090    TGETS    7   5  20  ; "invoke"
0091    CALL     7   1   2
0092    MOV      8   5
0093    TGETS    7   5   0  ; "close"
0094    CALL     7   1   2
0095    JMP      7 => 0085
0096 => JMP      7 => 0117
0097 => TGETS    7   5  19  ; "invocations"
0098    ISNEN    7   0      ; 0
0099    JMP      7 => 0106
0100    MOV      8   0
0101    TGETS    7   0  10  ; "error"
0102    KSTR     9  23      ; "missing %s"
0103    TGETS   10   5  14  ; "name"
0104    CALL     7   1   4
0105    JMP      7 => 0117
0106 => MOV      8   0
0107    TGETS    7   0  10  ; "error"
0108    KSTR     9  24      ; "%s must be used %s"
0109    TGETS   10   5  14  ; "name"
0110    UGET    11   0      ; bound
0111    KSTR    12  25      ; "time"
0112    MOV     13   6
0113    TGETS   14   5  17  ; "element"
0114    TGETS   14  14  26  ; "_maxcount"
0115    CALL    11   0   4
0116    CALLM    7   1   3
0117 => ITERC    4   3   3
0118    ITERL    4 => 0046
0119    TGETS    1   0  27  ; "command_actions"
0120    LEN      1   1
0121    KSHORT   2   1
0122    KSHORT   3  -1
0123    FORI     1 => 0133
0124 => TGETS    5   0  27  ; "command_actions"
0125    TGETV    5   5   4
0126    TGETS    5   5  28  ; "action"
0127    TGETS    6   0  29  ; "result"
0128    TGETS    7   0  27  ; "command_actions"
0129    TGETV    7   7   4
0130    TGETS    7   7  14  ; "name"
0131    CALL     5   1   3
0132    FORL     1 => 0124
0133 => RET0     0   1

-- BYTECODE -- argparse.lua:1990-2051
0001    GGET     2   0      ; "ipairs"
0002    MOV      3   1
0003    CALL     2   4   2
0004    JMP      5 => 0144
0005 => KPRI     7   2
0006    TGETS    8   0   1  ; "handle_options"
0007    ISF          8
0008    JMP      9 => 0138
0009    MOV      9   6
0010    TGETS    8   6   2  ; "sub"
0011    KSHORT  10   1
0012    KSHORT  11   1
0013    CALL     8   2   4
0014    TGETS    9   0   3  ; "charset"
0015    TGETV    9   9   8
0016    ISF          9
0017    JMP     10 => 0138
0018    LEN      9   6
0019    KSHORT  10   1
0020    ISGE    10   9
0021    JMP      9 => 0138
0022    KPRI     7   1
0023    MOV     10   6
0024    TGETS    9   6   2  ; "sub"
0025    KSHORT  11   2
0026    KSHORT  12   2
0027    CALL     9   2   4
0028    ISNEV    9   8
0029    JMP      9 => 0101
0030    LEN      9   6
0031    ISNEN    9   0      ; 2
0032    JMP      9 => 0053
0033    TGETS    9   0   4  ; "options"
0034    TGETV    9   9   6
0035    ISF          9
0036    JMP     10 => 0047
0037    MOV     10   0
0038    TGETS    9   0   5  ; "get_option"
0039    MOV     11   6
0040    CALL     9   2   3
0041    MOV     11   0
0042    TGETS   10   0   6  ; "invoke"
0043    MOV     12   9
0044    MOV     13   6
0045    CALL    10   1   4
0046    JMP      9 => 0050
0047 => MOV     10   0
0048    TGETS    9   0   7  ; "close"
0049    CALL     9   1   2
0050 => KPRI     9   1
0051    TSETS    9   0   1  ; "handle_options"
0052    JMP      9 => 0138
0053 => MOV     10   6
0054    TGETS    9   6   8  ; "find"
0055    KSTR    11   9      ; "="
0056    CALL     9   2   3
0057    ISF          9
0058    JMP     10 => 0091
0059    MOV     11   6
0060    TGETS   10   6   2  ; "sub"
0061    KSHORT  12   1
0062    SUBVN   13   9   1  ; 1
0063    CALL    10   2   4
0064    MOV     12   0
0065    TGETS   11   0   5  ; "get_option"
0066    MOV     13  10
0067    CALL    11   2   3
0068    TGETS   12  11  10  ; "element"
0069    TGETS   12  12  11  ; "_maxargs"
0070    KSHORT  13   0
0071    ISGT    12  13
0072    JMP     12 => 0078
0073    MOV     13   0
0074    TGETS   12   0  12  ; "error"
0075    KSTR    14  13      ; "option '%s' does not take arguments"
0076    MOV     15  10
0077    CALL    12   1   4
0078 => MOV     13   0
0079    TGETS   12   0   6  ; "invoke"
0080    MOV     14  11
0081    MOV     15  10
0082    CALL    12   1   4
0083    MOV     13   0
0084    TGETS   12   0  14  ; "pass"
0085    MOV     15   6
0086    TGETS   14   6   2  ; "sub"
0087    ADDVN   16   9   1  ; 1
0088    CALL    14   0   3
0089    CALLM   12   1   1
0090    JMP     10 => 0138
0091 => MOV     11   0
0092    TGETS   10   0   5  ; "get_option"
0093    MOV     12   6
0094    CALL    10   2   3
0095    MOV     12   0
0096    TGETS   11   0   6  ; "invoke"
0097    MOV     13  10
0098    MOV     14   6
0099    CALL    11   1   4
0100    JMP      9 => 0138
0101 => KSHORT   9   2
0102    LEN     10   6
0103    KSHORT  11   1
0104    FORI     9 => 0138
0105 => MOV     13   8
0106    MOV     15   6
0107    TGETS   14   6   2  ; "sub"
0108    MOV     16  12
0109    MOV     17  12
0110    CALL    14   2   4
0111    CAT     13  13  14
0112    MOV     15   0
0113    TGETS   14   0   5  ; "get_option"
0114    MOV     16  13
0115    CALL    14   2   3
0116    MOV     16   0
0117    TGETS   15   0   6  ; "invoke"
0118    MOV     17  14
0119    MOV     18  13
0120    CALL    15   1   4
0121    LEN     15   6
0122    ISEQV   12  15
0123    JMP     15 => 0137
0124    TGETS   15  14  10  ; "element"
0125    TGETS   15  15  11  ; "_maxargs"
0126    KSHORT  16   0
0127    ISGE    16  15
0128    JMP     15 => 0137
0129    MOV     16   0
0130    TGETS   15   0  14  ; "pass"
0131    MOV     18   6
0132    TGETS   17   6   2  ; "sub"
0133    ADDVN   19  12   1  ; 1
0134    CALL    17   0   3
0135    CALLM   15   1   1
0136    JMP      9 => 0138
0137 => FORL     9 => 0105
0138 => ISF          7
0139    JMP      8 => 0144
0140    MOV      9   0
0141    TGETS    8   0  14  ; "pass"
0142    MOV     10   6
0143    CALL     8   1   3
0144 => ITERC    5   3   3
0145    ITERL    5 => 0005
0146    MOV      3   0
0147    TGETS    2   0  15  ; "finalize"
0148    CALL     2   1   2
0149    TGETS    2   0  16  ; "result"
0150    RET1     2   2

-- BYTECODE -- argparse.lua:2053-2056
0001    GGET     2   0      ; "io"
0002    TGETS    2   2   1  ; "stderr"
0003    MOV      3   2
0004    TGETS    2   2   2  ; "write"
0005    KSTR     4   3      ; "%s\n\nError: %s\n"
0006    MOV      5   4
0007    TGETS    4   4   4  ; "format"
0008    MOV      7   0
0009    TGETS    6   0   5  ; "get_usage"
0010    CALL     6   2   2
0011    MOV      7   1
0012    CALL     4   0   4
0013    CALLM    2   1   1
0014    GGET     2   6      ; "os"
0015    TGETS    2   2   7  ; "exit"
0016    KSHORT   3   1
0017    CALL     2   1   2
0018    RET0     0   1

-- BYTECODE -- argparse.lua:2061-2063
0001    UGET     3   0      ; ParseState
0002    MOV      4   0
0003    MOV      5   2
0004    CALL     3   2   3
0005    MOV      4   3
0006    TGETS    3   3   0  ; "parse"
0007    ISTC     5   1
0008    JMP      5 => 0010
0009    UGET     5   1      ; default_cmdline
0010 => CALLT    3   3

-- BYTECODE -- argparse.lua:2065-2067
0001    MOV      3   0
0002    TGETS    2   0   0  ; "_parse"
0003    MOV      4   1
0004    TGETS    5   0   1  ; "error"
0005    CALLT    2   4

-- BYTECODE -- argparse.lua:2069-2071
0001    GGET     1   0      ; "tostring"
0002    MOV      2   0
0003    CALL     1   2   2
0004    KSTR     2   1      ; "\noriginal "
0005    GGET     3   2      ; "debug"
0006    TGETS    3   3   3  ; "traceback"
0007    KSTR     4   4      ; ""
0008    KSHORT   5   2
0009    CALL     3   2   3
0010    MOV      4   3
0011    TGETS    3   3   5  ; "sub"
0012    KSHORT   5   2
0013    CALL     3   2   3
0014    CAT      1   1   3
0015    RET1     1   2

-- BYTECODE -- argparse.lua:2077-2080
0001    USETV    0   1      ; parse_error
0002    GGET     2   0      ; "error"
0003    MOV      3   1
0004    KSHORT   4   0
0005    CALL     2   1   3
0006    RET0     0   1

-- BYTECODE -- argparse.lua:2076-2081
0001    UGET     0   0      ; self
0002    MOV      1   0
0003    TGETS    0   0   0  ; "_parse"
0004    UGET     2   1      ; args
0005    FNEW     3   1      ; argparse.lua:2077
0006    UCLO     0 => 0007
0007 => CALLT    0   4

-- BYTECODE -- argparse.lua:2073-2090
0001    KPRI     2   0
0002    GGET     3   0      ; "xpcall"
0003    FNEW     4   1      ; argparse.lua:2076
0004    UGET     5   0      ; xpcall_error_handler
0005    CALL     3   3   3
0006    ISF          3
0007    JMP      5 => 0013
0008    KPRI     5   2
0009    MOV      6   4
0010    UCLO     0 => 0011
0011 => RET      5   3
0012    JMP      5 => 0024
0013 => IST          2
0014    JMP      5 => 0020
0015    GGET     5   2      ; "error"
0016    MOV      6   4
0017    KSHORT   7   0
0018    CALL     5   1   3
0019    JMP      5 => 0024
0020 => KPRI     5   1
0021    MOV      6   2
0022    UCLO     0 => 0023
0023 => RET      5   3
0024 => UCLO     0 => 0025
0025 => RET0     0   1

-- BYTECODE -- argparse.lua:2096-2098
0001    UGET     1   0      ; Parser
0002    UGET     2   1      ; default_cmdline
0003    TGETB    2   2   0
0004    CALL     1   2   2
0005    MOV      2   1
0006    TGETS    1   1   0  ; "add_help"
0007    KPRI     3   2
0008    CALL     1   2   3
0009    VARG     2   0   1
0010    CALLMT   1   0

-- BYTECODE -- argparse.lua:0-2101
0001    FNEW     0   0      ; argparse.lua:23
0002    FNEW     1   1      ; argparse.lua:38
0003    FNEW     2   2      ; argparse.lua:112
0004    FNEW     3   3      ; argparse.lua:122
0005    TDUP     4   4
0006    FNEW     5   5      ; argparse.lua:127
0007    TSETB    5   4   2
0008    TDUP     5   6
0009    FNEW     6   7      ; argparse.lua:144
0010    TSETB    6   5   2
0011    FNEW     6   8      ; argparse.lua:157
0012    FNEW     7   9      ; argparse.lua:185
0013    TNEW     8   0
0014    TDUP     9  10
0015    FNEW    10  11      ; argparse.lua:201
0016    TSETB   10   9   2
0017    TDUP    10  12
0018    FNEW    11  13      ; argparse.lua:209
0019    TSETB   11  10   2
0020    TDUP    11  14
0021    FNEW    12  15      ; argparse.lua:213
0022    TSETB   12  11   2
0023    TDUP    12  16
0024    FNEW    13  17      ; argparse.lua:221
0025    TSETB   13  12   2
0026    MOV     13   1
0027    TDUP    14  18
0028    TNEW    15   0
0029    TSETS   15  14  19  ; "_arguments"
0030    TNEW    15   0
0031    TSETS   15  14  20  ; "_options"
0032    TNEW    15   0
0033    TSETS   15  14  21  ; "_commands"
0034    TNEW    15   0
0035    TSETS   15  14  22  ; "_mutexes"
0036    TNEW    15   0
0037    TSETS   15  14  23  ; "_groups"
0038    TDUP    15  24
0039    MOV     16   3
0040    KSTR    17  25      ; "name"
0041    KSTR    18  26      ; "string"
0042    CALL    16   2   3
0043    TSETB   16  15   1
0044    MOV     16   3
0045    KSTR    17  27      ; "description"
0046    KSTR    18  26      ; "string"
0047    CALL    16   2   3
0048    TSETB   16  15   2
0049    MOV     16   3
0050    KSTR    17  28      ; "epilog"
0051    KSTR    18  26      ; "string"
0052    CALL    16   2   3
0053    TSETB   16  15   3
0054    MOV     16   3
0055    KSTR    17  29      ; "usage"
0056    KSTR    18  26      ; "string"
0057    CALL    16   2   3
0058    TSETB   16  15   4
0059    MOV     16   3
0060    KSTR    17  30      ; "help"
0061    KSTR    18  26      ; "string"
0062    CALL    16   2   3
0063    TSETB   16  15   5
0064    MOV     16   3
0065    KSTR    17  31      ; "require_command"
0066    KSTR    18  32      ; "boolean"
0067    CALL    16   2   3
0068    TSETB   16  15   6
0069    MOV     16   3
0070    KSTR    17  33      ; "handle_options"
0071    KSTR    18  32      ; "boolean"
0072    CALL    16   2   3
0073    TSETB   16  15   7
0074    MOV     16   3
0075    KSTR    17  34      ; "action"
0076    KSTR    18  35      ; "function"
0077    CALL    16   2   3
0078    TSETB   16  15   8
0079    MOV     16   3
0080    KSTR    17  36      ; "command_target"
0081    KSTR    18  26      ; "string"
0082    CALL    16   2   3
0083    TSETB   16  15   9
0084    MOV     16   3
0085    KSTR    17  37      ; "help_vertical_space"
0086    KSTR    18  38      ; "number"
0087    CALL    16   2   3
0088    TSETB   16  15  10
0089    MOV     16   3
0090    KSTR    17  39      ; "usage_margin"
0091    KSTR    18  38      ; "number"
0092    CALL    16   2   3
0093    TSETB   16  15  11
0094    MOV     16   3
0095    KSTR    17  40      ; "usage_max_width"
0096    KSTR    18  38      ; "number"
0097    CALL    16   2   3
0098    TSETB   16  15  12
0099    MOV     16   3
0100    KSTR    17  41      ; "help_usage_margin"
0101    KSTR    18  38      ; "number"
0102    CALL    16   2   3
0103    TSETB   16  15  13
0104    MOV     16   3
0105    KSTR    17  42      ; "help_description_margin"
0106    KSTR    18  38      ; "number"
0107    CALL    16   2   3
0108    TSETB   16  15  14
0109    MOV     16   3
0110    KSTR    17  43      ; "help_max_width"
0111    KSTR    18  38      ; "number"
0112    CALL    16   2   3
0113    TSETB   16  15  15
0114    TSETB   12  15  16
0115    CALL    13   2   3
0116    MOV     14   1
0117    TDUP    15  44
0118    TNEW    16   0
0119    TSETS   16  15  45  ; "_aliases"
0120    TNEW    16   0
0121    TSETS   16  15  46  ; "_public_aliases"
0122    TDUP    16  47
0123    TSETB    4  16   1
0124    MOV     17   3
0125    KSTR    18  27      ; "description"
0126    KSTR    19  26      ; "string"
0127    CALL    17   2   3
0128    TSETB   17  16   2
0129    MOV     17   3
0130    KSTR    18  28      ; "epilog"
0131    KSTR    19  26      ; "string"
0132    CALL    17   2   3
0133    TSETB   17  16   3
0134    TSETB    5  16   4
0135    MOV     17   3
0136    KSTR    18  48      ; "summary"
0137    KSTR    19  26      ; "string"
0138    CALL    17   2   3
0139    TSETB   17  16   5
0140    MOV     17   3
0141    KSTR    18  49      ; "target"
0142    KSTR    19  26      ; "string"
0143    CALL    17   2   3
0144    TSETB   17  16   6
0145    MOV     17   3
0146    KSTR    18  29      ; "usage"
0147    KSTR    19  26      ; "string"
0148    CALL    17   2   3
0149    TSETB   17  16   7
0150    MOV     17   3
0151    KSTR    18  30      ; "help"
0152    KSTR    19  26      ; "string"
0153    CALL    17   2   3
0154    TSETB   17  16   8
0155    MOV     17   3
0156    KSTR    18  31      ; "require_command"
0157    KSTR    19  32      ; "boolean"
0158    CALL    17   2   3
0159    TSETB   17  16   9
0160    MOV     17   3
0161    KSTR    18  33      ; "handle_options"
0162    KSTR    19  32      ; "boolean"
0163    CALL    17   2   3
0164    TSETB   17  16  10
0165    MOV     17   3
0166    KSTR    18  34      ; "action"
0167    KSTR    19  35      ; "function"
0168    CALL    17   2   3
0169    TSETB   17  16  11
0170    MOV     17   3
0171    KSTR    18  36      ; "command_target"
0172    KSTR    19  26      ; "string"
0173    CALL    17   2   3
0174    TSETB   17  16  12
0175    MOV     17   3
0176    KSTR    18  37      ; "help_vertical_space"
0177    KSTR    19  38      ; "number"
0178    CALL    17   2   3
0179    TSETB   17  16  13
0180    MOV     17   3
0181    KSTR    18  39      ; "usage_margin"
0182    KSTR    19  38      ; "number"
0183    CALL    17   2   3
0184    TSETB   17  16  14
0185    MOV     17   3
0186    KSTR    18  40      ; "usage_max_width"
0187    KSTR    19  38      ; "number"
0188    CALL    17   2   3
0189    TSETB   17  16  15
0190    MOV     17   3
0191    KSTR    18  41      ; "help_usage_margin"
0192    KSTR    19  38      ; "number"
0193    CALL    17   2   3
0194    TSETB   17  16  16
0195    MOV     17   3
0196    KSTR    18  42      ; "help_description_margin"
0197    KSTR    19  38      ; "number"
0198    CALL    17   2   3
0199    TSETB   17  16  17
0200    MOV     17   3
0201    KSTR    18  43      ; "help_max_width"
0202    KSTR    19  38      ; "number"
0203    CALL    17   2   3
0204    TSETB   17  16  18
0205    MOV     17   3
0206    KSTR    18  50      ; "hidden"
0207    KSTR    19  32      ; "boolean"
0208    CALL    17   2   3
0209    TSETB   17  16  19
0210    TSETB   12  16  20
0211    MOV     17  13
0212    CALL    14   2   4
0213    MOV     15   1
0214    TDUP    16  51
0215    TDUP    17  52
0216    MOV     18   3
0217    KSTR    19  25      ; "name"
0218    KSTR    20  26      ; "string"
0219    CALL    18   2   3
0220    TSETB   18  17   1
0221    MOV     18   3
0222    KSTR    19  27      ; "description"
0223    KSTR    20  26      ; "string"
0224    CALL    18   2   3
0225    TSETB   18  17   2
0226    TSETB   11  17   3
0227    MOV     18   3
0228    KSTR    19  53      ; "convert"
0229    KSTR    20  35      ; "function"
0230    KSTR    21  54      ; "table"
0231    CALL    18   2   4
0232    TSETB   18  17   4
0233    MOV     18   7
0234    KSTR    19  55      ; "args"
0235    CALL    18   2   2
0236    TSETB   18  17   5
0237    MOV     18   3
0238    KSTR    19  49      ; "target"
0239    KSTR    20  26      ; "string"
0240    CALL    18   2   3
0241    TSETB   18  17   6
0242    MOV     18   3
0243    KSTR    19  56      ; "defmode"
0244    KSTR    20  26      ; "string"
0245    CALL    18   2   3
0246    TSETB   18  17   7
0247    MOV     18   3
0248    KSTR    19  57      ; "show_default"
0249    KSTR    20  32      ; "boolean"
0250    CALL    18   2   3
0251    TSETB   18  17   8
0252    MOV     18   3
0253    KSTR    19  58      ; "argname"
0254    KSTR    20  26      ; "string"
0255    KSTR    21  54      ; "table"
0256    CALL    18   2   4
0257    TSETB   18  17   9
0258    MOV     18   3
0259    KSTR    19  59      ; "choices"
0260    KSTR    20  54      ; "table"
0261    CALL    18   2   3
0262    TSETB   18  17  10
0263    MOV     18   3
0264    KSTR    19  50      ; "hidden"
0265    KSTR    20  32      ; "boolean"
0266    CALL    18   2   3
0267    TSETB   18  17  11
0268    TSETB    9  17  12
0269    TSETB   10  17  13
0270    CALL    15   2   3
0271    MOV     16   1
0272    TDUP    17  60
0273    TNEW    18   0
0274    TSETS   18  17  45  ; "_aliases"
0275    TNEW    18   0
0276    TSETS   18  17  46  ; "_public_aliases"
0277    TDUP    18  61
0278    TSETB    4  18   1
0279    MOV     19   3
0280    KSTR    20  27      ; "description"
0281    KSTR    21  26      ; "string"
0282    CALL    19   2   3
0283    TSETB   19  18   2
0284    TSETB   11  18   3
0285    MOV     19   3
0286    KSTR    20  53      ; "convert"
0287    KSTR    21  35      ; "function"
0288    KSTR    22  54      ; "table"
0289    CALL    19   2   4
0290    TSETB   19  18   4
0291    MOV     19   7
0292    KSTR    20  55      ; "args"
0293    CALL    19   2   2
0294    TSETB   19  18   5
0295    MOV     19   7
0296    KSTR    20  62      ; "count"
0297    CALL    19   2   2
0298    TSETB   19  18   6
0299    TSETB    5  18   7
0300    MOV     19   3
0301    KSTR    20  49      ; "target"
0302    KSTR    21  26      ; "string"
0303    CALL    19   2   3
0304    TSETB   19  18   8
0305    MOV     19   3
0306    KSTR    20  56      ; "defmode"
0307    KSTR    21  26      ; "string"
0308    CALL    19   2   3
0309    TSETB   19  18   9
0310    MOV     19   3
0311    KSTR    20  57      ; "show_default"
0312    KSTR    21  32      ; "boolean"
0313    CALL    19   2   3
0314    TSETB   19  18  10
0315    MOV     19   3
0316    KSTR    20  63      ; "overwrite"
0317    KSTR    21  32      ; "boolean"
0318    CALL    19   2   3
0319    TSETB   19  18  11
0320    MOV     19   3
0321    KSTR    20  58      ; "argname"
0322    KSTR    21  26      ; "string"
0323    KSTR    22  54      ; "table"
0324    CALL    19   2   4
0325    TSETB   19  18  12
0326    MOV     19   3
0327    KSTR    20  59      ; "choices"
0328    KSTR    21  54      ; "table"
0329    CALL    19   2   3
0330    TSETB   19  18  13
0331    MOV     19   3
0332    KSTR    20  50      ; "hidden"
0333    KSTR    21  32      ; "boolean"
0334    CALL    19   2   3
0335    TSETB   19  18  14
0336    TSETB    9  18  15
0337    TSETB   10  18  16
0338    MOV     19  15
0339    CALL    16   2   4
0340    FNEW    17  65      ; argparse.lua:353
0341    TSETS   17  13  64  ; "_inherit_property"
0342    FNEW    17  67      ; argparse.lua:371
0343    TSETS   17  15  66  ; "_get_argument_list"
0344    FNEW    17  69      ; argparse.lua:402
0345    TSETS   17  15  68  ; "_get_usage"
0346    FNEW    17  71      ; argparse.lua:414
0347    TSETS   17   8  70  ; "store_true"
0348    FNEW    17  73      ; argparse.lua:418
0349    TSETS   17   8  72  ; "store_false"
0350    FNEW    17  75      ; argparse.lua:422
0351    TSETS   17   8  74  ; "store"
0352    FNEW    17  76      ; argparse.lua:426
0353    TSETS   17   8  62  ; "count"
0354    FNEW    17  78      ; argparse.lua:432
0355    TSETS   17   8  77  ; "append"
0356    FNEW    17  80      ; argparse.lua:441
0357    TSETS   17   8  79  ; "concat"
0358    FNEW    17  82      ; argparse.lua:453
0359    TSETS   17  15  81  ; "_get_action"
0360    FNEW    17  84      ; argparse.lua:486
0361    TSETS   17  15  83  ; "_get_argname"
0362    FNEW    17  86      ; argparse.lua:496
0363    TSETS   17  15  85  ; "_get_choices_list"
0364    FNEW    17  88      ; argparse.lua:500
0365    TSETS   17  15  87  ; "_get_default_argname"
0366    FNEW    17  89      ; argparse.lua:508
0367    TSETS   17  16  87  ; "_get_default_argname"
0368    FNEW    17  91      ; argparse.lua:517
0369    TSETS   17  15  90  ; "_get_label_lines"
0370    FNEW    17  92      ; argparse.lua:525
0371    TSETS   17  16  90  ; "_get_label_lines"
0372    FNEW    17  93      ; argparse.lua:555
0373    TSETS   17  14  90  ; "_get_label_lines"
0374    FNEW    17  95      ; argparse.lua:559
0375    TSETS   17  15  94  ; "_get_description"
0376    FNEW    17  96      ; argparse.lua:571
0377    TSETS   17  14  94  ; "_get_description"
0378    FNEW    17  97      ; argparse.lua:575
0379    TSETS   17  16  68  ; "_get_usage"
0380    FNEW    17  99      ; argparse.lua:587
0381    TSETS   17  15  98  ; "_get_default_target"
0382    FNEW    17 100      ; argparse.lua:591
0383    TSETS   17  16  98  ; "_get_default_target"
0384    FNEW    17 102      ; argparse.lua:605
0385    TSETS   17  16 101  ; "_is_vararg"
0386    FNEW    17 104      ; argparse.lua:609
0387    TSETS   17  13 103  ; "_get_fullname"
0388    FNEW    17 106      ; argparse.lua:626
0389    TSETS   17  13 105  ; "_update_charset"
0390    FNEW    17 108      ; argparse.lua:642
0391    TSETS   17  13 107  ; "argument"
0392    FNEW    17 110      ; argparse.lua:648
0393    TSETS   17  13 109  ; "option"
0394    FNEW    17 112      ; argparse.lua:654
0395    TSETS   17  13 111  ; "flag"
0396    FNEW    17 114      ; argparse.lua:658
0397    TSETS   17  13 113  ; "command"
0398    FNEW    17 116      ; argparse.lua:665
0399    TSETS   17  13 115  ; "mutex"
0400    FNEW    17 118      ; argparse.lua:677
0401    TSETS   17  13 117  ; "group"
0402    KSTR    17 119      ; "Usage: "
0403    FNEW    18 121      ; argparse.lua:694
0404    TSETS   18  13 120  ; "get_usage"
0405    FNEW    18 122      ; argparse.lua:828
0406    FNEW    19 123      ; argparse.lua:846
0407    FNEW    20 124      ; argparse.lua:907
0408    FNEW    21 126      ; argparse.lua:921
0409    TSETS   21  13 125  ; "_get_element_help"
0410    FNEW    21 127      ; argparse.lua:973
0411    FNEW    22 129      ; argparse.lua:983
0412    TSETS   22  13 128  ; "_add_group_help"
0413    FNEW    22 131      ; argparse.lua:998
0414    TSETS   22  13 130  ; "get_help"
0415    FNEW    22 133      ; argparse.lua:1075
0416    TSETS   22  13 132  ; "add_help_command"
0417    FNEW    22 135      ; argparse.lua:1115
0418    TSETS   22  13 134  ; "_is_shell_safe"
0419    FNEW    22 137      ; argparse.lua:1158
0420    TSETS   22  13 136  ; "add_complete"
0421    FNEW    22 139      ; argparse.lua:1184
0422    TSETS   22  13 138  ; "add_complete_command"
0423    FNEW    22 140      ; argparse.lua:1211
0424    FNEW    23 141      ; argparse.lua:1215
0425    FNEW    24 143      ; argparse.lua:1220
0426    TSETS   24  13 142  ; "_get_options"
0427    FNEW    24 145      ; argparse.lua:1230
0428    TSETS   24  13 144  ; "_get_commands"
0429    FNEW    24 147      ; argparse.lua:1240
0430    TSETS   24  13 146  ; "_bash_option_args"
0431    FNEW    24 149      ; argparse.lua:1264
0432    TSETS   24  13 148  ; "_bash_get_cmd"
0433    FNEW    24 151      ; argparse.lua:1290
0434    TSETS   24  13 150  ; "_bash_cmd_completions"
0435    FNEW    24 153      ; argparse.lua:1314
0436    TSETS   24  13 152  ; "get_bash_complete"
0437    FNEW    24 155      ; argparse.lua:1348
0438    TSETS   24  13 154  ; "_zsh_arguments"
0439    FNEW    24 157      ; argparse.lua:1418
0440    TSETS   24  13 156  ; "_zsh_cmds"
0441    FNEW    24 159      ; argparse.lua:1438
0442    TSETS   24  13 158  ; "_zsh_complete_help"
0443    FNEW    24 161      ; argparse.lua:1457
0444    TSETS   24  13 160  ; "get_zsh_complete"
0445    FNEW    24 162      ; argparse.lua:1479
0446    FNEW    25 164      ; argparse.lua:1483
0447    TSETS   25  13 163  ; "_fish_get_cmd"
0448    FNEW    25 166      ; argparse.lua:1503
0449    TSETS   25  13 165  ; "_fish_complete_help"
0450    FNEW    25 168      ; argparse.lua:1561
0451    TSETS   25  13 167  ; "get_fish_complete"
0452    FNEW    25 169      ; argparse.lua:1593
0453    MOV     26   1
0454    TDUP    27 170
0455    CALL    26   2   2
0456    FNEW    27 172      ; argparse.lua:1648
0457    TSETS   27  26 171  ; "__call"
0458    FNEW    27 174      ; argparse.lua:1657
0459    TSETS   27  26 173  ; "error"
0460    FNEW    27 175      ; argparse.lua:1661
0461    TSETS   27  26  53  ; "convert"
0462    FNEW    27 177      ; argparse.lua:1685
0463    TSETS   27  26 176  ; "default"
0464    FNEW    27 178      ; argparse.lua:1689
0465    FNEW    28 180      ; argparse.lua:1700
0466    TSETS   28  26 179  ; "set_name"
0467    FNEW    28 182      ; argparse.lua:1704
0468    TSETS   28  26 181  ; "invoke"
0469    FNEW    28 184      ; argparse.lua:1728
0470    TSETS   28  26 183  ; "check_choices"
0471    FNEW    28 186      ; argparse.lua:1741
0472    TSETS   28  26 185  ; "pass"
0473    FNEW    28 188      ; argparse.lua:1753
0474    TSETS   28  26 187  ; "complete_invocation"
0475    FNEW    28 190      ; argparse.lua:1759
0476    TSETS   28  26 189  ; "close"
0477    MOV     28   1
0478    TDUP    29 191
0479    TNEW    30   0
0480    TSETS   30  29 192  ; "result"
0481    TNEW    30   0
0482    TSETS   30  29 193  ; "options"
0483    TNEW    30   0
0484    TSETS   30  29 194  ; "arguments"
0485    TNEW    30   0
0486    TSETS   30  29 195  ; "element_to_mutexes"
0487    TNEW    30   0
0488    TSETS   30  29 196  ; "mutex_to_element_state"
0489    TNEW    30   0
0490    TSETS   30  29 197  ; "command_actions"
0491    CALL    28   2   2
0492    FNEW    29 198      ; argparse.lua:1807
0493    TSETS   29  28 171  ; "__call"
0494    FNEW    29 199      ; argparse.lua:1815
0495    TSETS   29  28 173  ; "error"
0496    FNEW    29 201      ; argparse.lua:1819
0497    TSETS   29  28 200  ; "switch"
0498    FNEW    29 203      ; argparse.lua:1863
0499    TSETS   29  28 202  ; "get_option"
0500    FNEW    29 205      ; argparse.lua:1873
0501    TSETS   29  28 204  ; "get_command"
0502    FNEW    29 207      ; argparse.lua:1887
0503    TSETS   29  28 206  ; "check_mutexes"
0504    FNEW    29 208      ; argparse.lua:1901
0505    TSETS   29  28 181  ; "invoke"
0506    FNEW    29 209      ; argparse.lua:1911
0507    TSETS   29  28 185  ; "pass"
0508    FNEW    29 210      ; argparse.lua:1935
0509    TSETS   29  28 189  ; "close"
0510    FNEW    29 212      ; argparse.lua:1942
0511    TSETS   29  28 211  ; "finalize"
0512    FNEW    29 214      ; argparse.lua:1990
0513    TSETS   29  28 213  ; "parse"
0514    FNEW    29 215      ; argparse.lua:2053
0515    TSETS   29  13 173  ; "error"
0516    GGET    29 216      ; "rawget"
0517    GGET    30 217      ; "_G"
0518    KSTR    31 218      ; "arg"
0519    CALL    29   2   3
0520    IST         29
0521    JMP     30 => 0523
0522    TNEW    29   0
0523 => FNEW    30 220      ; argparse.lua:2061
0524    TSETS   30  13 219  ; "_parse"
0525    FNEW    30 221      ; argparse.lua:2065
0526    TSETS   30  13 213  ; "parse"
0527    FNEW    30 222      ; argparse.lua:2069
0528    FNEW    31 224      ; argparse.lua:2073
0529    TSETS   31  13 223  ; "pparse"
0530    TNEW    31   0
0531    KSTR    32 226      ; "0.7.0"
0532    TSETS   32  31 225  ; "version"
0533    GGET    32 227      ; "setmetatable"
0534    MOV     33  31
0535    TDUP    34 229
0536    FNEW    35 228      ; argparse.lua:2096
0537    TSETS   35  34 171  ; "__call"
0538    CALL    32   1   3
0539    UCLO     0 => 0540
0540 => RET1    31   2

