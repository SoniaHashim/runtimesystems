
main <./argparse.lua:0,0> (562 instructions, 2248 bytes at 0x7fe3c2c068a0)
0+ params, 38 slots, 0 upvalues, 32 locals, 134 constants, 100 functions
	1	[33]	CLOSURE  	0 0	; 0x7fe3c2c06ac0
	2	[33]	MOVE     	0 0
	3	[110]	CLOSURE  	1 1	; 0x7fe3c2c06f70
	4	[110]	MOVE     	0 0
	5	[120]	CLOSURE  	2 2	; 0x7fe3c2c083f0
	6	[125]	CLOSURE  	3 3	; 0x7fe3c2c08730
	7	[125]	MOVE     	0 2
	8	[127]	NEWTABLE 	4 2 0
	9	[127]	LOADK    	5 -1	; "name"
	10	[142]	CLOSURE  	6 4	; 0x7fe3c2c08170
	11	[142]	MOVE     	0 2
	12	[142]	SETLIST  	4 2 1	; 1
	13	[144]	NEWTABLE 	5 2 0
	14	[144]	LOADK    	6 -2	; "hidden_name"
	15	[155]	CLOSURE  	7 5	; 0x7fe3c2c082d0
	16	[155]	MOVE     	0 2
	17	[155]	SETLIST  	5 2 1	; 1
	18	[183]	CLOSURE  	6 6	; 0x7fe3c2c09540
	19	[197]	CLOSURE  	7 7	; 0x7fe3c2c09760
	20	[197]	MOVE     	0 2
	21	[197]	MOVE     	0 6
	22	[199]	NEWTABLE 	8 0 0
	23	[201]	NEWTABLE 	9 2 0
	24	[201]	LOADK    	10 -3	; "action"
	25	[207]	CLOSURE  	11 8	; 0x7fe3c2c07650
	26	[207]	MOVE     	0 2
	27	[207]	MOVE     	0 8
	28	[207]	SETLIST  	9 2 1	; 1
	29	[209]	NEWTABLE 	10 2 0
	30	[209]	LOADK    	11 -4	; "init"
	31	[211]	CLOSURE  	12 9	; 0x7fe3c2c08e60
	32	[211]	SETLIST  	10 2 1	; 1
	33	[213]	NEWTABLE 	11 2 0
	34	[213]	LOADK    	12 -5	; "default"
	35	[219]	CLOSURE  	13 10	; 0x7fe3c2c08fd0
	36	[219]	SETLIST  	11 2 1	; 1
	37	[221]	NEWTABLE 	12 2 0
	38	[221]	LOADK    	13 -6	; "add_help"
	39	[247]	CLOSURE  	14 11	; 0x7fe3c2c0aac0
	40	[247]	MOVE     	0 2
	41	[247]	SETLIST  	12 2 1	; 1
	42	[249]	MOVE     	13 1
	43	[249]	NEWTABLE 	14 0 7
	44	[250]	NEWTABLE 	15 0 0
	45	[250]	SETTABLE 	14 -7 15	; "_arguments" -
	46	[251]	NEWTABLE 	15 0 0
	47	[251]	SETTABLE 	14 -8 15	; "_options" -
	48	[252]	NEWTABLE 	15 0 0
	49	[252]	SETTABLE 	14 -9 15	; "_commands" -
	50	[253]	NEWTABLE 	15 0 0
	51	[253]	SETTABLE 	14 -10 15	; "_mutexes" -
	52	[254]	NEWTABLE 	15 0 0
	53	[254]	SETTABLE 	14 -11 15	; "_groups" -
	54	[255]	SETTABLE 	14 -12 -13	; "_require_command" true
	55	[256]	SETTABLE 	14 -14 -13	; "_handle_options" true
	56	[257]	NEWTABLE 	15 16 1
	57	[258]	SETTABLE 	15 -15 -16	; "args" 3
	58	[259]	MOVE     	16 3
	59	[259]	LOADK    	17 -1	; "name"
	60	[259]	LOADK    	18 -17	; "string"
	61	[259]	CALL     	16 3 2
	62	[260]	MOVE     	17 3
	63	[260]	LOADK    	18 -18	; "description"
	64	[260]	LOADK    	19 -17	; "string"
	65	[260]	CALL     	17 3 2
	66	[261]	MOVE     	18 3
	67	[261]	LOADK    	19 -19	; "epilog"
	68	[261]	LOADK    	20 -17	; "string"
	69	[261]	CALL     	18 3 2
	70	[262]	MOVE     	19 3
	71	[262]	LOADK    	20 -20	; "usage"
	72	[262]	LOADK    	21 -17	; "string"
	73	[262]	CALL     	19 3 2
	74	[263]	MOVE     	20 3
	75	[263]	LOADK    	21 -21	; "help"
	76	[263]	LOADK    	22 -17	; "string"
	77	[263]	CALL     	20 3 2
	78	[264]	MOVE     	21 3
	79	[264]	LOADK    	22 -22	; "require_command"
	80	[264]	LOADK    	23 -23	; "boolean"
	81	[264]	CALL     	21 3 2
	82	[265]	MOVE     	22 3
	83	[265]	LOADK    	23 -24	; "handle_options"
	84	[265]	LOADK    	24 -23	; "boolean"
	85	[265]	CALL     	22 3 2
	86	[266]	MOVE     	23 3
	87	[266]	LOADK    	24 -3	; "action"
	88	[266]	LOADK    	25 -25	; "function"
	89	[266]	CALL     	23 3 2
	90	[267]	MOVE     	24 3
	91	[267]	LOADK    	25 -26	; "command_target"
	92	[267]	LOADK    	26 -17	; "string"
	93	[267]	CALL     	24 3 2
	94	[268]	MOVE     	25 3
	95	[268]	LOADK    	26 -27	; "help_vertical_space"
	96	[268]	LOADK    	27 -28	; "number"
	97	[268]	CALL     	25 3 2
	98	[269]	MOVE     	26 3
	99	[269]	LOADK    	27 -29	; "usage_margin"
	100	[269]	LOADK    	28 -28	; "number"
	101	[269]	CALL     	26 3 2
	102	[270]	MOVE     	27 3
	103	[270]	LOADK    	28 -30	; "usage_max_width"
	104	[270]	LOADK    	29 -28	; "number"
	105	[270]	CALL     	27 3 2
	106	[271]	MOVE     	28 3
	107	[271]	LOADK    	29 -31	; "help_usage_margin"
	108	[271]	LOADK    	30 -28	; "number"
	109	[271]	CALL     	28 3 2
	110	[272]	MOVE     	29 3
	111	[272]	LOADK    	30 -32	; "help_description_margin"
	112	[272]	LOADK    	31 -28	; "number"
	113	[272]	CALL     	29 3 2
	114	[273]	MOVE     	30 3
	115	[273]	LOADK    	31 -33	; "help_max_width"
	116	[273]	LOADK    	32 -28	; "number"
	117	[273]	CALL     	30 3 2
	118	[275]	MOVE     	31 12
	119	[275]	SETLIST  	15 16 1	; 1
	120	[249]	CALL     	13 3 2
	121	[277]	MOVE     	14 1
	122	[277]	NEWTABLE 	15 0 2
	123	[278]	NEWTABLE 	16 0 0
	124	[278]	SETTABLE 	15 -34 16	; "_aliases" -
	125	[279]	NEWTABLE 	16 0 0
	126	[279]	SETTABLE 	15 -35 16	; "_public_aliases" -
	127	[280]	NEWTABLE 	16 18 1
	128	[281]	SETTABLE 	16 -15 -16	; "args" 3
	129	[282]	MOVE     	17 4
	130	[283]	MOVE     	18 3
	131	[283]	LOADK    	19 -18	; "description"
	132	[283]	LOADK    	20 -17	; "string"
	133	[283]	CALL     	18 3 2
	134	[284]	MOVE     	19 3
	135	[284]	LOADK    	20 -19	; "epilog"
	136	[284]	LOADK    	21 -17	; "string"
	137	[284]	CALL     	19 3 2
	138	[285]	MOVE     	20 5
	139	[286]	MOVE     	21 3
	140	[286]	LOADK    	22 -36	; "summary"
	141	[286]	LOADK    	23 -17	; "string"
	142	[286]	CALL     	21 3 2
	143	[287]	MOVE     	22 3
	144	[287]	LOADK    	23 -37	; "target"
	145	[287]	LOADK    	24 -17	; "string"
	146	[287]	CALL     	22 3 2
	147	[288]	MOVE     	23 3
	148	[288]	LOADK    	24 -20	; "usage"
	149	[288]	LOADK    	25 -17	; "string"
	150	[288]	CALL     	23 3 2
	151	[289]	MOVE     	24 3
	152	[289]	LOADK    	25 -21	; "help"
	153	[289]	LOADK    	26 -17	; "string"
	154	[289]	CALL     	24 3 2
	155	[290]	MOVE     	25 3
	156	[290]	LOADK    	26 -22	; "require_command"
	157	[290]	LOADK    	27 -23	; "boolean"
	158	[290]	CALL     	25 3 2
	159	[291]	MOVE     	26 3
	160	[291]	LOADK    	27 -24	; "handle_options"
	161	[291]	LOADK    	28 -23	; "boolean"
	162	[291]	CALL     	26 3 2
	163	[292]	MOVE     	27 3
	164	[292]	LOADK    	28 -3	; "action"
	165	[292]	LOADK    	29 -25	; "function"
	166	[292]	CALL     	27 3 2
	167	[293]	MOVE     	28 3
	168	[293]	LOADK    	29 -26	; "command_target"
	169	[293]	LOADK    	30 -17	; "string"
	170	[293]	CALL     	28 3 2
	171	[294]	MOVE     	29 3
	172	[294]	LOADK    	30 -27	; "help_vertical_space"
	173	[294]	LOADK    	31 -28	; "number"
	174	[294]	CALL     	29 3 2
	175	[295]	MOVE     	30 3
	176	[295]	LOADK    	31 -29	; "usage_margin"
	177	[295]	LOADK    	32 -28	; "number"
	178	[295]	CALL     	30 3 2
	179	[296]	MOVE     	31 3
	180	[296]	LOADK    	32 -30	; "usage_max_width"
	181	[296]	LOADK    	33 -28	; "number"
	182	[296]	CALL     	31 3 2
	183	[297]	MOVE     	32 3
	184	[297]	LOADK    	33 -31	; "help_usage_margin"
	185	[297]	LOADK    	34 -28	; "number"
	186	[297]	CALL     	32 3 2
	187	[298]	MOVE     	33 3
	188	[298]	LOADK    	34 -32	; "help_description_margin"
	189	[298]	LOADK    	35 -28	; "number"
	190	[298]	CALL     	33 3 2
	191	[299]	MOVE     	34 3
	192	[299]	LOADK    	35 -33	; "help_max_width"
	193	[299]	LOADK    	36 -28	; "number"
	194	[299]	CALL     	34 3 2
	195	[300]	MOVE     	35 3
	196	[300]	LOADK    	36 -38	; "hidden"
	197	[300]	LOADK    	37 -23	; "boolean"
	198	[300]	CALL     	35 3 2
	199	[302]	MOVE     	36 12
	200	[302]	SETLIST  	16 20 1	; 1
	201	[302]	MOVE     	17 13
	202	[277]	CALL     	14 4 2
	203	[304]	MOVE     	15 1
	204	[304]	NEWTABLE 	16 0 6
	205	[305]	SETTABLE 	16 -39 -40	; "_minargs" 1
	206	[306]	SETTABLE 	16 -41 -40	; "_maxargs" 1
	207	[307]	SETTABLE 	16 -42 -40	; "_mincount" 1
	208	[308]	SETTABLE 	16 -43 -40	; "_maxcount" 1
	209	[309]	SETTABLE 	16 -44 -45	; "_defmode" "unused"
	210	[310]	SETTABLE 	16 -46 -13	; "_show_default" true
	211	[311]	NEWTABLE 	17 13 1
	212	[312]	SETTABLE 	17 -15 -47	; "args" 5
	213	[313]	MOVE     	18 3
	214	[313]	LOADK    	19 -1	; "name"
	215	[313]	LOADK    	20 -17	; "string"
	216	[313]	CALL     	18 3 2
	217	[314]	MOVE     	19 3
	218	[314]	LOADK    	20 -18	; "description"
	219	[314]	LOADK    	21 -17	; "string"
	220	[314]	CALL     	19 3 2
	221	[315]	MOVE     	20 11
	222	[316]	MOVE     	21 3
	223	[316]	LOADK    	22 -48	; "convert"
	224	[316]	LOADK    	23 -25	; "function"
	225	[316]	LOADK    	24 -49	; "table"
	226	[316]	CALL     	21 4 2
	227	[317]	MOVE     	22 7
	228	[317]	LOADK    	23 -15	; "args"
	229	[317]	CALL     	22 2 2
	230	[318]	MOVE     	23 3
	231	[318]	LOADK    	24 -37	; "target"
	232	[318]	LOADK    	25 -17	; "string"
	233	[318]	CALL     	23 3 2
	234	[319]	MOVE     	24 3
	235	[319]	LOADK    	25 -50	; "defmode"
	236	[319]	LOADK    	26 -17	; "string"
	237	[319]	CALL     	24 3 2
	238	[320]	MOVE     	25 3
	239	[320]	LOADK    	26 -51	; "show_default"
	240	[320]	LOADK    	27 -23	; "boolean"
	241	[320]	CALL     	25 3 2
	242	[321]	MOVE     	26 3
	243	[321]	LOADK    	27 -52	; "argname"
	244	[321]	LOADK    	28 -17	; "string"
	245	[321]	LOADK    	29 -49	; "table"
	246	[321]	CALL     	26 4 2
	247	[322]	MOVE     	27 3
	248	[322]	LOADK    	28 -53	; "choices"
	249	[322]	LOADK    	29 -49	; "table"
	250	[322]	CALL     	27 3 2
	251	[323]	MOVE     	28 3
	252	[323]	LOADK    	29 -38	; "hidden"
	253	[323]	LOADK    	30 -23	; "boolean"
	254	[323]	CALL     	28 3 2
	255	[324]	MOVE     	29 9
	256	[326]	MOVE     	30 10
	257	[326]	SETLIST  	17 13 1	; 1
	258	[304]	CALL     	15 3 2
	259	[328]	MOVE     	16 1
	260	[328]	NEWTABLE 	17 0 4
	261	[329]	NEWTABLE 	18 0 0
	262	[329]	SETTABLE 	17 -34 18	; "_aliases" -
	263	[330]	NEWTABLE 	18 0 0
	264	[330]	SETTABLE 	17 -35 18	; "_public_aliases" -
	265	[331]	SETTABLE 	17 -42 -54	; "_mincount" 0
	266	[332]	SETTABLE 	17 -55 -13	; "_overwrite" true
	267	[333]	NEWTABLE 	18 16 1
	268	[334]	SETTABLE 	18 -15 -56	; "args" 6
	269	[335]	MOVE     	19 4
	270	[336]	MOVE     	20 3
	271	[336]	LOADK    	21 -18	; "description"
	272	[336]	LOADK    	22 -17	; "string"
	273	[336]	CALL     	20 3 2
	274	[337]	MOVE     	21 11
	275	[338]	MOVE     	22 3
	276	[338]	LOADK    	23 -48	; "convert"
	277	[338]	LOADK    	24 -25	; "function"
	278	[338]	LOADK    	25 -49	; "table"
	279	[338]	CALL     	22 4 2
	280	[339]	MOVE     	23 7
	281	[339]	LOADK    	24 -15	; "args"
	282	[339]	CALL     	23 2 2
	283	[340]	MOVE     	24 7
	284	[340]	LOADK    	25 -57	; "count"
	285	[340]	CALL     	24 2 2
	286	[341]	MOVE     	25 5
	287	[342]	MOVE     	26 3
	288	[342]	LOADK    	27 -37	; "target"
	289	[342]	LOADK    	28 -17	; "string"
	290	[342]	CALL     	26 3 2
	291	[343]	MOVE     	27 3
	292	[343]	LOADK    	28 -50	; "defmode"
	293	[343]	LOADK    	29 -17	; "string"
	294	[343]	CALL     	27 3 2
	295	[344]	MOVE     	28 3
	296	[344]	LOADK    	29 -51	; "show_default"
	297	[344]	LOADK    	30 -23	; "boolean"
	298	[344]	CALL     	28 3 2
	299	[345]	MOVE     	29 3
	300	[345]	LOADK    	30 -58	; "overwrite"
	301	[345]	LOADK    	31 -23	; "boolean"
	302	[345]	CALL     	29 3 2
	303	[346]	MOVE     	30 3
	304	[346]	LOADK    	31 -52	; "argname"
	305	[346]	LOADK    	32 -17	; "string"
	306	[346]	LOADK    	33 -49	; "table"
	307	[346]	CALL     	30 4 2
	308	[347]	MOVE     	31 3
	309	[347]	LOADK    	32 -53	; "choices"
	310	[347]	LOADK    	33 -49	; "table"
	311	[347]	CALL     	31 3 2
	312	[348]	MOVE     	32 3
	313	[348]	LOADK    	33 -38	; "hidden"
	314	[348]	LOADK    	34 -23	; "boolean"
	315	[348]	CALL     	32 3 2
	316	[349]	MOVE     	33 9
	317	[351]	MOVE     	34 10
	318	[351]	SETLIST  	18 16 1	; 1
	319	[351]	MOVE     	19 15
	320	[328]	CALL     	16 4 2
	321	[369]	CLOSURE  	17 12	; 0x7fe3c2c08f50
	322	[353]	SETTABLE 	13 -59 17	; "_inherit_property" -
	323	[400]	CLOSURE  	17 13	; 0x7fe3c2c0b1c0
	324	[371]	SETTABLE 	15 -60 17	; "_get_argument_list" -
	325	[412]	CLOSURE  	17 14	; 0x7fe3c2c0b440
	326	[402]	SETTABLE 	15 -61 17	; "_get_usage" -
	327	[416]	CLOSURE  	17 15	; 0x7fe3c2c0b740
	328	[414]	SETTABLE 	8 -62 17	; "store_true" -
	329	[420]	CLOSURE  	17 16	; 0x7fe3c2c0b5e0
	330	[418]	SETTABLE 	8 -63 17	; "store_false" -
	331	[424]	CLOSURE  	17 17	; 0x7fe3c2c0a740
	332	[422]	SETTABLE 	8 -64 17	; "store" -
	333	[430]	CLOSURE  	17 18	; 0x7fe3c2c0c730
	334	[426]	SETTABLE 	8 -57 17	; "count" -
	335	[439]	CLOSURE  	17 19	; 0x7fe3c2c0c550
	336	[432]	SETTABLE 	8 -65 17	; "append" -
	337	[451]	CLOSURE  	17 20	; 0x7fe3c2c0cdf0
	338	[441]	SETTABLE 	8 -66 17	; "concat" -
	339	[483]	CLOSURE  	17 21	; 0x7fe3c2c0d3c0
	340	[483]	MOVE     	0 8
	341	[453]	SETTABLE 	15 -67 17	; "_get_action" -
	342	[494]	CLOSURE  	17 22	; 0x7fe3c2c0d5b0
	343	[486]	SETTABLE 	15 -68 17	; "_get_argname" -
	344	[498]	CLOSURE  	17 23	; 0x7fe3c2c0d440
	345	[496]	SETTABLE 	15 -69 17	; "_get_choices_list" -
	346	[506]	CLOSURE  	17 24	; 0x7fe3c2c0d9b0
	347	[500]	SETTABLE 	15 -70 17	; "_get_default_argname" -
	348	[514]	CLOSURE  	17 25	; 0x7fe3c2c0cf90
	349	[508]	SETTABLE 	16 -70 17	; "_get_default_argname" -
	350	[523]	CLOSURE  	17 26	; 0x7fe3c2c0dd50
	351	[517]	SETTABLE 	15 -71 17	; "_get_label_lines" -
	352	[553]	CLOSURE  	17 27	; 0x7fe3c2c0e210
	353	[525]	SETTABLE 	16 -71 17	; "_get_label_lines" -
	354	[557]	CLOSURE  	17 28	; 0x7fe3c2c0e770
	355	[555]	SETTABLE 	14 -71 17	; "_get_label_lines" -
	356	[569]	CLOSURE  	17 29	; 0x7fe3c2c0e290
	357	[559]	SETTABLE 	15 -72 17	; "_get_description" -
	358	[573]	CLOSURE  	17 30	; 0x7fe3c2c0f2d0
	359	[571]	SETTABLE 	14 -72 17	; "_get_description" -
	360	[585]	CLOSURE  	17 31	; 0x7fe3c2c0f530
	361	[575]	SETTABLE 	16 -61 17	; "_get_usage" -
	362	[589]	CLOSURE  	17 32	; 0x7fe3c2c0f870
	363	[587]	SETTABLE 	15 -73 17	; "_get_default_target" -
	364	[603]	CLOSURE  	17 33	; 0x7fe3c2c0fb60
	365	[591]	SETTABLE 	16 -73 17	; "_get_default_target" -
	366	[607]	CLOSURE  	17 34	; 0x7fe3c2c0fea0
	367	[605]	SETTABLE 	16 -74 17	; "_is_vararg" -
	368	[624]	CLOSURE  	17 35	; 0x7fe3c2c10120
	369	[609]	SETTABLE 	13 -75 17	; "_get_fullname" -
	370	[640]	CLOSURE  	17 36	; 0x7fe3c2c10580
	371	[626]	SETTABLE 	13 -76 17	; "_update_charset" -
	372	[646]	CLOSURE  	17 37	; 0x7fe3c2c10780
	373	[646]	MOVE     	0 15
	374	[642]	SETTABLE 	13 -77 17	; "argument" -
	375	[652]	CLOSURE  	17 38	; 0x7fe3c2c10be0
	376	[652]	MOVE     	0 16
	377	[648]	SETTABLE 	13 -78 17	; "option" -
	378	[656]	CLOSURE  	17 39	; 0x7fe3c2c11030
	379	[654]	SETTABLE 	13 -79 17	; "flag" -
	380	[663]	CLOSURE  	17 40	; 0x7fe3c2c11670
	381	[663]	MOVE     	0 14
	382	[658]	SETTABLE 	13 -80 17	; "command" -
	383	[675]	CLOSURE  	17 41	; 0x7fe3c2c11870
	384	[675]	MOVE     	0 16
	385	[675]	MOVE     	0 15
	386	[665]	SETTABLE 	13 -81 17	; "mutex" -
	387	[690]	CLOSURE  	17 42	; 0x7fe3c2c11e30
	388	[690]	MOVE     	0 16
	389	[690]	MOVE     	0 15
	390	[690]	MOVE     	0 14
	391	[677]	SETTABLE 	13 -82 17	; "group" -
	392	[692]	LOADK    	17 -83	; "Usage: "
	393	[826]	CLOSURE  	18 43	; 0x7fe3c2c11d70
	394	[826]	MOVE     	0 17
	395	[826]	MOVE     	0 16
	396	[694]	SETTABLE 	13 -84 18	; "get_usage" -
	397	[844]	CLOSURE  	18 44	; 0x7fe3c2c12890
	398	[902]	CLOSURE  	19 45	; 0x7fe3c2c13870
	399	[919]	CLOSURE  	20 46	; 0x7fe3c2c14340
	400	[919]	MOVE     	0 19
	401	[971]	CLOSURE  	21 47	; 0x7fe3c2c14be0
	402	[971]	MOVE     	0 18
	403	[971]	MOVE     	0 20
	404	[921]	SETTABLE 	13 -85 21	; "_get_element_help" -
	405	[981]	CLOSURE  	21 48	; 0x7fe3c2c14fb0
	406	[996]	CLOSURE  	22 49	; 0x7fe3c2c0e0b0
	407	[983]	SETTABLE 	13 -86 22	; "_add_group_help" -
	408	[1073]	CLOSURE  	22 50	; 0x7fe3c2c14cc0
	409	[1073]	MOVE     	0 20
	410	[1073]	MOVE     	0 18
	411	[1073]	MOVE     	0 15
	412	[1073]	MOVE     	0 16
	413	[1073]	MOVE     	0 14
	414	[1073]	MOVE     	0 21
	415	[998]	SETTABLE 	13 -87 22	; "get_help" -
	416	[1113]	CLOSURE  	22 51	; 0x7fe3c2c0dc50
	417	[1075]	SETTABLE 	13 -88 22	; "add_help_command" -
	418	[1156]	CLOSURE  	22 52	; 0x7fe3c2c14f30
	419	[1115]	SETTABLE 	13 -89 22	; "_is_shell_safe" -
	420	[1182]	CLOSURE  	22 53	; 0x7fe3c2c0ebb0
	421	[1158]	SETTABLE 	13 -90 22	; "add_complete" -
	422	[1209]	CLOSURE  	22 54	; 0x7fe3c2c11950
	423	[1184]	SETTABLE 	13 -91 22	; "add_complete_command" -
	424	[1213]	CLOSURE  	22 55	; 0x7fe3c2c163b0
	425	[1218]	CLOSURE  	23 56	; 0x7fe3c2c16850
	426	[1228]	CLOSURE  	24 57	; 0x7fe3c2c16d50
	427	[1220]	SETTABLE 	13 -92 24	; "_get_options" -
	428	[1238]	CLOSURE  	24 58	; 0x7fe3c2c17400
	429	[1230]	SETTABLE 	13 -93 24	; "_get_commands" -
	430	[1262]	CLOSURE  	24 59	; 0x7fe3c2c17770
	431	[1240]	SETTABLE 	13 -94 24	; "_bash_option_args" -
	432	[1288]	CLOSURE  	24 60	; 0x7fe3c2c17870
	433	[1264]	SETTABLE 	13 -95 24	; "_bash_get_cmd" -
	434	[1312]	CLOSURE  	24 61	; 0x7fe3c2d040f0
	435	[1290]	SETTABLE 	13 -96 24	; "_bash_cmd_completions" -
	436	[1346]	CLOSURE  	24 62	; 0x7fe3c2d04700
	437	[1346]	MOVE     	0 22
	438	[1314]	SETTABLE 	13 -97 24	; "get_bash_complete" -
	439	[1416]	CLOSURE  	24 63	; 0x7fe3c2d04d00
	440	[1416]	MOVE     	0 23
	441	[1348]	SETTABLE 	13 -98 24	; "_zsh_arguments" -
	442	[1436]	CLOSURE  	24 64	; 0x7fe3c2d05050
	443	[1436]	MOVE     	0 23
	444	[1418]	SETTABLE 	13 -99 24	; "_zsh_cmds" -
	445	[1455]	CLOSURE  	24 65	; 0x7fe3c2d05c80
	446	[1438]	SETTABLE 	13 -100 24	; "_zsh_complete_help" -
	447	[1477]	CLOSURE  	24 66	; 0x7fe3c2d06160
	448	[1477]	MOVE     	0 22
	449	[1457]	SETTABLE 	13 -101 24	; "get_zsh_complete" -
	450	[1481]	CLOSURE  	24 67	; 0x7fe3c2d05bd0
	451	[1501]	CLOSURE  	25 68	; 0x7fe3c2d05a90
	452	[1483]	SETTABLE 	13 -102 25	; "_fish_get_cmd" -
	453	[1559]	CLOSURE  	25 69	; 0x7fe3c2d07c90
	454	[1559]	MOVE     	0 24
	455	[1559]	MOVE     	0 23
	456	[1503]	SETTABLE 	13 -103 25	; "_fish_complete_help" -
	457	[1591]	CLOSURE  	25 70	; 0x7fe3c2d08390
	458	[1591]	MOVE     	0 22
	459	[1561]	SETTABLE 	13 -104 25	; "get_fish_complete" -
	460	[1642]	CLOSURE  	25 71	; 0x7fe3c2d07720
	461	[1644]	MOVE     	26 1
	462	[1644]	NEWTABLE 	27 0 1
	463	[1645]	SETTABLE 	27 -105 -54	; "invocations" 0
	464	[1644]	CALL     	26 2 2
	465	[1655]	CLOSURE  	27 72	; 0x7fe3c2d08d60
	466	[1648]	SETTABLE 	26 -106 27	; "__call" -
	467	[1659]	CLOSURE  	27 73	; 0x7fe3c2d096b0
	468	[1657]	SETTABLE 	26 -107 27	; "error" -
	469	[1683]	CLOSURE  	27 74	; 0x7fe3c2d09ac0
	470	[1661]	SETTABLE 	26 -48 27	; "convert" -
	471	[1687]	CLOSURE  	27 75	; 0x7fe3c2d09ec0
	472	[1685]	SETTABLE 	26 -5 27	; "default" -
	473	[1698]	CLOSURE  	27 76	; 0x7fe3c2d09e20
	474	[1702]	CLOSURE  	28 77	; 0x7fe3c2d0a970
	475	[1700]	SETTABLE 	26 -108 28	; "set_name" -
	476	[1726]	CLOSURE  	28 78	; 0x7fe3c2d0aba0
	477	[1726]	MOVE     	0 27
	478	[1704]	SETTABLE 	26 -109 28	; "invoke" -
	479	[1739]	CLOSURE  	28 79	; 0x7fe3c2d0b120
	480	[1739]	MOVE     	0 16
	481	[1728]	SETTABLE 	26 -110 28	; "check_choices" -
	482	[1751]	CLOSURE  	28 80	; 0x7fe3c2d0af70
	483	[1741]	SETTABLE 	26 -111 28	; "pass" -
	484	[1757]	CLOSURE  	28 81	; 0x7fe3c2d0b650
	485	[1753]	SETTABLE 	26 -112 28	; "complete_invocation" -
	486	[1795]	CLOSURE  	28 82	; 0x7fe3c2d0c190
	487	[1795]	MOVE     	0 15
	488	[1795]	MOVE     	0 27
	489	[1759]	SETTABLE 	26 -113 28	; "close" -
	490	[1797]	MOVE     	28 1
	491	[1797]	NEWTABLE 	29 0 7
	492	[1798]	NEWTABLE 	30 0 0
	493	[1798]	SETTABLE 	29 -114 30	; "result" -
	494	[1799]	NEWTABLE 	30 0 0
	495	[1799]	SETTABLE 	29 -115 30	; "options" -
	496	[1800]	NEWTABLE 	30 0 0
	497	[1800]	SETTABLE 	29 -116 30	; "arguments" -
	498	[1801]	SETTABLE 	29 -117 -40	; "argument_i" 1
	499	[1802]	NEWTABLE 	30 0 0
	500	[1802]	SETTABLE 	29 -118 30	; "element_to_mutexes" -
	501	[1803]	NEWTABLE 	30 0 0
	502	[1803]	SETTABLE 	29 -119 30	; "mutex_to_element_state" -
	503	[1804]	NEWTABLE 	30 0 0
	504	[1804]	SETTABLE 	29 -120 30	; "command_actions" -
	505	[1797]	CALL     	28 2 2
	506	[1813]	CLOSURE  	29 83	; 0x7fe3c2d0c670
	507	[1807]	SETTABLE 	28 -106 29	; "__call" -
	508	[1817]	CLOSURE  	29 84	; 0x7fe3c2d0ce70
	509	[1815]	SETTABLE 	28 -107 29	; "error" -
	510	[1861]	CLOSURE  	29 85	; 0x7fe3c2d0d290
	511	[1861]	MOVE     	0 26
	512	[1819]	SETTABLE 	28 -121 29	; "switch" -
	513	[1871]	CLOSURE  	29 86	; 0x7fe3c2d0d4b0
	514	[1871]	MOVE     	0 25
	515	[1863]	SETTABLE 	28 -122 29	; "get_option" -
	516	[1885]	CLOSURE  	29 87	; 0x7fe3c2d0d8e0
	517	[1885]	MOVE     	0 25
	518	[1873]	SETTABLE 	28 -123 29	; "get_command" -
	519	[1899]	CLOSURE  	29 88	; 0x7fe3c2d0db10
	520	[1887]	SETTABLE 	28 -124 29	; "check_mutexes" -
	521	[1909]	CLOSURE  	29 89	; 0x7fe3c2d0e650
	522	[1901]	SETTABLE 	28 -109 29	; "invoke" -
	523	[1933]	CLOSURE  	29 90	; 0x7fe3c2d0e790
	524	[1911]	SETTABLE 	28 -111 29	; "pass" -
	525	[1940]	CLOSURE  	29 91	; 0x7fe3c2d0eda0
	526	[1935]	SETTABLE 	28 -113 29	; "close" -
	527	[1988]	CLOSURE  	29 92	; 0x7fe3c2d0eca0
	528	[1988]	MOVE     	0 27
	529	[1942]	SETTABLE 	28 -125 29	; "finalize" -
	530	[2051]	CLOSURE  	29 93	; 0x7fe3c2d0f620
	531	[1990]	SETTABLE 	28 -126 29	; "parse" -
	532	[2056]	CLOSURE  	29 94	; 0x7fe3c2d0f920
	533	[2053]	SETTABLE 	13 -107 29	; "error" -
	534	[2059]	GETGLOBAL	29 -127	; rawget
	535	[2059]	GETGLOBAL	30 -128	; _G
	536	[2059]	LOADK    	31 -129	; "arg"
	537	[2059]	CALL     	29 3 2
	538	[2059]	TEST     	29 0 1
	539	[2059]	JMP      	1	; to 541
	540	[2059]	NEWTABLE 	29 0 0
	541	[2063]	CLOSURE  	30 95	; 0x7fe3c2d0fa90
	542	[2063]	MOVE     	0 28
	543	[2063]	MOVE     	0 29
	544	[2061]	SETTABLE 	13 -130 30	; "_parse" -
	545	[2067]	CLOSURE  	30 96	; 0x7fe3c2d10af0
	546	[2065]	SETTABLE 	13 -126 30	; "parse" -
	547	[2071]	CLOSURE  	30 97	; 0x7fe3c2d10eb0
	548	[2090]	CLOSURE  	31 98	; 0x7fe3c2d11270
	549	[2090]	MOVE     	0 30
	550	[2073]	SETTABLE 	13 -131 31	; "pparse" -
	551	[2092]	NEWTABLE 	31 0 0
	552	[2094]	SETTABLE 	31 -132 -133	; "version" "0.7.0"
	553	[2096]	GETGLOBAL	32 -134	; setmetatable
	554	[2096]	MOVE     	33 31
	555	[2096]	NEWTABLE 	34 0 1
	556	[2098]	CLOSURE  	35 99	; 0x7fe3c2d11db0
	557	[2098]	MOVE     	0 13
	558	[2098]	MOVE     	0 29
	559	[2098]	SETTABLE 	34 -106 35	; "__call" -
	560	[2096]	CALL     	32 3 1
	561	[2100]	RETURN   	31 2
	562	[2100]	RETURN   	0 1

function <./argparse.lua:23,33> (19 instructions, 76 bytes at 0x7fe3c2c06ac0)
2 params, 10 slots, 1 upvalue, 7 locals, 3 constants, 0 functions
	1	[24]	GETGLOBAL	2 -1	; pairs
	2	[24]	MOVE     	3 1
	3	[24]	CALL     	2 2 4
	4	[24]	JMP      	11	; to 16
	5	[25]	GETGLOBAL	7 -2	; type
	6	[25]	MOVE     	8 6
	7	[25]	CALL     	7 2 2
	8	[25]	EQ       	0 7 -3	; - "table"
	9	[25]	JMP      	5	; to 15
	10	[26]	GETUPVAL 	7 0	; deep_update
	11	[26]	NEWTABLE 	8 0 0
	12	[26]	MOVE     	9 6
	13	[26]	CALL     	7 3 2
	14	[26]	MOVE     	6 7
	15	[29]	SETTABLE 	0 5 6
	16	[24]	TFORLOOP 	2 2
	17	[29]	JMP      	-13	; to 5
	18	[32]	RETURN   	0 2
	19	[33]	RETURN   	0 1

function <./argparse.lua:38,110> (47 instructions, 188 bytes at 0x7fe3c2c06f70)
3 params, 13 slots, 1 upvalue, 13 locals, 8 constants, 3 functions
	1	[40]	NEWTABLE 	3 0 0
	2	[41]	SETTABLE 	3 -1 3	; "__index" -
	3	[43]	TEST     	2 0 0
	4	[43]	JMP      	9	; to 14
	5	[44]	GETUPVAL 	4 0	; deep_update
	6	[44]	GETUPVAL 	5 0	; deep_update
	7	[44]	NEWTABLE 	6 0 0
	8	[44]	GETTABLE 	7 2 -2	; "__prototype"
	9	[44]	CALL     	5 3 2
	10	[44]	MOVE     	6 0
	11	[44]	CALL     	4 3 2
	12	[44]	SETTABLE 	3 -2 4	; "__prototype" -
	13	[44]	JMP      	1	; to 15
	14	[46]	SETTABLE 	3 -2 0	; "__prototype" -
	15	[49]	TEST     	1 0 0
	16	[49]	JMP      	20	; to 37
	17	[50]	NEWTABLE 	4 0 0
	18	[53]	GETGLOBAL	5 -3	; ipairs
	19	[53]	MOVE     	6 1
	20	[53]	CALL     	5 2 4
	21	[53]	JMP      	8	; to 30
	22	[54]	GETTABLE 	10 9 -4	; 1
	23	[54]	GETTABLE 	11 9 -5	; 2
	24	[62]	CLOSURE  	12 0	; 0x7fe3c2c073e0
	25	[62]	MOVE     	0 11
	26	[62]	MOVE     	0 10
	27	[62]	SETTABLE 	3 10 12
	28	[64]	SETTABLE 	4 10 -6	; - true
	29	[64]	CLOSE    	10
	30	[53]	TFORLOOP 	5 2
	31	[64]	JMP      	-10	; to 22
	32	[94]	CLOSURE  	5 1	; 0x7fe3c2c07530
	33	[94]	MOVE     	0 4
	34	[94]	MOVE     	0 1
	35	[67]	SETTABLE 	3 -7 5	; "__call" -
	36	[94]	CLOSE    	4
	37	[98]	NEWTABLE 	4 0 0
	38	[99]	SETTABLE 	4 -1 2	; "__index" -
	39	[107]	CLOSURE  	5 2	; 0x7fe3c2c075d0
	40	[107]	GETUPVAL 	0 0	; deep_update
	41	[101]	SETTABLE 	4 -7 5	; "__call" -
	42	[109]	GETGLOBAL	5 -8	; setmetatable
	43	[109]	MOVE     	6 3
	44	[109]	MOVE     	7 4
	45	[109]	TAILCALL 	5 3 0
	46	[109]	RETURN   	5 0
	47	[110]	RETURN   	0 1

function <./argparse.lua:56,62> (12 instructions, 48 bytes at 0x7fe3c2c073e0)
2 params, 5 slots, 2 upvalues, 2 locals, 1 constant, 0 functions
	1	[57]	GETUPVAL 	2 0	; callback
	2	[57]	MOVE     	3 0
	3	[57]	MOVE     	4 1
	4	[57]	CALL     	2 3 2
	5	[57]	TEST     	2 0 1
	6	[57]	JMP      	4	; to 11
	7	[58]	LOADK    	2 -1	; "_"
	8	[58]	GETUPVAL 	3 1	; name
	9	[58]	CONCAT   	2 2 3
	10	[58]	SETTABLE 	0 2 1
	11	[61]	RETURN   	0 2
	12	[62]	RETURN   	0 1

function <./argparse.lua:67,94> (50 instructions, 200 bytes at 0x7fe3c2c07530)
1+ param, 12 slots, 2 upvalues, 14 locals, 9 constants, 0 functions
	1	[71]	GETGLOBAL	2 -1	; type
	2	[71]	VARARG   	3 2
	3	[71]	CALL     	2 2 2
	4	[71]	EQ       	0 2 -2	; - "table"
	5	[71]	JMP      	15	; to 21
	6	[72]	GETGLOBAL	2 -3	; pairs
	7	[72]	VARARG   	3 2
	8	[72]	CALL     	2 2 4
	9	[72]	JMP      	8	; to 18
	10	[73]	GETUPVAL 	7 0	; names
	11	[73]	GETTABLE 	7 7 5
	12	[73]	TEST     	7 0 0
	13	[73]	JMP      	4	; to 18
	14	[74]	GETTABLE 	7 0 5
	15	[74]	MOVE     	8 0
	16	[74]	MOVE     	9 6
	17	[74]	CALL     	7 3 1
	18	[72]	TFORLOOP 	2 2
	19	[75]	JMP      	-10	; to 10
	20	[76]	JMP      	28	; to 49
	21	[78]	GETGLOBAL	2 -4	; select
	22	[78]	LOADK    	3 -5	; "#"
	23	[78]	VARARG   	4 0
	24	[78]	CALL     	2 0 2
	25	[80]	GETGLOBAL	3 -6	; ipairs
	26	[80]	GETUPVAL 	4 1	; properties
	27	[80]	CALL     	3 2 4
	28	[80]	JMP      	18	; to 47
	29	[81]	LT       	1 2 6
	30	[81]	JMP      	18	; to 49
	31	[81]	GETUPVAL 	8 1	; properties
	32	[81]	GETTABLE 	8 8 -7	; "args"
	33	[81]	LT       	0 8 6
	34	[81]	JMP      	1	; to 36
	35	[82]	JMP      	13	; to 49
	36	[85]	GETGLOBAL	8 -4	; select
	37	[85]	MOVE     	9 6
	38	[85]	VARARG   	10 0
	39	[85]	CALL     	8 0 2
	40	[87]	EQ       	1 8 -8	; - nil
	41	[87]	JMP      	5	; to 47
	42	[88]	GETTABLE 	9 7 -9	; 1
	43	[88]	GETTABLE 	9 0 9
	44	[88]	MOVE     	10 0
	45	[88]	MOVE     	11 8
	46	[88]	CALL     	9 3 1
	47	[80]	TFORLOOP 	3 2
	48	[89]	JMP      	-20	; to 29
	49	[93]	RETURN   	0 2
	50	[94]	RETURN   	0 1

function <./argparse.lua:101,107> (13 instructions, 52 bytes at 0x7fe3c2c075d0)
1+ param, 6 slots, 1 upvalue, 3 locals, 2 constants, 0 functions
	1	[104]	GETUPVAL 	2 0	; deep_update
	2	[104]	NEWTABLE 	3 0 0
	3	[104]	GETTABLE 	4 0 -1	; "__prototype"
	4	[104]	CALL     	2 3 2
	5	[105]	GETGLOBAL	3 -2	; setmetatable
	6	[105]	MOVE     	4 2
	7	[105]	MOVE     	5 0
	8	[105]	CALL     	3 3 1
	9	[106]	MOVE     	3 2
	10	[106]	VARARG   	4 0
	11	[106]	TAILCALL 	3 0 0
	12	[106]	RETURN   	3 0
	13	[107]	RETURN   	0 1

function <./argparse.lua:112,120> (28 instructions, 112 bytes at 0x7fe3c2c083f0)
3 params, 10 slots, 0 upvalues, 8 locals, 8 constants, 0 functions
	1	[113]	GETGLOBAL	3 -1	; ipairs
	2	[113]	MOVE     	4 1
	3	[113]	CALL     	3 2 4
	4	[113]	JMP      	7	; to 12
	5	[114]	GETGLOBAL	8 -2	; type
	6	[114]	MOVE     	9 2
	7	[114]	CALL     	8 2 2
	8	[114]	EQ       	0 8 7
	9	[114]	JMP      	2	; to 12
	10	[115]	LOADBOOL 	8 1 0
	11	[115]	RETURN   	8 2
	12	[113]	TFORLOOP 	3 2
	13	[116]	JMP      	-9	; to 5
	14	[119]	GETGLOBAL	3 -3	; error
	15	[119]	LOADK    	4 -4	; "bad property '%s' (%s expected, got %s)"
	16	[119]	SELF     	4 4 -5	; "format"
	17	[119]	MOVE     	6 0
	18	[119]	GETGLOBAL	7 -6	; table
	19	[119]	GETTABLE 	7 7 -7	; "concat"
	20	[119]	MOVE     	8 1
	21	[119]	LOADK    	9 -8	; " or "
	22	[119]	CALL     	7 3 2
	23	[119]	GETGLOBAL	8 -2	; type
	24	[119]	MOVE     	9 2
	25	[119]	CALL     	8 2 0
	26	[119]	CALL     	4 0 0
	27	[119]	CALL     	3 0 1
	28	[120]	RETURN   	0 1

function <./argparse.lua:122,125> (12 instructions, 48 bytes at 0x7fe3c2c08730)
1+ param, 6 slots, 1 upvalue, 3 locals, 0 constants, 1 function
	1	[123]	NEWTABLE 	2 0 0
	2	[123]	VARARG   	3 0
	3	[123]	SETLIST  	2 0 1	; 1
	4	[124]	NEWTABLE 	3 2 0
	5	[124]	MOVE     	4 0
	6	[124]	CLOSURE  	5 0	; 0x7fe3c2c067b0
	7	[124]	GETUPVAL 	0 0	; typecheck
	8	[124]	MOVE     	0 0
	9	[124]	MOVE     	0 2
	10	[124]	SETLIST  	3 2 1	; 1
	11	[124]	RETURN   	3 2
	12	[125]	RETURN   	0 1

function <./argparse.lua:124,124> (6 instructions, 24 bytes at 0x7fe3c2c067b0)
2 params, 6 slots, 3 upvalues, 2 locals, 0 constants, 0 functions
	1	[124]	GETUPVAL 	2 0	; typecheck
	2	[124]	GETUPVAL 	3 1	; name
	3	[124]	GETUPVAL 	4 2	; types
	4	[124]	MOVE     	5 1
	5	[124]	CALL     	2 4 1
	6	[124]	RETURN   	0 1

function <./argparse.lua:127,142> (46 instructions, 184 bytes at 0x7fe3c2c08170)
2 params, 12 slots, 1 upvalue, 6 locals, 14 constants, 0 functions
	1	[128]	GETUPVAL 	2 0	; typecheck
	2	[128]	LOADK    	3 -1	; "name"
	3	[128]	NEWTABLE 	4 1 0
	4	[128]	LOADK    	5 -2	; "string"
	5	[128]	SETLIST  	4 1 1	; 1
	6	[128]	MOVE     	5 1
	7	[128]	CALL     	2 4 1
	8	[130]	SELF     	2 1 -3	; "gmatch"
	9	[130]	LOADK    	4 -4	; "%S+"
	10	[130]	CALL     	2 3 4
	11	[130]	JMP      	30	; to 42
	12	[131]	GETTABLE 	6 0 -5	; "_name"
	13	[131]	TEST     	6 0 1
	14	[131]	JMP      	1	; to 16
	15	[131]	MOVE     	6 5
	16	[131]	SETTABLE 	0 -5 6	; "_name" -
	17	[132]	GETGLOBAL	6 -6	; table
	18	[132]	GETTABLE 	6 6 -7	; "insert"
	19	[132]	GETTABLE 	7 0 -8	; "_aliases"
	20	[132]	MOVE     	8 5
	21	[132]	CALL     	6 3 1
	22	[133]	GETGLOBAL	6 -6	; table
	23	[133]	GETTABLE 	6 6 -7	; "insert"
	24	[133]	GETTABLE 	7 0 -9	; "_public_aliases"
	25	[133]	MOVE     	8 5
	26	[133]	CALL     	6 3 1
	27	[135]	SELF     	6 5 -10	; "find"
	28	[135]	LOADK    	8 -11	; "_"
	29	[135]	LOADK    	9 -12	; 1
	30	[135]	LOADBOOL 	10 1 0
	31	[135]	CALL     	6 5 2
	32	[135]	TEST     	6 0 0
	33	[135]	JMP      	8	; to 42
	34	[136]	GETGLOBAL	6 -6	; table
	35	[136]	GETTABLE 	6 6 -7	; "insert"
	36	[136]	GETTABLE 	7 0 -8	; "_aliases"
	37	[136]	SELF     	8 5 -13	; "gsub"
	38	[136]	LOADK    	10 -11	; "_"
	39	[136]	LOADK    	11 -14	; "-"
	40	[136]	CALL     	8 4 2
	41	[136]	CALL     	6 3 1
	42	[130]	TFORLOOP 	2 1
	43	[137]	JMP      	-32	; to 12
	44	[141]	LOADBOOL 	2 1 0
	45	[141]	RETURN   	2 2
	46	[142]	RETURN   	0 1

function <./argparse.lua:144,155> (36 instructions, 144 bytes at 0x7fe3c2c082d0)
2 params, 12 slots, 1 upvalue, 6 locals, 12 constants, 0 functions
	1	[145]	GETUPVAL 	2 0	; typecheck
	2	[145]	LOADK    	3 -1	; "hidden_name"
	3	[145]	NEWTABLE 	4 1 0
	4	[145]	LOADK    	5 -2	; "string"
	5	[145]	SETLIST  	4 1 1	; 1
	6	[145]	MOVE     	5 1
	7	[145]	CALL     	2 4 1
	8	[147]	SELF     	2 1 -3	; "gmatch"
	9	[147]	LOADK    	4 -4	; "%S+"
	10	[147]	CALL     	2 3 4
	11	[147]	JMP      	20	; to 32
	12	[148]	GETGLOBAL	6 -5	; table
	13	[148]	GETTABLE 	6 6 -6	; "insert"
	14	[148]	GETTABLE 	7 0 -7	; "_aliases"
	15	[148]	MOVE     	8 5
	16	[148]	CALL     	6 3 1
	17	[149]	SELF     	6 5 -8	; "find"
	18	[149]	LOADK    	8 -9	; "_"
	19	[149]	LOADK    	9 -10	; 1
	20	[149]	LOADBOOL 	10 1 0
	21	[149]	CALL     	6 5 2
	22	[149]	TEST     	6 0 0
	23	[149]	JMP      	8	; to 32
	24	[150]	GETGLOBAL	6 -5	; table
	25	[150]	GETTABLE 	6 6 -6	; "insert"
	26	[150]	GETTABLE 	7 0 -7	; "_aliases"
	27	[150]	SELF     	8 5 -11	; "gsub"
	28	[150]	LOADK    	10 -9	; "_"
	29	[150]	LOADK    	11 -12	; "-"
	30	[150]	CALL     	8 4 2
	31	[150]	CALL     	6 3 1
	32	[147]	TFORLOOP 	2 1
	33	[151]	JMP      	-22	; to 12
	34	[154]	LOADBOOL 	2 1 0
	35	[154]	RETURN   	2 2
	36	[155]	RETURN   	0 1

function <./argparse.lua:157,183> (59 instructions, 236 bytes at 0x7fe3c2c09540)
1 param, 6 slots, 0 upvalues, 4 locals, 13 constants, 0 functions
	1	[158]	GETGLOBAL	1 -1	; tonumber
	2	[158]	MOVE     	2 0
	3	[158]	CALL     	1 2 2
	4	[158]	TEST     	1 0 0
	5	[158]	JMP      	7	; to 13
	6	[159]	GETGLOBAL	1 -1	; tonumber
	7	[159]	MOVE     	2 0
	8	[159]	CALL     	1 2 2
	9	[159]	GETGLOBAL	2 -1	; tonumber
	10	[159]	MOVE     	3 0
	11	[159]	CALL     	2 2 0
	12	[159]	RETURN   	1 0
	13	[162]	EQ       	0 0 -2	; - "*"
	14	[162]	JMP      	4	; to 19
	15	[163]	LOADK    	1 -3	; 0
	16	[163]	GETGLOBAL	2 -4	; math
	17	[163]	GETTABLE 	2 2 -5	; "huge"
	18	[163]	RETURN   	1 3
	19	[166]	EQ       	0 0 -6	; - "+"
	20	[166]	JMP      	4	; to 25
	21	[167]	LOADK    	1 -7	; 1
	22	[167]	GETGLOBAL	2 -4	; math
	23	[167]	GETTABLE 	2 2 -5	; "huge"
	24	[167]	RETURN   	1 3
	25	[170]	EQ       	0 0 -8	; - "?"
	26	[170]	JMP      	3	; to 30
	27	[171]	LOADK    	1 -3	; 0
	28	[171]	LOADK    	2 -7	; 1
	29	[171]	RETURN   	1 3
	30	[174]	SELF     	1 0 -9	; "match"
	31	[174]	LOADK    	3 -10	; "^%d+%-%d+$"
	32	[174]	CALL     	1 3 2
	33	[174]	TEST     	1 0 0
	34	[174]	JMP      	10	; to 45
	35	[175]	SELF     	1 0 -9	; "match"
	36	[175]	LOADK    	3 -11	; "^(%d+)%-(%d+)$"
	37	[175]	CALL     	1 3 3
	38	[176]	GETGLOBAL	3 -1	; tonumber
	39	[176]	MOVE     	4 1
	40	[176]	CALL     	3 2 2
	41	[176]	GETGLOBAL	4 -1	; tonumber
	42	[176]	MOVE     	5 2
	43	[176]	CALL     	4 2 0
	44	[176]	RETURN   	3 0
	45	[179]	SELF     	1 0 -9	; "match"
	46	[179]	LOADK    	3 -12	; "^%d+%+$"
	47	[179]	CALL     	1 3 2
	48	[179]	TEST     	1 0 0
	49	[179]	JMP      	9	; to 59
	50	[180]	SELF     	1 0 -9	; "match"
	51	[180]	LOADK    	3 -13	; "^(%d+)%+$"
	52	[180]	CALL     	1 3 2
	53	[181]	GETGLOBAL	2 -1	; tonumber
	54	[181]	MOVE     	3 1
	55	[181]	CALL     	2 2 2
	56	[181]	GETGLOBAL	3 -4	; math
	57	[181]	GETTABLE 	3 3 -5	; "huge"
	58	[181]	RETURN   	2 3
	59	[183]	RETURN   	0 1

function <./argparse.lua:185,197> (9 instructions, 36 bytes at 0x7fe3c2c09760)
1 param, 4 slots, 2 upvalues, 1 local, 0 constants, 1 function
	1	[186]	NEWTABLE 	1 2 0
	2	[186]	MOVE     	2 0
	3	[196]	CLOSURE  	3 0	; 0x7fe3c2c09ec0
	4	[196]	GETUPVAL 	0 0	; typecheck
	5	[196]	MOVE     	0 0
	6	[196]	GETUPVAL 	0 1	; parse_boundaries
	7	[196]	SETLIST  	1 2 1	; 1
	8	[196]	RETURN   	1 2
	9	[197]	RETURN   	0 1

function <./argparse.lua:186,196> (29 instructions, 116 bytes at 0x7fe3c2c09ec0)
2 params, 8 slots, 3 upvalues, 4 locals, 7 constants, 0 functions
	1	[187]	GETUPVAL 	2 0	; typecheck
	2	[187]	GETUPVAL 	3 1	; name
	3	[187]	NEWTABLE 	4 2 0
	4	[187]	LOADK    	5 -1	; "number"
	5	[187]	LOADK    	6 -2	; "string"
	6	[187]	SETLIST  	4 2 1	; 1
	7	[187]	MOVE     	5 1
	8	[187]	CALL     	2 4 1
	9	[189]	GETUPVAL 	2 2	; parse_boundaries
	10	[189]	MOVE     	3 1
	11	[189]	CALL     	2 2 3
	12	[191]	TEST     	2 0 1
	13	[191]	JMP      	6	; to 20
	14	[192]	GETGLOBAL	4 -3	; error
	15	[192]	LOADK    	5 -4	; "bad property '%s'"
	16	[192]	SELF     	5 5 -5	; "format"
	17	[192]	GETUPVAL 	7 1	; name
	18	[192]	CALL     	5 3 0
	19	[192]	CALL     	4 0 1
	20	[195]	LOADK    	4 -6	; "_min"
	21	[195]	GETUPVAL 	5 1	; name
	22	[195]	CONCAT   	4 4 5
	23	[195]	LOADK    	5 -7	; "_max"
	24	[195]	GETUPVAL 	6 1	; name
	25	[195]	CONCAT   	5 5 6
	26	[195]	MOVE     	6 2
	27	[195]	SETTABLE 	0 5 3
	28	[195]	SETTABLE 	0 4 6
	29	[196]	RETURN   	0 1

function <./argparse.lua:201,207> (24 instructions, 96 bytes at 0x7fe3c2c07650)
2 params, 7 slots, 2 upvalues, 2 locals, 7 constants, 0 functions
	1	[202]	GETUPVAL 	2 0	; typecheck
	2	[202]	LOADK    	3 -1	; "action"
	3	[202]	NEWTABLE 	4 2 0
	4	[202]	LOADK    	5 -2	; "function"
	5	[202]	LOADK    	6 -3	; "string"
	6	[202]	SETLIST  	4 2 1	; 1
	7	[202]	MOVE     	5 1
	8	[202]	CALL     	2 4 1
	9	[204]	GETGLOBAL	2 -4	; type
	10	[204]	MOVE     	3 1
	11	[204]	CALL     	2 2 2
	12	[204]	EQ       	0 2 -3	; - "string"
	13	[204]	JMP      	10	; to 24
	14	[204]	GETUPVAL 	2 1	; actions
	15	[204]	GETTABLE 	2 2 1
	16	[204]	TEST     	2 0 1
	17	[204]	JMP      	6	; to 24
	18	[205]	GETGLOBAL	2 -5	; error
	19	[205]	LOADK    	3 -6	; "unknown action '%s'"
	20	[205]	SELF     	3 3 -7	; "format"
	21	[205]	MOVE     	5 1
	22	[205]	CALL     	3 3 0
	23	[205]	CALL     	2 0 1
	24	[207]	RETURN   	0 1

function <./argparse.lua:209,211> (2 instructions, 8 bytes at 0x7fe3c2c08e60)
1 param, 2 slots, 0 upvalues, 1 local, 2 constants, 0 functions
	1	[210]	SETTABLE 	0 -1 -2	; "_has_init" true
	2	[211]	RETURN   	0 1

function <./argparse.lua:213,219> (10 instructions, 40 bytes at 0x7fe3c2c08fd0)
2 params, 4 slots, 0 upvalues, 2 locals, 5 constants, 0 functions
	1	[214]	GETGLOBAL	2 -1	; type
	2	[214]	MOVE     	3 1
	3	[214]	CALL     	2 2 2
	4	[214]	EQ       	1 2 -2	; - "string"
	5	[214]	JMP      	4	; to 10
	6	[215]	SETTABLE 	0 -3 1	; "_init" -
	7	[216]	SETTABLE 	0 -4 -5	; "_has_init" true
	8	[217]	LOADBOOL 	2 1 0
	9	[217]	RETURN   	2 2
	10	[219]	RETURN   	0 1

function <./argparse.lua:221,247> (47 instructions, 188 bytes at 0x7fe3c2c0aac0)
2 params, 8 slots, 1 upvalue, 3 locals, 16 constants, 1 function
	1	[222]	GETUPVAL 	2 0	; typecheck
	2	[222]	LOADK    	3 -1	; "add_help"
	3	[222]	NEWTABLE 	4 3 0
	4	[222]	LOADK    	5 -2	; "boolean"
	5	[222]	LOADK    	6 -3	; "string"
	6	[222]	LOADK    	7 -4	; "table"
	7	[222]	SETLIST  	4 3 1	; 1
	8	[222]	MOVE     	5 1
	9	[222]	CALL     	2 4 1
	10	[224]	GETTABLE 	2 0 -5	; "_help_option_idx"
	11	[224]	TEST     	2 0 0
	12	[224]	JMP      	6	; to 19
	13	[225]	GETGLOBAL	2 -4	; table
	14	[225]	GETTABLE 	2 2 -6	; "remove"
	15	[225]	GETTABLE 	3 0 -7	; "_options"
	16	[225]	GETTABLE 	4 0 -5	; "_help_option_idx"
	17	[225]	CALL     	2 3 1
	18	[226]	SETTABLE 	0 -5 -8	; "_help_option_idx" nil
	19	[229]	TEST     	1 0 0
	20	[229]	JMP      	26	; to 47
	21	[230]	SELF     	2 0 -9	; "flag"
	22	[230]	CALL     	2 2 2
	23	[231]	SELF     	2 2 -10	; "description"
	24	[231]	LOADK    	4 -11	; "Show this help message and exit."
	25	[231]	CALL     	2 3 2
	26	[232]	SELF     	2 2 -12	; "action"
	27	[235]	CLOSURE  	4 0	; 0x7fe3c2c0af50
	28	[235]	MOVE     	0 0
	29	[232]	CALL     	2 3 2
	30	[237]	EQ       	1 1 -13	; - true
	31	[237]	JMP      	4	; to 36
	32	[238]	MOVE     	3 2
	33	[238]	MOVE     	4 1
	34	[238]	CALL     	3 2 2
	35	[238]	MOVE     	2 3
	36	[241]	GETTABLE 	3 2 -14	; "_name"
	37	[241]	TEST     	3 0 1
	38	[241]	JMP      	5	; to 44
	39	[242]	MOVE     	3 2
	40	[242]	LOADK    	4 -15	; "-h"
	41	[242]	CALL     	3 2 2
	42	[242]	LOADK    	4 -16	; "--help"
	43	[242]	CALL     	3 2 1
	44	[245]	GETTABLE 	3 0 -7	; "_options"
	45	[245]	LEN      	3 3
	46	[245]	SETTABLE 	0 -5 3	; "_help_option_idx" -
	47	[247]	RETURN   	0 1

function <./argparse.lua:232,235> (10 instructions, 40 bytes at 0x7fe3c2c0af50)
0 params, 3 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[233]	GETGLOBAL	0 -1	; print
	2	[233]	GETUPVAL 	1 0	; self
	3	[233]	SELF     	1 1 -2	; "get_help"
	4	[233]	CALL     	1 2 0
	5	[233]	CALL     	0 0 1
	6	[234]	GETGLOBAL	0 -3	; os
	7	[234]	GETTABLE 	0 0 -4	; "exit"
	8	[234]	LOADK    	1 -5	; 0
	9	[234]	CALL     	0 2 1
	10	[235]	RETURN   	0 1

function <./argparse.lua:353,369> (15 instructions, 60 bytes at 0x7fe3c2c08f50)
3 params, 6 slots, 0 upvalues, 5 locals, 3 constants, 0 functions
	1	[354]	MOVE     	3 0
	2	[357]	LOADK    	4 -1	; "_"
	3	[357]	MOVE     	5 1
	4	[357]	CONCAT   	4 4 5
	5	[357]	GETTABLE 	4 3 4
	6	[359]	EQ       	1 4 -2	; - nil
	7	[359]	JMP      	1	; to 9
	8	[360]	RETURN   	4 2
	9	[363]	GETTABLE 	5 3 -3	; "_parent"
	10	[363]	TEST     	5 0 1
	11	[363]	JMP      	1	; to 13
	12	[364]	RETURN   	2 2
	13	[367]	GETTABLE 	3 3 -3	; "_parent"
	14	[367]	JMP      	-13	; to 2
	15	[369]	RETURN   	0 1

function <./argparse.lua:371,400> (67 instructions, 268 bytes at 0x7fe3c2c0b1c0)
1 param, 9 slots, 0 upvalues, 4 locals, 17 constants, 0 functions
	1	[372]	NEWTABLE 	1 0 0
	2	[373]	LOADK    	2 -1	; 1
	3	[375]	GETGLOBAL	3 -2	; math
	4	[375]	GETTABLE 	3 3 -3	; "min"
	5	[375]	GETTABLE 	4 0 -4	; "_minargs"
	6	[375]	LOADK    	5 -5	; 3
	7	[375]	CALL     	3 3 2
	8	[375]	LE       	0 2 3
	9	[375]	JMP      	23	; to 33
	10	[376]	SELF     	3 0 -6	; "_get_argname"
	11	[376]	MOVE     	5 2
	12	[376]	CALL     	3 3 2
	13	[378]	GETTABLE 	4 0 -7	; "_default"
	14	[378]	TEST     	4 0 0
	15	[378]	JMP      	10	; to 26
	16	[378]	GETTABLE 	4 0 -8	; "_defmode"
	17	[378]	SELF     	4 4 -9	; "find"
	18	[378]	LOADK    	6 -10	; "a"
	19	[378]	CALL     	4 3 2
	20	[378]	TEST     	4 0 0
	21	[378]	JMP      	4	; to 26
	22	[379]	LOADK    	4 -11	; "["
	23	[379]	MOVE     	5 3
	24	[379]	LOADK    	6 -12	; "]"
	25	[379]	CONCAT   	3 4 6
	26	[382]	GETGLOBAL	4 -13	; table
	27	[382]	GETTABLE 	4 4 -14	; "insert"
	28	[382]	MOVE     	5 1
	29	[382]	MOVE     	6 3
	30	[382]	CALL     	4 3 1
	31	[383]	ADD      	2 2 -1	; - 1
	32	[383]	JMP      	-30	; to 3
	33	[386]	GETGLOBAL	3 -2	; math
	34	[386]	GETTABLE 	3 3 -3	; "min"
	35	[386]	GETTABLE 	4 0 -15	; "_maxargs"
	36	[386]	LOADK    	5 -5	; 3
	37	[386]	CALL     	3 3 2
	38	[386]	LE       	0 2 3
	39	[386]	JMP      	18	; to 58
	40	[387]	GETGLOBAL	3 -13	; table
	41	[387]	GETTABLE 	3 3 -14	; "insert"
	42	[387]	MOVE     	4 1
	43	[387]	LOADK    	5 -11	; "["
	44	[387]	SELF     	6 0 -6	; "_get_argname"
	45	[387]	MOVE     	8 2
	46	[387]	CALL     	6 3 2
	47	[387]	LOADK    	7 -12	; "]"
	48	[387]	CONCAT   	5 5 7
	49	[387]	CALL     	3 3 1
	50	[388]	ADD      	2 2 -1	; - 1
	51	[390]	GETTABLE 	3 0 -15	; "_maxargs"
	52	[390]	GETGLOBAL	4 -2	; math
	53	[390]	GETTABLE 	4 4 -16	; "huge"
	54	[390]	EQ       	0 3 4
	55	[390]	JMP      	-23	; to 33
	56	[391]	JMP      	1	; to 58
	57	[392]	JMP      	-25	; to 33
	58	[395]	GETTABLE 	3 0 -15	; "_maxargs"
	59	[395]	LT       	0 2 3
	60	[395]	JMP      	5	; to 66
	61	[396]	GETGLOBAL	3 -13	; table
	62	[396]	GETTABLE 	3 3 -14	; "insert"
	63	[396]	MOVE     	4 1
	64	[396]	LOADK    	5 -17	; "..."
	65	[396]	CALL     	3 3 1
	66	[399]	RETURN   	1 2
	67	[400]	RETURN   	0 1

function <./argparse.lua:402,412> (33 instructions, 132 bytes at 0x7fe3c2c0b440)
1 param, 5 slots, 0 upvalues, 2 locals, 14 constants, 0 functions
	1	[403]	GETGLOBAL	1 -1	; table
	2	[403]	GETTABLE 	1 1 -2	; "concat"
	3	[403]	SELF     	2 0 -3	; "_get_argument_list"
	4	[403]	CALL     	2 2 2
	5	[403]	LOADK    	3 -4	; " "
	6	[403]	CALL     	1 3 2
	7	[405]	GETTABLE 	2 0 -5	; "_default"
	8	[405]	TEST     	2 0 0
	9	[405]	JMP      	22	; to 32
	10	[405]	GETTABLE 	2 0 -6	; "_defmode"
	11	[405]	SELF     	2 2 -7	; "find"
	12	[405]	LOADK    	4 -8	; "u"
	13	[405]	CALL     	2 3 2
	14	[405]	TEST     	2 0 0
	15	[405]	JMP      	16	; to 32
	16	[406]	GETTABLE 	2 0 -9	; "_maxargs"
	17	[406]	LT       	1 -10 2	; 1 -
	18	[406]	JMP      	9	; to 28
	19	[406]	GETTABLE 	2 0 -11	; "_minargs"
	20	[406]	EQ       	0 2 -10	; - 1
	21	[406]	JMP      	10	; to 32
	22	[406]	GETTABLE 	2 0 -6	; "_defmode"
	23	[406]	SELF     	2 2 -7	; "find"
	24	[406]	LOADK    	4 -12	; "a"
	25	[406]	CALL     	2 3 2
	26	[406]	TEST     	2 0 1
	27	[406]	JMP      	4	; to 32
	28	[407]	LOADK    	2 -13	; "["
	29	[407]	MOVE     	3 1
	30	[407]	LOADK    	4 -14	; "]"
	31	[407]	CONCAT   	1 2 4
	32	[411]	RETURN   	1 2
	33	[412]	RETURN   	0 1

function <./argparse.lua:414,416> (2 instructions, 8 bytes at 0x7fe3c2c0b740)
2 params, 2 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[415]	SETTABLE 	0 1 -1	; - true
	2	[416]	RETURN   	0 1

function <./argparse.lua:418,420> (2 instructions, 8 bytes at 0x7fe3c2c0b5e0)
2 params, 2 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[419]	SETTABLE 	0 1 -1	; - false
	2	[420]	RETURN   	0 1

function <./argparse.lua:422,424> (2 instructions, 8 bytes at 0x7fe3c2c0a740)
3 params, 3 slots, 0 upvalues, 3 locals, 0 constants, 0 functions
	1	[423]	SETTABLE 	0 1 2
	2	[424]	RETURN   	0 1

function <./argparse.lua:426,430> (6 instructions, 24 bytes at 0x7fe3c2c0c730)
4 params, 5 slots, 0 upvalues, 4 locals, 1 constant, 0 functions
	1	[427]	TEST     	3 0 1
	2	[427]	JMP      	3	; to 6
	3	[428]	GETTABLE 	4 0 1
	4	[428]	ADD      	4 4 -1	; - 1
	5	[428]	SETTABLE 	0 1 4
	6	[430]	RETURN   	0 1

function <./argparse.lua:432,439> (18 instructions, 72 bytes at 0x7fe3c2c0c550)
4 params, 7 slots, 0 upvalues, 4 locals, 4 constants, 0 functions
	1	[433]	GETTABLE 	4 0 1
	2	[433]	TEST     	4 0 1
	3	[433]	JMP      	1	; to 5
	4	[433]	NEWTABLE 	4 0 0
	5	[433]	SETTABLE 	0 1 4
	6	[434]	GETGLOBAL	4 -1	; table
	7	[434]	GETTABLE 	4 4 -2	; "insert"
	8	[434]	GETTABLE 	5 0 1
	9	[434]	MOVE     	6 2
	10	[434]	CALL     	4 3 1
	11	[436]	TEST     	3 0 0
	12	[436]	JMP      	5	; to 18
	13	[437]	GETGLOBAL	4 -1	; table
	14	[437]	GETTABLE 	4 4 -3	; "remove"
	15	[437]	GETTABLE 	5 0 1
	16	[437]	LOADK    	6 -4	; 1
	17	[437]	CALL     	4 3 1
	18	[439]	RETURN   	0 1

function <./argparse.lua:441,451> (22 instructions, 88 bytes at 0x7fe3c2c0cdf0)
4 params, 12 slots, 0 upvalues, 9 locals, 5 constants, 0 functions
	1	[442]	TEST     	3 0 0
	2	[442]	JMP      	3	; to 6
	3	[443]	GETGLOBAL	4 -1	; error
	4	[443]	LOADK    	5 -2	; "'concat' action can't handle too many invocations"
	5	[443]	CALL     	4 2 1
	6	[446]	GETTABLE 	4 0 1
	7	[446]	TEST     	4 0 1
	8	[446]	JMP      	1	; to 10
	9	[446]	NEWTABLE 	4 0 0
	10	[446]	SETTABLE 	0 1 4
	11	[448]	GETGLOBAL	4 -3	; ipairs
	12	[448]	MOVE     	5 2
	13	[448]	CALL     	4 2 4
	14	[448]	JMP      	5	; to 20
	15	[449]	GETGLOBAL	9 -4	; table
	16	[449]	GETTABLE 	9 9 -5	; "insert"
	17	[449]	GETTABLE 	10 0 1
	18	[449]	MOVE     	11 8
	19	[449]	CALL     	9 3 1
	20	[448]	TFORLOOP 	4 2
	21	[449]	JMP      	-7	; to 15
	22	[451]	RETURN   	0 1

function <./argparse.lua:453,483> (44 instructions, 176 bytes at 0x7fe3c2c0d3c0)
1 param, 5 slots, 1 upvalue, 3 locals, 13 constants, 0 functions
	1	[456]	GETTABLE 	3 0 -1	; "_maxcount"
	2	[456]	EQ       	0 3 -2	; - 1
	3	[456]	JMP      	11	; to 15
	4	[457]	GETTABLE 	3 0 -3	; "_maxargs"
	5	[457]	EQ       	0 3 -4	; - 0
	6	[457]	JMP      	4	; to 11
	7	[458]	LOADK    	3 -5	; "store_true"
	8	[458]	LOADNIL  	2 2
	9	[458]	MOVE     	1 3
	10	[458]	JMP      	15	; to 26
	11	[460]	LOADK    	3 -6	; "store"
	12	[460]	LOADNIL  	2 2
	13	[460]	MOVE     	1 3
	14	[461]	JMP      	11	; to 26
	15	[463]	GETTABLE 	3 0 -3	; "_maxargs"
	16	[463]	EQ       	0 3 -4	; - 0
	17	[463]	JMP      	4	; to 22
	18	[464]	LOADK    	3 -7	; "count"
	19	[464]	LOADK    	2 -4	; 0
	20	[464]	MOVE     	1 3
	21	[464]	JMP      	4	; to 26
	22	[466]	LOADK    	3 -8	; "append"
	23	[466]	NEWTABLE 	4 0 0
	24	[466]	MOVE     	2 4
	25	[466]	MOVE     	1 3
	26	[470]	GETTABLE 	3 0 -9	; "_action"
	27	[470]	TEST     	3 0 0
	28	[470]	JMP      	1	; to 30
	29	[471]	GETTABLE 	1 0 -9	; "_action"
	30	[474]	GETTABLE 	3 0 -10	; "_has_init"
	31	[474]	TEST     	3 0 0
	32	[474]	JMP      	1	; to 34
	33	[475]	GETTABLE 	2 0 -11	; "_init"
	34	[478]	GETGLOBAL	3 -12	; type
	35	[478]	MOVE     	4 1
	36	[478]	CALL     	3 2 2
	37	[478]	EQ       	0 3 -13	; - "string"
	38	[478]	JMP      	2	; to 41
	39	[479]	GETUPVAL 	3 0	; actions
	40	[479]	GETTABLE 	1 3 1
	41	[482]	MOVE     	3 1
	42	[482]	MOVE     	4 2
	43	[482]	RETURN   	3 3
	44	[483]	RETURN   	0 1

function <./argparse.lua:486,494> (15 instructions, 60 bytes at 0x7fe3c2c0d5b0)
2 params, 5 slots, 0 upvalues, 3 locals, 4 constants, 0 functions
	1	[487]	GETTABLE 	2 0 -1	; "_argname"
	2	[487]	TEST     	2 0 1
	3	[487]	JMP      	2	; to 6
	4	[487]	SELF     	2 0 -2	; "_get_default_argname"
	5	[487]	CALL     	2 2 2
	6	[489]	GETGLOBAL	3 -3	; type
	7	[489]	MOVE     	4 2
	8	[489]	CALL     	3 2 2
	9	[489]	EQ       	0 3 -4	; - "table"
	10	[489]	JMP      	3	; to 14
	11	[490]	GETTABLE 	3 2 1
	12	[490]	RETURN   	3 2
	13	[490]	JMP      	1	; to 15
	14	[492]	RETURN   	2 2
	15	[494]	RETURN   	0 1

function <./argparse.lua:496,498> (10 instructions, 40 bytes at 0x7fe3c2c0d440)
1 param, 5 slots, 0 upvalues, 1 local, 6 constants, 0 functions
	1	[497]	LOADK    	1 -1	; "{"
	2	[497]	GETGLOBAL	2 -2	; table
	3	[497]	GETTABLE 	2 2 -3	; "concat"
	4	[497]	GETTABLE 	3 0 -4	; "_choices"
	5	[497]	LOADK    	4 -5	; ","
	6	[497]	CALL     	2 3 2
	7	[497]	LOADK    	3 -6	; "}"
	8	[497]	CONCAT   	1 1 3
	9	[497]	RETURN   	1 2
	10	[498]	RETURN   	0 1

function <./argparse.lua:500,506> (13 instructions, 52 bytes at 0x7fe3c2c0d9b0)
1 param, 4 slots, 0 upvalues, 1 local, 5 constants, 0 functions
	1	[501]	GETTABLE 	1 0 -1	; "_choices"
	2	[501]	TEST     	1 0 0
	3	[501]	JMP      	4	; to 8
	4	[502]	SELF     	1 0 -2	; "_get_choices_list"
	5	[502]	TAILCALL 	1 2 0
	6	[502]	RETURN   	1 0
	7	[502]	JMP      	5	; to 13
	8	[504]	LOADK    	1 -3	; "<"
	9	[504]	GETTABLE 	2 0 -4	; "_name"
	10	[504]	LOADK    	3 -5	; ">"
	11	[504]	CONCAT   	1 1 3
	12	[504]	RETURN   	1 2
	13	[506]	RETURN   	0 1

function <./argparse.lua:508,514> (14 instructions, 56 bytes at 0x7fe3c2c0cf90)
1 param, 4 slots, 0 upvalues, 1 local, 5 constants, 0 functions
	1	[509]	GETTABLE 	1 0 -1	; "_choices"
	2	[509]	TEST     	1 0 0
	3	[509]	JMP      	4	; to 8
	4	[510]	SELF     	1 0 -2	; "_get_choices_list"
	5	[510]	TAILCALL 	1 2 0
	6	[510]	RETURN   	1 0
	7	[510]	JMP      	6	; to 14
	8	[512]	LOADK    	1 -3	; "<"
	9	[512]	SELF     	2 0 -4	; "_get_default_target"
	10	[512]	CALL     	2 2 2
	11	[512]	LOADK    	3 -5	; ">"
	12	[512]	CONCAT   	1 1 3
	13	[512]	RETURN   	1 2
	14	[514]	RETURN   	0 1

function <./argparse.lua:517,523> (14 instructions, 56 bytes at 0x7fe3c2c0dd50)
1 param, 4 slots, 0 upvalues, 1 local, 3 constants, 0 functions
	1	[518]	GETTABLE 	1 0 -1	; "_choices"
	2	[518]	TEST     	1 0 0
	3	[518]	JMP      	6	; to 10
	4	[519]	NEWTABLE 	1 0 0
	5	[519]	SELF     	2 0 -2	; "_get_choices_list"
	6	[519]	CALL     	2 2 0
	7	[519]	SETLIST  	1 0 1	; 1
	8	[519]	RETURN   	1 2
	9	[519]	JMP      	4	; to 14
	10	[521]	NEWTABLE 	1 1 0
	11	[521]	GETTABLE 	2 0 -3	; "_name"
	12	[521]	SETLIST  	1 1 1	; 1
	13	[521]	RETURN   	1 2
	14	[523]	RETURN   	0 1

function <./argparse.lua:525,553> (61 instructions, 244 bytes at 0x7fe3c2c0e210)
1 param, 14 slots, 0 upvalues, 16 locals, 14 constants, 0 functions
	1	[526]	SELF     	1 0 -1	; "_get_argument_list"
	2	[526]	CALL     	1 2 2
	3	[528]	LEN      	2 1
	4	[528]	EQ       	0 2 -2	; - 0
	5	[528]	JMP      	8	; to 14
	6	[530]	NEWTABLE 	2 0 0
	7	[530]	GETGLOBAL	3 -3	; table
	8	[530]	GETTABLE 	3 3 -4	; "concat"
	9	[530]	GETTABLE 	4 0 -5	; "_public_aliases"
	10	[530]	LOADK    	5 -6	; ", "
	11	[530]	CALL     	3 3 0
	12	[530]	SETLIST  	2 0 1	; 1
	13	[530]	RETURN   	2 2
	14	[533]	LOADK    	2 -7	; -1
	15	[535]	GETGLOBAL	3 -8	; ipairs
	16	[535]	GETTABLE 	4 0 -5	; "_public_aliases"
	17	[535]	CALL     	3 2 4
	18	[535]	JMP      	6	; to 25
	19	[536]	GETGLOBAL	8 -9	; math
	20	[536]	GETTABLE 	8 8 -10	; "max"
	21	[536]	MOVE     	9 2
	22	[536]	LEN      	10 7
	23	[536]	CALL     	8 3 2
	24	[536]	MOVE     	2 8
	25	[535]	TFORLOOP 	3 2
	26	[536]	JMP      	-8	; to 19
	27	[539]	GETGLOBAL	3 -3	; table
	28	[539]	GETTABLE 	3 3 -4	; "concat"
	29	[539]	MOVE     	4 1
	30	[539]	LOADK    	5 -11	; " "
	31	[539]	CALL     	3 3 2
	32	[540]	NEWTABLE 	4 0 0
	33	[542]	GETGLOBAL	5 -8	; ipairs
	34	[542]	GETTABLE 	6 0 -5	; "_public_aliases"
	35	[542]	CALL     	5 2 4
	36	[542]	JMP      	21	; to 58
	37	[543]	LOADK    	10 -11	; " "
	38	[543]	SELF     	10 10 -12	; "rep"
	39	[543]	LEN      	12 9
	40	[543]	SUB      	12 2 12
	41	[543]	CALL     	10 3 2
	42	[543]	MOVE     	11 9
	43	[543]	LOADK    	12 -11	; " "
	44	[543]	MOVE     	13 3
	45	[543]	CONCAT   	10 10 13
	46	[545]	GETTABLE 	11 0 -5	; "_public_aliases"
	47	[545]	LEN      	11 11
	48	[545]	EQ       	1 8 11
	49	[545]	JMP      	3	; to 53
	50	[546]	MOVE     	11 10
	51	[546]	LOADK    	12 -13	; ","
	52	[546]	CONCAT   	10 11 12
	53	[549]	GETGLOBAL	11 -3	; table
	54	[549]	GETTABLE 	11 11 -14	; "insert"
	55	[549]	MOVE     	12 4
	56	[549]	MOVE     	13 10
	57	[549]	CALL     	11 3 1
	58	[542]	TFORLOOP 	5 2
	59	[549]	JMP      	-23	; to 37
	60	[552]	RETURN   	4 2
	61	[553]	RETURN   	0 1

function <./argparse.lua:555,557> (9 instructions, 36 bytes at 0x7fe3c2c0e770)
1 param, 5 slots, 0 upvalues, 1 local, 4 constants, 0 functions
	1	[556]	NEWTABLE 	1 0 0
	2	[556]	GETGLOBAL	2 -1	; table
	3	[556]	GETTABLE 	2 2 -2	; "concat"
	4	[556]	GETTABLE 	3 0 -3	; "_public_aliases"
	5	[556]	LOADK    	4 -4	; ", "
	6	[556]	CALL     	2 3 0
	7	[556]	SETLIST  	1 0 1	; 1
	8	[556]	RETURN   	1 2
	9	[557]	RETURN   	0 1

function <./argparse.lua:559,569> (28 instructions, 112 bytes at 0x7fe3c2c0e290)
1 param, 5 slots, 0 upvalues, 1 local, 7 constants, 0 functions
	1	[560]	GETTABLE 	1 0 -1	; "_default"
	2	[560]	TEST     	1 0 0
	3	[560]	JMP      	19	; to 23
	4	[560]	GETTABLE 	1 0 -2	; "_show_default"
	5	[560]	TEST     	1 0 0
	6	[560]	JMP      	16	; to 23
	7	[561]	GETTABLE 	1 0 -3	; "_description"
	8	[561]	TEST     	1 0 0
	9	[561]	JMP      	7	; to 17
	10	[562]	LOADK    	1 -4	; "%s (default: %s)"
	11	[562]	SELF     	1 1 -5	; "format"
	12	[562]	GETTABLE 	3 0 -3	; "_description"
	13	[562]	GETTABLE 	4 0 -1	; "_default"
	14	[562]	TAILCALL 	1 4 0
	15	[562]	RETURN   	1 0
	16	[562]	JMP      	11	; to 28
	17	[564]	LOADK    	1 -6	; "default: %s"
	18	[564]	SELF     	1 1 -5	; "format"
	19	[564]	GETTABLE 	3 0 -1	; "_default"
	20	[564]	TAILCALL 	1 3 0
	21	[564]	RETURN   	1 0
	22	[565]	JMP      	5	; to 28
	23	[567]	GETTABLE 	1 0 -3	; "_description"
	24	[567]	TEST     	1 0 1
	25	[567]	JMP      	1	; to 27
	26	[567]	LOADK    	1 -7	; ""
	27	[567]	RETURN   	1 2
	28	[569]	RETURN   	0 1

function <./argparse.lua:571,573> (9 instructions, 36 bytes at 0x7fe3c2c0f2d0)
1 param, 2 slots, 0 upvalues, 1 local, 3 constants, 0 functions
	1	[572]	GETTABLE 	1 0 -1	; "_summary"
	2	[572]	TEST     	1 0 1
	3	[572]	JMP      	4	; to 8
	4	[572]	GETTABLE 	1 0 -2	; "_description"
	5	[572]	TEST     	1 0 1
	6	[572]	JMP      	1	; to 8
	7	[572]	LOADK    	1 -3	; ""
	8	[572]	RETURN   	1 2
	9	[573]	RETURN   	0 1

function <./argparse.lua:575,585> (26 instructions, 104 bytes at 0x7fe3c2c0f530)
1 param, 6 slots, 0 upvalues, 2 locals, 12 constants, 0 functions
	1	[576]	SELF     	1 0 -1	; "_get_argument_list"
	2	[576]	CALL     	1 2 2
	3	[577]	GETGLOBAL	2 -2	; table
	4	[577]	GETTABLE 	2 2 -3	; "insert"
	5	[577]	MOVE     	3 1
	6	[577]	LOADK    	4 -4	; 1
	7	[577]	GETTABLE 	5 0 -5	; "_name"
	8	[577]	CALL     	2 4 1
	9	[578]	GETGLOBAL	2 -2	; table
	10	[578]	GETTABLE 	2 2 -6	; "concat"
	11	[578]	MOVE     	3 1
	12	[578]	LOADK    	4 -7	; " "
	13	[578]	CALL     	2 3 2
	14	[578]	MOVE     	1 2
	15	[580]	GETTABLE 	2 0 -8	; "_mincount"
	16	[580]	EQ       	1 2 -9	; - 0
	17	[580]	JMP      	3	; to 21
	18	[580]	GETTABLE 	2 0 -10	; "_default"
	19	[580]	TEST     	2 0 0
	20	[580]	JMP      	4	; to 25
	21	[581]	LOADK    	2 -11	; "["
	22	[581]	MOVE     	3 1
	23	[581]	LOADK    	4 -12	; "]"
	24	[581]	CONCAT   	1 2 4
	25	[584]	RETURN   	1 2
	26	[585]	RETURN   	0 1

function <./argparse.lua:587,589> (3 instructions, 12 bytes at 0x7fe3c2c0f870)
1 param, 2 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[588]	GETTABLE 	1 0 -1	; "_name"
	2	[588]	RETURN   	1 2
	3	[589]	RETURN   	0 1

function <./argparse.lua:591,603> (34 instructions, 136 bytes at 0x7fe3c2c0fb60)
1 param, 12 slots, 0 upvalues, 7 locals, 10 constants, 0 functions
	1	[594]	GETGLOBAL	2 -1	; ipairs
	2	[594]	GETTABLE 	3 0 -2	; "_public_aliases"
	3	[594]	CALL     	2 2 4
	4	[594]	JMP      	15	; to 20
	5	[595]	SELF     	7 6 -3	; "sub"
	6	[595]	LOADK    	9 -4	; 1
	7	[595]	LOADK    	10 -4	; 1
	8	[595]	CALL     	7 4 2
	9	[595]	SELF     	8 6 -3	; "sub"
	10	[595]	LOADK    	10 -5	; 2
	11	[595]	LOADK    	11 -5	; 2
	12	[595]	CALL     	8 4 2
	13	[595]	EQ       	0 7 8
	14	[595]	JMP      	5	; to 20
	15	[596]	SELF     	7 6 -3	; "sub"
	16	[596]	LOADK    	9 -6	; 3
	17	[596]	CALL     	7 3 2
	18	[596]	MOVE     	1 7
	19	[597]	JMP      	2	; to 22
	20	[594]	TFORLOOP 	2 2
	21	[598]	JMP      	-17	; to 5
	22	[601]	TEST     	1 0 1
	23	[601]	JMP      	5	; to 29
	24	[601]	GETTABLE 	2 0 -7	; "_name"
	25	[601]	SELF     	2 2 -3	; "sub"
	26	[601]	LOADK    	4 -5	; 2
	27	[601]	CALL     	2 3 2
	28	[601]	MOVE     	1 2
	29	[602]	SELF     	2 1 -8	; "gsub"
	30	[602]	LOADK    	4 -9	; "-"
	31	[602]	LOADK    	5 -10	; "_"
	32	[602]	CALL     	2 4 2
	33	[602]	RETURN   	2 2
	34	[603]	RETURN   	0 1

function <./argparse.lua:605,607> (8 instructions, 32 bytes at 0x7fe3c2c0fea0)
1 param, 3 slots, 0 upvalues, 1 local, 2 constants, 0 functions
	1	[606]	GETTABLE 	1 0 -1	; "_maxargs"
	2	[606]	GETTABLE 	2 0 -2	; "_minargs"
	3	[606]	EQ       	0 1 2
	4	[606]	JMP      	1	; to 6
	5	[606]	LOADBOOL 	1 0 1
	6	[606]	LOADBOOL 	1 1 0
	7	[606]	RETURN   	1 2
	8	[607]	RETURN   	0 1

function <./argparse.lua:609,624> (32 instructions, 128 bytes at 0x7fe3c2c10120)
2 params, 8 slots, 0 upvalues, 4 locals, 8 constants, 0 functions
	1	[610]	GETTABLE 	2 0 -1	; "_parent"
	2	[611]	TEST     	1 0 0
	3	[611]	JMP      	4	; to 8
	4	[611]	TEST     	2 0 1
	5	[611]	JMP      	2	; to 8
	6	[612]	LOADK    	3 -2	; ""
	7	[612]	RETURN   	3 2
	8	[614]	NEWTABLE 	3 1 0
	9	[614]	GETTABLE 	4 0 -3	; "_name"
	10	[614]	SETLIST  	3 1 1	; 1
	11	[616]	TEST     	2 0 0
	12	[616]	JMP      	13	; to 26
	13	[617]	TEST     	1 0 0
	14	[617]	JMP      	3	; to 18
	15	[617]	GETTABLE 	4 2 -1	; "_parent"
	16	[617]	TEST     	4 0 0
	17	[617]	JMP      	6	; to 24
	18	[618]	GETGLOBAL	4 -4	; table
	19	[618]	GETTABLE 	4 4 -5	; "insert"
	20	[618]	MOVE     	5 3
	21	[618]	LOADK    	6 -6	; 1
	22	[618]	GETTABLE 	7 2 -3	; "_name"
	23	[618]	CALL     	4 4 1
	24	[620]	GETTABLE 	2 2 -1	; "_parent"
	25	[620]	JMP      	-15	; to 11
	26	[623]	GETGLOBAL	4 -4	; table
	27	[623]	GETTABLE 	4 4 -7	; "concat"
	28	[623]	MOVE     	5 3
	29	[623]	LOADK    	6 -8	; " "
	30	[623]	TAILCALL 	4 3 0
	31	[623]	RETURN   	4 0
	32	[624]	RETURN   	0 1

function <./argparse.lua:626,640> (32 instructions, 128 bytes at 0x7fe3c2c10580)
2 params, 16 slots, 0 upvalues, 17 locals, 8 constants, 0 functions
	1	[627]	TEST     	1 0 1
	2	[627]	JMP      	2	; to 5
	3	[627]	NEWTABLE 	2 0 0
	4	[627]	MOVE     	1 2
	5	[629]	GETGLOBAL	2 -1	; ipairs
	6	[629]	GETTABLE 	3 0 -2	; "_commands"
	7	[629]	CALL     	2 2 4
	8	[629]	JMP      	3	; to 12
	9	[630]	SELF     	7 6 -3	; "_update_charset"
	10	[630]	MOVE     	9 1
	11	[630]	CALL     	7 3 1
	12	[629]	TFORLOOP 	2 2
	13	[630]	JMP      	-5	; to 9
	14	[633]	GETGLOBAL	2 -1	; ipairs
	15	[633]	GETTABLE 	3 0 -4	; "_options"
	16	[633]	CALL     	2 2 4
	17	[633]	JMP      	11	; to 29
	18	[634]	GETGLOBAL	7 -1	; ipairs
	19	[634]	GETTABLE 	8 6 -5	; "_aliases"
	20	[634]	CALL     	7 2 4
	21	[634]	JMP      	5	; to 27
	22	[635]	SELF     	12 11 -6	; "sub"
	23	[635]	LOADK    	14 -7	; 1
	24	[635]	LOADK    	15 -7	; 1
	25	[635]	CALL     	12 4 2
	26	[635]	SETTABLE 	1 12 -8	; - true
	27	[634]	TFORLOOP 	7 2
	28	[635]	JMP      	-7	; to 22
	29	[633]	TFORLOOP 	2 2
	30	[636]	JMP      	-13	; to 18
	31	[639]	RETURN   	1 2
	32	[640]	RETURN   	0 1

function <./argparse.lua:642,646> (10 instructions, 40 bytes at 0x7fe3c2c10780)
1+ param, 6 slots, 1 upvalue, 3 locals, 3 constants, 0 functions
	1	[643]	GETUPVAL 	2 0	; Argument
	2	[643]	VARARG   	3 0
	3	[643]	CALL     	2 0 2
	4	[644]	GETGLOBAL	3 -1	; table
	5	[644]	GETTABLE 	3 3 -2	; "insert"
	6	[644]	GETTABLE 	4 0 -3	; "_arguments"
	7	[644]	MOVE     	5 2
	8	[644]	CALL     	3 3 1
	9	[645]	RETURN   	2 2
	10	[646]	RETURN   	0 1

function <./argparse.lua:648,652> (10 instructions, 40 bytes at 0x7fe3c2c10be0)
1+ param, 6 slots, 1 upvalue, 3 locals, 3 constants, 0 functions
	1	[649]	GETUPVAL 	2 0	; Option
	2	[649]	VARARG   	3 0
	3	[649]	CALL     	2 0 2
	4	[650]	GETGLOBAL	3 -1	; table
	5	[650]	GETTABLE 	3 3 -2	; "insert"
	6	[650]	GETTABLE 	4 0 -3	; "_options"
	7	[650]	MOVE     	5 2
	8	[650]	CALL     	3 3 1
	9	[651]	RETURN   	2 2
	10	[652]	RETURN   	0 1

function <./argparse.lua:654,656> (9 instructions, 36 bytes at 0x7fe3c2c11030)
1+ param, 5 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[655]	SELF     	2 0 -1	; "option"
	2	[655]	CALL     	2 2 2
	3	[655]	SELF     	2 2 -2	; "args"
	4	[655]	LOADK    	4 -3	; 0
	5	[655]	CALL     	2 3 2
	6	[655]	VARARG   	3 0
	7	[655]	TAILCALL 	2 0 0
	8	[655]	RETURN   	2 0
	9	[656]	RETURN   	0 1

function <./argparse.lua:658,663> (15 instructions, 60 bytes at 0x7fe3c2c11670)
1+ param, 6 slots, 1 upvalue, 3 locals, 5 constants, 0 functions
	1	[659]	GETUPVAL 	2 0	; Command
	2	[659]	CALL     	2 1 2
	3	[659]	SELF     	2 2 -1	; "add_help"
	4	[659]	LOADBOOL 	4 1 0
	5	[659]	CALL     	2 3 2
	6	[659]	VARARG   	3 0
	7	[659]	CALL     	2 0 2
	8	[660]	SETTABLE 	2 -2 0	; "_parent" -
	9	[661]	GETGLOBAL	3 -3	; table
	10	[661]	GETTABLE 	3 3 -4	; "insert"
	11	[661]	GETTABLE 	4 0 -5	; "_commands"
	12	[661]	MOVE     	5 2
	13	[661]	CALL     	3 3 1
	14	[662]	RETURN   	2 2
	15	[663]	RETURN   	0 1

function <./argparse.lua:665,675> (33 instructions, 132 bytes at 0x7fe3c2c11870)
1+ param, 14 slots, 2 upvalues, 9 locals, 8 constants, 0 functions
	1	[666]	NEWTABLE 	2 0 0
	2	[666]	VARARG   	3 0
	3	[666]	SETLIST  	2 0 1	; 1
	4	[668]	GETGLOBAL	3 -1	; ipairs
	5	[668]	MOVE     	4 2
	6	[668]	CALL     	3 2 4
	7	[668]	JMP      	17	; to 25
	8	[669]	GETGLOBAL	8 -2	; getmetatable
	9	[669]	MOVE     	9 7
	10	[669]	CALL     	8 2 2
	11	[670]	GETGLOBAL	9 -3	; assert
	12	[670]	GETUPVAL 	10 0	; Option
	13	[670]	EQ       	1 8 10
	14	[670]	JMP      	4	; to 19
	15	[670]	GETUPVAL 	10 1	; Argument
	16	[670]	EQ       	1 8 10
	17	[670]	JMP      	1	; to 19
	18	[670]	LOADBOOL 	10 0 1
	19	[670]	LOADBOOL 	10 1 0
	20	[670]	LOADK    	11 -4	; "bad argument #%d to 'mutex' (Option or Argument expected)"
	21	[670]	SELF     	11 11 -5	; "format"
	22	[670]	MOVE     	13 6
	23	[670]	CALL     	11 3 0
	24	[670]	CALL     	9 0 1
	25	[668]	TFORLOOP 	3 2
	26	[670]	JMP      	-19	; to 8
	27	[673]	GETGLOBAL	3 -6	; table
	28	[673]	GETTABLE 	3 3 -7	; "insert"
	29	[673]	GETTABLE 	4 0 -8	; "_mutexes"
	30	[673]	MOVE     	5 2
	31	[673]	CALL     	3 3 1
	32	[674]	RETURN   	0 2
	33	[675]	RETURN   	0 1

function <./argparse.lua:677,690> (52 instructions, 208 bytes at 0x7fe3c2c11e30)
2+ params, 15 slots, 3 upvalues, 10 locals, 13 constants, 0 functions
	1	[678]	GETGLOBAL	3 -1	; assert
	2	[678]	GETGLOBAL	4 -2	; type
	3	[678]	MOVE     	5 1
	4	[678]	CALL     	4 2 2
	5	[678]	EQ       	1 4 -3	; - "string"
	6	[678]	JMP      	1	; to 8
	7	[678]	LOADBOOL 	4 0 1
	8	[678]	LOADBOOL 	4 1 0
	9	[678]	LOADK    	5 -4	; "bad argument #1 to 'group' (string expected, got %s)"
	10	[678]	SELF     	5 5 -5	; "format"
	11	[678]	GETGLOBAL	7 -2	; type
	12	[678]	MOVE     	8 1
	13	[678]	CALL     	7 2 0
	14	[678]	CALL     	5 0 0
	15	[678]	CALL     	3 0 1
	16	[680]	NEWTABLE 	3 0 1
	17	[680]	SETTABLE 	3 -6 1	; "name" -
	18	[680]	VARARG   	4 0
	19	[680]	SETLIST  	3 0 1	; 1
	20	[682]	GETGLOBAL	4 -7	; ipairs
	21	[682]	MOVE     	5 3
	22	[682]	CALL     	4 2 4
	23	[682]	JMP      	20	; to 44
	24	[683]	GETGLOBAL	9 -8	; getmetatable
	25	[683]	MOVE     	10 8
	26	[683]	CALL     	9 2 2
	27	[684]	GETGLOBAL	10 -1	; assert
	28	[684]	GETUPVAL 	11 0	; Option
	29	[684]	EQ       	1 9 11
	30	[684]	JMP      	7	; to 38
	31	[684]	GETUPVAL 	11 1	; Argument
	32	[684]	EQ       	1 9 11
	33	[684]	JMP      	4	; to 38
	34	[684]	GETUPVAL 	11 2	; Command
	35	[684]	EQ       	1 9 11
	36	[684]	JMP      	1	; to 38
	37	[684]	LOADBOOL 	11 0 1
	38	[684]	LOADBOOL 	11 1 0
	39	[685]	LOADK    	12 -9	; "bad argument #%d to 'group' (Option or Argument or Command expected)"
	40	[685]	SELF     	12 12 -5	; "format"
	41	[685]	ADD      	14 7 -10	; - 1
	42	[685]	CALL     	12 3 0
	43	[684]	CALL     	10 0 1
	44	[682]	TFORLOOP 	4 2
	45	[685]	JMP      	-22	; to 24
	46	[688]	GETGLOBAL	4 -11	; table
	47	[688]	GETTABLE 	4 4 -12	; "insert"
	48	[688]	GETTABLE 	5 0 -13	; "_groups"
	49	[688]	MOVE     	6 3
	50	[688]	CALL     	4 3 1
	51	[689]	RETURN   	0 2
	52	[690]	RETURN   	0 1

function <./argparse.lua:694,826> (169 instructions, 676 bytes at 0x7fe3c2c11d70)
1 param, 26 slots, 2 upvalues, 49 locals, 23 constants, 3 functions
	1	[695]	GETTABLE 	1 0 -1	; "_usage"
	2	[695]	TEST     	1 0 0
	3	[695]	JMP      	2	; to 6
	4	[696]	GETTABLE 	1 0 -1	; "_usage"
	5	[696]	RETURN   	1 2
	6	[699]	SELF     	1 0 -2	; "_inherit_property"
	7	[699]	LOADK    	3 -3	; "usage_margin"
	8	[699]	GETUPVAL 	4 0	; usage_welcome
	9	[699]	LEN      	4 4
	10	[699]	CALL     	1 4 2
	11	[700]	SELF     	2 0 -2	; "_inherit_property"
	12	[700]	LOADK    	4 -4	; "usage_max_width"
	13	[700]	LOADK    	5 -5	; 70
	14	[700]	CALL     	2 4 2
	15	[701]	NEWTABLE 	3 1 0
	16	[701]	GETUPVAL 	4 0	; usage_welcome
	17	[701]	SELF     	5 0 -6	; "_get_fullname"
	18	[701]	CALL     	5 2 2
	19	[701]	CONCAT   	4 4 5
	20	[701]	SETLIST  	3 1 1	; 1
	21	[709]	CLOSURE  	4 0	; 0x7fe3c2c12a10
	22	[709]	MOVE     	0 3
	23	[709]	MOVE     	0 2
	24	[709]	MOVE     	0 1
	25	[722]	NEWTABLE 	5 0 0
	26	[723]	NEWTABLE 	6 0 0
	27	[724]	NEWTABLE 	7 0 0
	28	[725]	NEWTABLE 	8 0 0
	29	[749]	CLOSURE  	9 1	; 0x7fe3c2c12990
	30	[749]	MOVE     	0 7
	31	[749]	MOVE     	0 6
	32	[749]	GETUPVAL 	0 1	; Option
	33	[749]	MOVE     	0 4
	34	[756]	CLOSURE  	10 2	; 0x7fe3c2c12c20
	35	[756]	MOVE     	0 6
	36	[756]	MOVE     	0 4
	37	[758]	GETGLOBAL	11 -7	; ipairs
	38	[758]	GETTABLE 	12 0 -8	; "_mutexes"
	39	[758]	CALL     	11 2 4
	40	[758]	JMP      	39	; to 80
	41	[759]	LOADBOOL 	16 0 0
	42	[760]	LOADBOOL 	17 0 0
	43	[762]	GETGLOBAL	18 -7	; ipairs
	44	[762]	MOVE     	19 15
	45	[762]	CALL     	18 2 4
	46	[762]	JMP      	24	; to 71
	47	[763]	GETGLOBAL	23 -9	; getmetatable
	48	[763]	MOVE     	24 22
	49	[763]	CALL     	23 2 2
	50	[763]	GETUPVAL 	24 1	; Option
	51	[763]	EQ       	0 23 24
	52	[763]	JMP      	6	; to 59
	53	[764]	SELF     	23 22 -10	; "_is_vararg"
	54	[764]	CALL     	23 2 2
	55	[764]	TEST     	23 0 0
	56	[764]	JMP      	13	; to 70
	57	[765]	LOADBOOL 	16 1 0
	58	[766]	JMP      	11	; to 70
	59	[768]	LOADBOOL 	17 1 0
	60	[769]	GETTABLE 	23 8 22
	61	[769]	TEST     	23 0 1
	62	[769]	JMP      	1	; to 64
	63	[769]	NEWTABLE 	23 0 0
	64	[769]	SETTABLE 	8 22 23
	65	[770]	GETGLOBAL	23 -11	; table
	66	[770]	GETTABLE 	23 23 -12	; "insert"
	67	[770]	GETTABLE 	24 8 22
	68	[770]	MOVE     	25 15
	69	[770]	CALL     	23 3 1
	70	[773]	SETTABLE 	5 22 -13	; - true
	71	[762]	TFORLOOP 	18 2
	72	[773]	JMP      	-26	; to 47
	73	[776]	TEST     	16 0 1
	74	[776]	JMP      	5	; to 80
	75	[776]	TEST     	17 0 1
	76	[776]	JMP      	3	; to 80
	77	[777]	MOVE     	18 9
	78	[777]	MOVE     	19 15
	79	[777]	CALL     	18 2 1
	80	[758]	TFORLOOP 	11 2
	81	[778]	JMP      	-41	; to 41
	82	[781]	GETGLOBAL	11 -7	; ipairs
	83	[781]	GETTABLE 	12 0 -14	; "_options"
	84	[781]	CALL     	11 2 4
	85	[781]	JMP      	10	; to 96
	86	[782]	GETTABLE 	16 5 15
	87	[782]	TEST     	16 0 1
	88	[782]	JMP      	7	; to 96
	89	[782]	SELF     	16 15 -10	; "_is_vararg"
	90	[782]	CALL     	16 2 2
	91	[782]	TEST     	16 0 1
	92	[782]	JMP      	3	; to 96
	93	[783]	MOVE     	16 10
	94	[783]	MOVE     	17 15
	95	[783]	CALL     	16 2 1
	96	[781]	TFORLOOP 	11 2
	97	[784]	JMP      	-12	; to 86
	98	[788]	GETGLOBAL	11 -7	; ipairs
	99	[788]	GETTABLE 	12 0 -15	; "_arguments"
	100	[788]	CALL     	11 2 4
	101	[788]	JMP      	24	; to 126
	102	[790]	LOADNIL  	16 16
	103	[792]	GETTABLE 	17 5 15
	104	[792]	TEST     	17 0 0
	105	[792]	JMP      	10	; to 116
	106	[793]	GETGLOBAL	17 -7	; ipairs
	107	[793]	GETTABLE 	18 8 15
	108	[793]	CALL     	17 2 4
	109	[793]	JMP      	4	; to 114
	110	[794]	GETTABLE 	22 7 21
	111	[794]	TEST     	22 0 1
	112	[794]	JMP      	1	; to 114
	113	[795]	MOVE     	16 21
	114	[793]	TFORLOOP 	17 2
	115	[796]	JMP      	-6	; to 110
	116	[800]	TEST     	16 0 0
	117	[800]	JMP      	5	; to 123
	118	[801]	MOVE     	17 9
	119	[801]	MOVE     	18 16
	120	[801]	MOVE     	19 15
	121	[801]	CALL     	17 3 1
	122	[801]	JMP      	3	; to 126
	123	[803]	MOVE     	17 10
	124	[803]	MOVE     	18 15
	125	[803]	CALL     	17 2 1
	126	[788]	TFORLOOP 	11 2
	127	[804]	JMP      	-26	; to 102
	128	[807]	GETGLOBAL	11 -7	; ipairs
	129	[807]	GETTABLE 	12 0 -8	; "_mutexes"
	130	[807]	CALL     	11 2 4
	131	[807]	JMP      	3	; to 135
	132	[808]	MOVE     	16 9
	133	[808]	MOVE     	17 15
	134	[808]	CALL     	16 2 1
	135	[807]	TFORLOOP 	11 2
	136	[808]	JMP      	-5	; to 132
	137	[811]	GETGLOBAL	11 -7	; ipairs
	138	[811]	GETTABLE 	12 0 -14	; "_options"
	139	[811]	CALL     	11 2 4
	140	[811]	JMP      	3	; to 144
	141	[812]	MOVE     	16 10
	142	[812]	MOVE     	17 15
	143	[812]	CALL     	16 2 1
	144	[811]	TFORLOOP 	11 2
	145	[812]	JMP      	-5	; to 141
	146	[815]	GETTABLE 	11 0 -16	; "_commands"
	147	[815]	LEN      	11 11
	148	[815]	LT       	0 -17 11	; 0 -
	149	[815]	JMP      	13	; to 163
	150	[816]	GETTABLE 	11 0 -18	; "_require_command"
	151	[816]	TEST     	11 0 0
	152	[816]	JMP      	4	; to 157
	153	[817]	MOVE     	11 4
	154	[817]	LOADK    	12 -19	; "<command>"
	155	[817]	CALL     	11 2 1
	156	[817]	JMP      	3	; to 160
	157	[819]	MOVE     	11 4
	158	[819]	LOADK    	12 -20	; "[<command>]"
	159	[819]	CALL     	11 2 1
	160	[822]	MOVE     	11 4
	161	[822]	LOADK    	12 -21	; "..."
	162	[822]	CALL     	11 2 1
	163	[825]	GETGLOBAL	11 -11	; table
	164	[825]	GETTABLE 	11 11 -22	; "concat"
	165	[825]	MOVE     	12 3
	166	[825]	LOADK    	13 -23	; "\n"
	167	[825]	TAILCALL 	11 3 0
	168	[825]	RETURN   	11 0
	169	[826]	RETURN   	0 1

function <./argparse.lua:703,709> (35 instructions, 140 bytes at 0x7fe3c2c12a10)
1 param, 6 slots, 3 upvalues, 1 local, 3 constants, 0 functions
	1	[704]	GETUPVAL 	1 0	; lines
	2	[704]	GETUPVAL 	2 0	; lines
	3	[704]	LEN      	2 2
	4	[704]	GETTABLE 	1 1 2
	5	[704]	LEN      	1 1
	6	[704]	ADD      	1 1 -1	; - 1
	7	[704]	LEN      	2 0
	8	[704]	ADD      	1 1 2
	9	[704]	GETUPVAL 	2 1	; max_usage_width
	10	[704]	LE       	0 1 2
	11	[704]	JMP      	12	; to 24
	12	[705]	GETUPVAL 	1 0	; lines
	13	[705]	GETUPVAL 	2 0	; lines
	14	[705]	LEN      	2 2
	15	[705]	GETUPVAL 	3 0	; lines
	16	[705]	GETUPVAL 	4 0	; lines
	17	[705]	LEN      	4 4
	18	[705]	GETTABLE 	3 3 4
	19	[705]	LOADK    	4 -2	; " "
	20	[705]	MOVE     	5 0
	21	[705]	CONCAT   	3 3 5
	22	[705]	SETTABLE 	1 2 3
	23	[705]	JMP      	11	; to 35
	24	[707]	GETUPVAL 	1 0	; lines
	25	[707]	GETUPVAL 	2 0	; lines
	26	[707]	LEN      	2 2
	27	[707]	ADD      	2 2 -1	; - 1
	28	[707]	LOADK    	3 -2	; " "
	29	[707]	SELF     	3 3 -3	; "rep"
	30	[707]	GETUPVAL 	5 2	; usage_margin
	31	[707]	CALL     	3 3 2
	32	[707]	MOVE     	4 0
	33	[707]	CONCAT   	3 3 4
	34	[707]	SETTABLE 	1 2 3
	35	[709]	RETURN   	0 1

function <./argparse.lua:727,749> (58 instructions, 232 bytes at 0x7fe3c2c12990)
2 params, 12 slots, 4 upvalues, 8 locals, 12 constants, 0 functions
	1	[728]	GETUPVAL 	2 0	; added_mutexes
	2	[728]	GETTABLE 	2 2 0
	3	[728]	TEST     	2 0 0
	4	[728]	JMP      	1	; to 6
	5	[729]	RETURN   	0 1
	6	[732]	GETUPVAL 	2 0	; added_mutexes
	7	[732]	SETTABLE 	2 0 -1	; - true
	8	[733]	NEWTABLE 	2 0 0
	9	[735]	GETGLOBAL	3 -2	; ipairs
	10	[735]	MOVE     	4 0
	11	[735]	CALL     	3 2 4
	12	[735]	JMP      	23	; to 36
	13	[736]	GETTABLE 	8 7 -3	; "_hidden"
	14	[736]	TEST     	8 0 1
	15	[736]	JMP      	20	; to 36
	16	[736]	GETUPVAL 	8 1	; added_elements
	17	[736]	GETTABLE 	8 8 7
	18	[736]	TEST     	8 0 1
	19	[736]	JMP      	16	; to 36
	20	[737]	GETGLOBAL	8 -4	; getmetatable
	21	[737]	MOVE     	9 7
	22	[737]	CALL     	8 2 2
	23	[737]	GETUPVAL 	9 2	; Option
	24	[737]	EQ       	1 8 9
	25	[737]	JMP      	2	; to 28
	26	[737]	EQ       	0 7 1
	27	[737]	JMP      	8	; to 36
	28	[738]	GETGLOBAL	8 -5	; table
	29	[738]	GETTABLE 	8 8 -6	; "insert"
	30	[738]	MOVE     	9 2
	31	[738]	SELF     	10 7 -7	; "_get_usage"
	32	[738]	CALL     	10 2 0
	33	[738]	CALL     	8 0 1
	34	[739]	GETUPVAL 	8 1	; added_elements
	35	[739]	SETTABLE 	8 7 -1	; - true
	36	[735]	TFORLOOP 	3 2
	37	[741]	JMP      	-25	; to 13
	38	[744]	LEN      	3 2
	39	[744]	EQ       	0 3 -8	; - 1
	40	[744]	JMP      	4	; to 45
	41	[745]	GETUPVAL 	3 3	; add
	42	[745]	GETTABLE 	4 2 -8	; 1
	43	[745]	CALL     	3 2 1
	44	[745]	JMP      	13	; to 58
	45	[746]	LEN      	3 2
	46	[746]	LT       	0 -8 3	; 1 -
	47	[746]	JMP      	10	; to 58
	48	[747]	GETUPVAL 	3 3	; add
	49	[747]	LOADK    	4 -9	; "("
	50	[747]	GETGLOBAL	5 -5	; table
	51	[747]	GETTABLE 	5 5 -10	; "concat"
	52	[747]	MOVE     	6 2
	53	[747]	LOADK    	7 -11	; " | "
	54	[747]	CALL     	5 3 2
	55	[747]	LOADK    	6 -12	; ")"
	56	[747]	CONCAT   	4 4 6
	57	[747]	CALL     	3 2 1
	58	[749]	RETURN   	0 1

function <./argparse.lua:751,756> (14 instructions, 56 bytes at 0x7fe3c2c12c20)
1 param, 4 slots, 2 upvalues, 1 local, 3 constants, 0 functions
	1	[752]	GETTABLE 	1 0 -1	; "_hidden"
	2	[752]	TEST     	1 0 1
	3	[752]	JMP      	10	; to 14
	4	[752]	GETUPVAL 	1 0	; added_elements
	5	[752]	GETTABLE 	1 1 0
	6	[752]	TEST     	1 0 1
	7	[752]	JMP      	6	; to 14
	8	[753]	GETUPVAL 	1 1	; add
	9	[753]	SELF     	2 0 -2	; "_get_usage"
	10	[753]	CALL     	2 2 0
	11	[753]	CALL     	1 0 1
	12	[754]	GETUPVAL 	1 0	; added_elements
	13	[754]	SETTABLE 	1 0 -3	; - true
	14	[756]	RETURN   	0 1

function <./argparse.lua:828,844> (26 instructions, 104 bytes at 0x7fe3c2c12890)
1 param, 9 slots, 0 upvalues, 6 locals, 8 constants, 0 functions
	1	[829]	EQ       	0 0 -1	; - ""
	2	[829]	JMP      	2	; to 5
	3	[830]	NEWTABLE 	1 0 0
	4	[830]	RETURN   	1 2
	5	[833]	NEWTABLE 	1 0 0
	6	[835]	SELF     	2 0 -2	; "sub"
	7	[835]	LOADK    	4 -3	; -1
	8	[835]	CALL     	2 3 2
	9	[835]	EQ       	1 2 -4	; - "\n"
	10	[835]	JMP      	3	; to 14
	11	[836]	MOVE     	2 0
	12	[836]	LOADK    	3 -4	; "\n"
	13	[836]	CONCAT   	0 2 3
	14	[839]	SELF     	2 0 -5	; "gmatch"
	15	[839]	LOADK    	4 -6	; "([^\n]*)\n"
	16	[839]	CALL     	2 3 4
	17	[839]	JMP      	5	; to 23
	18	[840]	GETGLOBAL	6 -7	; table
	19	[840]	GETTABLE 	6 6 -8	; "insert"
	20	[840]	MOVE     	7 1
	21	[840]	MOVE     	8 5
	22	[840]	CALL     	6 3 1
	23	[839]	TFORLOOP 	2 1
	24	[840]	JMP      	-7	; to 18
	25	[843]	RETURN   	1 2
	26	[844]	RETURN   	0 1

function <./argparse.lua:846,902> (88 instructions, 352 bytes at 0x7fe3c2c13870)
2 params, 15 slots, 0 upvalues, 11 locals, 14 constants, 0 functions
	1	[848]	NEWTABLE 	2 0 0
	2	[853]	SELF     	3 0 -1	; "match"
	3	[853]	LOADK    	5 -2	; "^ *"
	4	[853]	CALL     	3 3 2
	5	[855]	SELF     	4 0 -3	; "find"
	6	[855]	LOADK    	6 -4	; "^ *[%*%+%-]"
	7	[855]	CALL     	4 3 2
	8	[855]	TEST     	4 0 0
	9	[855]	JMP      	6	; to 16
	10	[856]	MOVE     	4 3
	11	[856]	LOADK    	5 -5	; " "
	12	[856]	SELF     	6 0 -1	; "match"
	13	[856]	LOADK    	8 -6	; "^ *[%*%+%-]( *)"
	14	[856]	CALL     	6 3 2
	15	[856]	CONCAT   	3 4 6
	16	[860]	NEWTABLE 	4 0 0
	17	[863]	LOADK    	5 -7	; 0
	18	[866]	LOADK    	6 -8	; 1
	19	[869]	SELF     	7 0 -3	; "find"
	20	[869]	LOADK    	9 -9	; "([^ ]+)"
	21	[869]	MOVE     	10 6
	22	[869]	CALL     	7 4 4
	23	[871]	TEST     	7 0 1
	24	[871]	JMP      	1	; to 26
	25	[873]	JMP      	46	; to 72
	26	[876]	SELF     	10 0 -10	; "sub"
	27	[876]	MOVE     	12 6
	28	[876]	SUB      	13 7 -8	; - 1
	29	[876]	CALL     	10 4 2
	30	[877]	ADD      	6 8 -8	; - 1
	31	[879]	LEN      	11 4
	32	[879]	EQ       	1 11 -7	; - 0
	33	[879]	JMP      	6	; to 40
	34	[879]	LEN      	11 10
	35	[879]	ADD      	11 5 11
	36	[879]	LEN      	12 9
	37	[879]	ADD      	11 11 12
	38	[879]	LE       	0 11 1
	39	[879]	JMP      	15	; to 55
	40	[881]	GETGLOBAL	11 -11	; table
	41	[881]	GETTABLE 	11 11 -12	; "insert"
	42	[881]	MOVE     	12 4
	43	[881]	MOVE     	13 10
	44	[881]	CALL     	11 3 1
	45	[882]	GETGLOBAL	11 -11	; table
	46	[882]	GETTABLE 	11 11 -12	; "insert"
	47	[882]	MOVE     	12 4
	48	[882]	MOVE     	13 9
	49	[882]	CALL     	11 3 1
	50	[883]	LEN      	11 10
	51	[883]	ADD      	11 5 11
	52	[883]	LEN      	12 9
	53	[883]	ADD      	5 11 12
	54	[883]	JMP      	-36	; to 19
	55	[886]	GETGLOBAL	11 -11	; table
	56	[886]	GETTABLE 	11 11 -12	; "insert"
	57	[886]	MOVE     	12 2
	58	[886]	GETGLOBAL	13 -11	; table
	59	[886]	GETTABLE 	13 13 -13	; "concat"
	60	[886]	MOVE     	14 4
	61	[886]	CALL     	13 2 0
	62	[886]	CALL     	11 0 1
	63	[887]	NEWTABLE 	11 2 0
	64	[887]	MOVE     	12 3
	65	[887]	MOVE     	13 9
	66	[887]	SETLIST  	11 2 1	; 1
	67	[887]	MOVE     	4 11
	68	[888]	LEN      	11 3
	69	[888]	LEN      	12 9
	70	[888]	ADD      	5 11 12
	71	[889]	JMP      	-53	; to 19
	72	[892]	LEN      	7 4
	73	[892]	LT       	0 -7 7	; 0 -
	74	[892]	JMP      	8	; to 83
	75	[893]	GETGLOBAL	7 -11	; table
	76	[893]	GETTABLE 	7 7 -12	; "insert"
	77	[893]	MOVE     	8 2
	78	[893]	GETGLOBAL	9 -11	; table
	79	[893]	GETTABLE 	9 9 -13	; "concat"
	80	[893]	MOVE     	10 4
	81	[893]	CALL     	9 2 0
	82	[893]	CALL     	7 0 1
	83	[896]	LEN      	7 2
	84	[896]	EQ       	0 7 -7	; - 0
	85	[896]	JMP      	1	; to 87
	86	[898]	SETTABLE 	2 -8 -14	; 1 ""
	87	[901]	RETURN   	2 2
	88	[902]	RETURN   	0 1

function <./argparse.lua:907,919> (24 instructions, 96 bytes at 0x7fe3c2c14340)
2 params, 17 slots, 1 upvalue, 14 locals, 3 constants, 0 functions
	1	[908]	NEWTABLE 	2 0 0
	2	[910]	GETGLOBAL	3 -1	; ipairs
	3	[910]	MOVE     	4 0
	4	[910]	CALL     	3 2 4
	5	[910]	JMP      	15	; to 21
	6	[911]	GETUPVAL 	8 0	; autowrap_line
	7	[911]	MOVE     	9 7
	8	[911]	MOVE     	10 1
	9	[911]	CALL     	8 3 2
	10	[913]	GETGLOBAL	9 -1	; ipairs
	11	[913]	MOVE     	10 8
	12	[913]	CALL     	9 2 4
	13	[913]	JMP      	5	; to 19
	14	[914]	GETGLOBAL	14 -2	; table
	15	[914]	GETTABLE 	14 14 -3	; "insert"
	16	[914]	MOVE     	15 2
	17	[914]	MOVE     	16 13
	18	[914]	CALL     	14 3 1
	19	[913]	TFORLOOP 	9 2
	20	[914]	JMP      	-7	; to 14
	21	[910]	TFORLOOP 	3 2
	22	[915]	JMP      	-17	; to 6
	23	[918]	RETURN   	2 2
	24	[919]	RETURN   	0 1

function <./argparse.lua:921,971> (111 instructions, 444 bytes at 0x7fe3c2c14be0)
2 params, 21 slots, 2 upvalues, 28 locals, 20 constants, 0 functions
	1	[922]	SELF     	2 1 -1	; "_get_label_lines"
	2	[922]	CALL     	2 2 2
	3	[923]	GETUPVAL 	3 0	; split_lines
	4	[923]	SELF     	4 1 -2	; "_get_description"
	5	[923]	CALL     	4 2 0
	6	[923]	CALL     	3 0 2
	7	[925]	NEWTABLE 	4 0 0
	8	[931]	SELF     	5 0 -3	; "_inherit_property"
	9	[931]	LOADK    	7 -4	; "help_usage_margin"
	10	[931]	LOADK    	8 -5	; 3
	11	[931]	CALL     	5 4 2
	12	[932]	LOADK    	6 -6	; " "
	13	[932]	SELF     	6 6 -7	; "rep"
	14	[932]	MOVE     	8 5
	15	[932]	CALL     	6 3 2
	16	[933]	SELF     	7 0 -3	; "_inherit_property"
	17	[933]	LOADK    	9 -8	; "help_description_margin"
	18	[933]	LOADK    	10 -9	; 25
	19	[933]	CALL     	7 4 2
	20	[934]	LOADK    	8 -6	; " "
	21	[934]	SELF     	8 8 -7	; "rep"
	22	[934]	MOVE     	10 7
	23	[934]	CALL     	8 3 2
	24	[936]	SELF     	9 0 -3	; "_inherit_property"
	25	[936]	LOADK    	11 -10	; "help_max_width"
	26	[936]	CALL     	9 3 2
	27	[938]	TEST     	9 0 0
	28	[938]	JMP      	10	; to 39
	29	[939]	GETGLOBAL	10 -11	; math
	30	[939]	GETTABLE 	10 10 -12	; "max"
	31	[939]	SUB      	11 9 7
	32	[939]	LOADK    	12 -13	; 10
	33	[939]	CALL     	10 3 2
	34	[940]	GETUPVAL 	11 1	; autowrap
	35	[940]	MOVE     	12 3
	36	[940]	MOVE     	13 10
	37	[940]	CALL     	11 3 2
	38	[940]	MOVE     	3 11
	39	[943]	GETTABLE 	10 2 -14	; 1
	40	[943]	LEN      	10 10
	41	[943]	SUB      	11 7 5
	42	[943]	LE       	0 11 10
	43	[943]	JMP      	27	; to 71
	44	[944]	GETGLOBAL	10 -15	; ipairs
	45	[944]	MOVE     	11 2
	46	[944]	CALL     	10 2 4
	47	[944]	JMP      	7	; to 55
	48	[945]	GETGLOBAL	15 -16	; table
	49	[945]	GETTABLE 	15 15 -17	; "insert"
	50	[945]	MOVE     	16 4
	51	[945]	MOVE     	17 6
	52	[945]	MOVE     	18 14
	53	[945]	CONCAT   	17 17 18
	54	[945]	CALL     	15 3 1
	55	[944]	TFORLOOP 	10 2
	56	[945]	JMP      	-9	; to 48
	57	[948]	GETGLOBAL	10 -15	; ipairs
	58	[948]	MOVE     	11 3
	59	[948]	CALL     	10 2 4
	60	[948]	JMP      	7	; to 68
	61	[949]	GETGLOBAL	15 -16	; table
	62	[949]	GETTABLE 	15 15 -17	; "insert"
	63	[949]	MOVE     	16 4
	64	[949]	MOVE     	17 8
	65	[949]	MOVE     	18 14
	66	[949]	CONCAT   	17 17 18
	67	[949]	CALL     	15 3 1
	68	[948]	TFORLOOP 	10 2
	69	[949]	JMP      	-9	; to 61
	70	[950]	JMP      	34	; to 105
	71	[952]	LOADK    	10 -14	; 1
	72	[952]	GETGLOBAL	11 -11	; math
	73	[952]	GETTABLE 	11 11 -12	; "max"
	74	[952]	LEN      	12 2
	75	[952]	LEN      	13 3
	76	[952]	CALL     	11 3 2
	77	[952]	LOADK    	12 -14	; 1
	78	[952]	FORPREP  	10 25	; to 104
	79	[953]	GETTABLE 	14 2 13
	80	[954]	GETTABLE 	15 3 13
	81	[956]	LOADK    	16 -18	; ""
	82	[958]	TEST     	14 0 0
	83	[958]	JMP      	3	; to 87
	84	[959]	MOVE     	17 6
	85	[959]	MOVE     	18 14
	86	[959]	CONCAT   	16 17 18
	87	[962]	TEST     	15 0 0
	88	[962]	JMP      	10	; to 99
	89	[962]	EQ       	1 15 -18	; - ""
	90	[962]	JMP      	8	; to 99
	91	[963]	MOVE     	17 16
	92	[963]	LOADK    	18 -6	; " "
	93	[963]	SELF     	18 18 -7	; "rep"
	94	[963]	LEN      	20 16
	95	[963]	SUB      	20 7 20
	96	[963]	CALL     	18 3 2
	97	[963]	MOVE     	19 15
	98	[963]	CONCAT   	16 17 19
	99	[966]	GETGLOBAL	17 -16	; table
	100	[966]	GETTABLE 	17 17 -17	; "insert"
	101	[966]	MOVE     	18 4
	102	[966]	MOVE     	19 16
	103	[966]	CALL     	17 3 1
	104	[952]	FORLOOP  	10 -26	; to 79
	105	[970]	GETGLOBAL	10 -16	; table
	106	[970]	GETTABLE 	10 10 -19	; "concat"
	107	[970]	MOVE     	11 4
	108	[970]	LOADK    	12 -20	; "\n"
	109	[970]	TAILCALL 	10 3 0
	110	[970]	RETURN   	10 0
	111	[971]	RETURN   	0 1

function <./argparse.lua:973,981> (13 instructions, 52 bytes at 0x7fe3c2c14fb0)
1 param, 9 slots, 0 upvalues, 7 locals, 3 constants, 0 functions
	1	[974]	NEWTABLE 	1 0 0
	2	[976]	GETGLOBAL	2 -1	; ipairs
	3	[976]	MOVE     	3 0
	4	[976]	CALL     	2 2 4
	5	[976]	JMP      	4	; to 10
	6	[977]	GETGLOBAL	7 -2	; getmetatable
	7	[977]	MOVE     	8 6
	8	[977]	CALL     	7 2 2
	9	[977]	SETTABLE 	1 7 -3	; - true
	10	[976]	TFORLOOP 	2 2
	11	[977]	JMP      	-6	; to 6
	12	[980]	RETURN   	1 2
	13	[981]	RETURN   	0 1

function <./argparse.lua:983,996> (43 instructions, 172 bytes at 0x7fe3c2c0e0b0)
5 params, 16 slots, 0 upvalues, 11 locals, 13 constants, 0 functions
	1	[984]	NEWTABLE 	5 1 0
	2	[984]	MOVE     	6 3
	3	[984]	SETLIST  	5 1 1	; 1
	4	[986]	GETGLOBAL	6 -1	; ipairs
	5	[986]	MOVE     	7 4
	6	[986]	CALL     	6 2 4
	7	[986]	JMP      	14	; to 22
	8	[987]	GETTABLE 	11 10 -2	; "_hidden"
	9	[987]	TEST     	11 0 1
	10	[987]	JMP      	11	; to 22
	11	[987]	GETTABLE 	11 2 10
	12	[987]	TEST     	11 0 1
	13	[987]	JMP      	8	; to 22
	14	[988]	SETTABLE 	2 10 -3	; - true
	15	[989]	GETGLOBAL	11 -4	; table
	16	[989]	GETTABLE 	11 11 -5	; "insert"
	17	[989]	MOVE     	12 5
	18	[989]	SELF     	13 0 -6	; "_get_element_help"
	19	[989]	MOVE     	15 10
	20	[989]	CALL     	13 3 0
	21	[989]	CALL     	11 0 1
	22	[986]	TFORLOOP 	6 2
	23	[990]	JMP      	-16	; to 8
	24	[993]	LEN      	6 5
	25	[993]	LT       	0 -7 6	; 1 -
	26	[993]	JMP      	16	; to 43
	27	[994]	GETGLOBAL	6 -4	; table
	28	[994]	GETTABLE 	6 6 -5	; "insert"
	29	[994]	MOVE     	7 1
	30	[994]	GETGLOBAL	8 -4	; table
	31	[994]	GETTABLE 	8 8 -8	; "concat"
	32	[994]	MOVE     	9 5
	33	[994]	LOADK    	10 -9	; "\n"
	34	[994]	SELF     	10 10 -10	; "rep"
	35	[994]	SELF     	12 0 -11	; "_inherit_property"
	36	[994]	LOADK    	14 -12	; "help_vertical_space"
	37	[994]	LOADK    	15 -13	; 0
	38	[994]	CALL     	12 4 2
	39	[994]	ADD      	12 12 -7	; - 1
	40	[994]	CALL     	10 3 0
	41	[994]	CALL     	8 0 0
	42	[994]	CALL     	6 0 1
	43	[996]	RETURN   	0 1

function <./argparse.lua:998,1073> (163 instructions, 652 bytes at 0x7fe3c2c14cc0)
1 param, 23 slots, 6 upvalues, 31 locals, 30 constants, 0 functions
	1	[999]	GETTABLE 	1 0 -1	; "_help"
	2	[999]	TEST     	1 0 0
	3	[999]	JMP      	2	; to 6
	4	[1000]	GETTABLE 	1 0 -1	; "_help"
	5	[1000]	RETURN   	1 2
	6	[1003]	NEWTABLE 	1 0 0
	7	[1003]	SELF     	2 0 -2	; "get_usage"
	8	[1003]	CALL     	2 2 0
	9	[1003]	SETLIST  	1 0 1	; 1
	10	[1005]	SELF     	2 0 -3	; "_inherit_property"
	11	[1005]	LOADK    	4 -4	; "help_max_width"
	12	[1005]	CALL     	2 3 2
	13	[1007]	GETTABLE 	3 0 -5	; "_description"
	14	[1007]	TEST     	3 0 0
	15	[1007]	JMP      	19	; to 35
	16	[1008]	GETTABLE 	3 0 -5	; "_description"
	17	[1010]	TEST     	2 0 0
	18	[1010]	JMP      	11	; to 30
	19	[1011]	GETGLOBAL	4 -6	; table
	20	[1011]	GETTABLE 	4 4 -7	; "concat"
	21	[1011]	GETUPVAL 	5 0	; autowrap
	22	[1011]	GETUPVAL 	6 1	; split_lines
	23	[1011]	MOVE     	7 3
	24	[1011]	CALL     	6 2 2
	25	[1011]	MOVE     	7 2
	26	[1011]	CALL     	5 3 2
	27	[1011]	LOADK    	6 -8	; "\n"
	28	[1011]	CALL     	4 3 2
	29	[1011]	MOVE     	3 4
	30	[1014]	GETGLOBAL	4 -6	; table
	31	[1014]	GETTABLE 	4 4 -9	; "insert"
	32	[1014]	MOVE     	5 1
	33	[1014]	MOVE     	6 3
	34	[1014]	CALL     	4 3 1
	35	[1021]	NEWTABLE 	3 0 3
	36	[1022]	GETUPVAL 	4 2	; Argument
	37	[1022]	NEWTABLE 	5 0 0
	38	[1022]	SETTABLE 	3 4 5
	39	[1023]	GETUPVAL 	4 3	; Option
	40	[1023]	NEWTABLE 	5 0 0
	41	[1023]	SETTABLE 	3 4 5
	42	[1024]	GETUPVAL 	4 4	; Command
	43	[1024]	NEWTABLE 	5 0 0
	44	[1024]	SETTABLE 	3 4 5
	45	[1027]	GETGLOBAL	4 -10	; ipairs
	46	[1027]	GETTABLE 	5 0 -11	; "_groups"
	47	[1027]	CALL     	4 2 4
	48	[1027]	JMP      	22	; to 71
	49	[1028]	GETUPVAL 	9 5	; get_group_types
	50	[1028]	MOVE     	10 8
	51	[1028]	CALL     	9 2 2
	52	[1030]	GETGLOBAL	10 -10	; ipairs
	53	[1030]	NEWTABLE 	11 3 0
	54	[1030]	GETUPVAL 	12 2	; Argument
	55	[1030]	GETUPVAL 	13 3	; Option
	56	[1030]	GETUPVAL 	14 4	; Command
	57	[1030]	SETLIST  	11 3 1	; 1
	58	[1030]	CALL     	10 2 4
	59	[1030]	JMP      	9	; to 69
	60	[1031]	GETTABLE 	15 9 14
	61	[1031]	TEST     	15 0 0
	62	[1031]	JMP      	6	; to 69
	63	[1032]	GETGLOBAL	15 -6	; table
	64	[1032]	GETTABLE 	15 15 -9	; "insert"
	65	[1032]	GETTABLE 	16 3 14
	66	[1032]	MOVE     	17 8
	67	[1032]	CALL     	15 3 1
	68	[1033]	JMP      	2	; to 71
	69	[1030]	TFORLOOP 	10 2
	70	[1034]	JMP      	-11	; to 60
	71	[1027]	TFORLOOP 	4 2
	72	[1035]	JMP      	-24	; to 49
	73	[1038]	NEWTABLE 	4 3 0
	74	[1038]	NEWTABLE 	5 0 3
	75	[1039]	SETTABLE 	5 -12 -13	; "name" "Arguments"
	76	[1039]	GETUPVAL 	6 2	; Argument
	77	[1039]	SETTABLE 	5 -14 6	; "type" -
	78	[1039]	GETTABLE 	6 0 -16	; "_arguments"
	79	[1039]	SETTABLE 	5 -15 6	; "elements" -
	80	[1039]	NEWTABLE 	6 0 3
	81	[1040]	SETTABLE 	6 -12 -17	; "name" "Options"
	82	[1040]	GETUPVAL 	7 3	; Option
	83	[1040]	SETTABLE 	6 -14 7	; "type" -
	84	[1040]	GETTABLE 	7 0 -18	; "_options"
	85	[1040]	SETTABLE 	6 -15 7	; "elements" -
	86	[1040]	NEWTABLE 	7 0 3
	87	[1041]	SETTABLE 	7 -12 -19	; "name" "Commands"
	88	[1041]	GETUPVAL 	8 4	; Command
	89	[1041]	SETTABLE 	7 -14 8	; "type" -
	90	[1041]	GETTABLE 	8 0 -20	; "_commands"
	91	[1041]	SETTABLE 	7 -15 8	; "elements" -
	92	[1042]	SETLIST  	4 3 1	; 1
	93	[1044]	NEWTABLE 	5 0 0
	94	[1046]	GETGLOBAL	6 -10	; ipairs
	95	[1046]	MOVE     	7 4
	96	[1046]	CALL     	6 2 4
	97	[1046]	JMP      	35	; to 133
	98	[1047]	GETTABLE 	11 10 -14	; "type"
	99	[1047]	GETTABLE 	11 3 11
	100	[1049]	GETGLOBAL	12 -10	; ipairs
	101	[1049]	MOVE     	13 11
	102	[1049]	CALL     	12 2 4
	103	[1049]	JMP      	8	; to 112
	104	[1050]	SELF     	17 0 -21	; "_add_group_help"
	105	[1050]	MOVE     	19 1
	106	[1050]	MOVE     	20 5
	107	[1050]	GETTABLE 	21 16 -12	; "name"
	108	[1050]	LOADK    	22 -22	; ":"
	109	[1050]	CONCAT   	21 21 22
	110	[1050]	MOVE     	22 16
	111	[1050]	CALL     	17 6 1
	112	[1049]	TFORLOOP 	12 2
	113	[1050]	JMP      	-10	; to 104
	114	[1053]	GETTABLE 	12 10 -12	; "name"
	115	[1053]	LOADK    	13 -22	; ":"
	116	[1053]	CONCAT   	12 12 13
	117	[1055]	LEN      	13 11
	118	[1055]	LT       	0 -23 13	; 0 -
	119	[1055]	JMP      	7	; to 127
	120	[1056]	LOADK    	13 -24	; "Other "
	121	[1056]	SELF     	14 12 -25	; "gsub"
	122	[1056]	LOADK    	16 -26	; "^."
	123	[1056]	GETGLOBAL	17 -27	; string
	124	[1056]	GETTABLE 	17 17 -28	; "lower"
	125	[1056]	CALL     	14 4 2
	126	[1056]	CONCAT   	12 13 14
	127	[1059]	SELF     	13 0 -21	; "_add_group_help"
	128	[1059]	MOVE     	15 1
	129	[1059]	MOVE     	16 5
	130	[1059]	MOVE     	17 12
	131	[1059]	GETTABLE 	18 10 -15	; "elements"
	132	[1059]	CALL     	13 6 1
	133	[1046]	TFORLOOP 	6 2
	134	[1059]	JMP      	-37	; to 98
	135	[1062]	GETTABLE 	6 0 -29	; "_epilog"
	136	[1062]	TEST     	6 0 0
	137	[1062]	JMP      	19	; to 157
	138	[1063]	GETTABLE 	6 0 -29	; "_epilog"
	139	[1065]	TEST     	2 0 0
	140	[1065]	JMP      	11	; to 152
	141	[1066]	GETGLOBAL	7 -6	; table
	142	[1066]	GETTABLE 	7 7 -7	; "concat"
	143	[1066]	GETUPVAL 	8 0	; autowrap
	144	[1066]	GETUPVAL 	9 1	; split_lines
	145	[1066]	MOVE     	10 6
	146	[1066]	CALL     	9 2 2
	147	[1066]	MOVE     	10 2
	148	[1066]	CALL     	8 3 2
	149	[1066]	LOADK    	9 -8	; "\n"
	150	[1066]	CALL     	7 3 2
	151	[1066]	MOVE     	6 7
	152	[1069]	GETGLOBAL	7 -6	; table
	153	[1069]	GETTABLE 	7 7 -9	; "insert"
	154	[1069]	MOVE     	8 1
	155	[1069]	MOVE     	9 6
	156	[1069]	CALL     	7 3 1
	157	[1072]	GETGLOBAL	6 -6	; table
	158	[1072]	GETTABLE 	6 6 -7	; "concat"
	159	[1072]	MOVE     	7 1
	160	[1072]	LOADK    	8 -30	; "\n\n"
	161	[1072]	TAILCALL 	6 3 0
	162	[1072]	RETURN   	6 0
	163	[1073]	RETURN   	0 1

function <./argparse.lua:1075,1113> (56 instructions, 224 bytes at 0x7fe3c2c0dc50)
2 params, 8 slots, 0 upvalues, 3 locals, 18 constants, 1 function
	1	[1076]	TEST     	1 0 0
	2	[1076]	JMP      	20	; to 23
	3	[1077]	GETGLOBAL	2 -1	; assert
	4	[1077]	GETGLOBAL	3 -2	; type
	5	[1077]	MOVE     	4 1
	6	[1077]	CALL     	3 2 2
	7	[1077]	EQ       	1 3 -3	; - "string"
	8	[1077]	JMP      	6	; to 15
	9	[1077]	GETGLOBAL	3 -2	; type
	10	[1077]	MOVE     	4 1
	11	[1077]	CALL     	3 2 2
	12	[1077]	EQ       	1 3 -4	; - "table"
	13	[1077]	JMP      	1	; to 15
	14	[1077]	LOADBOOL 	3 0 1
	15	[1077]	LOADBOOL 	3 1 0
	16	[1078]	LOADK    	4 -5	; "bad argument #1 to 'add_help_command' (string or table expected, got %s)"
	17	[1078]	SELF     	4 4 -6	; "format"
	18	[1078]	GETGLOBAL	6 -2	; type
	19	[1078]	MOVE     	7 1
	20	[1078]	CALL     	6 2 0
	21	[1078]	CALL     	4 0 0
	22	[1077]	CALL     	2 0 1
	23	[1081]	SELF     	2 0 -7	; "command"
	24	[1081]	CALL     	2 2 2
	25	[1082]	SELF     	2 2 -8	; "description"
	26	[1082]	LOADK    	4 -9	; "Show help for commands."
	27	[1082]	CALL     	2 3 2
	28	[1083]	SELF     	3 2 -10	; "argument"
	29	[1083]	LOADK    	5 -7	; "command"
	30	[1083]	CALL     	3 3 2
	31	[1084]	SELF     	3 3 -8	; "description"
	32	[1084]	LOADK    	5 -11	; "The command to show help for."
	33	[1084]	CALL     	3 3 2
	34	[1085]	SELF     	3 3 -12	; "args"
	35	[1085]	LOADK    	5 -13	; "?"
	36	[1085]	CALL     	3 3 2
	37	[1086]	SELF     	3 3 -14	; "action"
	38	[1101]	CLOSURE  	5 0	; 0x7fe3c2c0d930
	39	[1101]	MOVE     	0 0
	40	[1101]	MOVE     	0 2
	41	[1086]	CALL     	3 3 1
	42	[1103]	TEST     	1 0 0
	43	[1103]	JMP      	4	; to 48
	44	[1104]	MOVE     	3 2
	45	[1104]	MOVE     	4 1
	46	[1104]	CALL     	3 2 2
	47	[1104]	MOVE     	2 3
	48	[1107]	GETTABLE 	3 2 -15	; "_name"
	49	[1107]	TEST     	3 0 1
	50	[1107]	JMP      	3	; to 54
	51	[1108]	MOVE     	3 2
	52	[1108]	LOADK    	4 -16	; "help"
	53	[1108]	CALL     	3 2 1
	54	[1111]	SETTABLE 	2 -17 -18	; "_is_help_command" true
	55	[1112]	RETURN   	0 2
	56	[1113]	RETURN   	0 1

function <./argparse.lua:1086,1101> (43 instructions, 172 bytes at 0x7fe3c2c0d930)
3 params, 16 slots, 2 upvalues, 13 locals, 11 constants, 0 functions
	1	[1087]	TEST     	2 0 1
	2	[1087]	JMP      	10	; to 13
	3	[1088]	GETGLOBAL	3 -1	; print
	4	[1088]	GETUPVAL 	4 0	; self
	5	[1088]	SELF     	4 4 -2	; "get_help"
	6	[1088]	CALL     	4 2 0
	7	[1088]	CALL     	3 0 1
	8	[1089]	GETGLOBAL	3 -3	; os
	9	[1089]	GETTABLE 	3 3 -4	; "exit"
	10	[1089]	LOADK    	4 -5	; 0
	11	[1089]	CALL     	3 2 1
	12	[1089]	JMP      	23	; to 36
	13	[1091]	GETGLOBAL	3 -6	; ipairs
	14	[1091]	GETUPVAL 	4 0	; self
	15	[1091]	GETTABLE 	4 4 -7	; "_commands"
	16	[1091]	CALL     	3 2 4
	17	[1091]	JMP      	16	; to 34
	18	[1092]	GETGLOBAL	8 -6	; ipairs
	19	[1092]	GETTABLE 	9 7 -8	; "_aliases"
	20	[1092]	CALL     	8 2 4
	21	[1092]	JMP      	10	; to 32
	22	[1093]	EQ       	0 12 2
	23	[1093]	JMP      	8	; to 32
	24	[1094]	GETGLOBAL	13 -1	; print
	25	[1094]	SELF     	14 7 -2	; "get_help"
	26	[1094]	CALL     	14 2 0
	27	[1094]	CALL     	13 0 1
	28	[1095]	GETGLOBAL	13 -3	; os
	29	[1095]	GETTABLE 	13 13 -4	; "exit"
	30	[1095]	LOADK    	14 -5	; 0
	31	[1095]	CALL     	13 2 1
	32	[1092]	TFORLOOP 	8 2
	33	[1096]	JMP      	-12	; to 22
	34	[1091]	TFORLOOP 	3 2
	35	[1097]	JMP      	-18	; to 18
	36	[1100]	GETUPVAL 	3 1	; help
	37	[1100]	SELF     	3 3 -9	; "error"
	38	[1100]	LOADK    	5 -10	; "unknown command '%s'"
	39	[1100]	SELF     	5 5 -11	; "format"
	40	[1100]	MOVE     	7 2
	41	[1100]	CALL     	5 3 0
	42	[1100]	CALL     	3 0 1
	43	[1101]	RETURN   	0 1

function <./argparse.lua:1115,1156> (97 instructions, 388 bytes at 0x7fe3c2c14f30)
1 param, 14 slots, 0 upvalues, 36 locals, 11 constants, 0 functions
	1	[1116]	GETTABLE 	1 0 -1	; "_basename"
	2	[1116]	TEST     	1 0 0
	3	[1116]	JMP      	9	; to 13
	4	[1117]	GETTABLE 	1 0 -1	; "_basename"
	5	[1117]	SELF     	1 1 -2	; "find"
	6	[1117]	LOADK    	3 -3	; "[^%w_%-%+%.]"
	7	[1117]	CALL     	1 3 2
	8	[1117]	TEST     	1 0 0
	9	[1117]	JMP      	16	; to 26
	10	[1118]	LOADBOOL 	1 0 0
	11	[1118]	RETURN   	1 2
	12	[1119]	JMP      	13	; to 26
	13	[1121]	GETGLOBAL	1 -4	; ipairs
	14	[1121]	GETTABLE 	2 0 -5	; "_aliases"
	15	[1121]	CALL     	1 2 4
	16	[1121]	JMP      	7	; to 24
	17	[1122]	SELF     	6 5 -2	; "find"
	18	[1122]	LOADK    	8 -3	; "[^%w_%-%+%.]"
	19	[1122]	CALL     	6 3 2
	20	[1122]	TEST     	6 0 0
	21	[1122]	JMP      	2	; to 24
	22	[1123]	LOADBOOL 	6 0 0
	23	[1123]	RETURN   	6 2
	24	[1121]	TFORLOOP 	1 2
	25	[1124]	JMP      	-9	; to 17
	26	[1127]	GETGLOBAL	1 -4	; ipairs
	27	[1127]	GETTABLE 	2 0 -6	; "_options"
	28	[1127]	CALL     	1 2 4
	29	[1127]	JMP      	29	; to 59
	30	[1128]	GETGLOBAL	6 -4	; ipairs
	31	[1128]	GETTABLE 	7 5 -5	; "_aliases"
	32	[1128]	CALL     	6 2 4
	33	[1128]	JMP      	7	; to 41
	34	[1129]	SELF     	11 10 -2	; "find"
	35	[1129]	LOADK    	13 -3	; "[^%w_%-%+%.]"
	36	[1129]	CALL     	11 3 2
	37	[1129]	TEST     	11 0 0
	38	[1129]	JMP      	2	; to 41
	39	[1130]	LOADBOOL 	11 0 0
	40	[1130]	RETURN   	11 2
	41	[1128]	TFORLOOP 	6 2
	42	[1131]	JMP      	-9	; to 34
	43	[1133]	GETTABLE 	6 5 -7	; "_choices"
	44	[1133]	TEST     	6 0 0
	45	[1133]	JMP      	13	; to 59
	46	[1134]	GETGLOBAL	6 -4	; ipairs
	47	[1134]	GETTABLE 	7 5 -7	; "_choices"
	48	[1134]	CALL     	6 2 4
	49	[1134]	JMP      	7	; to 57
	50	[1135]	SELF     	11 10 -2	; "find"
	51	[1135]	LOADK    	13 -8	; "[%s'\"]"
	52	[1135]	CALL     	11 3 2
	53	[1135]	TEST     	11 0 0
	54	[1135]	JMP      	2	; to 57
	55	[1136]	LOADBOOL 	11 0 0
	56	[1136]	RETURN   	11 2
	57	[1134]	TFORLOOP 	6 2
	58	[1137]	JMP      	-9	; to 50
	59	[1127]	TFORLOOP 	1 2
	60	[1139]	JMP      	-31	; to 30
	61	[1141]	GETGLOBAL	1 -4	; ipairs
	62	[1141]	GETTABLE 	2 0 -9	; "_arguments"
	63	[1141]	CALL     	1 2 4
	64	[1141]	JMP      	16	; to 81
	65	[1142]	GETTABLE 	6 5 -7	; "_choices"
	66	[1142]	TEST     	6 0 0
	67	[1142]	JMP      	13	; to 81
	68	[1143]	GETGLOBAL	6 -4	; ipairs
	69	[1143]	GETTABLE 	7 5 -7	; "_choices"
	70	[1143]	CALL     	6 2 4
	71	[1143]	JMP      	7	; to 79
	72	[1144]	SELF     	11 10 -2	; "find"
	73	[1144]	LOADK    	13 -8	; "[%s'\"]"
	74	[1144]	CALL     	11 3 2
	75	[1144]	TEST     	11 0 0
	76	[1144]	JMP      	2	; to 79
	77	[1145]	LOADBOOL 	11 0 0
	78	[1145]	RETURN   	11 2
	79	[1143]	TFORLOOP 	6 2
	80	[1146]	JMP      	-9	; to 72
	81	[1141]	TFORLOOP 	1 2
	82	[1148]	JMP      	-18	; to 65
	83	[1150]	GETGLOBAL	1 -4	; ipairs
	84	[1150]	GETTABLE 	2 0 -10	; "_commands"
	85	[1150]	CALL     	1 2 4
	86	[1150]	JMP      	6	; to 93
	87	[1151]	SELF     	6 5 -11	; "_is_shell_safe"
	88	[1151]	CALL     	6 2 2
	89	[1151]	TEST     	6 0 1
	90	[1151]	JMP      	2	; to 93
	91	[1152]	LOADBOOL 	6 0 0
	92	[1152]	RETURN   	6 2
	93	[1150]	TFORLOOP 	1 2
	94	[1153]	JMP      	-8	; to 87
	95	[1155]	LOADBOOL 	1 1 0
	96	[1155]	RETURN   	1 2
	97	[1156]	RETURN   	0 1

function <./argparse.lua:1158,1182> (55 instructions, 220 bytes at 0x7fe3c2c0ebb0)
2 params, 8 slots, 0 upvalues, 3 locals, 18 constants, 1 function
	1	[1159]	TEST     	1 0 0
	2	[1159]	JMP      	20	; to 23
	3	[1160]	GETGLOBAL	2 -1	; assert
	4	[1160]	GETGLOBAL	3 -2	; type
	5	[1160]	MOVE     	4 1
	6	[1160]	CALL     	3 2 2
	7	[1160]	EQ       	1 3 -3	; - "string"
	8	[1160]	JMP      	6	; to 15
	9	[1160]	GETGLOBAL	3 -2	; type
	10	[1160]	MOVE     	4 1
	11	[1160]	CALL     	3 2 2
	12	[1160]	EQ       	1 3 -4	; - "table"
	13	[1160]	JMP      	1	; to 15
	14	[1160]	LOADBOOL 	3 0 1
	15	[1160]	LOADBOOL 	3 1 0
	16	[1161]	LOADK    	4 -5	; "bad argument #1 to 'add_complete' (string or table expected, got %s)"
	17	[1161]	SELF     	4 4 -6	; "format"
	18	[1161]	GETGLOBAL	6 -2	; type
	19	[1161]	MOVE     	7 1
	20	[1161]	CALL     	6 2 0
	21	[1161]	CALL     	4 0 0
	22	[1160]	CALL     	2 0 1
	23	[1164]	SELF     	2 0 -7	; "option"
	24	[1164]	CALL     	2 2 2
	25	[1165]	SELF     	2 2 -8	; "description"
	26	[1165]	LOADK    	4 -9	; "Output a shell completion script for the specified shell."
	27	[1165]	CALL     	2 3 2
	28	[1166]	SELF     	2 2 -10	; "args"
	29	[1166]	LOADK    	4 -11	; 1
	30	[1166]	CALL     	2 3 2
	31	[1167]	SELF     	2 2 -12	; "choices"
	32	[1167]	NEWTABLE 	4 3 0
	33	[1167]	LOADK    	5 -13	; "bash"
	34	[1167]	LOADK    	6 -14	; "zsh"
	35	[1167]	LOADK    	7 -15	; "fish"
	36	[1167]	SETLIST  	4 3 1	; 1
	37	[1167]	CALL     	2 3 2
	38	[1168]	SELF     	2 2 -16	; "action"
	39	[1171]	CLOSURE  	4 0	; 0x7fe3c2c13030
	40	[1171]	MOVE     	0 0
	41	[1168]	CALL     	2 3 2
	42	[1173]	TEST     	1 0 0
	43	[1173]	JMP      	4	; to 48
	44	[1174]	MOVE     	3 2
	45	[1174]	MOVE     	4 1
	46	[1174]	CALL     	3 2 2
	47	[1174]	MOVE     	2 3
	48	[1177]	GETTABLE 	3 2 -17	; "_name"
	49	[1177]	TEST     	3 0 1
	50	[1177]	JMP      	3	; to 54
	51	[1178]	MOVE     	3 2
	52	[1178]	LOADK    	4 -18	; "--completion"
	53	[1178]	CALL     	3 2 1
	54	[1181]	RETURN   	0 2
	55	[1182]	RETURN   	0 1

function <./argparse.lua:1168,1171> (16 instructions, 64 bytes at 0x7fe3c2c13030)
3 params, 8 slots, 1 upvalue, 3 locals, 7 constants, 0 functions
	1	[1169]	GETGLOBAL	3 -1	; io
	2	[1169]	GETTABLE 	3 3 -2	; "write"
	3	[1169]	GETUPVAL 	4 0	; self
	4	[1169]	LOADK    	5 -3	; "get_"
	5	[1169]	MOVE     	6 2
	6	[1169]	LOADK    	7 -4	; "_complete"
	7	[1169]	CONCAT   	5 5 7
	8	[1169]	GETTABLE 	4 4 5
	9	[1169]	GETUPVAL 	5 0	; self
	10	[1169]	CALL     	4 2 0
	11	[1169]	CALL     	3 0 1
	12	[1170]	GETGLOBAL	3 -5	; os
	13	[1170]	GETTABLE 	3 3 -6	; "exit"
	14	[1170]	LOADK    	4 -7	; 0
	15	[1170]	CALL     	3 2 1
	16	[1171]	RETURN   	0 1

function <./argparse.lua:1184,1209> (58 instructions, 232 bytes at 0x7fe3c2c11950)
2 params, 9 slots, 0 upvalues, 3 locals, 19 constants, 1 function
	1	[1185]	TEST     	1 0 0
	2	[1185]	JMP      	20	; to 23
	3	[1186]	GETGLOBAL	2 -1	; assert
	4	[1186]	GETGLOBAL	3 -2	; type
	5	[1186]	MOVE     	4 1
	6	[1186]	CALL     	3 2 2
	7	[1186]	EQ       	1 3 -3	; - "string"
	8	[1186]	JMP      	6	; to 15
	9	[1186]	GETGLOBAL	3 -2	; type
	10	[1186]	MOVE     	4 1
	11	[1186]	CALL     	3 2 2
	12	[1186]	EQ       	1 3 -4	; - "table"
	13	[1186]	JMP      	1	; to 15
	14	[1186]	LOADBOOL 	3 0 1
	15	[1186]	LOADBOOL 	3 1 0
	16	[1187]	LOADK    	4 -5	; "bad argument #1 to 'add_complete_command' (string or table expected, got %s)"
	17	[1187]	SELF     	4 4 -6	; "format"
	18	[1187]	GETGLOBAL	6 -2	; type
	19	[1187]	MOVE     	7 1
	20	[1187]	CALL     	6 2 0
	21	[1187]	CALL     	4 0 0
	22	[1186]	CALL     	2 0 1
	23	[1190]	SELF     	2 0 -7	; "command"
	24	[1190]	CALL     	2 2 2
	25	[1191]	SELF     	2 2 -8	; "description"
	26	[1191]	LOADK    	4 -9	; "Output a shell completion script."
	27	[1191]	CALL     	2 3 2
	28	[1192]	SELF     	3 2 -10	; "argument"
	29	[1192]	LOADK    	5 -11	; "shell"
	30	[1192]	CALL     	3 3 2
	31	[1193]	SELF     	3 3 -8	; "description"
	32	[1193]	LOADK    	5 -12	; "The shell to output a completion script for."
	33	[1193]	CALL     	3 3 2
	34	[1194]	SELF     	3 3 -13	; "choices"
	35	[1194]	NEWTABLE 	5 3 0
	36	[1194]	LOADK    	6 -14	; "bash"
	37	[1194]	LOADK    	7 -15	; "zsh"
	38	[1194]	LOADK    	8 -16	; "fish"
	39	[1194]	SETLIST  	5 3 1	; 1
	40	[1194]	CALL     	3 3 2
	41	[1195]	SELF     	3 3 -17	; "action"
	42	[1198]	CLOSURE  	5 0	; 0x7fe3c2c156b0
	43	[1198]	MOVE     	0 0
	44	[1195]	CALL     	3 3 1
	45	[1200]	TEST     	1 0 0
	46	[1200]	JMP      	4	; to 51
	47	[1201]	MOVE     	3 2
	48	[1201]	MOVE     	4 1
	49	[1201]	CALL     	3 2 2
	50	[1201]	MOVE     	2 3
	51	[1204]	GETTABLE 	3 2 -18	; "_name"
	52	[1204]	TEST     	3 0 1
	53	[1204]	JMP      	3	; to 57
	54	[1205]	MOVE     	3 2
	55	[1205]	LOADK    	4 -19	; "completion"
	56	[1205]	CALL     	3 2 1
	57	[1208]	RETURN   	0 2
	58	[1209]	RETURN   	0 1

function <./argparse.lua:1195,1198> (16 instructions, 64 bytes at 0x7fe3c2c156b0)
3 params, 8 slots, 1 upvalue, 3 locals, 7 constants, 0 functions
	1	[1196]	GETGLOBAL	3 -1	; io
	2	[1196]	GETTABLE 	3 3 -2	; "write"
	3	[1196]	GETUPVAL 	4 0	; self
	4	[1196]	LOADK    	5 -3	; "get_"
	5	[1196]	MOVE     	6 2
	6	[1196]	LOADK    	7 -4	; "_complete"
	7	[1196]	CONCAT   	5 5 7
	8	[1196]	GETTABLE 	4 4 5
	9	[1196]	GETUPVAL 	5 0	; self
	10	[1196]	CALL     	4 2 0
	11	[1196]	CALL     	3 0 1
	12	[1197]	GETGLOBAL	3 -5	; os
	13	[1197]	GETTABLE 	3 3 -6	; "exit"
	14	[1197]	LOADK    	4 -7	; 0
	15	[1197]	CALL     	3 2 1
	16	[1198]	RETURN   	0 1

function <./argparse.lua:1211,1213> (12 instructions, 48 bytes at 0x7fe3c2c163b0)
1 param, 5 slots, 0 upvalues, 1 local, 5 constants, 0 functions
	1	[1212]	SELF     	1 0 -1	; "gsub"
	2	[1212]	LOADK    	3 -2	; "[/\\]*$"
	3	[1212]	LOADK    	4 -3	; ""
	4	[1212]	CALL     	1 4 2
	5	[1212]	SELF     	1 1 -4	; "match"
	6	[1212]	LOADK    	3 -5	; ".*[/\\]([^/\\]*)"
	7	[1212]	CALL     	1 3 2
	8	[1212]	TEST     	1 0 1
	9	[1212]	JMP      	1	; to 11
	10	[1212]	MOVE     	1 0
	11	[1212]	RETURN   	1 2
	12	[1213]	RETURN   	0 1

function <./argparse.lua:1215,1218> (14 instructions, 56 bytes at 0x7fe3c2c16850)
1 param, 5 slots, 0 upvalues, 2 locals, 4 constants, 0 functions
	1	[1216]	SELF     	1 0 -1	; "_get_description"
	2	[1216]	CALL     	1 2 2
	3	[1216]	SELF     	1 1 -2	; "match"
	4	[1216]	LOADK    	3 -3	; "^(.-)%.%s"
	5	[1216]	CALL     	1 3 2
	6	[1217]	TESTSET  	2 1 1
	7	[1217]	JMP      	5	; to 13
	8	[1217]	SELF     	2 0 -1	; "_get_description"
	9	[1217]	CALL     	2 2 2
	10	[1217]	SELF     	2 2 -2	; "match"
	11	[1217]	LOADK    	4 -4	; "^(.-)%.?$"
	12	[1217]	CALL     	2 3 2
	13	[1217]	RETURN   	2 2
	14	[1218]	RETURN   	0 1

function <./argparse.lua:1220,1228> (25 instructions, 100 bytes at 0x7fe3c2c16d50)
1 param, 15 slots, 0 upvalues, 12 locals, 7 constants, 0 functions
	1	[1221]	NEWTABLE 	1 0 0
	2	[1222]	GETGLOBAL	2 -1	; ipairs
	3	[1222]	GETTABLE 	3 0 -2	; "_options"
	4	[1222]	CALL     	2 2 4
	5	[1222]	JMP      	11	; to 17
	6	[1223]	GETGLOBAL	7 -1	; ipairs
	7	[1223]	GETTABLE 	8 6 -3	; "_aliases"
	8	[1223]	CALL     	7 2 4
	9	[1223]	JMP      	5	; to 15
	10	[1224]	GETGLOBAL	12 -4	; table
	11	[1224]	GETTABLE 	12 12 -5	; "insert"
	12	[1224]	MOVE     	13 1
	13	[1224]	MOVE     	14 11
	14	[1224]	CALL     	12 3 1
	15	[1223]	TFORLOOP 	7 2
	16	[1224]	JMP      	-7	; to 10
	17	[1222]	TFORLOOP 	2 2
	18	[1225]	JMP      	-13	; to 6
	19	[1227]	GETGLOBAL	2 -4	; table
	20	[1227]	GETTABLE 	2 2 -6	; "concat"
	21	[1227]	MOVE     	3 1
	22	[1227]	LOADK    	4 -7	; " "
	23	[1227]	TAILCALL 	2 3 0
	24	[1227]	RETURN   	2 0
	25	[1228]	RETURN   	0 1

function <./argparse.lua:1230,1238> (25 instructions, 100 bytes at 0x7fe3c2c17400)
1 param, 15 slots, 0 upvalues, 12 locals, 7 constants, 0 functions
	1	[1231]	NEWTABLE 	1 0 0
	2	[1232]	GETGLOBAL	2 -1	; ipairs
	3	[1232]	GETTABLE 	3 0 -2	; "_commands"
	4	[1232]	CALL     	2 2 4
	5	[1232]	JMP      	11	; to 17
	6	[1233]	GETGLOBAL	7 -1	; ipairs
	7	[1233]	GETTABLE 	8 6 -3	; "_aliases"
	8	[1233]	CALL     	7 2 4
	9	[1233]	JMP      	5	; to 15
	10	[1234]	GETGLOBAL	12 -4	; table
	11	[1234]	GETTABLE 	12 12 -5	; "insert"
	12	[1234]	MOVE     	13 1
	13	[1234]	MOVE     	14 11
	14	[1234]	CALL     	12 3 1
	15	[1233]	TFORLOOP 	7 2
	16	[1234]	JMP      	-7	; to 10
	17	[1232]	TFORLOOP 	2 2
	18	[1235]	JMP      	-13	; to 6
	19	[1237]	GETGLOBAL	2 -4	; table
	20	[1237]	GETTABLE 	2 2 -6	; "concat"
	21	[1237]	MOVE     	3 1
	22	[1237]	LOADK    	4 -7	; " "
	23	[1237]	TAILCALL 	2 3 0
	24	[1237]	RETURN   	2 0
	25	[1238]	RETURN   	0 1

function <./argparse.lua:1240,1262> (105 instructions, 420 bytes at 0x7fe3c2c17770)
3 params, 16 slots, 0 upvalues, 10 locals, 23 constants, 0 functions
	1	[1241]	NEWTABLE 	3 0 0
	2	[1242]	GETGLOBAL	4 -1	; ipairs
	3	[1242]	GETTABLE 	5 0 -2	; "_options"
	4	[1242]	CALL     	4 2 4
	5	[1242]	JMP      	65	; to 71
	6	[1243]	GETTABLE 	9 8 -3	; "_choices"
	7	[1243]	TEST     	9 0 1
	8	[1243]	JMP      	3	; to 12
	9	[1243]	GETTABLE 	9 8 -4	; "_minargs"
	10	[1243]	LT       	0 -5 9	; 0 -
	11	[1243]	JMP      	59	; to 71
	12	[1244]	LOADNIL  	9 9
	13	[1245]	GETTABLE 	10 8 -3	; "_choices"
	14	[1245]	TEST     	10 0 0
	15	[1245]	JMP      	9	; to 25
	16	[1246]	LOADK    	10 -6	; "COMPREPLY=($(compgen -W \""
	17	[1246]	GETGLOBAL	11 -7	; table
	18	[1246]	GETTABLE 	11 11 -8	; "concat"
	19	[1246]	GETTABLE 	12 8 -3	; "_choices"
	20	[1246]	LOADK    	13 -9	; " "
	21	[1246]	CALL     	11 3 2
	22	[1246]	LOADK    	12 -10	; "\" -- \"$cur\"))"
	23	[1246]	CONCAT   	9 10 12
	24	[1246]	JMP      	1	; to 26
	25	[1248]	LOADK    	9 -11	; "COMPREPLY=($(compgen -f -- \"$cur\"))"
	26	[1250]	GETGLOBAL	10 -7	; table
	27	[1250]	GETTABLE 	10 10 -12	; "insert"
	28	[1250]	MOVE     	11 3
	29	[1250]	LOADK    	12 -9	; " "
	30	[1250]	SELF     	12 12 -13	; "rep"
	31	[1250]	ADD      	14 2 -14	; - 4
	32	[1250]	CALL     	12 3 2
	33	[1250]	GETGLOBAL	13 -7	; table
	34	[1250]	GETTABLE 	13 13 -8	; "concat"
	35	[1250]	GETTABLE 	14 8 -15	; "_aliases"
	36	[1250]	LOADK    	15 -16	; "|"
	37	[1250]	CALL     	13 3 2
	38	[1250]	LOADK    	14 -17	; ")"
	39	[1250]	CONCAT   	12 12 14
	40	[1250]	CALL     	10 3 1
	41	[1251]	GETGLOBAL	10 -7	; table
	42	[1251]	GETTABLE 	10 10 -12	; "insert"
	43	[1251]	MOVE     	11 3
	44	[1251]	LOADK    	12 -9	; " "
	45	[1251]	SELF     	12 12 -13	; "rep"
	46	[1251]	ADD      	14 2 -18	; - 8
	47	[1251]	CALL     	12 3 2
	48	[1251]	MOVE     	13 9
	49	[1251]	CONCAT   	12 12 13
	50	[1251]	CALL     	10 3 1
	51	[1252]	GETGLOBAL	10 -7	; table
	52	[1252]	GETTABLE 	10 10 -12	; "insert"
	53	[1252]	MOVE     	11 3
	54	[1252]	LOADK    	12 -9	; " "
	55	[1252]	SELF     	12 12 -13	; "rep"
	56	[1252]	ADD      	14 2 -18	; - 8
	57	[1252]	CALL     	12 3 2
	58	[1252]	LOADK    	13 -19	; "return 0"
	59	[1252]	CONCAT   	12 12 13
	60	[1252]	CALL     	10 3 1
	61	[1253]	GETGLOBAL	10 -7	; table
	62	[1253]	GETTABLE 	10 10 -12	; "insert"
	63	[1253]	MOVE     	11 3
	64	[1253]	LOADK    	12 -9	; " "
	65	[1253]	SELF     	12 12 -13	; "rep"
	66	[1253]	ADD      	14 2 -18	; - 8
	67	[1253]	CALL     	12 3 2
	68	[1253]	LOADK    	13 -20	; ";;"
	69	[1253]	CONCAT   	12 12 13
	70	[1253]	CALL     	10 3 1
	71	[1242]	TFORLOOP 	4 2
	72	[1254]	JMP      	-67	; to 6
	73	[1257]	LEN      	4 3
	74	[1257]	LT       	0 -5 4	; 0 -
	75	[1257]	JMP      	29	; to 105
	76	[1258]	GETGLOBAL	4 -7	; table
	77	[1258]	GETTABLE 	4 4 -12	; "insert"
	78	[1258]	MOVE     	5 1
	79	[1258]	LOADK    	6 -9	; " "
	80	[1258]	SELF     	6 6 -13	; "rep"
	81	[1258]	MOVE     	8 2
	82	[1258]	CALL     	6 3 2
	83	[1258]	LOADK    	7 -21	; "case \"$prev\" in"
	84	[1258]	CONCAT   	6 6 7
	85	[1258]	CALL     	4 3 1
	86	[1259]	GETGLOBAL	4 -7	; table
	87	[1259]	GETTABLE 	4 4 -12	; "insert"
	88	[1259]	MOVE     	5 1
	89	[1259]	GETGLOBAL	6 -7	; table
	90	[1259]	GETTABLE 	6 6 -8	; "concat"
	91	[1259]	MOVE     	7 3
	92	[1259]	LOADK    	8 -22	; "\n"
	93	[1259]	CALL     	6 3 0
	94	[1259]	CALL     	4 0 1
	95	[1260]	GETGLOBAL	4 -7	; table
	96	[1260]	GETTABLE 	4 4 -12	; "insert"
	97	[1260]	MOVE     	5 1
	98	[1260]	LOADK    	6 -9	; " "
	99	[1260]	SELF     	6 6 -13	; "rep"
	100	[1260]	MOVE     	8 2
	101	[1260]	CALL     	6 3 2
	102	[1260]	LOADK    	7 -23	; "esac\n"
	103	[1260]	CONCAT   	6 6 7
	104	[1260]	CALL     	4 3 1
	105	[1262]	RETURN   	0 1

function <./argparse.lua:1264,1288> (142 instructions, 568 bytes at 0x7fe3c2c17870)
3 params, 14 slots, 0 upvalues, 8 locals, 29 constants, 0 functions
	1	[1265]	GETTABLE 	3 0 -1	; "_commands"
	2	[1265]	LEN      	3 3
	3	[1265]	EQ       	0 3 -2	; - 0
	4	[1265]	JMP      	1	; to 6
	5	[1266]	RETURN   	0 1
	6	[1269]	GETGLOBAL	3 -3	; table
	7	[1269]	GETTABLE 	3 3 -4	; "insert"
	8	[1269]	MOVE     	4 1
	9	[1269]	LOADK    	5 -5	; " "
	10	[1269]	SELF     	5 5 -6	; "rep"
	11	[1269]	MOVE     	7 2
	12	[1269]	CALL     	5 3 2
	13	[1269]	LOADK    	6 -7	; "args=(\"${args[@]:1}\")"
	14	[1269]	CONCAT   	5 5 6
	15	[1269]	CALL     	3 3 1
	16	[1270]	GETGLOBAL	3 -3	; table
	17	[1270]	GETTABLE 	3 3 -4	; "insert"
	18	[1270]	MOVE     	4 1
	19	[1270]	LOADK    	5 -5	; " "
	20	[1270]	SELF     	5 5 -6	; "rep"
	21	[1270]	MOVE     	7 2
	22	[1270]	CALL     	5 3 2
	23	[1270]	LOADK    	6 -8	; "for arg in \"${args[@]}\"; do"
	24	[1270]	CONCAT   	5 5 6
	25	[1270]	CALL     	3 3 1
	26	[1271]	GETGLOBAL	3 -3	; table
	27	[1271]	GETTABLE 	3 3 -4	; "insert"
	28	[1271]	MOVE     	4 1
	29	[1271]	LOADK    	5 -5	; " "
	30	[1271]	SELF     	5 5 -6	; "rep"
	31	[1271]	ADD      	7 2 -9	; - 4
	32	[1271]	CALL     	5 3 2
	33	[1271]	LOADK    	6 -10	; "case \"$arg\" in"
	34	[1271]	CONCAT   	5 5 6
	35	[1271]	CALL     	3 3 1
	36	[1273]	GETGLOBAL	3 -11	; ipairs
	37	[1273]	GETTABLE 	4 0 -1	; "_commands"
	38	[1273]	CALL     	3 2 4
	39	[1273]	JMP      	80	; to 120
	40	[1274]	GETGLOBAL	8 -3	; table
	41	[1274]	GETTABLE 	8 8 -4	; "insert"
	42	[1274]	MOVE     	9 1
	43	[1274]	LOADK    	10 -5	; " "
	44	[1274]	SELF     	10 10 -6	; "rep"
	45	[1274]	ADD      	12 2 -12	; - 8
	46	[1274]	CALL     	10 3 2
	47	[1274]	GETGLOBAL	11 -3	; table
	48	[1274]	GETTABLE 	11 11 -13	; "concat"
	49	[1274]	GETTABLE 	12 7 -14	; "_aliases"
	50	[1274]	LOADK    	13 -15	; "|"
	51	[1274]	CALL     	11 3 2
	52	[1274]	LOADK    	12 -16	; ")"
	53	[1274]	CONCAT   	10 10 12
	54	[1274]	CALL     	8 3 1
	55	[1275]	GETTABLE 	8 0 -17	; "_parent"
	56	[1275]	TEST     	8 0 0
	57	[1275]	JMP      	13	; to 71
	58	[1276]	GETGLOBAL	8 -3	; table
	59	[1276]	GETTABLE 	8 8 -4	; "insert"
	60	[1276]	MOVE     	9 1
	61	[1276]	LOADK    	10 -5	; " "
	62	[1276]	SELF     	10 10 -6	; "rep"
	63	[1276]	ADD      	12 2 -18	; - 12
	64	[1276]	CALL     	10 3 2
	65	[1276]	LOADK    	11 -19	; "cmd=\"$cmd "
	66	[1276]	GETTABLE 	12 7 -20	; "_name"
	67	[1276]	LOADK    	13 -21	; "\""
	68	[1276]	CONCAT   	10 10 13
	69	[1276]	CALL     	8 3 1
	70	[1276]	JMP      	12	; to 83
	71	[1278]	GETGLOBAL	8 -3	; table
	72	[1278]	GETTABLE 	8 8 -4	; "insert"
	73	[1278]	MOVE     	9 1
	74	[1278]	LOADK    	10 -5	; " "
	75	[1278]	SELF     	10 10 -6	; "rep"
	76	[1278]	ADD      	12 2 -18	; - 12
	77	[1278]	CALL     	10 3 2
	78	[1278]	LOADK    	11 -22	; "cmd=\""
	79	[1278]	GETTABLE 	12 7 -20	; "_name"
	80	[1278]	LOADK    	13 -21	; "\""
	81	[1278]	CONCAT   	10 10 13
	82	[1278]	CALL     	8 3 1
	83	[1280]	GETGLOBAL	8 -3	; table
	84	[1280]	GETTABLE 	8 8 -4	; "insert"
	85	[1280]	MOVE     	9 1
	86	[1280]	LOADK    	10 -5	; " "
	87	[1280]	SELF     	10 10 -6	; "rep"
	88	[1280]	ADD      	12 2 -18	; - 12
	89	[1280]	CALL     	10 3 2
	90	[1280]	LOADK    	11 -23	; "opts=\"$opts "
	91	[1280]	SELF     	12 7 -24	; "_get_options"
	92	[1280]	CALL     	12 2 2
	93	[1280]	LOADK    	13 -21	; "\""
	94	[1280]	CONCAT   	10 10 13
	95	[1280]	CALL     	8 3 1
	96	[1281]	SELF     	8 7 -25	; "_bash_get_cmd"
	97	[1281]	MOVE     	10 1
	98	[1281]	ADD      	11 2 -18	; - 12
	99	[1281]	CALL     	8 4 1
	100	[1282]	GETGLOBAL	8 -3	; table
	101	[1282]	GETTABLE 	8 8 -4	; "insert"
	102	[1282]	MOVE     	9 1
	103	[1282]	LOADK    	10 -5	; " "
	104	[1282]	SELF     	10 10 -6	; "rep"
	105	[1282]	ADD      	12 2 -18	; - 12
	106	[1282]	CALL     	10 3 2
	107	[1282]	LOADK    	11 -26	; "break"
	108	[1282]	CONCAT   	10 10 11
	109	[1282]	CALL     	8 3 1
	110	[1283]	GETGLOBAL	8 -3	; table
	111	[1283]	GETTABLE 	8 8 -4	; "insert"
	112	[1283]	MOVE     	9 1
	113	[1283]	LOADK    	10 -5	; " "
	114	[1283]	SELF     	10 10 -6	; "rep"
	115	[1283]	ADD      	12 2 -18	; - 12
	116	[1283]	CALL     	10 3 2
	117	[1283]	LOADK    	11 -27	; ";;"
	118	[1283]	CONCAT   	10 10 11
	119	[1283]	CALL     	8 3 1
	120	[1273]	TFORLOOP 	3 2
	121	[1283]	JMP      	-82	; to 40
	122	[1286]	GETGLOBAL	3 -3	; table
	123	[1286]	GETTABLE 	3 3 -4	; "insert"
	124	[1286]	MOVE     	4 1
	125	[1286]	LOADK    	5 -5	; " "
	126	[1286]	SELF     	5 5 -6	; "rep"
	127	[1286]	ADD      	7 2 -9	; - 4
	128	[1286]	CALL     	5 3 2
	129	[1286]	LOADK    	6 -28	; "esac"
	130	[1286]	CONCAT   	5 5 6
	131	[1286]	CALL     	3 3 1
	132	[1287]	GETGLOBAL	3 -3	; table
	133	[1287]	GETTABLE 	3 3 -4	; "insert"
	134	[1287]	MOVE     	4 1
	135	[1287]	LOADK    	5 -5	; " "
	136	[1287]	SELF     	5 5 -6	; "rep"
	137	[1287]	MOVE     	7 2
	138	[1287]	CALL     	5 3 2
	139	[1287]	LOADK    	6 -29	; "done"
	140	[1287]	CONCAT   	5 5 6
	141	[1287]	CALL     	3 3 1
	142	[1288]	RETURN   	0 1

function <./argparse.lua:1290,1312> (89 instructions, 356 bytes at 0x7fe3c2d040f0)
2 params, 11 slots, 0 upvalues, 8 locals, 22 constants, 0 functions
	1	[1291]	NEWTABLE 	2 0 0
	2	[1292]	GETTABLE 	3 0 -1	; "_parent"
	3	[1292]	TEST     	3 0 0
	4	[1292]	JMP      	4	; to 9
	5	[1293]	SELF     	3 0 -2	; "_bash_option_args"
	6	[1293]	MOVE     	5 2
	7	[1293]	LOADK    	6 -3	; 12
	8	[1293]	CALL     	3 4 1
	9	[1295]	GETTABLE 	3 0 -4	; "_commands"
	10	[1295]	LEN      	3 3
	11	[1295]	LT       	0 -5 3	; 0 -
	12	[1295]	JMP      	14	; to 27
	13	[1296]	GETGLOBAL	3 -6	; table
	14	[1296]	GETTABLE 	3 3 -7	; "insert"
	15	[1296]	MOVE     	4 2
	16	[1296]	LOADK    	5 -8	; " "
	17	[1296]	SELF     	5 5 -9	; "rep"
	18	[1296]	LOADK    	7 -3	; 12
	19	[1296]	CALL     	5 3 2
	20	[1296]	LOADK    	6 -10	; "COMPREPLY=($(compgen -W \""
	21	[1296]	SELF     	7 0 -11	; "_get_commands"
	22	[1296]	CALL     	7 2 2
	23	[1296]	LOADK    	8 -12	; "\" -- \"$cur\"))"
	24	[1296]	CONCAT   	5 5 8
	25	[1296]	CALL     	3 3 1
	26	[1296]	JMP      	17	; to 44
	27	[1297]	GETTABLE 	3 0 -13	; "_is_help_command"
	28	[1297]	TEST     	3 0 0
	29	[1297]	JMP      	14	; to 44
	30	[1298]	GETGLOBAL	3 -6	; table
	31	[1298]	GETTABLE 	3 3 -7	; "insert"
	32	[1298]	MOVE     	4 2
	33	[1298]	LOADK    	5 -8	; " "
	34	[1298]	SELF     	5 5 -9	; "rep"
	35	[1298]	LOADK    	7 -3	; 12
	36	[1298]	CALL     	5 3 2
	37	[1300]	LOADK    	6 -10	; "COMPREPLY=($(compgen -W \""
	38	[1300]	GETTABLE 	7 0 -1	; "_parent"
	39	[1300]	SELF     	7 7 -11	; "_get_commands"
	40	[1300]	CALL     	7 2 2
	41	[1301]	LOADK    	8 -12	; "\" -- \"$cur\"))"
	42	[1301]	CONCAT   	5 5 8
	43	[1298]	CALL     	3 3 1
	44	[1303]	LEN      	3 2
	45	[1303]	LT       	0 -5 3	; 0 -
	46	[1303]	JMP      	33	; to 80
	47	[1304]	GETGLOBAL	3 -6	; table
	48	[1304]	GETTABLE 	3 3 -7	; "insert"
	49	[1304]	MOVE     	4 1
	50	[1304]	LOADK    	5 -8	; " "
	51	[1304]	SELF     	5 5 -9	; "rep"
	52	[1304]	LOADK    	7 -14	; 8
	53	[1304]	CALL     	5 3 2
	54	[1304]	LOADK    	6 -15	; "'"
	55	[1304]	SELF     	7 0 -16	; "_get_fullname"
	56	[1304]	LOADBOOL 	9 1 0
	57	[1304]	CALL     	7 3 2
	58	[1304]	LOADK    	8 -17	; "')"
	59	[1304]	CONCAT   	5 5 8
	60	[1304]	CALL     	3 3 1
	61	[1305]	GETGLOBAL	3 -6	; table
	62	[1305]	GETTABLE 	3 3 -7	; "insert"
	63	[1305]	MOVE     	4 1
	64	[1305]	GETGLOBAL	5 -6	; table
	65	[1305]	GETTABLE 	5 5 -18	; "concat"
	66	[1305]	MOVE     	6 2
	67	[1305]	LOADK    	7 -19	; "\n"
	68	[1305]	CALL     	5 3 0
	69	[1305]	CALL     	3 0 1
	70	[1306]	GETGLOBAL	3 -6	; table
	71	[1306]	GETTABLE 	3 3 -7	; "insert"
	72	[1306]	MOVE     	4 1
	73	[1306]	LOADK    	5 -8	; " "
	74	[1306]	SELF     	5 5 -9	; "rep"
	75	[1306]	LOADK    	7 -3	; 12
	76	[1306]	CALL     	5 3 2
	77	[1306]	LOADK    	6 -20	; ";;"
	78	[1306]	CONCAT   	5 5 6
	79	[1306]	CALL     	3 3 1
	80	[1309]	GETGLOBAL	3 -21	; ipairs
	81	[1309]	GETTABLE 	4 0 -4	; "_commands"
	82	[1309]	CALL     	3 2 4
	83	[1309]	JMP      	3	; to 87
	84	[1310]	SELF     	8 7 -22	; "_bash_cmd_completions"
	85	[1310]	MOVE     	10 1
	86	[1310]	CALL     	8 3 1
	87	[1309]	TFORLOOP 	3 2
	88	[1310]	JMP      	-5	; to 84
	89	[1312]	RETURN   	0 1

function <./argparse.lua:1314,1346> (72 instructions, 288 bytes at 0x7fe3c2d04700)
1 param, 8 slots, 1 upvalue, 2 locals, 23 constants, 0 functions
	1	[1315]	GETUPVAL 	1 0	; base_name
	2	[1315]	GETTABLE 	2 0 -2	; "_name"
	3	[1315]	CALL     	1 2 2
	4	[1315]	SETTABLE 	0 -1 1	; "_basename" -
	5	[1316]	GETGLOBAL	1 -3	; assert
	6	[1316]	SELF     	2 0 -4	; "_is_shell_safe"
	7	[1316]	CALL     	2 2 0
	8	[1316]	CALL     	1 0 1
	9	[1317]	NEWTABLE 	1 0 0
	10	[1325]	LOADK    	2 -5	; "_%s() {\n    local IFS=$' \\t\\n'\n    local args cur prev cmd opts arg\n    args=(\"${COMP_WORDS[@]}\")\n    cur=\"${COMP_WORDS[COMP_CWORD]}\"\n    prev=\"${COMP_WORDS[COMP_CWORD-1]}\"\n    opts=\"%s\"\n"
	11	[1325]	SELF     	2 2 -6	; "format"
	12	[1325]	GETTABLE 	4 0 -1	; "_basename"
	13	[1325]	SELF     	5 0 -7	; "_get_options"
	14	[1325]	CALL     	5 2 0
	15	[1325]	CALL     	2 0 0
	16	[1325]	SETLIST  	1 0 1	; 1
	17	[1327]	SELF     	2 0 -8	; "_bash_option_args"
	18	[1327]	MOVE     	4 1
	19	[1327]	LOADK    	5 -9	; 4
	20	[1327]	CALL     	2 4 1
	21	[1328]	SELF     	2 0 -10	; "_bash_get_cmd"
	22	[1328]	MOVE     	4 1
	23	[1328]	LOADK    	5 -9	; 4
	24	[1328]	CALL     	2 4 1
	25	[1329]	GETTABLE 	2 0 -11	; "_commands"
	26	[1329]	LEN      	2 2
	27	[1329]	LT       	0 -12 2	; 0 -
	28	[1329]	JMP      	28	; to 57
	29	[1330]	GETGLOBAL	2 -13	; table
	30	[1330]	GETTABLE 	2 2 -14	; "insert"
	31	[1330]	MOVE     	3 1
	32	[1330]	LOADK    	4 -15	; ""
	33	[1330]	CALL     	2 3 1
	34	[1331]	GETGLOBAL	2 -13	; table
	35	[1331]	GETTABLE 	2 2 -14	; "insert"
	36	[1331]	MOVE     	3 1
	37	[1331]	LOADK    	4 -16	; " "
	38	[1331]	SELF     	4 4 -17	; "rep"
	39	[1331]	LOADK    	6 -9	; 4
	40	[1331]	CALL     	4 3 2
	41	[1331]	LOADK    	5 -18	; "case \"$cmd\" in"
	42	[1331]	CONCAT   	4 4 5
	43	[1331]	CALL     	2 3 1
	44	[1332]	SELF     	2 0 -19	; "_bash_cmd_completions"
	45	[1332]	MOVE     	4 1
	46	[1332]	CALL     	2 3 1
	47	[1333]	GETGLOBAL	2 -13	; table
	48	[1333]	GETTABLE 	2 2 -14	; "insert"
	49	[1333]	MOVE     	3 1
	50	[1333]	LOADK    	4 -16	; " "
	51	[1333]	SELF     	4 4 -17	; "rep"
	52	[1333]	LOADK    	6 -9	; 4
	53	[1333]	CALL     	4 3 2
	54	[1333]	LOADK    	5 -20	; "esac\n"
	55	[1333]	CONCAT   	4 4 5
	56	[1333]	CALL     	2 3 1
	57	[1336]	GETGLOBAL	2 -13	; table
	58	[1336]	GETTABLE 	2 2 -14	; "insert"
	59	[1336]	MOVE     	3 1
	60	[1343]	LOADK    	4 -21	; "    if [[ \"$cur\" = -* ]]; then\n        COMPREPLY=($(compgen -W \"$opts\" -- \"$cur\"))\n    fi\n}\n\ncomplete -F _%s -o bashdefault -o default %s\n"
	61	[1343]	SELF     	4 4 -6	; "format"
	62	[1343]	GETTABLE 	6 0 -1	; "_basename"
	63	[1343]	GETTABLE 	7 0 -1	; "_basename"
	64	[1343]	CALL     	4 4 0
	65	[1336]	CALL     	2 0 1
	66	[1345]	GETGLOBAL	2 -13	; table
	67	[1345]	GETTABLE 	2 2 -22	; "concat"
	68	[1345]	MOVE     	3 1
	69	[1345]	LOADK    	4 -23	; "\n"
	70	[1345]	TAILCALL 	2 3 0
	71	[1345]	RETURN   	2 0
	72	[1346]	RETURN   	0 1

function <./argparse.lua:1348,1416> (294 instructions, 1176 bytes at 0x7fe3c2d04d00)
4 params, 20 slots, 1 upvalue, 21 locals, 51 constants, 0 functions
	1	[1349]	GETTABLE 	4 0 -1	; "_parent"
	2	[1349]	TEST     	4 0 0
	3	[1349]	JMP      	21	; to 25
	4	[1350]	GETGLOBAL	4 -2	; table
	5	[1350]	GETTABLE 	4 4 -3	; "insert"
	6	[1350]	MOVE     	5 1
	7	[1350]	LOADK    	6 -4	; " "
	8	[1350]	SELF     	6 6 -5	; "rep"
	9	[1350]	MOVE     	8 3
	10	[1350]	CALL     	6 3 2
	11	[1350]	LOADK    	7 -6	; "options=("
	12	[1350]	CONCAT   	6 6 7
	13	[1350]	CALL     	4 3 1
	14	[1351]	GETGLOBAL	4 -2	; table
	15	[1351]	GETTABLE 	4 4 -3	; "insert"
	16	[1351]	MOVE     	5 1
	17	[1351]	LOADK    	6 -4	; " "
	18	[1351]	SELF     	6 6 -5	; "rep"
	19	[1351]	ADD      	8 3 -7	; - 2
	20	[1351]	CALL     	6 3 2
	21	[1351]	LOADK    	7 -8	; "$options"
	22	[1351]	CONCAT   	6 6 7
	23	[1351]	CALL     	4 3 1
	24	[1351]	JMP      	10	; to 35
	25	[1353]	GETGLOBAL	4 -2	; table
	26	[1353]	GETTABLE 	4 4 -3	; "insert"
	27	[1353]	MOVE     	5 1
	28	[1353]	LOADK    	6 -4	; " "
	29	[1353]	SELF     	6 6 -5	; "rep"
	30	[1353]	MOVE     	8 3
	31	[1353]	CALL     	6 3 2
	32	[1353]	LOADK    	7 -9	; "local -a options=("
	33	[1353]	CONCAT   	6 6 7
	34	[1353]	CALL     	4 3 1
	35	[1356]	GETGLOBAL	4 -10	; ipairs
	36	[1356]	GETTABLE 	5 0 -11	; "_options"
	37	[1356]	CALL     	4 2 4
	38	[1356]	JMP      	114	; to 153
	39	[1357]	NEWTABLE 	9 0 0
	40	[1358]	GETTABLE 	10 8 -12	; "_aliases"
	41	[1358]	LEN      	10 10
	42	[1358]	LT       	0 -13 10	; 1 -
	43	[1358]	JMP      	21	; to 65
	44	[1359]	GETTABLE 	10 8 -14	; "_maxcount"
	45	[1359]	LT       	0 -13 10	; 1 -
	46	[1359]	JMP      	5	; to 52
	47	[1360]	GETGLOBAL	10 -2	; table
	48	[1360]	GETTABLE 	10 10 -3	; "insert"
	49	[1360]	MOVE     	11 9
	50	[1360]	LOADK    	12 -15	; "\"*\""
	51	[1360]	CALL     	10 3 1
	52	[1362]	GETGLOBAL	10 -2	; table
	53	[1362]	GETTABLE 	10 10 -3	; "insert"
	54	[1362]	MOVE     	11 9
	55	[1362]	LOADK    	12 -16	; "{"
	56	[1362]	GETGLOBAL	13 -2	; table
	57	[1362]	GETTABLE 	13 13 -17	; "concat"
	58	[1362]	GETTABLE 	14 8 -12	; "_aliases"
	59	[1362]	LOADK    	15 -18	; ","
	60	[1362]	CALL     	13 3 2
	61	[1362]	LOADK    	14 -19	; "}\""
	62	[1362]	CONCAT   	12 12 14
	63	[1362]	CALL     	10 3 1
	64	[1362]	JMP      	18	; to 83
	65	[1364]	GETGLOBAL	10 -2	; table
	66	[1364]	GETTABLE 	10 10 -3	; "insert"
	67	[1364]	MOVE     	11 9
	68	[1364]	LOADK    	12 -20	; "\""
	69	[1364]	CALL     	10 3 1
	70	[1365]	GETTABLE 	10 8 -14	; "_maxcount"
	71	[1365]	LT       	0 -13 10	; 1 -
	72	[1365]	JMP      	5	; to 78
	73	[1366]	GETGLOBAL	10 -2	; table
	74	[1366]	GETTABLE 	10 10 -3	; "insert"
	75	[1366]	MOVE     	11 9
	76	[1366]	LOADK    	12 -21	; "*"
	77	[1366]	CALL     	10 3 1
	78	[1368]	GETGLOBAL	10 -2	; table
	79	[1368]	GETTABLE 	10 10 -3	; "insert"
	80	[1368]	MOVE     	11 9
	81	[1368]	GETTABLE 	12 8 -22	; "_name"
	82	[1368]	CALL     	10 3 1
	83	[1370]	GETTABLE 	10 8 -23	; "_description"
	84	[1370]	TEST     	10 0 0
	85	[1370]	JMP      	15	; to 101
	86	[1371]	GETUPVAL 	10 0	; get_short_description
	87	[1371]	MOVE     	11 8
	88	[1371]	CALL     	10 2 2
	89	[1371]	SELF     	10 10 -24	; "gsub"
	90	[1371]	LOADK    	12 -25	; "[\"%]:`$]"
	91	[1371]	LOADK    	13 -26	; "\\%0"
	92	[1371]	CALL     	10 4 2
	93	[1372]	GETGLOBAL	11 -2	; table
	94	[1372]	GETTABLE 	11 11 -3	; "insert"
	95	[1372]	MOVE     	12 9
	96	[1372]	LOADK    	13 -27	; "["
	97	[1372]	MOVE     	14 10
	98	[1372]	LOADK    	15 -28	; "]"
	99	[1372]	CONCAT   	13 13 15
	100	[1372]	CALL     	11 3 1
	101	[1374]	GETTABLE 	10 8 -29	; "_maxargs"
	102	[1374]	GETGLOBAL	11 -30	; math
	103	[1374]	GETTABLE 	11 11 -31	; "huge"
	104	[1374]	EQ       	0 10 11
	105	[1374]	JMP      	5	; to 111
	106	[1375]	GETGLOBAL	10 -2	; table
	107	[1375]	GETTABLE 	10 10 -3	; "insert"
	108	[1375]	MOVE     	11 9
	109	[1375]	LOADK    	12 -32	; ":*"
	110	[1375]	CALL     	10 3 1
	111	[1377]	GETTABLE 	10 8 -33	; "_choices"
	112	[1377]	TEST     	10 0 0
	113	[1377]	JMP      	13	; to 127
	114	[1378]	GETGLOBAL	10 -2	; table
	115	[1378]	GETTABLE 	10 10 -3	; "insert"
	116	[1378]	MOVE     	11 9
	117	[1378]	LOADK    	12 -34	; ": :("
	118	[1378]	GETGLOBAL	13 -2	; table
	119	[1378]	GETTABLE 	13 13 -17	; "concat"
	120	[1378]	GETTABLE 	14 8 -33	; "_choices"
	121	[1378]	LOADK    	15 -4	; " "
	122	[1378]	CALL     	13 3 2
	123	[1378]	LOADK    	14 -35	; ")"
	124	[1378]	CONCAT   	12 12 14
	125	[1378]	CALL     	10 3 1
	126	[1378]	JMP      	8	; to 135
	127	[1379]	GETTABLE 	10 8 -29	; "_maxargs"
	128	[1379]	LT       	0 -36 10	; 0 -
	129	[1379]	JMP      	5	; to 135
	130	[1380]	GETGLOBAL	10 -2	; table
	131	[1380]	GETTABLE 	10 10 -3	; "insert"
	132	[1380]	MOVE     	11 9
	133	[1380]	LOADK    	12 -37	; ": :_files"
	134	[1380]	CALL     	10 3 1
	135	[1382]	GETGLOBAL	10 -2	; table
	136	[1382]	GETTABLE 	10 10 -3	; "insert"
	137	[1382]	MOVE     	11 9
	138	[1382]	LOADK    	12 -20	; "\""
	139	[1382]	CALL     	10 3 1
	140	[1383]	GETGLOBAL	10 -2	; table
	141	[1383]	GETTABLE 	10 10 -3	; "insert"
	142	[1383]	MOVE     	11 1
	143	[1383]	LOADK    	12 -4	; " "
	144	[1383]	SELF     	12 12 -5	; "rep"
	145	[1383]	ADD      	14 3 -7	; - 2
	146	[1383]	CALL     	12 3 2
	147	[1383]	GETGLOBAL	13 -2	; table
	148	[1383]	GETTABLE 	13 13 -17	; "concat"
	149	[1383]	MOVE     	14 9
	150	[1383]	CALL     	13 2 2
	151	[1383]	CONCAT   	12 12 13
	152	[1383]	CALL     	10 3 1
	153	[1356]	TFORLOOP 	4 2
	154	[1383]	JMP      	-116	; to 39
	155	[1386]	GETGLOBAL	4 -2	; table
	156	[1386]	GETTABLE 	4 4 -3	; "insert"
	157	[1386]	MOVE     	5 1
	158	[1386]	LOADK    	6 -4	; " "
	159	[1386]	SELF     	6 6 -5	; "rep"
	160	[1386]	MOVE     	8 3
	161	[1386]	CALL     	6 3 2
	162	[1386]	LOADK    	7 -35	; ")"
	163	[1386]	CONCAT   	6 6 7
	164	[1386]	CALL     	4 3 1
	165	[1387]	GETGLOBAL	4 -2	; table
	166	[1387]	GETTABLE 	4 4 -3	; "insert"
	167	[1387]	MOVE     	5 1
	168	[1387]	LOADK    	6 -4	; " "
	169	[1387]	SELF     	6 6 -5	; "rep"
	170	[1387]	MOVE     	8 3
	171	[1387]	CALL     	6 3 2
	172	[1387]	LOADK    	7 -38	; "_arguments -s -S \\"
	173	[1387]	CONCAT   	6 6 7
	174	[1387]	CALL     	4 3 1
	175	[1388]	GETGLOBAL	4 -2	; table
	176	[1388]	GETTABLE 	4 4 -3	; "insert"
	177	[1388]	MOVE     	5 1
	178	[1388]	LOADK    	6 -4	; " "
	179	[1388]	SELF     	6 6 -5	; "rep"
	180	[1388]	ADD      	8 3 -7	; - 2
	181	[1388]	CALL     	6 3 2
	182	[1388]	LOADK    	7 -39	; "$options \\"
	183	[1388]	CONCAT   	6 6 7
	184	[1388]	CALL     	4 3 1
	185	[1390]	GETTABLE 	4 0 -40	; "_is_help_command"
	186	[1390]	TEST     	4 0 0
	187	[1390]	JMP      	15	; to 203
	188	[1391]	GETGLOBAL	4 -2	; table
	189	[1391]	GETTABLE 	4 4 -3	; "insert"
	190	[1391]	MOVE     	5 1
	191	[1391]	LOADK    	6 -4	; " "
	192	[1391]	SELF     	6 6 -5	; "rep"
	193	[1391]	ADD      	8 3 -7	; - 2
	194	[1391]	CALL     	6 3 2
	195	[1391]	LOADK    	7 -41	; "\": :("
	196	[1391]	GETTABLE 	8 0 -1	; "_parent"
	197	[1391]	SELF     	8 8 -42	; "_get_commands"
	198	[1391]	CALL     	8 2 2
	199	[1391]	LOADK    	9 -43	; ")\" \\"
	200	[1391]	CONCAT   	6 6 9
	201	[1391]	CALL     	4 3 1
	202	[1391]	JMP      	81	; to 284
	203	[1393]	GETGLOBAL	4 -10	; ipairs
	204	[1393]	GETTABLE 	5 0 -44	; "_arguments"
	205	[1393]	CALL     	4 2 4
	206	[1393]	JMP      	49	; to 256
	207	[1394]	LOADNIL  	9 9
	208	[1395]	GETTABLE 	10 8 -33	; "_choices"
	209	[1395]	TEST     	10 0 0
	210	[1395]	JMP      	9	; to 220
	211	[1396]	LOADK    	10 -34	; ": :("
	212	[1396]	GETGLOBAL	11 -2	; table
	213	[1396]	GETTABLE 	11 11 -17	; "concat"
	214	[1396]	GETTABLE 	12 8 -33	; "_choices"
	215	[1396]	LOADK    	13 -4	; " "
	216	[1396]	CALL     	11 3 2
	217	[1396]	LOADK    	12 -35	; ")"
	218	[1396]	CONCAT   	9 10 12
	219	[1396]	JMP      	1	; to 221
	220	[1398]	LOADK    	9 -37	; ": :_files"
	221	[1400]	GETTABLE 	10 8 -29	; "_maxargs"
	222	[1400]	GETGLOBAL	11 -30	; math
	223	[1400]	GETTABLE 	11 11 -31	; "huge"
	224	[1400]	EQ       	0 10 11
	225	[1400]	JMP      	13	; to 239
	226	[1401]	GETGLOBAL	10 -2	; table
	227	[1401]	GETTABLE 	10 10 -3	; "insert"
	228	[1401]	MOVE     	11 1
	229	[1401]	LOADK    	12 -4	; " "
	230	[1401]	SELF     	12 12 -5	; "rep"
	231	[1401]	ADD      	14 3 -7	; - 2
	232	[1401]	CALL     	12 3 2
	233	[1401]	LOADK    	13 -45	; "\"*"
	234	[1401]	MOVE     	14 9
	235	[1401]	LOADK    	15 -46	; "\" \\"
	236	[1401]	CONCAT   	12 12 15
	237	[1401]	CALL     	10 3 1
	238	[1402]	JMP      	19	; to 258
	239	[1404]	LOADK    	10 -13	; 1
	240	[1404]	GETTABLE 	11 8 -29	; "_maxargs"
	241	[1404]	LOADK    	12 -13	; 1
	242	[1404]	FORPREP  	10 12	; to 255
	243	[1405]	GETGLOBAL	14 -2	; table
	244	[1405]	GETTABLE 	14 14 -3	; "insert"
	245	[1405]	MOVE     	15 1
	246	[1405]	LOADK    	16 -4	; " "
	247	[1405]	SELF     	16 16 -5	; "rep"
	248	[1405]	ADD      	18 3 -7	; - 2
	249	[1405]	CALL     	16 3 2
	250	[1405]	LOADK    	17 -20	; "\""
	251	[1405]	MOVE     	18 9
	252	[1405]	LOADK    	19 -46	; "\" \\"
	253	[1405]	CONCAT   	16 16 19
	254	[1405]	CALL     	14 3 1
	255	[1404]	FORLOOP  	10 -13	; to 243
	256	[1393]	TFORLOOP 	4 2
	257	[1406]	JMP      	-51	; to 207
	258	[1409]	GETTABLE 	4 0 -47	; "_commands"
	259	[1409]	LEN      	4 4
	260	[1409]	LT       	0 -36 4	; 0 -
	261	[1409]	JMP      	22	; to 284
	262	[1410]	GETGLOBAL	4 -2	; table
	263	[1410]	GETTABLE 	4 4 -3	; "insert"
	264	[1410]	MOVE     	5 1
	265	[1410]	LOADK    	6 -4	; " "
	266	[1410]	SELF     	6 6 -5	; "rep"
	267	[1410]	ADD      	8 3 -7	; - 2
	268	[1410]	CALL     	6 3 2
	269	[1410]	LOADK    	7 -48	; "\": :_"
	270	[1410]	MOVE     	8 2
	271	[1410]	LOADK    	9 -49	; "_cmds\" \\"
	272	[1410]	CONCAT   	6 6 9
	273	[1410]	CALL     	4 3 1
	274	[1411]	GETGLOBAL	4 -2	; table
	275	[1411]	GETTABLE 	4 4 -3	; "insert"
	276	[1411]	MOVE     	5 1
	277	[1411]	LOADK    	6 -4	; " "
	278	[1411]	SELF     	6 6 -5	; "rep"
	279	[1411]	ADD      	8 3 -7	; - 2
	280	[1411]	CALL     	6 3 2
	281	[1411]	LOADK    	7 -50	; "\"*:: :->args\" \\"
	282	[1411]	CONCAT   	6 6 7
	283	[1411]	CALL     	4 3 1
	284	[1415]	GETGLOBAL	4 -2	; table
	285	[1415]	GETTABLE 	4 4 -3	; "insert"
	286	[1415]	MOVE     	5 1
	287	[1415]	LOADK    	6 -4	; " "
	288	[1415]	SELF     	6 6 -5	; "rep"
	289	[1415]	ADD      	8 3 -7	; - 2
	290	[1415]	CALL     	6 3 2
	291	[1415]	LOADK    	7 -51	; "&& return 0"
	292	[1415]	CONCAT   	6 6 7
	293	[1415]	CALL     	4 3 1
	294	[1416]	RETURN   	0 1

function <./argparse.lua:1418,1436> (77 instructions, 308 bytes at 0x7fe3c2d05050)
3 params, 16 slots, 1 upvalue, 9 locals, 22 constants, 0 functions
	1	[1419]	GETGLOBAL	3 -1	; table
	2	[1419]	GETTABLE 	3 3 -2	; "insert"
	3	[1419]	MOVE     	4 1
	4	[1419]	LOADK    	5 -3	; "\n_"
	5	[1419]	MOVE     	6 2
	6	[1419]	LOADK    	7 -4	; "_cmds() {"
	7	[1419]	CONCAT   	5 5 7
	8	[1419]	CALL     	3 3 1
	9	[1420]	GETGLOBAL	3 -1	; table
	10	[1420]	GETTABLE 	3 3 -2	; "insert"
	11	[1420]	MOVE     	4 1
	12	[1420]	LOADK    	5 -5	; "  local -a commands=("
	13	[1420]	CALL     	3 3 1
	14	[1422]	GETGLOBAL	3 -6	; ipairs
	15	[1422]	GETTABLE 	4 0 -7	; "_commands"
	16	[1422]	CALL     	3 2 4
	17	[1422]	JMP      	52	; to 70
	18	[1423]	NEWTABLE 	8 0 0
	19	[1424]	GETTABLE 	9 7 -8	; "_aliases"
	20	[1424]	LEN      	9 9
	21	[1424]	LT       	0 -9 9	; 1 -
	22	[1424]	JMP      	13	; to 36
	23	[1425]	GETGLOBAL	9 -1	; table
	24	[1425]	GETTABLE 	9 9 -2	; "insert"
	25	[1425]	MOVE     	10 8
	26	[1425]	LOADK    	11 -10	; "{"
	27	[1425]	GETGLOBAL	12 -1	; table
	28	[1425]	GETTABLE 	12 12 -11	; "concat"
	29	[1425]	GETTABLE 	13 7 -8	; "_aliases"
	30	[1425]	LOADK    	14 -12	; ","
	31	[1425]	CALL     	12 3 2
	32	[1425]	LOADK    	13 -13	; "}\""
	33	[1425]	CONCAT   	11 11 13
	34	[1425]	CALL     	9 3 1
	35	[1425]	JMP      	7	; to 43
	36	[1427]	GETGLOBAL	9 -1	; table
	37	[1427]	GETTABLE 	9 9 -2	; "insert"
	38	[1427]	MOVE     	10 8
	39	[1427]	LOADK    	11 -14	; "\""
	40	[1427]	GETTABLE 	12 7 -15	; "_name"
	41	[1427]	CONCAT   	11 11 12
	42	[1427]	CALL     	9 3 1
	43	[1429]	GETTABLE 	9 7 -16	; "_description"
	44	[1429]	TEST     	9 0 0
	45	[1429]	JMP      	13	; to 59
	46	[1430]	GETGLOBAL	9 -1	; table
	47	[1430]	GETTABLE 	9 9 -2	; "insert"
	48	[1430]	MOVE     	10 8
	49	[1430]	LOADK    	11 -17	; ":"
	50	[1430]	GETUPVAL 	12 0	; get_short_description
	51	[1430]	MOVE     	13 7
	52	[1430]	CALL     	12 2 2
	53	[1430]	SELF     	12 12 -18	; "gsub"
	54	[1430]	LOADK    	14 -19	; "[\"`$]"
	55	[1430]	LOADK    	15 -20	; "\\%0"
	56	[1430]	CALL     	12 4 2
	57	[1430]	CONCAT   	11 11 12
	58	[1430]	CALL     	9 3 1
	59	[1432]	GETGLOBAL	9 -1	; table
	60	[1432]	GETTABLE 	9 9 -2	; "insert"
	61	[1432]	MOVE     	10 1
	62	[1432]	LOADK    	11 -21	; "    "
	63	[1432]	GETGLOBAL	12 -1	; table
	64	[1432]	GETTABLE 	12 12 -11	; "concat"
	65	[1432]	MOVE     	13 8
	66	[1432]	CALL     	12 2 2
	67	[1432]	LOADK    	13 -14	; "\""
	68	[1432]	CONCAT   	11 11 13
	69	[1432]	CALL     	9 3 1
	70	[1422]	TFORLOOP 	3 2
	71	[1432]	JMP      	-54	; to 18
	72	[1435]	GETGLOBAL	3 -1	; table
	73	[1435]	GETTABLE 	3 3 -2	; "insert"
	74	[1435]	MOVE     	4 1
	75	[1435]	LOADK    	5 -22	; "  )\n  _describe \"command\" commands\n}"
	76	[1435]	CALL     	3 3 1
	77	[1436]	RETURN   	0 1

function <./argparse.lua:1438,1455> (77 instructions, 308 bytes at 0x7fe3c2d05c80)
5 params, 17 slots, 0 upvalues, 11 locals, 22 constants, 0 functions
	1	[1439]	GETTABLE 	5 0 -1	; "_commands"
	2	[1439]	LEN      	5 5
	3	[1439]	EQ       	0 5 -2	; - 0
	4	[1439]	JMP      	1	; to 6
	5	[1440]	RETURN   	0 1
	6	[1443]	SELF     	5 0 -3	; "_zsh_cmds"
	7	[1443]	MOVE     	7 2
	8	[1443]	MOVE     	8 3
	9	[1443]	CALL     	5 4 1
	10	[1444]	GETGLOBAL	5 -4	; table
	11	[1444]	GETTABLE 	5 5 -5	; "insert"
	12	[1444]	MOVE     	6 1
	13	[1444]	LOADK    	7 -6	; "\n"
	14	[1444]	LOADK    	8 -7	; " "
	15	[1444]	SELF     	8 8 -8	; "rep"
	16	[1444]	MOVE     	10 4
	17	[1444]	CALL     	8 3 2
	18	[1444]	LOADK    	9 -9	; "case $words[1] in"
	19	[1444]	CONCAT   	7 7 9
	20	[1444]	CALL     	5 3 1
	21	[1446]	GETGLOBAL	5 -10	; ipairs
	22	[1446]	GETTABLE 	6 0 -1	; "_commands"
	23	[1446]	CALL     	5 2 4
	24	[1446]	JMP      	40	; to 65
	25	[1447]	MOVE     	10 3
	26	[1447]	LOADK    	11 -11	; "_"
	27	[1447]	GETTABLE 	12 9 -12	; "_name"
	28	[1447]	CONCAT   	10 10 12
	29	[1448]	GETGLOBAL	11 -4	; table
	30	[1448]	GETTABLE 	11 11 -5	; "insert"
	31	[1448]	MOVE     	12 1
	32	[1448]	LOADK    	13 -7	; " "
	33	[1448]	SELF     	13 13 -8	; "rep"
	34	[1448]	ADD      	15 4 -13	; - 2
	35	[1448]	CALL     	13 3 2
	36	[1448]	GETGLOBAL	14 -4	; table
	37	[1448]	GETTABLE 	14 14 -14	; "concat"
	38	[1448]	GETTABLE 	15 9 -15	; "_aliases"
	39	[1448]	LOADK    	16 -16	; "|"
	40	[1448]	CALL     	14 3 2
	41	[1448]	LOADK    	15 -17	; ")"
	42	[1448]	CONCAT   	13 13 15
	43	[1448]	CALL     	11 3 1
	44	[1449]	SELF     	11 9 -18	; "_zsh_arguments"
	45	[1449]	MOVE     	13 1
	46	[1449]	MOVE     	14 10
	47	[1449]	ADD      	15 4 -19	; - 4
	48	[1449]	CALL     	11 5 1
	49	[1450]	SELF     	11 9 -20	; "_zsh_complete_help"
	50	[1450]	MOVE     	13 1
	51	[1450]	MOVE     	14 2
	52	[1450]	MOVE     	15 10
	53	[1450]	ADD      	16 4 -19	; - 4
	54	[1450]	CALL     	11 6 1
	55	[1451]	GETGLOBAL	11 -4	; table
	56	[1451]	GETTABLE 	11 11 -5	; "insert"
	57	[1451]	MOVE     	12 1
	58	[1451]	LOADK    	13 -7	; " "
	59	[1451]	SELF     	13 13 -8	; "rep"
	60	[1451]	ADD      	15 4 -19	; - 4
	61	[1451]	CALL     	13 3 2
	62	[1451]	LOADK    	14 -21	; ";;\n"
	63	[1451]	CONCAT   	13 13 14
	64	[1451]	CALL     	11 3 1
	65	[1446]	TFORLOOP 	5 2
	66	[1451]	JMP      	-42	; to 25
	67	[1454]	GETGLOBAL	5 -4	; table
	68	[1454]	GETTABLE 	5 5 -5	; "insert"
	69	[1454]	MOVE     	6 1
	70	[1454]	LOADK    	7 -7	; " "
	71	[1454]	SELF     	7 7 -8	; "rep"
	72	[1454]	MOVE     	9 4
	73	[1454]	CALL     	7 3 2
	74	[1454]	LOADK    	8 -22	; "esac"
	75	[1454]	CONCAT   	7 7 8
	76	[1454]	CALL     	5 3 1
	77	[1455]	RETURN   	0 1

function <./argparse.lua:1457,1477> (81 instructions, 324 bytes at 0x7fe3c2d06160)
1 param, 9 slots, 1 upvalue, 4 locals, 22 constants, 0 functions
	1	[1458]	GETUPVAL 	1 0	; base_name
	2	[1458]	GETTABLE 	2 0 -2	; "_name"
	3	[1458]	CALL     	1 2 2
	4	[1458]	SETTABLE 	0 -1 1	; "_basename" -
	5	[1459]	GETGLOBAL	1 -3	; assert
	6	[1459]	SELF     	2 0 -4	; "_is_shell_safe"
	7	[1459]	CALL     	2 2 0
	8	[1459]	CALL     	1 0 1
	9	[1460]	NEWTABLE 	1 0 0
	10	[1460]	LOADK    	2 -5	; "#compdef %s\n"
	11	[1460]	SELF     	2 2 -6	; "format"
	12	[1460]	GETTABLE 	4 0 -1	; "_basename"
	13	[1460]	CALL     	2 3 0
	14	[1460]	SETLIST  	1 0 1	; 1
	15	[1461]	NEWTABLE 	2 0 0
	16	[1462]	GETGLOBAL	3 -7	; table
	17	[1462]	GETTABLE 	3 3 -8	; "insert"
	18	[1462]	MOVE     	4 1
	19	[1462]	LOADK    	5 -9	; "_"
	20	[1462]	GETTABLE 	6 0 -1	; "_basename"
	21	[1462]	LOADK    	7 -10	; "() {"
	22	[1462]	CONCAT   	5 5 7
	23	[1462]	CALL     	3 3 1
	24	[1463]	GETTABLE 	3 0 -11	; "_commands"
	25	[1463]	LEN      	3 3
	26	[1463]	LT       	0 -12 3	; 0 -
	27	[1463]	JMP      	10	; to 38
	28	[1464]	GETGLOBAL	3 -7	; table
	29	[1464]	GETTABLE 	3 3 -8	; "insert"
	30	[1464]	MOVE     	4 1
	31	[1464]	LOADK    	5 -13	; "  local context state state_descr line"
	32	[1464]	CALL     	3 3 1
	33	[1465]	GETGLOBAL	3 -7	; table
	34	[1465]	GETTABLE 	3 3 -8	; "insert"
	35	[1465]	MOVE     	4 1
	36	[1465]	LOADK    	5 -14	; "  typeset -A opt_args\n"
	37	[1465]	CALL     	3 3 1
	38	[1467]	SELF     	3 0 -15	; "_zsh_arguments"
	39	[1467]	MOVE     	5 1
	40	[1467]	GETTABLE 	6 0 -1	; "_basename"
	41	[1467]	LOADK    	7 -16	; 2
	42	[1467]	CALL     	3 5 1
	43	[1468]	SELF     	3 0 -17	; "_zsh_complete_help"
	44	[1468]	MOVE     	5 1
	45	[1468]	MOVE     	6 2
	46	[1468]	GETTABLE 	7 0 -1	; "_basename"
	47	[1468]	LOADK    	8 -16	; 2
	48	[1468]	CALL     	3 6 1
	49	[1469]	GETGLOBAL	3 -7	; table
	50	[1469]	GETTABLE 	3 3 -8	; "insert"
	51	[1469]	MOVE     	4 1
	52	[1469]	LOADK    	5 -18	; "\n  return 1"
	53	[1469]	CALL     	3 3 1
	54	[1470]	GETGLOBAL	3 -7	; table
	55	[1470]	GETTABLE 	3 3 -8	; "insert"
	56	[1470]	MOVE     	4 1
	57	[1470]	LOADK    	5 -19	; "}"
	58	[1470]	CALL     	3 3 1
	59	[1472]	GETGLOBAL	3 -7	; table
	60	[1472]	GETTABLE 	3 3 -20	; "concat"
	61	[1472]	MOVE     	4 1
	62	[1472]	LOADK    	5 -21	; "\n"
	63	[1472]	CALL     	3 3 2
	64	[1473]	LEN      	4 2
	65	[1473]	LT       	0 -12 4	; 0 -
	66	[1473]	JMP      	8	; to 75
	67	[1474]	MOVE     	4 3
	68	[1474]	LOADK    	5 -21	; "\n"
	69	[1474]	GETGLOBAL	6 -7	; table
	70	[1474]	GETTABLE 	6 6 -20	; "concat"
	71	[1474]	MOVE     	7 2
	72	[1474]	LOADK    	8 -21	; "\n"
	73	[1474]	CALL     	6 3 2
	74	[1474]	CONCAT   	3 4 6
	75	[1476]	MOVE     	4 3
	76	[1476]	LOADK    	5 -22	; "\n\n_"
	77	[1476]	GETTABLE 	6 0 -1	; "_basename"
	78	[1476]	LOADK    	7 -21	; "\n"
	79	[1476]	CONCAT   	4 4 7
	80	[1476]	RETURN   	4 2
	81	[1477]	RETURN   	0 1

function <./argparse.lua:1479,1481> (6 instructions, 24 bytes at 0x7fe3c2d05bd0)
1 param, 5 slots, 0 upvalues, 1 local, 3 constants, 0 functions
	1	[1480]	SELF     	1 0 -1	; "gsub"
	2	[1480]	LOADK    	3 -2	; "[\\']"
	3	[1480]	LOADK    	4 -3	; "\\%0"
	4	[1480]	TAILCALL 	1 4 0
	5	[1480]	RETURN   	1 0
	6	[1481]	RETURN   	0 1

function <./argparse.lua:1483,1501> (102 instructions, 408 bytes at 0x7fe3c2d05a90)
3 params, 15 slots, 0 upvalues, 8 locals, 21 constants, 0 functions
	1	[1484]	GETTABLE 	3 0 -1	; "_commands"
	2	[1484]	LEN      	3 3
	3	[1484]	EQ       	0 3 -2	; - 0
	4	[1484]	JMP      	1	; to 6
	5	[1485]	RETURN   	0 1
	6	[1488]	GETGLOBAL	3 -3	; table
	7	[1488]	GETTABLE 	3 3 -4	; "insert"
	8	[1488]	MOVE     	4 1
	9	[1488]	LOADK    	5 -5	; " "
	10	[1488]	SELF     	5 5 -6	; "rep"
	11	[1488]	MOVE     	7 2
	12	[1488]	CALL     	5 3 2
	13	[1488]	LOADK    	6 -7	; "set -e cmdline[1]"
	14	[1488]	CONCAT   	5 5 6
	15	[1488]	CALL     	3 3 1
	16	[1489]	GETGLOBAL	3 -3	; table
	17	[1489]	GETTABLE 	3 3 -4	; "insert"
	18	[1489]	MOVE     	4 1
	19	[1489]	LOADK    	5 -5	; " "
	20	[1489]	SELF     	5 5 -6	; "rep"
	21	[1489]	MOVE     	7 2
	22	[1489]	CALL     	5 3 2
	23	[1489]	LOADK    	6 -8	; "for arg in $cmdline"
	24	[1489]	CONCAT   	5 5 6
	25	[1489]	CALL     	3 3 1
	26	[1490]	GETGLOBAL	3 -3	; table
	27	[1490]	GETTABLE 	3 3 -4	; "insert"
	28	[1490]	MOVE     	4 1
	29	[1490]	LOADK    	5 -5	; " "
	30	[1490]	SELF     	5 5 -6	; "rep"
	31	[1490]	ADD      	7 2 -9	; - 4
	32	[1490]	CALL     	5 3 2
	33	[1490]	LOADK    	6 -10	; "switch $arg"
	34	[1490]	CONCAT   	5 5 6
	35	[1490]	CALL     	3 3 1
	36	[1492]	GETGLOBAL	3 -11	; ipairs
	37	[1492]	GETTABLE 	4 0 -1	; "_commands"
	38	[1492]	CALL     	3 2 4
	39	[1492]	JMP      	40	; to 80
	40	[1493]	GETGLOBAL	8 -3	; table
	41	[1493]	GETTABLE 	8 8 -4	; "insert"
	42	[1493]	MOVE     	9 1
	43	[1493]	LOADK    	10 -5	; " "
	44	[1493]	SELF     	10 10 -6	; "rep"
	45	[1493]	ADD      	12 2 -12	; - 8
	46	[1493]	CALL     	10 3 2
	47	[1493]	LOADK    	11 -13	; "case "
	48	[1493]	GETGLOBAL	12 -3	; table
	49	[1493]	GETTABLE 	12 12 -14	; "concat"
	50	[1493]	GETTABLE 	13 7 -15	; "_aliases"
	51	[1493]	LOADK    	14 -5	; " "
	52	[1493]	CALL     	12 3 2
	53	[1493]	CONCAT   	10 10 12
	54	[1493]	CALL     	8 3 1
	55	[1494]	GETGLOBAL	8 -3	; table
	56	[1494]	GETTABLE 	8 8 -4	; "insert"
	57	[1494]	MOVE     	9 1
	58	[1494]	LOADK    	10 -5	; " "
	59	[1494]	SELF     	10 10 -6	; "rep"
	60	[1494]	ADD      	12 2 -16	; - 12
	61	[1494]	CALL     	10 3 2
	62	[1494]	LOADK    	11 -17	; "set cmd $cmd "
	63	[1494]	GETTABLE 	12 7 -18	; "_name"
	64	[1494]	CONCAT   	10 10 12
	65	[1494]	CALL     	8 3 1
	66	[1495]	SELF     	8 7 -19	; "_fish_get_cmd"
	67	[1495]	MOVE     	10 1
	68	[1495]	ADD      	11 2 -16	; - 12
	69	[1495]	CALL     	8 4 1
	70	[1496]	GETGLOBAL	8 -3	; table
	71	[1496]	GETTABLE 	8 8 -4	; "insert"
	72	[1496]	MOVE     	9 1
	73	[1496]	LOADK    	10 -5	; " "
	74	[1496]	SELF     	10 10 -6	; "rep"
	75	[1496]	ADD      	12 2 -16	; - 12
	76	[1496]	CALL     	10 3 2
	77	[1496]	LOADK    	11 -20	; "break"
	78	[1496]	CONCAT   	10 10 11
	79	[1496]	CALL     	8 3 1
	80	[1492]	TFORLOOP 	3 2
	81	[1496]	JMP      	-42	; to 40
	82	[1499]	GETGLOBAL	3 -3	; table
	83	[1499]	GETTABLE 	3 3 -4	; "insert"
	84	[1499]	MOVE     	4 1
	85	[1499]	LOADK    	5 -5	; " "
	86	[1499]	SELF     	5 5 -6	; "rep"
	87	[1499]	ADD      	7 2 -9	; - 4
	88	[1499]	CALL     	5 3 2
	89	[1499]	LOADK    	6 -21	; "end"
	90	[1499]	CONCAT   	5 5 6
	91	[1499]	CALL     	3 3 1
	92	[1500]	GETGLOBAL	3 -3	; table
	93	[1500]	GETTABLE 	3 3 -4	; "insert"
	94	[1500]	MOVE     	4 1
	95	[1500]	LOADK    	5 -5	; " "
	96	[1500]	SELF     	5 5 -6	; "rep"
	97	[1500]	MOVE     	7 2
	98	[1500]	CALL     	5 3 2
	99	[1500]	LOADK    	6 -21	; "end"
	100	[1500]	CONCAT   	5 5 6
	101	[1500]	CALL     	3 3 1
	102	[1501]	RETURN   	0 1

function <./argparse.lua:1503,1559> (196 instructions, 784 bytes at 0x7fe3c2d07c90)
3 params, 21 slots, 2 upvalues, 28 locals, 37 constants, 0 functions
	1	[1504]	LOADK    	3 -1	; "complete -c "
	2	[1504]	MOVE     	4 2
	3	[1504]	CONCAT   	3 3 4
	4	[1505]	GETGLOBAL	4 -2	; table
	5	[1505]	GETTABLE 	4 4 -3	; "insert"
	6	[1505]	MOVE     	5 1
	7	[1505]	LOADK    	6 -4	; ""
	8	[1505]	CALL     	4 3 1
	9	[1507]	GETGLOBAL	4 -5	; ipairs
	10	[1507]	GETTABLE 	5 0 -6	; "_commands"
	11	[1507]	CALL     	4 2 4
	12	[1507]	JMP      	45	; to 58
	13	[1508]	GETGLOBAL	9 -2	; table
	14	[1508]	GETTABLE 	9 9 -7	; "concat"
	15	[1508]	GETTABLE 	10 8 -8	; "_aliases"
	16	[1508]	LOADK    	11 -9	; " "
	17	[1508]	CALL     	9 3 2
	18	[1509]	LOADNIL  	10 10
	19	[1510]	GETTABLE 	11 0 -10	; "_parent"
	20	[1510]	TEST     	11 0 0
	21	[1510]	JMP      	11	; to 33
	22	[1512]	LOADK    	11 -11	; "%s -n '__fish_%s_using_command %s' -xa '%s'"
	23	[1512]	SELF     	11 11 -12	; "format"
	24	[1512]	MOVE     	13 3
	25	[1512]	MOVE     	14 2
	26	[1512]	SELF     	15 0 -13	; "_get_fullname"
	27	[1512]	LOADBOOL 	17 1 0
	28	[1512]	CALL     	15 3 2
	29	[1512]	MOVE     	16 9
	30	[1512]	CALL     	11 6 2
	31	[1512]	MOVE     	10 11
	32	[1512]	JMP      	7	; to 40
	33	[1514]	LOADK    	11 -14	; "%s -n '__fish_%s_using_command' -xa '%s'"
	34	[1514]	SELF     	11 11 -12	; "format"
	35	[1514]	MOVE     	13 3
	36	[1514]	MOVE     	14 2
	37	[1514]	MOVE     	15 9
	38	[1514]	CALL     	11 5 2
	39	[1514]	MOVE     	10 11
	40	[1516]	GETTABLE 	11 8 -15	; "_description"
	41	[1516]	TEST     	11 0 0
	42	[1516]	JMP      	10	; to 53
	43	[1517]	LOADK    	11 -16	; "%s -d '%s'"
	44	[1517]	SELF     	11 11 -12	; "format"
	45	[1517]	MOVE     	13 10
	46	[1517]	GETUPVAL 	14 0	; fish_escape
	47	[1517]	GETUPVAL 	15 1	; get_short_description
	48	[1517]	MOVE     	16 8
	49	[1517]	CALL     	15 2 0
	50	[1517]	CALL     	14 0 0
	51	[1517]	CALL     	11 0 2
	52	[1517]	MOVE     	10 11
	53	[1519]	GETGLOBAL	11 -2	; table
	54	[1519]	GETTABLE 	11 11 -3	; "insert"
	55	[1519]	MOVE     	12 1
	56	[1519]	MOVE     	13 10
	57	[1519]	CALL     	11 3 1
	58	[1507]	TFORLOOP 	4 2
	59	[1519]	JMP      	-47	; to 13
	60	[1522]	GETTABLE 	4 0 -17	; "_is_help_command"
	61	[1522]	TEST     	4 0 0
	62	[1522]	JMP      	16	; to 79
	63	[1524]	LOADK    	4 -11	; "%s -n '__fish_%s_using_command %s' -xa '%s'"
	64	[1524]	SELF     	4 4 -12	; "format"
	65	[1524]	MOVE     	6 3
	66	[1524]	MOVE     	7 2
	67	[1524]	SELF     	8 0 -13	; "_get_fullname"
	68	[1524]	LOADBOOL 	10 1 0
	69	[1524]	CALL     	8 3 2
	70	[1524]	GETTABLE 	9 0 -10	; "_parent"
	71	[1524]	SELF     	9 9 -18	; "_get_commands"
	72	[1524]	CALL     	9 2 0
	73	[1524]	CALL     	4 0 2
	74	[1525]	GETGLOBAL	5 -2	; table
	75	[1525]	GETTABLE 	5 5 -3	; "insert"
	76	[1525]	MOVE     	6 1
	77	[1525]	MOVE     	7 4
	78	[1525]	CALL     	5 3 1
	79	[1528]	GETGLOBAL	4 -5	; ipairs
	80	[1528]	GETTABLE 	5 0 -19	; "_options"
	81	[1528]	CALL     	4 2 4
	82	[1528]	JMP      	101	; to 184
	83	[1529]	NEWTABLE 	9 1 0
	84	[1529]	MOVE     	10 3
	85	[1529]	SETLIST  	9 1 1	; 1
	86	[1531]	GETTABLE 	10 0 -10	; "_parent"
	87	[1531]	TEST     	10 0 0
	88	[1531]	JMP      	12	; to 101
	89	[1532]	GETGLOBAL	10 -2	; table
	90	[1532]	GETTABLE 	10 10 -3	; "insert"
	91	[1532]	MOVE     	11 9
	92	[1532]	LOADK    	12 -20	; "-n '__fish_"
	93	[1532]	MOVE     	13 2
	94	[1532]	LOADK    	14 -21	; "_seen_command "
	95	[1532]	SELF     	15 0 -13	; "_get_fullname"
	96	[1532]	LOADBOOL 	17 1 0
	97	[1532]	CALL     	15 3 2
	98	[1532]	LOADK    	16 -22	; "'"
	99	[1532]	CONCAT   	12 12 16
	100	[1532]	CALL     	10 3 1
	101	[1535]	GETGLOBAL	10 -5	; ipairs
	102	[1535]	GETTABLE 	11 8 -8	; "_aliases"
	103	[1535]	CALL     	10 2 4
	104	[1535]	JMP      	29	; to 134
	105	[1536]	SELF     	15 14 -23	; "match"
	106	[1536]	LOADK    	17 -24	; "^%-.$"
	107	[1536]	CALL     	15 3 2
	108	[1536]	TEST     	15 0 0
	109	[1536]	JMP      	10	; to 120
	110	[1537]	GETGLOBAL	15 -2	; table
	111	[1537]	GETTABLE 	15 15 -3	; "insert"
	112	[1537]	MOVE     	16 9
	113	[1537]	LOADK    	17 -25	; "-s "
	114	[1537]	SELF     	18 14 -26	; "sub"
	115	[1537]	LOADK    	20 -27	; 2
	116	[1537]	CALL     	18 3 2
	117	[1537]	CONCAT   	17 17 18
	118	[1537]	CALL     	15 3 1
	119	[1537]	JMP      	14	; to 134
	120	[1538]	SELF     	15 14 -23	; "match"
	121	[1538]	LOADK    	17 -28	; "^%-%-.+"
	122	[1538]	CALL     	15 3 2
	123	[1538]	TEST     	15 0 0
	124	[1538]	JMP      	9	; to 134
	125	[1539]	GETGLOBAL	15 -2	; table
	126	[1539]	GETTABLE 	15 15 -3	; "insert"
	127	[1539]	MOVE     	16 9
	128	[1539]	LOADK    	17 -29	; "-l "
	129	[1539]	SELF     	18 14 -26	; "sub"
	130	[1539]	LOADK    	20 -30	; 3
	131	[1539]	CALL     	18 3 2
	132	[1539]	CONCAT   	17 17 18
	133	[1539]	CALL     	15 3 1
	134	[1535]	TFORLOOP 	10 2
	135	[1540]	JMP      	-31	; to 105
	136	[1543]	GETTABLE 	10 8 -31	; "_choices"
	137	[1543]	TEST     	10 0 0
	138	[1543]	JMP      	13	; to 152
	139	[1544]	GETGLOBAL	10 -2	; table
	140	[1544]	GETTABLE 	10 10 -3	; "insert"
	141	[1544]	MOVE     	11 9
	142	[1544]	LOADK    	12 -32	; "-xa '"
	143	[1544]	GETGLOBAL	13 -2	; table
	144	[1544]	GETTABLE 	13 13 -7	; "concat"
	145	[1544]	GETTABLE 	14 8 -31	; "_choices"
	146	[1544]	LOADK    	15 -9	; " "
	147	[1544]	CALL     	13 3 2
	148	[1544]	LOADK    	14 -22	; "'"
	149	[1544]	CONCAT   	12 12 14
	150	[1544]	CALL     	10 3 1
	151	[1544]	JMP      	8	; to 160
	152	[1545]	GETTABLE 	10 8 -33	; "_minargs"
	153	[1545]	LT       	0 -34 10	; 0 -
	154	[1545]	JMP      	5	; to 160
	155	[1546]	GETGLOBAL	10 -2	; table
	156	[1546]	GETTABLE 	10 10 -3	; "insert"
	157	[1546]	MOVE     	11 9
	158	[1546]	LOADK    	12 -35	; "-r"
	159	[1546]	CALL     	10 3 1
	160	[1549]	GETTABLE 	10 8 -15	; "_description"
	161	[1549]	TEST     	10 0 0
	162	[1549]	JMP      	12	; to 175
	163	[1550]	GETGLOBAL	10 -2	; table
	164	[1550]	GETTABLE 	10 10 -3	; "insert"
	165	[1550]	MOVE     	11 9
	166	[1550]	LOADK    	12 -36	; "-d '"
	167	[1550]	GETUPVAL 	13 0	; fish_escape
	168	[1550]	GETUPVAL 	14 1	; get_short_description
	169	[1550]	MOVE     	15 8
	170	[1550]	CALL     	14 2 0
	171	[1550]	CALL     	13 0 2
	172	[1550]	LOADK    	14 -22	; "'"
	173	[1550]	CONCAT   	12 12 14
	174	[1550]	CALL     	10 3 1
	175	[1553]	GETGLOBAL	10 -2	; table
	176	[1553]	GETTABLE 	10 10 -3	; "insert"
	177	[1553]	MOVE     	11 1
	178	[1553]	GETGLOBAL	12 -2	; table
	179	[1553]	GETTABLE 	12 12 -7	; "concat"
	180	[1553]	MOVE     	13 9
	181	[1553]	LOADK    	14 -9	; " "
	182	[1553]	CALL     	12 3 0
	183	[1553]	CALL     	10 0 1
	184	[1528]	TFORLOOP 	4 2
	185	[1553]	JMP      	-103	; to 83
	186	[1556]	GETGLOBAL	4 -5	; ipairs
	187	[1556]	GETTABLE 	5 0 -6	; "_commands"
	188	[1556]	CALL     	4 2 4
	189	[1556]	JMP      	4	; to 194
	190	[1557]	SELF     	9 8 -37	; "_fish_complete_help"
	191	[1557]	MOVE     	11 1
	192	[1557]	MOVE     	12 2
	193	[1557]	CALL     	9 4 1
	194	[1556]	TFORLOOP 	4 2
	195	[1557]	JMP      	-6	; to 190
	196	[1559]	RETURN   	0 1

function <./argparse.lua:1561,1591> (49 instructions, 196 bytes at 0x7fe3c2d08390)
1 param, 10 slots, 1 upvalue, 2 locals, 16 constants, 0 functions
	1	[1562]	GETUPVAL 	1 0	; base_name
	2	[1562]	GETTABLE 	2 0 -2	; "_name"
	3	[1562]	CALL     	1 2 2
	4	[1562]	SETTABLE 	0 -1 1	; "_basename" -
	5	[1563]	GETGLOBAL	1 -3	; assert
	6	[1563]	SELF     	2 0 -4	; "_is_shell_safe"
	7	[1563]	CALL     	2 2 0
	8	[1563]	CALL     	1 0 1
	9	[1564]	NEWTABLE 	1 0 0
	10	[1566]	GETTABLE 	2 0 -5	; "_commands"
	11	[1566]	LEN      	2 2
	12	[1566]	LT       	0 -6 2	; 0 -
	13	[1566]	JMP      	23	; to 37
	14	[1567]	GETGLOBAL	2 -7	; table
	15	[1567]	GETTABLE 	2 2 -8	; "insert"
	16	[1567]	MOVE     	3 1
	17	[1570]	LOADK    	4 -9	; "function __fish_%s_print_command\n    set -l cmdline (commandline -poc)\n    set -l cmd"
	18	[1570]	SELF     	4 4 -10	; "format"
	19	[1570]	GETTABLE 	6 0 -1	; "_basename"
	20	[1570]	CALL     	4 3 0
	21	[1567]	CALL     	2 0 1
	22	[1571]	SELF     	2 0 -11	; "_fish_get_cmd"
	23	[1571]	MOVE     	4 1
	24	[1571]	LOADK    	5 -12	; 4
	25	[1571]	CALL     	2 4 1
	26	[1572]	GETGLOBAL	2 -7	; table
	27	[1572]	GETTABLE 	2 2 -8	; "insert"
	28	[1572]	MOVE     	3 1
	29	[1586]	LOADK    	4 -13	; "    echo \"$cmd\"\nend\n\nfunction __fish_%s_using_command\n    test (__fish_%s_print_command) = \"$argv\"\n    and return 0\n    or return 1\nend\n\nfunction __fish_%s_seen_command\n    string match -q \"$argv*\" (__fish_%s_print_command)\n    and return 0\n    or return 1\nend"
	30	[1586]	SELF     	4 4 -10	; "format"
	31	[1586]	GETTABLE 	6 0 -1	; "_basename"
	32	[1586]	GETTABLE 	7 0 -1	; "_basename"
	33	[1586]	GETTABLE 	8 0 -1	; "_basename"
	34	[1586]	GETTABLE 	9 0 -1	; "_basename"
	35	[1586]	CALL     	4 6 0
	36	[1572]	CALL     	2 0 1
	37	[1589]	SELF     	2 0 -14	; "_fish_complete_help"
	38	[1589]	MOVE     	4 1
	39	[1589]	GETTABLE 	5 0 -1	; "_basename"
	40	[1589]	CALL     	2 4 1
	41	[1590]	GETGLOBAL	2 -7	; table
	42	[1590]	GETTABLE 	2 2 -15	; "concat"
	43	[1590]	MOVE     	3 1
	44	[1590]	LOADK    	4 -16	; "\n"
	45	[1590]	CALL     	2 3 2
	46	[1590]	LOADK    	3 -16	; "\n"
	47	[1590]	CONCAT   	2 2 3
	48	[1590]	RETURN   	2 2
	49	[1591]	RETURN   	0 1

function <./argparse.lua:1593,1642> (115 instructions, 460 bytes at 0x7fe3c2d07720)
2 params, 17 slots, 0 upvalues, 28 locals, 19 constants, 0 functions
	1	[1594]	NEWTABLE 	2 0 0
	2	[1595]	LOADNIL  	3 3
	3	[1596]	NEWTABLE 	4 0 0
	4	[1598]	GETGLOBAL	5 -1	; pairs
	5	[1598]	MOVE     	6 0
	6	[1598]	CALL     	5 2 4
	7	[1598]	JMP      	28	; to 36
	8	[1599]	GETGLOBAL	9 -2	; type
	9	[1599]	MOVE     	10 8
	10	[1599]	CALL     	9 2 2
	11	[1599]	EQ       	0 9 -3	; - "string"
	12	[1599]	JMP      	23	; to 36
	13	[1600]	LOADK    	9 -4	; 1
	14	[1600]	LEN      	10 8
	15	[1600]	LOADK    	11 -4	; 1
	16	[1600]	FORPREP  	9 18	; to 35
	17	[1601]	SELF     	13 8 -5	; "sub"
	18	[1601]	LOADK    	15 -4	; 1
	19	[1601]	SUB      	16 12 -4	; - 1
	20	[1601]	CALL     	13 4 2
	21	[1601]	SELF     	14 8 -5	; "sub"
	22	[1601]	ADD      	16 12 -4	; - 1
	23	[1601]	CALL     	14 3 2
	24	[1601]	CONCAT   	3 13 14
	25	[1603]	GETTABLE 	13 2 3
	26	[1603]	TEST     	13 0 1
	27	[1603]	JMP      	2	; to 30
	28	[1604]	NEWTABLE 	13 0 0
	29	[1604]	SETTABLE 	2 3 13
	30	[1607]	GETGLOBAL	13 -6	; table
	31	[1607]	GETTABLE 	13 13 -7	; "insert"
	32	[1607]	GETTABLE 	14 2 3
	33	[1607]	MOVE     	15 8
	34	[1607]	CALL     	13 3 1
	35	[1600]	FORLOOP  	9 -19	; to 17
	36	[1598]	TFORLOOP 	5 1
	37	[1609]	JMP      	-30	; to 8
	38	[1612]	LOADK    	5 -4	; 1
	39	[1612]	LEN      	6 1
	40	[1612]	ADD      	6 6 -4	; - 1
	41	[1612]	LOADK    	7 -4	; 1
	42	[1612]	FORPREP  	5 23	; to 66
	43	[1613]	SELF     	9 1 -5	; "sub"
	44	[1613]	LOADK    	11 -4	; 1
	45	[1613]	SUB      	12 8 -4	; - 1
	46	[1613]	CALL     	9 4 2
	47	[1613]	SELF     	10 1 -5	; "sub"
	48	[1613]	ADD      	12 8 -4	; - 1
	49	[1613]	CALL     	10 3 2
	50	[1613]	CONCAT   	3 9 10
	51	[1615]	GETTABLE 	9 0 3
	52	[1615]	TEST     	9 0 0
	53	[1615]	JMP      	2	; to 56
	54	[1616]	SETTABLE 	4 3 -8	; - true
	55	[1616]	JMP      	10	; to 66
	56	[1617]	GETTABLE 	9 2 3
	57	[1617]	TEST     	9 0 0
	58	[1617]	JMP      	7	; to 66
	59	[1618]	GETGLOBAL	9 -9	; ipairs
	60	[1618]	GETTABLE 	10 2 3
	61	[1618]	CALL     	9 2 4
	62	[1618]	JMP      	1	; to 64
	63	[1619]	SETTABLE 	4 13 -8	; - true
	64	[1618]	TFORLOOP 	9 2
	65	[1619]	JMP      	-3	; to 63
	66	[1612]	FORLOOP  	5 -24	; to 43
	67	[1624]	GETGLOBAL	5 -10	; next
	68	[1624]	MOVE     	6 4
	69	[1624]	CALL     	5 2 2
	70	[1626]	TEST     	5 0 0
	71	[1626]	JMP      	41	; to 113
	72	[1627]	GETGLOBAL	6 -10	; next
	73	[1627]	MOVE     	7 4
	74	[1627]	MOVE     	8 5
	75	[1627]	CALL     	6 3 2
	76	[1627]	TEST     	6 0 0
	77	[1627]	JMP      	29	; to 107
	78	[1628]	NEWTABLE 	6 0 0
	79	[1630]	GETGLOBAL	7 -1	; pairs
	80	[1630]	MOVE     	8 4
	81	[1630]	CALL     	7 2 4
	82	[1630]	JMP      	8	; to 91
	83	[1631]	GETGLOBAL	11 -6	; table
	84	[1631]	GETTABLE 	11 11 -7	; "insert"
	85	[1631]	MOVE     	12 6
	86	[1631]	LOADK    	13 -11	; "'"
	87	[1631]	MOVE     	14 10
	88	[1631]	LOADK    	15 -11	; "'"
	89	[1631]	CONCAT   	13 13 15
	90	[1631]	CALL     	11 3 1
	91	[1630]	TFORLOOP 	7 1
	92	[1631]	JMP      	-10	; to 83
	93	[1634]	GETGLOBAL	7 -6	; table
	94	[1634]	GETTABLE 	7 7 -12	; "sort"
	95	[1634]	MOVE     	8 6
	96	[1634]	CALL     	7 2 1
	97	[1635]	LOADK    	7 -13	; "\nDid you mean one of these: "
	98	[1635]	GETGLOBAL	8 -6	; table
	99	[1635]	GETTABLE 	8 8 -14	; "concat"
	100	[1635]	MOVE     	9 6
	101	[1635]	LOADK    	10 -15	; " "
	102	[1635]	CALL     	8 3 2
	103	[1635]	LOADK    	9 -16	; "?"
	104	[1635]	CONCAT   	7 7 9
	105	[1635]	RETURN   	7 2
	106	[1635]	JMP      	8	; to 115
	107	[1637]	LOADK    	6 -17	; "\nDid you mean '"
	108	[1637]	MOVE     	7 5
	109	[1637]	LOADK    	8 -18	; "'?"
	110	[1637]	CONCAT   	6 6 8
	111	[1637]	RETURN   	6 2
	112	[1638]	JMP      	2	; to 115
	113	[1640]	LOADK    	6 -19	; ""
	114	[1640]	RETURN   	6 2
	115	[1642]	RETURN   	0 1

function <./argparse.lua:1648,1655> (18 instructions, 72 bytes at 0x7fe3c2d08d60)
3 params, 7 slots, 0 upvalues, 3 locals, 8 constants, 0 functions
	1	[1649]	SETTABLE 	0 -1 1	; "state" -
	2	[1650]	GETTABLE 	3 1 -2	; "result"
	3	[1650]	SETTABLE 	0 -2 3	; "result" -
	4	[1651]	SETTABLE 	0 -3 2	; "element" -
	5	[1652]	GETTABLE 	3 2 -5	; "_target"
	6	[1652]	TEST     	3 0 1
	7	[1652]	JMP      	2	; to 10
	8	[1652]	SELF     	3 2 -6	; "_get_default_target"
	9	[1652]	CALL     	3 2 2
	10	[1652]	SETTABLE 	0 -4 3	; "target" -
	11	[1653]	GETTABLE 	3 0 -2	; "result"
	12	[1653]	GETTABLE 	4 0 -4	; "target"
	13	[1653]	SELF     	5 2 -8	; "_get_action"
	14	[1653]	CALL     	5 2 3
	15	[1653]	SETTABLE 	3 4 6
	16	[1653]	SETTABLE 	0 -7 5	; "action" -
	17	[1654]	RETURN   	0 2
	18	[1655]	RETURN   	0 1

function <./argparse.lua:1657,1659> (6 instructions, 24 bytes at 0x7fe3c2d096b0)
2+ params, 7 slots, 0 upvalues, 3 locals, 2 constants, 0 functions
	1	[1658]	GETTABLE 	3 0 -1	; "state"
	2	[1658]	SELF     	3 3 -2	; "error"
	3	[1658]	MOVE     	5 1
	4	[1658]	VARARG   	6 0
	5	[1658]	CALL     	3 0 1
	6	[1659]	RETURN   	0 1

function <./argparse.lua:1661,1683> (44 instructions, 176 bytes at 0x7fe3c2d09ac0)
3 params, 10 slots, 0 upvalues, 6 locals, 8 constants, 0 functions
	1	[1662]	GETTABLE 	3 0 -1	; "element"
	2	[1662]	GETTABLE 	3 3 -2	; "_convert"
	3	[1664]	TEST     	3 0 0
	4	[1664]	JMP      	38	; to 43
	5	[1665]	LOADNIL  	4 5
	6	[1667]	GETGLOBAL	6 -3	; type
	7	[1667]	MOVE     	7 3
	8	[1667]	CALL     	6 2 2
	9	[1667]	EQ       	0 6 -4	; - "function"
	10	[1667]	JMP      	6	; to 17
	11	[1668]	MOVE     	6 3
	12	[1668]	MOVE     	7 1
	13	[1668]	CALL     	6 2 3
	14	[1668]	MOVE     	5 7
	15	[1668]	MOVE     	4 6
	16	[1668]	JMP      	12	; to 29
	17	[1669]	GETGLOBAL	6 -3	; type
	18	[1669]	GETTABLE 	7 3 2
	19	[1669]	CALL     	6 2 2
	20	[1669]	EQ       	0 6 -4	; - "function"
	21	[1669]	JMP      	6	; to 28
	22	[1670]	GETTABLE 	6 3 2
	23	[1670]	MOVE     	7 1
	24	[1670]	CALL     	6 2 3
	25	[1670]	MOVE     	5 7
	26	[1670]	MOVE     	4 6
	27	[1670]	JMP      	1	; to 29
	28	[1672]	GETTABLE 	4 3 1
	29	[1675]	EQ       	0 4 -5	; - nil
	30	[1675]	JMP      	11	; to 42
	31	[1676]	SELF     	6 0 -6	; "error"
	32	[1676]	TEST     	5 0 0
	33	[1676]	JMP      	3	; to 37
	34	[1676]	LOADK    	8 -7	; "%s"
	35	[1676]	TEST     	8 0 1
	36	[1676]	JMP      	1	; to 38
	37	[1676]	LOADK    	8 -8	; "malformed argument '%s'"
	38	[1676]	TESTSET  	9 5 1
	39	[1676]	JMP      	1	; to 41
	40	[1676]	MOVE     	9 1
	41	[1676]	CALL     	6 4 1
	42	[1679]	MOVE     	1 4
	43	[1682]	RETURN   	1 2
	44	[1683]	RETURN   	0 1

function <./argparse.lua:1685,1687> (11 instructions, 44 bytes at 0x7fe3c2d09ec0)
2 params, 5 slots, 0 upvalues, 2 locals, 4 constants, 0 functions
	1	[1686]	GETTABLE 	2 0 -1	; "element"
	2	[1686]	GETTABLE 	2 2 -2	; "_defmode"
	3	[1686]	SELF     	2 2 -3	; "find"
	4	[1686]	MOVE     	4 1
	5	[1686]	CALL     	2 3 2
	6	[1686]	TEST     	2 0 0
	7	[1686]	JMP      	2	; to 10
	8	[1686]	GETTABLE 	2 0 -1	; "element"
	9	[1686]	GETTABLE 	2 2 -4	; "_default"
	10	[1686]	RETURN   	2 2
	11	[1687]	RETURN   	0 1

function <./argparse.lua:1689,1698> (32 instructions, 128 bytes at 0x7fe3c2d09e20)
4 params, 11 slots, 0 upvalues, 6 locals, 8 constants, 0 functions
	1	[1690]	LOADK    	4 -1	; ""
	2	[1692]	EQ       	1 1 2
	3	[1692]	JMP      	9	; to 13
	4	[1693]	LOADK    	5 -2	; "at "
	5	[1693]	TEST     	3 0 0
	6	[1693]	JMP      	3	; to 10
	7	[1693]	LOADK    	6 -3	; "most"
	8	[1693]	TEST     	6 0 1
	9	[1693]	JMP      	1	; to 11
	10	[1693]	LOADK    	6 -4	; "least"
	11	[1693]	LOADK    	7 -5	; " "
	12	[1693]	CONCAT   	4 5 7
	13	[1696]	TEST     	3 0 0
	14	[1696]	JMP      	2	; to 17
	15	[1696]	TESTSET  	5 2 1
	16	[1696]	JMP      	1	; to 18
	17	[1696]	MOVE     	5 1
	18	[1697]	MOVE     	6 4
	19	[1697]	GETGLOBAL	7 -6	; tostring
	20	[1697]	MOVE     	8 5
	21	[1697]	CALL     	7 2 2
	22	[1697]	LOADK    	8 -5	; " "
	23	[1697]	MOVE     	9 0
	24	[1697]	EQ       	0 5 -7	; - 1
	25	[1697]	JMP      	3	; to 29
	26	[1697]	LOADK    	10 -1	; ""
	27	[1697]	TEST     	10 0 1
	28	[1697]	JMP      	1	; to 30
	29	[1697]	LOADK    	10 -8	; "s"
	30	[1697]	CONCAT   	6 6 10
	31	[1697]	RETURN   	6 2
	32	[1698]	RETURN   	0 1

function <./argparse.lua:1700,1702> (15 instructions, 60 bytes at 0x7fe3c2d0a970)
2 params, 6 slots, 0 upvalues, 2 locals, 7 constants, 0 functions
	1	[1701]	LOADK    	2 -2	; "%s '%s'"
	2	[1701]	SELF     	2 2 -3	; "format"
	3	[1701]	TEST     	1 0 0
	4	[1701]	JMP      	3	; to 8
	5	[1701]	LOADK    	4 -4	; "option"
	6	[1701]	TEST     	4 0 1
	7	[1701]	JMP      	1	; to 9
	8	[1701]	LOADK    	4 -5	; "argument"
	9	[1701]	TESTSET  	5 1 1
	10	[1701]	JMP      	2	; to 13
	11	[1701]	GETTABLE 	5 0 -6	; "element"
	12	[1701]	GETTABLE 	5 5 -7	; "_name"
	13	[1701]	CALL     	2 4 2
	14	[1701]	SETTABLE 	0 -1 2	; "name" -
	15	[1702]	RETURN   	0 1

function <./argparse.lua:1704,1726> (41 instructions, 164 bytes at 0x7fe3c2d0aba0)
1 param, 7 slots, 1 upvalue, 2 locals, 18 constants, 0 functions
	1	[1705]	SETTABLE 	0 -1 -2	; "open" true
	2	[1706]	SETTABLE 	0 -3 -4	; "overwrite" false
	3	[1708]	GETTABLE 	1 0 -5	; "invocations"
	4	[1708]	GETTABLE 	2 0 -6	; "element"
	5	[1708]	GETTABLE 	2 2 -7	; "_maxcount"
	6	[1708]	LE       	0 2 1
	7	[1708]	JMP      	20	; to 28
	8	[1709]	GETTABLE 	1 0 -6	; "element"
	9	[1709]	GETTABLE 	1 1 -8	; "_overwrite"
	10	[1709]	TEST     	1 0 0
	11	[1709]	JMP      	2	; to 14
	12	[1710]	SETTABLE 	0 -3 -2	; "overwrite" true
	13	[1710]	JMP      	17	; to 31
	14	[1712]	GETUPVAL 	1 0	; bound
	15	[1712]	LOADK    	2 -9	; "time"
	16	[1712]	GETTABLE 	3 0 -6	; "element"
	17	[1712]	GETTABLE 	3 3 -10	; "_mincount"
	18	[1712]	GETTABLE 	4 0 -6	; "element"
	19	[1712]	GETTABLE 	4 4 -7	; "_maxcount"
	20	[1712]	LOADBOOL 	5 1 0
	21	[1712]	CALL     	1 5 2
	22	[1713]	SELF     	2 0 -11	; "error"
	23	[1713]	LOADK    	4 -12	; "%s must be used %s"
	24	[1713]	GETTABLE 	5 0 -13	; "name"
	25	[1713]	MOVE     	6 1
	26	[1713]	CALL     	2 5 1
	27	[1714]	JMP      	3	; to 31
	28	[1716]	GETTABLE 	1 0 -5	; "invocations"
	29	[1716]	ADD      	1 1 -14	; - 1
	30	[1716]	SETTABLE 	0 -5 1	; "invocations" -
	31	[1719]	NEWTABLE 	1 0 0
	32	[1719]	SETTABLE 	0 -15 1	; "args" -
	33	[1721]	GETTABLE 	1 0 -6	; "element"
	34	[1721]	GETTABLE 	1 1 -16	; "_maxargs"
	35	[1721]	LE       	0 1 -17	; - 0
	36	[1721]	JMP      	2	; to 39
	37	[1722]	SELF     	1 0 -18	; "close"
	38	[1722]	CALL     	1 2 1
	39	[1725]	GETTABLE 	1 0 -1	; "open"
	40	[1725]	RETURN   	1 2
	41	[1726]	RETURN   	0 1

function <./argparse.lua:1728,1739> (43 instructions, 172 bytes at 0x7fe3c2d0b120)
2 params, 10 slots, 1 upvalue, 9 locals, 13 constants, 0 functions
	1	[1729]	GETTABLE 	2 0 -1	; "element"
	2	[1729]	GETTABLE 	2 2 -2	; "_choices"
	3	[1729]	TEST     	2 0 0
	4	[1729]	JMP      	38	; to 43
	5	[1730]	GETGLOBAL	2 -3	; ipairs
	6	[1730]	GETTABLE 	3 0 -1	; "element"
	7	[1730]	GETTABLE 	3 3 -2	; "_choices"
	8	[1730]	CALL     	2 2 4
	9	[1730]	JMP      	3	; to 13
	10	[1731]	EQ       	0 1 6
	11	[1731]	JMP      	1	; to 13
	12	[1732]	RETURN   	0 1
	13	[1730]	TFORLOOP 	2 2
	14	[1733]	JMP      	-5	; to 10
	15	[1735]	LOADK    	2 -4	; "'"
	16	[1735]	GETGLOBAL	3 -5	; table
	17	[1735]	GETTABLE 	3 3 -6	; "concat"
	18	[1735]	GETTABLE 	4 0 -1	; "element"
	19	[1735]	GETTABLE 	4 4 -2	; "_choices"
	20	[1735]	LOADK    	5 -7	; "', '"
	21	[1735]	CALL     	3 3 2
	22	[1735]	LOADK    	4 -4	; "'"
	23	[1735]	CONCAT   	2 2 4
	24	[1736]	GETGLOBAL	3 -8	; getmetatable
	25	[1736]	GETTABLE 	4 0 -1	; "element"
	26	[1736]	CALL     	3 2 2
	27	[1736]	GETUPVAL 	4 0	; Option
	28	[1736]	EQ       	1 3 4
	29	[1736]	JMP      	1	; to 31
	30	[1736]	LOADBOOL 	3 0 1
	31	[1736]	LOADBOOL 	3 1 0
	32	[1737]	SELF     	4 0 -9	; "error"
	33	[1737]	LOADK    	6 -10	; "%s%s must be one of %s"
	34	[1737]	TEST     	3 0 0
	35	[1737]	JMP      	3	; to 39
	36	[1737]	LOADK    	7 -11	; "argument for "
	37	[1737]	TEST     	7 0 1
	38	[1737]	JMP      	1	; to 40
	39	[1737]	LOADK    	7 -12	; ""
	40	[1737]	GETTABLE 	8 0 -13	; "name"
	41	[1737]	MOVE     	9 2
	42	[1737]	CALL     	4 6 1
	43	[1739]	RETURN   	0 1

function <./argparse.lua:1741,1751> (26 instructions, 104 bytes at 0x7fe3c2d0af70)
2 params, 6 slots, 0 upvalues, 2 locals, 10 constants, 0 functions
	1	[1742]	SELF     	2 0 -1	; "check_choices"
	2	[1742]	MOVE     	4 1
	3	[1742]	CALL     	2 3 1
	4	[1743]	SELF     	2 0 -2	; "convert"
	5	[1743]	MOVE     	4 1
	6	[1743]	GETTABLE 	5 0 -3	; "args"
	7	[1743]	LEN      	5 5
	8	[1743]	ADD      	5 5 -4	; - 1
	9	[1743]	CALL     	2 4 2
	10	[1743]	MOVE     	1 2
	11	[1744]	GETGLOBAL	2 -5	; table
	12	[1744]	GETTABLE 	2 2 -6	; "insert"
	13	[1744]	GETTABLE 	3 0 -3	; "args"
	14	[1744]	MOVE     	4 1
	15	[1744]	CALL     	2 3 1
	16	[1746]	GETTABLE 	2 0 -3	; "args"
	17	[1746]	LEN      	2 2
	18	[1746]	GETTABLE 	3 0 -7	; "element"
	19	[1746]	GETTABLE 	3 3 -8	; "_maxargs"
	20	[1746]	LE       	0 3 2
	21	[1746]	JMP      	2	; to 24
	22	[1747]	SELF     	2 0 -9	; "close"
	23	[1747]	CALL     	2 2 1
	24	[1750]	GETTABLE 	2 0 -10	; "open"
	25	[1750]	RETURN   	2 2
	26	[1751]	RETURN   	0 1

function <./argparse.lua:1753,1757> (12 instructions, 48 bytes at 0x7fe3c2d0b650)
1 param, 4 slots, 0 upvalues, 1 local, 5 constants, 0 functions
	1	[1754]	GETTABLE 	1 0 -1	; "args"
	2	[1754]	LEN      	1 1
	3	[1754]	GETTABLE 	2 0 -2	; "element"
	4	[1754]	GETTABLE 	2 2 -3	; "_minargs"
	5	[1754]	LT       	0 1 2
	6	[1754]	JMP      	5	; to 12
	7	[1755]	SELF     	1 0 -4	; "pass"
	8	[1755]	GETTABLE 	3 0 -2	; "element"
	9	[1755]	GETTABLE 	3 3 -5	; "_default"
	10	[1755]	CALL     	1 3 1
	11	[1755]	JMP      	-11	; to 1
	12	[1757]	RETURN   	0 1

function <./argparse.lua:1759,1795> (87 instructions, 348 bytes at 0x7fe3c2d0c190)
1 param, 9 slots, 2 upvalues, 2 locals, 24 constants, 0 functions
	1	[1760]	GETTABLE 	1 0 -1	; "open"
	2	[1760]	TEST     	1 0 0
	3	[1760]	JMP      	83	; to 87
	4	[1761]	SETTABLE 	0 -1 -2	; "open" false
	5	[1763]	GETTABLE 	1 0 -3	; "args"
	6	[1763]	LEN      	1 1
	7	[1763]	GETTABLE 	2 0 -4	; "element"
	8	[1763]	GETTABLE 	2 2 -5	; "_minargs"
	9	[1763]	LT       	0 1 2
	10	[1763]	JMP      	42	; to 53
	11	[1764]	SELF     	1 0 -6	; "default"
	12	[1764]	LOADK    	3 -7	; "a"
	13	[1764]	CALL     	1 3 2
	14	[1764]	TEST     	1 0 0
	15	[1764]	JMP      	3	; to 19
	16	[1765]	SELF     	1 0 -8	; "complete_invocation"
	17	[1765]	CALL     	1 2 1
	18	[1765]	JMP      	34	; to 53
	19	[1767]	GETTABLE 	1 0 -3	; "args"
	20	[1767]	LEN      	1 1
	21	[1767]	EQ       	0 1 -9	; - 0
	22	[1767]	JMP      	19	; to 42
	23	[1768]	GETGLOBAL	1 -10	; getmetatable
	24	[1768]	GETTABLE 	2 0 -4	; "element"
	25	[1768]	CALL     	1 2 2
	26	[1768]	GETUPVAL 	2 0	; Argument
	27	[1768]	EQ       	0 1 2
	28	[1768]	JMP      	5	; to 34
	29	[1769]	SELF     	1 0 -11	; "error"
	30	[1769]	LOADK    	3 -12	; "missing %s"
	31	[1769]	GETTABLE 	4 0 -13	; "name"
	32	[1769]	CALL     	1 4 1
	33	[1769]	JMP      	8	; to 42
	34	[1770]	GETTABLE 	1 0 -4	; "element"
	35	[1770]	GETTABLE 	1 1 -14	; "_maxargs"
	36	[1770]	EQ       	0 1 -15	; - 1
	37	[1770]	JMP      	4	; to 42
	38	[1771]	SELF     	1 0 -11	; "error"
	39	[1771]	LOADK    	3 -16	; "%s requires an argument"
	40	[1771]	GETTABLE 	4 0 -13	; "name"
	41	[1771]	CALL     	1 4 1
	42	[1775]	SELF     	1 0 -11	; "error"
	43	[1775]	LOADK    	3 -17	; "%s requires %s"
	44	[1775]	GETTABLE 	4 0 -13	; "name"
	45	[1775]	GETUPVAL 	5 1	; bound
	46	[1775]	LOADK    	6 -18	; "argument"
	47	[1775]	GETTABLE 	7 0 -4	; "element"
	48	[1775]	GETTABLE 	7 7 -5	; "_minargs"
	49	[1775]	GETTABLE 	8 0 -4	; "element"
	50	[1775]	GETTABLE 	8 8 -14	; "_maxargs"
	51	[1775]	CALL     	5 4 0
	52	[1775]	CALL     	1 0 1
	53	[1779]	LOADNIL  	1 1
	54	[1781]	GETTABLE 	2 0 -4	; "element"
	55	[1781]	GETTABLE 	2 2 -14	; "_maxargs"
	56	[1781]	EQ       	0 2 -9	; - 0
	57	[1781]	JMP      	3	; to 61
	58	[1782]	GETTABLE 	2 0 -3	; "args"
	59	[1782]	GETTABLE 	1 2 -15	; 1
	60	[1782]	JMP      	20	; to 81
	61	[1783]	GETTABLE 	2 0 -4	; "element"
	62	[1783]	GETTABLE 	2 2 -14	; "_maxargs"
	63	[1783]	EQ       	0 2 -15	; - 1
	64	[1783]	JMP      	15	; to 80
	65	[1784]	GETTABLE 	2 0 -4	; "element"
	66	[1784]	GETTABLE 	2 2 -5	; "_minargs"
	67	[1784]	EQ       	0 2 -9	; - 0
	68	[1784]	JMP      	8	; to 77
	69	[1784]	GETTABLE 	2 0 -4	; "element"
	70	[1784]	GETTABLE 	2 2 -19	; "_mincount"
	71	[1784]	GETTABLE 	3 0 -4	; "element"
	72	[1784]	GETTABLE 	3 3 -20	; "_maxcount"
	73	[1784]	EQ       	1 2 3
	74	[1784]	JMP      	2	; to 77
	75	[1785]	GETTABLE 	1 0 -3	; "args"
	76	[1785]	JMP      	4	; to 81
	77	[1787]	GETTABLE 	2 0 -3	; "args"
	78	[1787]	GETTABLE 	1 2 -15	; 1
	79	[1788]	JMP      	1	; to 81
	80	[1790]	GETTABLE 	1 0 -3	; "args"
	81	[1793]	GETTABLE 	2 0 -21	; "action"
	82	[1793]	GETTABLE 	3 0 -22	; "result"
	83	[1793]	GETTABLE 	4 0 -23	; "target"
	84	[1793]	MOVE     	5 1
	85	[1793]	GETTABLE 	6 0 -24	; "overwrite"
	86	[1793]	CALL     	2 5 1
	87	[1795]	RETURN   	0 1

function <./argparse.lua:1807,1813> (10 instructions, 40 bytes at 0x7fe3c2d0c670)
3 params, 6 slots, 0 upvalues, 3 locals, 5 constants, 0 functions
	1	[1808]	SETTABLE 	0 -1 1	; "parser" -
	2	[1809]	SETTABLE 	0 -2 2	; "error_handler" -
	3	[1810]	SELF     	3 1 -4	; "_update_charset"
	4	[1810]	CALL     	3 2 2
	5	[1810]	SETTABLE 	0 -3 3	; "charset" -
	6	[1811]	SELF     	3 0 -5	; "switch"
	7	[1811]	MOVE     	5 1
	8	[1811]	CALL     	3 3 1
	9	[1812]	RETURN   	0 2
	10	[1813]	RETURN   	0 1

function <./argparse.lua:1815,1817> (7 instructions, 28 bytes at 0x7fe3c2d0ce70)
2+ params, 8 slots, 0 upvalues, 3 locals, 3 constants, 0 functions
	1	[1816]	GETTABLE 	3 0 -1	; "error_handler"
	2	[1816]	GETTABLE 	4 0 -2	; "parser"
	3	[1816]	SELF     	5 1 -3	; "format"
	4	[1816]	VARARG   	7 0
	5	[1816]	CALL     	5 0 0
	6	[1816]	CALL     	3 0 1
	7	[1817]	RETURN   	0 1

function <./argparse.lua:1819,1861> (106 instructions, 424 bytes at 0x7fe3c2d0d290)
2 params, 15 slots, 1 upvalue, 37 locals, 25 constants, 0 functions
	1	[1820]	SETTABLE 	0 -1 1	; "parser" -
	2	[1822]	GETTABLE 	2 1 -2	; "_action"
	3	[1822]	TEST     	2 0 0
	4	[1822]	JMP      	9	; to 14
	5	[1823]	GETGLOBAL	2 -3	; table
	6	[1823]	GETTABLE 	2 2 -4	; "insert"
	7	[1823]	GETTABLE 	3 0 -5	; "command_actions"
	8	[1823]	NEWTABLE 	4 0 2
	9	[1823]	GETTABLE 	5 1 -2	; "_action"
	10	[1823]	SETTABLE 	4 -6 5	; "action" -
	11	[1823]	GETTABLE 	5 1 -8	; "_name"
	12	[1823]	SETTABLE 	4 -7 5	; "name" -
	13	[1823]	CALL     	2 3 1
	14	[1826]	GETGLOBAL	2 -9	; ipairs
	15	[1826]	GETTABLE 	3 1 -10	; "_options"
	16	[1826]	CALL     	2 2 4
	17	[1826]	JMP      	19	; to 37
	18	[1827]	GETUPVAL 	7 0	; ElementState
	19	[1827]	MOVE     	8 0
	20	[1827]	MOVE     	9 6
	21	[1827]	CALL     	7 3 2
	22	[1827]	MOVE     	6 7
	23	[1828]	GETGLOBAL	7 -3	; table
	24	[1828]	GETTABLE 	7 7 -4	; "insert"
	25	[1828]	GETTABLE 	8 0 -11	; "options"
	26	[1828]	MOVE     	9 6
	27	[1828]	CALL     	7 3 1
	28	[1830]	GETGLOBAL	7 -9	; ipairs
	29	[1830]	GETTABLE 	8 6 -12	; "element"
	30	[1830]	GETTABLE 	8 8 -13	; "_aliases"
	31	[1830]	CALL     	7 2 4
	32	[1830]	JMP      	2	; to 35
	33	[1831]	GETTABLE 	12 0 -11	; "options"
	34	[1831]	SETTABLE 	12 11 6
	35	[1830]	TFORLOOP 	7 2
	36	[1831]	JMP      	-4	; to 33
	37	[1826]	TFORLOOP 	2 2
	38	[1832]	JMP      	-21	; to 18
	39	[1835]	GETGLOBAL	2 -9	; ipairs
	40	[1835]	GETTABLE 	3 1 -14	; "_mutexes"
	41	[1835]	CALL     	2 2 4
	42	[1835]	JMP      	19	; to 62
	43	[1836]	GETGLOBAL	7 -9	; ipairs
	44	[1836]	MOVE     	8 6
	45	[1836]	CALL     	7 2 4
	46	[1836]	JMP      	13	; to 60
	47	[1837]	GETTABLE 	12 0 -15	; "element_to_mutexes"
	48	[1837]	GETTABLE 	12 12 11
	49	[1837]	TEST     	12 0 1
	50	[1837]	JMP      	3	; to 54
	51	[1838]	GETTABLE 	12 0 -15	; "element_to_mutexes"
	52	[1838]	NEWTABLE 	13 0 0
	53	[1838]	SETTABLE 	12 11 13
	54	[1841]	GETGLOBAL	12 -3	; table
	55	[1841]	GETTABLE 	12 12 -4	; "insert"
	56	[1841]	GETTABLE 	13 0 -15	; "element_to_mutexes"
	57	[1841]	GETTABLE 	13 13 11
	58	[1841]	MOVE     	14 6
	59	[1841]	CALL     	12 3 1
	60	[1836]	TFORLOOP 	7 2
	61	[1841]	JMP      	-15	; to 47
	62	[1835]	TFORLOOP 	2 2
	63	[1842]	JMP      	-21	; to 43
	64	[1845]	GETGLOBAL	2 -9	; ipairs
	65	[1845]	GETTABLE 	3 1 -16	; "_arguments"
	66	[1845]	CALL     	2 2 4
	67	[1845]	JMP      	14	; to 82
	68	[1846]	GETUPVAL 	7 0	; ElementState
	69	[1846]	MOVE     	8 0
	70	[1846]	MOVE     	9 6
	71	[1846]	CALL     	7 3 2
	72	[1846]	MOVE     	6 7
	73	[1847]	GETGLOBAL	7 -3	; table
	74	[1847]	GETTABLE 	7 7 -4	; "insert"
	75	[1847]	GETTABLE 	8 0 -17	; "arguments"
	76	[1847]	MOVE     	9 6
	77	[1847]	CALL     	7 3 1
	78	[1848]	SELF     	7 6 -18	; "set_name"
	79	[1848]	CALL     	7 2 1
	80	[1849]	SELF     	7 6 -19	; "invoke"
	81	[1849]	CALL     	7 2 1
	82	[1845]	TFORLOOP 	2 2
	83	[1849]	JMP      	-16	; to 68
	84	[1852]	GETTABLE 	2 1 -21	; "_handle_options"
	85	[1852]	SETTABLE 	0 -20 2	; "handle_options" -
	86	[1853]	GETTABLE 	2 0 -17	; "arguments"
	87	[1853]	GETTABLE 	3 0 -23	; "argument_i"
	88	[1853]	GETTABLE 	2 2 3
	89	[1853]	SETTABLE 	0 -22 2	; "argument" -
	90	[1854]	GETTABLE 	2 1 -25	; "_commands"
	91	[1854]	SETTABLE 	0 -24 2	; "commands" -
	92	[1856]	GETGLOBAL	2 -9	; ipairs
	93	[1856]	GETTABLE 	3 0 -24	; "commands"
	94	[1856]	CALL     	2 2 4
	95	[1856]	JMP      	8	; to 104
	96	[1857]	GETGLOBAL	7 -9	; ipairs
	97	[1857]	GETTABLE 	8 6 -13	; "_aliases"
	98	[1857]	CALL     	7 2 4
	99	[1857]	JMP      	2	; to 102
	100	[1858]	GETTABLE 	12 0 -24	; "commands"
	101	[1858]	SETTABLE 	12 11 6
	102	[1857]	TFORLOOP 	7 2
	103	[1858]	JMP      	-4	; to 100
	104	[1856]	TFORLOOP 	2 2
	105	[1859]	JMP      	-10	; to 96
	106	[1861]	RETURN   	0 1

function <./argparse.lua:1863,1871> (15 instructions, 60 bytes at 0x7fe3c2d0d4b0)
2 params, 10 slots, 1 upvalue, 3 locals, 3 constants, 0 functions
	1	[1864]	GETTABLE 	2 0 -1	; "options"
	2	[1864]	GETTABLE 	2 2 1
	3	[1866]	TEST     	2 0 1
	4	[1866]	JMP      	9	; to 14
	5	[1867]	SELF     	3 0 -2	; "error"
	6	[1867]	LOADK    	5 -3	; "unknown option '%s'%s"
	7	[1867]	MOVE     	6 1
	8	[1867]	GETUPVAL 	7 0	; get_tip
	9	[1867]	GETTABLE 	8 0 -1	; "options"
	10	[1867]	MOVE     	9 1
	11	[1867]	CALL     	7 3 0
	12	[1867]	CALL     	3 0 1
	13	[1867]	JMP      	1	; to 15
	14	[1869]	RETURN   	2 2
	15	[1871]	RETURN   	0 1

function <./argparse.lua:1873,1885> (23 instructions, 92 bytes at 0x7fe3c2d0d8e0)
2 params, 10 slots, 1 upvalue, 3 locals, 5 constants, 0 functions
	1	[1874]	GETTABLE 	2 0 -1	; "commands"
	2	[1874]	GETTABLE 	2 2 1
	3	[1876]	TEST     	2 0 1
	4	[1876]	JMP      	17	; to 22
	5	[1877]	GETTABLE 	3 0 -1	; "commands"
	6	[1877]	LEN      	3 3
	7	[1877]	LT       	0 -2 3	; 0 -
	8	[1877]	JMP      	9	; to 18
	9	[1878]	SELF     	3 0 -3	; "error"
	10	[1878]	LOADK    	5 -4	; "unknown command '%s'%s"
	11	[1878]	MOVE     	6 1
	12	[1878]	GETUPVAL 	7 0	; get_tip
	13	[1878]	GETTABLE 	8 0 -1	; "commands"
	14	[1878]	MOVE     	9 1
	15	[1878]	CALL     	7 3 0
	16	[1878]	CALL     	3 0 1
	17	[1878]	JMP      	5	; to 23
	18	[1880]	SELF     	3 0 -3	; "error"
	19	[1880]	LOADK    	5 -5	; "too many arguments"
	20	[1880]	CALL     	3 3 1
	21	[1881]	JMP      	1	; to 23
	22	[1883]	RETURN   	2 2
	23	[1885]	RETURN   	0 1

function <./argparse.lua:1887,1899> (28 instructions, 112 bytes at 0x7fe3c2d0db10)
2 params, 13 slots, 0 upvalues, 8 locals, 7 constants, 0 functions
	1	[1888]	GETTABLE 	2 0 -1	; "element_to_mutexes"
	2	[1888]	GETTABLE 	3 1 -2	; "element"
	3	[1888]	GETTABLE 	2 2 3
	4	[1888]	TEST     	2 0 0
	5	[1888]	JMP      	22	; to 28
	6	[1889]	GETGLOBAL	2 -3	; ipairs
	7	[1889]	GETTABLE 	3 0 -1	; "element_to_mutexes"
	8	[1889]	GETTABLE 	4 1 -2	; "element"
	9	[1889]	GETTABLE 	3 3 4
	10	[1889]	CALL     	2 2 4
	11	[1889]	JMP      	14	; to 26
	12	[1890]	GETTABLE 	7 0 -4	; "mutex_to_element_state"
	13	[1890]	GETTABLE 	7 7 6
	14	[1892]	TEST     	7 0 0
	15	[1892]	JMP      	8	; to 24
	16	[1892]	EQ       	1 7 1
	17	[1892]	JMP      	6	; to 24
	18	[1893]	SELF     	8 0 -5	; "error"
	19	[1893]	LOADK    	10 -6	; "%s can not be used together with %s"
	20	[1893]	GETTABLE 	11 1 -7	; "name"
	21	[1893]	GETTABLE 	12 7 -7	; "name"
	22	[1893]	CALL     	8 5 1
	23	[1893]	JMP      	2	; to 26
	24	[1895]	GETTABLE 	8 0 -4	; "mutex_to_element_state"
	25	[1895]	SETTABLE 	8 6 1
	26	[1889]	TFORLOOP 	2 2
	27	[1896]	JMP      	-16	; to 12
	28	[1899]	RETURN   	0 1

function <./argparse.lua:1901,1909> (15 instructions, 60 bytes at 0x7fe3c2d0e650)
3 params, 7 slots, 0 upvalues, 3 locals, 5 constants, 0 functions
	1	[1902]	SELF     	3 0 -1	; "close"
	2	[1902]	CALL     	3 2 1
	3	[1903]	SELF     	3 1 -2	; "set_name"
	4	[1903]	MOVE     	5 2
	5	[1903]	CALL     	3 3 1
	6	[1904]	SELF     	3 0 -3	; "check_mutexes"
	7	[1904]	MOVE     	5 1
	8	[1904]	MOVE     	6 2
	9	[1904]	CALL     	3 4 1
	10	[1906]	SELF     	3 1 -4	; "invoke"
	11	[1906]	CALL     	3 2 2
	12	[1906]	TEST     	3 0 0
	13	[1906]	JMP      	1	; to 15
	14	[1907]	SETTABLE 	0 -5 1	; "option" -
	15	[1909]	RETURN   	0 1

function <./argparse.lua:1911,1933> (53 instructions, 212 bytes at 0x7fe3c2d0e790)
2 params, 6 slots, 0 upvalues, 3 locals, 16 constants, 0 functions
	1	[1912]	GETTABLE 	2 0 -1	; "option"
	2	[1912]	TEST     	2 0 0
	3	[1912]	JMP      	8	; to 12
	4	[1913]	GETTABLE 	2 0 -1	; "option"
	5	[1913]	SELF     	2 2 -2	; "pass"
	6	[1913]	MOVE     	4 1
	7	[1913]	CALL     	2 3 2
	8	[1913]	TEST     	2 0 1
	9	[1913]	JMP      	43	; to 53
	10	[1914]	SETTABLE 	0 -1 -3	; "option" nil
	11	[1915]	JMP      	41	; to 53
	12	[1916]	GETTABLE 	2 0 -4	; "argument"
	13	[1916]	TEST     	2 0 0
	14	[1916]	JMP      	17	; to 32
	15	[1917]	SELF     	2 0 -5	; "check_mutexes"
	16	[1917]	GETTABLE 	4 0 -4	; "argument"
	17	[1917]	CALL     	2 3 1
	18	[1919]	GETTABLE 	2 0 -4	; "argument"
	19	[1919]	SELF     	2 2 -2	; "pass"
	20	[1919]	MOVE     	4 1
	21	[1919]	CALL     	2 3 2
	22	[1919]	TEST     	2 0 1
	23	[1919]	JMP      	29	; to 53
	24	[1920]	GETTABLE 	2 0 -6	; "argument_i"
	25	[1920]	ADD      	2 2 -7	; - 1
	26	[1920]	SETTABLE 	0 -6 2	; "argument_i" -
	27	[1921]	GETTABLE 	2 0 -8	; "arguments"
	28	[1921]	GETTABLE 	3 0 -6	; "argument_i"
	29	[1921]	GETTABLE 	2 2 3
	30	[1921]	SETTABLE 	0 -4 2	; "argument" -
	31	[1922]	JMP      	21	; to 53
	32	[1924]	SELF     	2 0 -9	; "get_command"
	33	[1924]	MOVE     	4 1
	34	[1924]	CALL     	2 3 2
	35	[1925]	GETTABLE 	3 0 -10	; "result"
	36	[1925]	GETTABLE 	4 2 -11	; "_target"
	37	[1925]	TEST     	4 0 1
	38	[1925]	JMP      	1	; to 40
	39	[1925]	GETTABLE 	4 2 -12	; "_name"
	40	[1925]	SETTABLE 	3 4 -13	; - true
	41	[1927]	GETTABLE 	3 0 -14	; "parser"
	42	[1927]	GETTABLE 	3 3 -15	; "_command_target"
	43	[1927]	TEST     	3 0 0
	44	[1927]	JMP      	5	; to 50
	45	[1928]	GETTABLE 	3 0 -10	; "result"
	46	[1928]	GETTABLE 	4 0 -14	; "parser"
	47	[1928]	GETTABLE 	4 4 -15	; "_command_target"
	48	[1928]	GETTABLE 	5 2 -12	; "_name"
	49	[1928]	SETTABLE 	3 4 5
	50	[1931]	SELF     	3 0 -16	; "switch"
	51	[1931]	MOVE     	5 2
	52	[1931]	CALL     	3 3 1
	53	[1933]	RETURN   	0 1

function <./argparse.lua:1935,1940> (8 instructions, 32 bytes at 0x7fe3c2d0eda0)
1 param, 3 slots, 0 upvalues, 1 local, 3 constants, 0 functions
	1	[1936]	GETTABLE 	1 0 -1	; "option"
	2	[1936]	TEST     	1 0 0
	3	[1936]	JMP      	4	; to 8
	4	[1937]	GETTABLE 	1 0 -1	; "option"
	5	[1937]	SELF     	1 1 -2	; "close"
	6	[1937]	CALL     	1 2 1
	7	[1938]	SETTABLE 	0 -1 -3	; "option" nil
	8	[1940]	RETURN   	0 1

function <./argparse.lua:1942,1988> (116 instructions, 464 bytes at 0x7fe3c2d0eca0)
1 param, 15 slots, 1 upvalue, 16 locals, 33 constants, 0 functions
	1	[1943]	SELF     	1 0 -1	; "close"
	2	[1943]	CALL     	1 2 1
	3	[1945]	GETTABLE 	1 0 -2	; "argument_i"
	4	[1945]	GETTABLE 	2 0 -3	; "arguments"
	5	[1945]	LEN      	2 2
	6	[1945]	LOADK    	3 -4	; 1
	7	[1945]	FORPREP  	1 16	; to 24
	8	[1946]	GETTABLE 	5 0 -3	; "arguments"
	9	[1946]	GETTABLE 	5 5 4
	10	[1947]	GETTABLE 	6 5 -5	; "args"
	11	[1947]	LEN      	6 6
	12	[1947]	EQ       	0 6 -6	; - 0
	13	[1947]	JMP      	8	; to 22
	14	[1947]	SELF     	6 5 -7	; "default"
	15	[1947]	LOADK    	8 -8	; "u"
	16	[1947]	CALL     	6 3 2
	17	[1947]	TEST     	6 0 0
	18	[1947]	JMP      	3	; to 22
	19	[1948]	SELF     	6 5 -9	; "complete_invocation"
	20	[1948]	CALL     	6 2 1
	21	[1948]	JMP      	2	; to 24
	22	[1950]	SELF     	6 5 -1	; "close"
	23	[1950]	CALL     	6 2 1
	24	[1945]	FORLOOP  	1 -17	; to 8
	25	[1954]	GETTABLE 	1 0 -10	; "parser"
	26	[1954]	GETTABLE 	1 1 -11	; "_require_command"
	27	[1954]	TEST     	1 0 0
	28	[1954]	JMP      	7	; to 36
	29	[1954]	GETTABLE 	1 0 -12	; "commands"
	30	[1954]	LEN      	1 1
	31	[1954]	LT       	0 -6 1	; 0 -
	32	[1954]	JMP      	3	; to 36
	33	[1955]	SELF     	1 0 -13	; "error"
	34	[1955]	LOADK    	3 -14	; "a command is required"
	35	[1955]	CALL     	1 3 1
	36	[1958]	GETGLOBAL	1 -15	; ipairs
	37	[1958]	GETTABLE 	2 0 -16	; "options"
	38	[1958]	CALL     	1 2 4
	39	[1958]	JMP      	60	; to 100
	40	[1959]	GETTABLE 	6 5 -17	; "name"
	41	[1959]	TEST     	6 0 1
	42	[1959]	JMP      	5	; to 48
	43	[1959]	LOADK    	6 -18	; "option '%s'"
	44	[1959]	SELF     	6 6 -19	; "format"
	45	[1959]	GETTABLE 	8 5 -20	; "element"
	46	[1959]	GETTABLE 	8 8 -21	; "_name"
	47	[1959]	CALL     	6 3 2
	48	[1959]	SETTABLE 	5 -17 6	; "name" -
	49	[1961]	GETTABLE 	6 5 -22	; "invocations"
	50	[1961]	EQ       	0 6 -6	; - 0
	51	[1961]	JMP      	11	; to 63
	52	[1962]	SELF     	6 5 -7	; "default"
	53	[1962]	LOADK    	8 -8	; "u"
	54	[1962]	CALL     	6 3 2
	55	[1962]	TEST     	6 0 0
	56	[1962]	JMP      	6	; to 63
	57	[1963]	SELF     	6 5 -23	; "invoke"
	58	[1963]	CALL     	6 2 1
	59	[1964]	SELF     	6 5 -9	; "complete_invocation"
	60	[1964]	CALL     	6 2 1
	61	[1965]	SELF     	6 5 -1	; "close"
	62	[1965]	CALL     	6 2 1
	63	[1969]	GETTABLE 	6 5 -20	; "element"
	64	[1969]	GETTABLE 	6 6 -24	; "_mincount"
	65	[1971]	GETTABLE 	7 5 -22	; "invocations"
	66	[1971]	LT       	0 7 6
	67	[1971]	JMP      	32	; to 100
	68	[1972]	SELF     	7 5 -7	; "default"
	69	[1972]	LOADK    	9 -25	; "a"
	70	[1972]	CALL     	7 3 2
	71	[1972]	TEST     	7 0 0
	72	[1972]	JMP      	9	; to 82
	73	[1973]	GETTABLE 	7 5 -22	; "invocations"
	74	[1973]	LT       	0 7 6
	75	[1973]	JMP      	24	; to 100
	76	[1974]	SELF     	7 5 -23	; "invoke"
	77	[1974]	CALL     	7 2 1
	78	[1975]	SELF     	7 5 -1	; "close"
	79	[1975]	CALL     	7 2 1
	80	[1975]	JMP      	-8	; to 73
	81	[1976]	JMP      	18	; to 100
	82	[1977]	GETTABLE 	7 5 -22	; "invocations"
	83	[1977]	EQ       	0 7 -6	; - 0
	84	[1977]	JMP      	5	; to 90
	85	[1978]	SELF     	7 0 -13	; "error"
	86	[1978]	LOADK    	9 -26	; "missing %s"
	87	[1978]	GETTABLE 	10 5 -17	; "name"
	88	[1978]	CALL     	7 4 1
	89	[1978]	JMP      	10	; to 100
	90	[1980]	SELF     	7 0 -13	; "error"
	91	[1980]	LOADK    	9 -27	; "%s must be used %s"
	92	[1980]	GETTABLE 	10 5 -17	; "name"
	93	[1980]	GETUPVAL 	11 0	; bound
	94	[1980]	LOADK    	12 -28	; "time"
	95	[1980]	MOVE     	13 6
	96	[1980]	GETTABLE 	14 5 -20	; "element"
	97	[1980]	GETTABLE 	14 14 -29	; "_maxcount"
	98	[1980]	CALL     	11 4 0
	99	[1980]	CALL     	7 0 1
	100	[1958]	TFORLOOP 	1 2
	101	[1982]	JMP      	-62	; to 40
	102	[1985]	GETTABLE 	1 0 -30	; "command_actions"
	103	[1985]	LEN      	1 1
	104	[1985]	LOADK    	2 -4	; 1
	105	[1985]	LOADK    	3 -31	; -1
	106	[1985]	FORPREP  	1 8	; to 115
	107	[1986]	GETTABLE 	5 0 -30	; "command_actions"
	108	[1986]	GETTABLE 	5 5 4
	109	[1986]	GETTABLE 	5 5 -32	; "action"
	110	[1986]	GETTABLE 	6 0 -33	; "result"
	111	[1986]	GETTABLE 	7 0 -30	; "command_actions"
	112	[1986]	GETTABLE 	7 7 4
	113	[1986]	GETTABLE 	7 7 -17	; "name"
	114	[1986]	CALL     	5 3 1
	115	[1985]	FORLOOP  	1 -9	; to 107
	116	[1988]	RETURN   	0 1

function <./argparse.lua:1990,2051> (126 instructions, 504 bytes at 0x7fe3c2d0f620)
2 params, 20 slots, 0 upvalues, 20 locals, 21 constants, 0 functions
	1	[1991]	GETGLOBAL	2 -1	; ipairs
	2	[1991]	MOVE     	3 1
	3	[1991]	CALL     	2 2 4
	4	[1991]	JMP      	115	; to 120
	5	[1992]	LOADBOOL 	7 1 0
	6	[1994]	GETTABLE 	8 0 -2	; "handle_options"
	7	[1994]	TEST     	8 0 0
	8	[1994]	JMP      	106	; to 115
	9	[1995]	SELF     	8 6 -3	; "sub"
	10	[1995]	LOADK    	10 -4	; 1
	11	[1995]	LOADK    	11 -4	; 1
	12	[1995]	CALL     	8 4 2
	13	[1997]	GETTABLE 	9 0 -5	; "charset"
	14	[1997]	GETTABLE 	9 9 8
	15	[1997]	TEST     	9 0 0
	16	[1997]	JMP      	98	; to 115
	17	[1998]	LEN      	9 6
	18	[1998]	LT       	0 -4 9	; 1 -
	19	[1998]	JMP      	95	; to 115
	20	[1999]	LOADBOOL 	7 0 0
	21	[2001]	SELF     	9 6 -3	; "sub"
	22	[2001]	LOADK    	11 -6	; 2
	23	[2001]	LOADK    	12 -6	; 2
	24	[2001]	CALL     	9 4 2
	25	[2001]	EQ       	0 9 8
	26	[2001]	JMP      	57	; to 84
	27	[2002]	LEN      	9 6
	28	[2002]	EQ       	0 9 -6	; - 2
	29	[2002]	JMP      	16	; to 46
	30	[2003]	GETTABLE 	9 0 -7	; "options"
	31	[2003]	GETTABLE 	9 9 6
	32	[2003]	TEST     	9 0 0
	33	[2003]	JMP      	8	; to 42
	34	[2004]	SELF     	9 0 -8	; "get_option"
	35	[2004]	MOVE     	11 6
	36	[2004]	CALL     	9 3 2
	37	[2005]	SELF     	10 0 -9	; "invoke"
	38	[2005]	MOVE     	12 9
	39	[2005]	MOVE     	13 6
	40	[2005]	CALL     	10 4 1
	41	[2005]	JMP      	2	; to 44
	42	[2007]	SELF     	9 0 -10	; "close"
	43	[2007]	CALL     	9 2 1
	44	[2010]	SETTABLE 	0 -2 -11	; "handle_options" false
	45	[2010]	JMP      	69	; to 115
	46	[2012]	SELF     	9 6 -12	; "find"
	47	[2012]	LOADK    	11 -13	; "="
	48	[2012]	CALL     	9 3 2
	49	[2013]	TEST     	9 0 0
	50	[2013]	JMP      	25	; to 76
	51	[2014]	SELF     	10 6 -3	; "sub"
	52	[2014]	LOADK    	12 -4	; 1
	53	[2014]	SUB      	13 9 -4	; - 1
	54	[2014]	CALL     	10 4 2
	55	[2015]	SELF     	11 0 -8	; "get_option"
	56	[2015]	MOVE     	13 10
	57	[2015]	CALL     	11 3 2
	58	[2017]	GETTABLE 	12 11 -14	; "element"
	59	[2017]	GETTABLE 	12 12 -15	; "_maxargs"
	60	[2017]	LE       	0 12 -16	; - 0
	61	[2017]	JMP      	4	; to 66
	62	[2018]	SELF     	12 0 -17	; "error"
	63	[2018]	LOADK    	14 -18	; "option '%s' does not take arguments"
	64	[2018]	MOVE     	15 10
	65	[2018]	CALL     	12 4 1
	66	[2021]	SELF     	12 0 -9	; "invoke"
	67	[2021]	MOVE     	14 11
	68	[2021]	MOVE     	15 10
	69	[2021]	CALL     	12 4 1
	70	[2022]	SELF     	12 0 -19	; "pass"
	71	[2022]	SELF     	14 6 -3	; "sub"
	72	[2022]	ADD      	16 9 -4	; - 1
	73	[2022]	CALL     	14 3 0
	74	[2022]	CALL     	12 0 1
	75	[2022]	JMP      	39	; to 115
	76	[2024]	SELF     	10 0 -8	; "get_option"
	77	[2024]	MOVE     	12 6
	78	[2024]	CALL     	10 3 2
	79	[2025]	SELF     	11 0 -9	; "invoke"
	80	[2025]	MOVE     	13 10
	81	[2025]	MOVE     	14 6
	82	[2025]	CALL     	11 4 1
	83	[2027]	JMP      	31	; to 115
	84	[2029]	LOADK    	9 -6	; 2
	85	[2029]	LEN      	10 6
	86	[2029]	LOADK    	11 -4	; 1
	87	[2029]	FORPREP  	9 26	; to 114
	88	[2030]	MOVE     	13 8
	89	[2030]	SELF     	14 6 -3	; "sub"
	90	[2030]	MOVE     	16 12
	91	[2030]	MOVE     	17 12
	92	[2030]	CALL     	14 4 2
	93	[2030]	CONCAT   	13 13 14
	94	[2031]	SELF     	14 0 -8	; "get_option"
	95	[2031]	MOVE     	16 13
	96	[2031]	CALL     	14 3 2
	97	[2032]	SELF     	15 0 -9	; "invoke"
	98	[2032]	MOVE     	17 14
	99	[2032]	MOVE     	18 13
	100	[2032]	CALL     	15 4 1
	101	[2034]	LEN      	15 6
	102	[2034]	EQ       	1 12 15
	103	[2034]	JMP      	10	; to 114
	104	[2034]	GETTABLE 	15 14 -14	; "element"
	105	[2034]	GETTABLE 	15 15 -15	; "_maxargs"
	106	[2034]	LT       	0 -16 15	; 0 -
	107	[2034]	JMP      	6	; to 114
	108	[2035]	SELF     	15 0 -19	; "pass"
	109	[2035]	SELF     	17 6 -3	; "sub"
	110	[2035]	ADD      	19 12 -4	; - 1
	111	[2035]	CALL     	17 3 0
	112	[2035]	CALL     	15 0 1
	113	[2036]	JMP      	1	; to 115
	114	[2029]	FORLOOP  	9 -27	; to 88
	115	[2044]	TEST     	7 0 0
	116	[2044]	JMP      	3	; to 120
	117	[2045]	SELF     	8 0 -19	; "pass"
	118	[2045]	MOVE     	10 6
	119	[2045]	CALL     	8 3 1
	120	[1991]	TFORLOOP 	2 2
	121	[2046]	JMP      	-117	; to 5
	122	[2049]	SELF     	2 0 -20	; "finalize"
	123	[2049]	CALL     	2 2 1
	124	[2050]	GETTABLE 	2 0 -21	; "result"
	125	[2050]	RETURN   	2 2
	126	[2051]	RETURN   	0 1

function <./argparse.lua:2053,2056> (15 instructions, 60 bytes at 0x7fe3c2d0f920)
2 params, 8 slots, 0 upvalues, 2 locals, 9 constants, 0 functions
	1	[2054]	GETGLOBAL	2 -1	; io
	2	[2054]	GETTABLE 	2 2 -2	; "stderr"
	3	[2054]	SELF     	2 2 -3	; "write"
	4	[2054]	LOADK    	4 -4	; "%s\n\nError: %s\n"
	5	[2054]	SELF     	4 4 -5	; "format"
	6	[2054]	SELF     	6 0 -6	; "get_usage"
	7	[2054]	CALL     	6 2 2
	8	[2054]	MOVE     	7 1
	9	[2054]	CALL     	4 4 0
	10	[2054]	CALL     	2 0 1
	11	[2055]	GETGLOBAL	2 -7	; os
	12	[2055]	GETTABLE 	2 2 -8	; "exit"
	13	[2055]	LOADK    	3 -9	; 1
	14	[2055]	CALL     	2 2 1
	15	[2056]	RETURN   	0 1

function <./argparse.lua:2061,2063> (11 instructions, 44 bytes at 0x7fe3c2d0fa90)
3 params, 6 slots, 2 upvalues, 3 locals, 1 constant, 0 functions
	1	[2062]	GETUPVAL 	3 0	; ParseState
	2	[2062]	MOVE     	4 0
	3	[2062]	MOVE     	5 2
	4	[2062]	CALL     	3 3 2
	5	[2062]	SELF     	3 3 -1	; "parse"
	6	[2062]	TESTSET  	5 1 1
	7	[2062]	JMP      	1	; to 9
	8	[2062]	GETUPVAL 	5 1	; default_cmdline
	9	[2062]	TAILCALL 	3 3 0
	10	[2062]	RETURN   	3 0
	11	[2063]	RETURN   	0 1

function <./argparse.lua:2065,2067> (6 instructions, 24 bytes at 0x7fe3c2d10af0)
2 params, 6 slots, 0 upvalues, 2 locals, 2 constants, 0 functions
	1	[2066]	SELF     	2 0 -1	; "_parse"
	2	[2066]	MOVE     	4 1
	3	[2066]	GETTABLE 	5 0 -2	; "error"
	4	[2066]	TAILCALL 	2 4 0
	5	[2066]	RETURN   	2 0
	6	[2067]	RETURN   	0 1

function <./argparse.lua:2069,2071> (15 instructions, 60 bytes at 0x7fe3c2d10eb0)
1 param, 6 slots, 0 upvalues, 1 local, 7 constants, 0 functions
	1	[2070]	GETGLOBAL	1 -1	; tostring
	2	[2070]	MOVE     	2 0
	3	[2070]	CALL     	1 2 2
	4	[2070]	LOADK    	2 -2	; "\noriginal "
	5	[2070]	GETGLOBAL	3 -3	; debug
	6	[2070]	GETTABLE 	3 3 -4	; "traceback"
	7	[2070]	LOADK    	4 -5	; ""
	8	[2070]	LOADK    	5 -6	; 2
	9	[2070]	CALL     	3 3 2
	10	[2070]	SELF     	3 3 -7	; "sub"
	11	[2070]	LOADK    	5 -6	; 2
	12	[2070]	CALL     	3 3 2
	13	[2070]	CONCAT   	1 1 3
	14	[2070]	RETURN   	1 2
	15	[2071]	RETURN   	0 1

function <./argparse.lua:2073,2090> (24 instructions, 96 bytes at 0x7fe3c2d11270)
2 params, 8 slots, 1 upvalue, 5 locals, 3 constants, 1 function
	1	[2076]	GETGLOBAL	3 -1	; xpcall
	2	[2081]	CLOSURE  	4 0	; 0x7fe3c2d11850
	3	[2081]	MOVE     	0 0
	4	[2081]	MOVE     	0 1
	5	[2081]	MOVE     	0 2
	6	[2081]	GETUPVAL 	5 0	; xpcall_error_handler
	7	[2076]	CALL     	3 3 3
	8	[2083]	TEST     	3 0 0
	9	[2083]	JMP      	4	; to 14
	10	[2084]	LOADBOOL 	5 1 0
	11	[2084]	MOVE     	6 4
	12	[2084]	RETURN   	5 3
	13	[2084]	JMP      	10	; to 24
	14	[2085]	TEST     	2 0 1
	15	[2085]	JMP      	5	; to 21
	16	[2086]	GETGLOBAL	5 -2	; error
	17	[2086]	MOVE     	6 4
	18	[2086]	LOADK    	7 -3	; 0
	19	[2086]	CALL     	5 3 1
	20	[2086]	JMP      	3	; to 24
	21	[2088]	LOADBOOL 	5 0 0
	22	[2088]	MOVE     	6 2
	23	[2088]	RETURN   	5 3
	24	[2090]	RETURN   	0 1

function <./argparse.lua:2076,2081> (8 instructions, 32 bytes at 0x7fe3c2d11850)
0 params, 4 slots, 3 upvalues, 0 locals, 1 constant, 1 function
	1	[2077]	GETUPVAL 	0 0	; self
	2	[2077]	SELF     	0 0 -1	; "_parse"
	3	[2077]	GETUPVAL 	2 1	; args
	4	[2080]	CLOSURE  	3 0	; 0x7fe3c2d118d0
	5	[2080]	GETUPVAL 	0 2	; parse_error
	6	[2077]	TAILCALL 	0 4 0
	7	[2080]	RETURN   	0 0
	8	[2081]	RETURN   	0 1

function <./argparse.lua:2077,2080> (6 instructions, 24 bytes at 0x7fe3c2d118d0)
2 params, 5 slots, 1 upvalue, 2 locals, 2 constants, 0 functions
	1	[2078]	SETUPVAL 	1 0	; parse_error
	2	[2079]	GETGLOBAL	2 -1	; error
	3	[2079]	MOVE     	3 1
	4	[2079]	LOADK    	4 -2	; 0
	5	[2079]	CALL     	2 3 1
	6	[2080]	RETURN   	0 1

function <./argparse.lua:2096,2098> (11 instructions, 44 bytes at 0x7fe3c2d11db0)
1+ param, 5 slots, 2 upvalues, 2 locals, 2 constants, 0 functions
	1	[2097]	GETUPVAL 	2 0	; Parser
	2	[2097]	GETUPVAL 	3 1	; default_cmdline
	3	[2097]	GETTABLE 	3 3 -1	; 0
	4	[2097]	CALL     	2 2 2
	5	[2097]	SELF     	2 2 -2	; "add_help"
	6	[2097]	LOADBOOL 	4 1 0
	7	[2097]	CALL     	2 3 2
	8	[2097]	VARARG   	3 0
	9	[2097]	TAILCALL 	2 0 0
	10	[2097]	RETURN   	2 0
	11	[2098]	RETURN   	0 1
