
main <./fs/win32.lua:0,0> (93 instructions, 372 bytes at 0x7f93884068a0)
0+ params, 11 slots, 0 upvalues, 10 locals, 29 constants, 21 functions
	1	[4]	NEWTABLE 	0 0 0
	2	[6]	GETGLOBAL	1 -1	; require
	3	[6]	LOADK    	2 -2	; "luarocks.fs"
	4	[6]	CALL     	1 2 2
	5	[8]	GETGLOBAL	2 -1	; require
	6	[8]	LOADK    	3 -3	; "luarocks.core.cfg"
	7	[8]	CALL     	2 2 2
	8	[9]	GETGLOBAL	3 -1	; require
	9	[9]	LOADK    	4 -4	; "luarocks.dir"
	10	[9]	CALL     	3 2 2
	11	[10]	GETGLOBAL	4 -1	; require
	12	[10]	LOADK    	5 -5	; "luarocks.path"
	13	[10]	CALL     	4 2 2
	14	[11]	GETGLOBAL	5 -1	; require
	15	[11]	LOADK    	6 -6	; "luarocks.util"
	16	[11]	CALL     	5 2 2
	17	[16]	LOADK    	6 -7	; "type NUL && "
	18	[17]	GETGLOBAL	7 -8	; io
	19	[17]	GETTABLE 	7 7 -9	; "popen"
	20	[17]	GETGLOBAL	8 -10	; os
	21	[17]	GETTABLE 	8 8 -11	; "execute"
	22	[18]	GETGLOBAL	9 -8	; io
	23	[18]	CLOSURE  	10 0	; 0x7f9388406f50
	24	[18]	MOVE     	0 7
	25	[18]	MOVE     	0 6
	26	[18]	SETTABLE 	9 -9 10	; "popen" -
	27	[19]	GETGLOBAL	9 -10	; os
	28	[19]	CLOSURE  	10 1	; 0x7f9388406600
	29	[19]	MOVE     	0 8
	30	[19]	MOVE     	0 6
	31	[19]	SETTABLE 	9 -11 10	; "execute" -
	32	[26]	CLOSURE  	9 2	; 0x7f9388407230
	33	[24]	SETTABLE 	0 -12 9	; "quiet" -
	34	[33]	CLOSURE  	9 3	; 0x7f9388407050
	35	[31]	SETTABLE 	0 -13 9	; "quiet_stderr" -
	36	[61]	CLOSURE  	9 4	; 0x7f9388407840
	37	[84]	CLOSURE  	10 5	; 0x7f9388407c40
	38	[84]	MOVE     	0 9
	39	[67]	SETTABLE 	0 -14 10	; "Q" -
	40	[107]	CLOSURE  	10 6	; 0x7f9388408000
	41	[107]	MOVE     	0 9
	42	[90]	SETTABLE 	0 -15 10	; "Qb" -
	43	[129]	CLOSURE  	10 7	; 0x7f9388408250
	44	[129]	MOVE     	0 1
	45	[129]	MOVE     	0 9
	46	[115]	SETTABLE 	0 -16 10	; "absolute_name" -
	47	[138]	CLOSURE  	10 8	; 0x7f9388408d00
	48	[138]	MOVE     	0 9
	49	[138]	MOVE     	0 1
	50	[135]	SETTABLE 	0 -17 10	; "root_of" -
	51	[196]	CLOSURE  	10 9	; 0x7f9388408c20
	52	[196]	MOVE     	0 4
	53	[196]	MOVE     	0 5
	54	[196]	MOVE     	0 1
	55	[196]	MOVE     	0 3
	56	[196]	MOVE     	0 2
	57	[147]	SETTABLE 	0 -18 10	; "wrap_script" -
	58	[204]	CLOSURE  	10 10	; 0x7f93884098c0
	59	[198]	SETTABLE 	0 -19 10	; "is_actual_binary" -
	60	[226]	CLOSURE  	10 11	; 0x7f9388409f00
	61	[226]	MOVE     	0 1
	62	[226]	MOVE     	0 3
	63	[206]	SETTABLE 	0 -20 10	; "copy_binary" -
	64	[242]	CLOSURE  	10 12	; 0x7f938840a330
	65	[239]	SETTABLE 	0 -21 10	; "replace_file" -
	66	[258]	CLOSURE  	10 13	; 0x7f9388409e70
	67	[258]	MOVE     	0 1
	68	[258]	MOVE     	0 3
	69	[244]	SETTABLE 	0 -22 10	; "is_dir" -
	70	[277]	CLOSURE  	10 14	; 0x7f9388407730
	71	[277]	MOVE     	0 1
	72	[277]	MOVE     	0 3
	73	[260]	SETTABLE 	0 -23 10	; "is_file" -
	74	[308]	CLOSURE  	10 15	; 0x7f93884074a0
	75	[308]	MOVE     	0 3
	76	[308]	MOVE     	0 1
	77	[285]	SETTABLE 	0 -24 10	; "is_writable" -
	78	[325]	CLOSURE  	10 16	; 0x7f938840b4d0
	79	[325]	MOVE     	0 3
	80	[325]	MOVE     	0 1
	81	[314]	SETTABLE 	0 -25 10	; "make_temp_dir" -
	82	[329]	CLOSURE  	10 17	; 0x7f9388408e00
	83	[327]	SETTABLE 	0 -26 10	; "tmpname" -
	84	[333]	CLOSURE  	10 18	; 0x7f938840c280
	85	[331]	SETTABLE 	0 -27 10	; "current_user" -
	86	[337]	CLOSURE  	10 19	; 0x7f938840c360
	87	[335]	SETTABLE 	0 -28 10	; "export_cmd" -
	88	[341]	CLOSURE  	10 20	; 0x7f938840c690
	89	[341]	MOVE     	0 3
	90	[341]	MOVE     	0 1
	91	[339]	SETTABLE 	0 -29 10	; "system_cache_dir" -
	92	[343]	RETURN   	0 2
	93	[343]	RETURN   	0 1

function <./fs/win32.lua:18,18> (8 instructions, 32 bytes at 0x7f9388406f50)
1+ param, 5 slots, 2 upvalues, 2 locals, 0 constants, 0 functions
	1	[18]	GETUPVAL 	2 0	; _popen
	2	[18]	GETUPVAL 	3 1	; _prefix
	3	[18]	MOVE     	4 0
	4	[18]	CONCAT   	3 3 4
	5	[18]	VARARG   	4 0
	6	[18]	TAILCALL 	2 0 0
	7	[18]	RETURN   	2 0
	8	[18]	RETURN   	0 1

function <./fs/win32.lua:19,19> (8 instructions, 32 bytes at 0x7f9388406600)
1+ param, 5 slots, 2 upvalues, 2 locals, 0 constants, 0 functions
	1	[19]	GETUPVAL 	2 0	; _execute
	2	[19]	GETUPVAL 	3 1	; _prefix
	3	[19]	MOVE     	4 0
	4	[19]	CONCAT   	3 3 4
	5	[19]	VARARG   	4 0
	6	[19]	TAILCALL 	2 0 0
	7	[19]	RETURN   	2 0
	8	[19]	RETURN   	0 1

function <./fs/win32.lua:24,26> (5 instructions, 20 bytes at 0x7f9388407230)
1 param, 3 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[25]	MOVE     	1 0
	2	[25]	LOADK    	2 -1	; " 2> NUL 1> NUL"
	3	[25]	CONCAT   	1 1 2
	4	[25]	RETURN   	1 2
	5	[26]	RETURN   	0 1

function <./fs/win32.lua:31,33> (5 instructions, 20 bytes at 0x7f9388407050)
1 param, 3 slots, 0 upvalues, 1 local, 1 constant, 0 functions
	1	[32]	MOVE     	1 0
	2	[32]	LOADK    	2 -1	; " 2> NUL"
	3	[32]	CONCAT   	1 1 2
	4	[32]	RETURN   	1 2
	5	[33]	RETURN   	0 1

function <./fs/win32.lua:38,61> (44 instructions, 176 bytes at 0x7f9388407840)
1 param, 9 slots, 0 upvalues, 5 locals, 9 constants, 0 functions
	1	[39]	LOADK    	1 -1	; ""
	2	[40]	LOADK    	2 -1	; ""
	3	[41]	LOADK    	3 -1	; ""
	4	[43]	SELF     	4 0 -2	; "match"
	5	[43]	LOADK    	6 -3	; "^['\"](.*)['\"]$"
	6	[43]	CALL     	4 3 2
	7	[44]	TEST     	4 0 0
	8	[44]	JMP      	1	; to 10
	9	[45]	MOVE     	0 4
	10	[48]	SELF     	5 0 -2	; "match"
	11	[48]	LOADK    	7 -4	; "^.:"
	12	[48]	CALL     	5 3 2
	13	[48]	TEST     	5 0 0
	14	[48]	JMP      	9	; to 24
	15	[49]	SELF     	5 0 -5	; "sub"
	16	[49]	LOADK    	7 -6	; 1
	17	[49]	LOADK    	8 -7	; 2
	18	[49]	CALL     	5 4 2
	19	[49]	MOVE     	1 5
	20	[50]	SELF     	5 0 -5	; "sub"
	21	[50]	LOADK    	7 -8	; 3
	22	[50]	CALL     	5 3 2
	23	[50]	MOVE     	0 5
	24	[53]	SELF     	5 0 -2	; "match"
	25	[53]	LOADK    	7 -9	; "^[\\/]"
	26	[53]	CALL     	5 3 2
	27	[53]	TEST     	5 0 0
	28	[53]	JMP      	10	; to 39
	29	[54]	SELF     	5 0 -5	; "sub"
	30	[54]	LOADK    	7 -6	; 1
	31	[54]	LOADK    	8 -6	; 1
	32	[54]	CALL     	5 4 2
	33	[54]	MOVE     	2 5
	34	[55]	SELF     	5 0 -5	; "sub"
	35	[55]	LOADK    	7 -7	; 2
	36	[55]	CALL     	5 3 2
	37	[55]	MOVE     	3 5
	38	[55]	JMP      	1	; to 40
	39	[57]	MOVE     	3 0
	40	[60]	MOVE     	5 1
	41	[60]	MOVE     	6 2
	42	[60]	MOVE     	7 3
	43	[60]	RETURN   	5 4
	44	[61]	RETURN   	0 1

function <./fs/win32.lua:67,84> (49 instructions, 196 bytes at 0x7f9388407c40)
1 param, 8 slots, 1 upvalue, 4 locals, 15 constants, 0 functions
	1	[68]	GETGLOBAL	1 -1	; assert
	2	[68]	GETGLOBAL	2 -2	; type
	3	[68]	MOVE     	3 0
	4	[68]	CALL     	2 2 2
	5	[68]	EQ       	1 2 -3	; - "string"
	6	[68]	JMP      	1	; to 8
	7	[68]	LOADBOOL 	2 0 1
	8	[68]	LOADBOOL 	2 1 0
	9	[68]	CALL     	1 2 1
	10	[71]	GETUPVAL 	1 0	; split_root
	11	[71]	MOVE     	2 0
	12	[71]	CALL     	1 2 4
	13	[72]	EQ       	1 2 -4	; - ""
	14	[72]	JMP      	5	; to 20
	15	[73]	SELF     	4 0 -5	; "gsub"
	16	[73]	LOADK    	6 -6	; "/"
	17	[73]	LOADK    	7 -7	; "\\"
	18	[73]	CALL     	4 4 2
	19	[73]	MOVE     	0 4
	20	[75]	EQ       	0 0 -7	; - "\\"
	21	[75]	JMP      	2	; to 24
	22	[76]	LOADK    	4 -7	; "\\"
	23	[76]	RETURN   	4 2
	24	[79]	SELF     	4 0 -5	; "gsub"
	25	[79]	LOADK    	6 -8	; "\\(\\*)\""
	26	[79]	LOADK    	7 -9	; "\\%1%1\""
	27	[79]	CALL     	4 4 2
	28	[79]	MOVE     	0 4
	29	[80]	SELF     	4 0 -5	; "gsub"
	30	[80]	LOADK    	6 -10	; "\\+$"
	31	[80]	LOADK    	7 -11	; "%0%0"
	32	[80]	CALL     	4 4 2
	33	[80]	MOVE     	0 4
	34	[81]	SELF     	4 0 -5	; "gsub"
	35	[81]	LOADK    	6 -12	; "\""
	36	[81]	LOADK    	7 -13	; "\\\""
	37	[81]	CALL     	4 4 2
	38	[81]	MOVE     	0 4
	39	[82]	SELF     	4 0 -5	; "gsub"
	40	[82]	LOADK    	6 -14	; "(\\*)%%"
	41	[82]	LOADK    	7 -15	; "%1%1\"%%\""
	42	[82]	CALL     	4 4 2
	43	[82]	MOVE     	0 4
	44	[83]	LOADK    	4 -12	; "\""
	45	[83]	MOVE     	5 0
	46	[83]	LOADK    	6 -12	; "\""
	47	[83]	CONCAT   	4 4 6
	48	[83]	RETURN   	4 2
	49	[84]	RETURN   	0 1

function <./fs/win32.lua:90,107> (49 instructions, 196 bytes at 0x7f9388408000)
1 param, 8 slots, 1 upvalue, 4 locals, 15 constants, 0 functions
	1	[91]	GETGLOBAL	1 -1	; assert
	2	[91]	GETGLOBAL	2 -2	; type
	3	[91]	MOVE     	3 0
	4	[91]	CALL     	2 2 2
	5	[91]	EQ       	1 2 -3	; - "string"
	6	[91]	JMP      	1	; to 8
	7	[91]	LOADBOOL 	2 0 1
	8	[91]	LOADBOOL 	2 1 0
	9	[91]	CALL     	1 2 1
	10	[94]	GETUPVAL 	1 0	; split_root
	11	[94]	MOVE     	2 0
	12	[94]	CALL     	1 2 4
	13	[95]	EQ       	1 2 -4	; - ""
	14	[95]	JMP      	5	; to 20
	15	[96]	SELF     	4 0 -5	; "gsub"
	16	[96]	LOADK    	6 -6	; "/"
	17	[96]	LOADK    	7 -7	; "\\"
	18	[96]	CALL     	4 4 2
	19	[96]	MOVE     	0 4
	20	[98]	EQ       	0 0 -7	; - "\\"
	21	[98]	JMP      	2	; to 24
	22	[99]	LOADK    	4 -7	; "\\"
	23	[99]	RETURN   	4 2
	24	[102]	SELF     	4 0 -5	; "gsub"
	25	[102]	LOADK    	6 -8	; "\\(\\*)\""
	26	[102]	LOADK    	7 -9	; "\\%1%1\""
	27	[102]	CALL     	4 4 2
	28	[102]	MOVE     	0 4
	29	[103]	SELF     	4 0 -5	; "gsub"
	30	[103]	LOADK    	6 -10	; "\\+$"
	31	[103]	LOADK    	7 -11	; "%0%0"
	32	[103]	CALL     	4 4 2
	33	[103]	MOVE     	0 4
	34	[104]	SELF     	4 0 -5	; "gsub"
	35	[104]	LOADK    	6 -12	; "\""
	36	[104]	LOADK    	7 -13	; "\\\""
	37	[104]	CALL     	4 4 2
	38	[104]	MOVE     	0 4
	39	[105]	SELF     	4 0 -5	; "gsub"
	40	[105]	LOADK    	6 -14	; "%%"
	41	[105]	LOADK    	7 -15	; "%%%%"
	42	[105]	CALL     	4 4 2
	43	[105]	MOVE     	0 4
	44	[106]	LOADK    	4 -12	; "\""
	45	[106]	MOVE     	5 0
	46	[106]	LOADK    	6 -12	; "\""
	47	[106]	CONCAT   	4 4 6
	48	[106]	RETURN   	4 2
	49	[107]	RETURN   	0 1

function <./fs/win32.lua:115,129> (50 instructions, 200 bytes at 0x7f9388408250)
2 params, 8 slots, 2 upvalues, 5 locals, 10 constants, 0 functions
	1	[116]	GETGLOBAL	2 -1	; assert
	2	[116]	GETGLOBAL	3 -2	; type
	3	[116]	MOVE     	4 0
	4	[116]	CALL     	3 2 2
	5	[116]	EQ       	1 3 -3	; - "string"
	6	[116]	JMP      	1	; to 8
	7	[116]	LOADBOOL 	3 0 1
	8	[116]	LOADBOOL 	3 1 0
	9	[116]	CALL     	2 2 1
	10	[117]	GETGLOBAL	2 -1	; assert
	11	[117]	GETGLOBAL	3 -2	; type
	12	[117]	MOVE     	4 1
	13	[117]	CALL     	3 2 2
	14	[117]	EQ       	1 3 -3	; - "string"
	15	[117]	JMP      	3	; to 19
	16	[117]	NOT      	3 1
	17	[117]	JMP      	2	; to 20
	18	[117]	LOADBOOL 	3 0 1
	19	[117]	LOADBOOL 	3 1 0
	20	[117]	CALL     	2 2 1
	21	[119]	TESTSET  	2 1 1
	22	[119]	JMP      	3	; to 26
	23	[119]	GETUPVAL 	2 0	; fs
	24	[119]	GETTABLE 	2 2 -4	; "current_dir"
	25	[119]	CALL     	2 1 2
	26	[119]	SELF     	2 2 -5	; "gsub"
	27	[119]	LOADK    	4 -6	; "[\\/]*$"
	28	[119]	LOADK    	5 -7	; ""
	29	[119]	CALL     	2 4 2
	30	[119]	MOVE     	1 2
	31	[120]	GETUPVAL 	2 1	; split_root
	32	[120]	MOVE     	3 0
	33	[120]	CALL     	2 2 4
	34	[121]	SELF     	5 3 -8	; "match"
	35	[121]	LOADK    	7 -9	; "[\\/]$"
	36	[121]	CALL     	5 3 2
	37	[121]	TEST     	5 0 0
	38	[121]	JMP      	6	; to 45
	39	[123]	MOVE     	5 2
	40	[123]	MOVE     	6 3
	41	[123]	MOVE     	7 4
	42	[123]	CONCAT   	5 5 7
	43	[123]	RETURN   	5 2
	44	[123]	JMP      	5	; to 50
	45	[127]	MOVE     	5 1
	46	[127]	LOADK    	6 -10	; "/"
	47	[127]	MOVE     	7 4
	48	[127]	CONCAT   	5 5 7
	49	[127]	RETURN   	5 2
	50	[129]	RETURN   	0 1

function <./fs/win32.lua:135,138> (11 instructions, 44 bytes at 0x7f9388408d00)
1 param, 6 slots, 2 upvalues, 4 locals, 1 constant, 0 functions
	1	[136]	GETUPVAL 	1 0	; split_root
	2	[136]	GETUPVAL 	2 1	; fs
	3	[136]	GETTABLE 	2 2 -1	; "absolute_name"
	4	[136]	MOVE     	3 0
	5	[136]	CALL     	2 2 0
	6	[136]	CALL     	1 0 4
	7	[137]	MOVE     	4 1
	8	[137]	MOVE     	5 2
	9	[137]	CONCAT   	4 4 5
	10	[137]	RETURN   	4 2
	11	[138]	RETURN   	0 1

function <./fs/win32.lua:147,196> (202 instructions, 808 bytes at 0x7f9388408c20)
5+ params, 18 slots, 5 upvalues, 13 locals, 46 constants, 0 functions
	1	[148]	GETGLOBAL	6 -1	; assert
	2	[148]	GETGLOBAL	7 -2	; type
	3	[148]	MOVE     	8 0
	4	[148]	CALL     	7 2 2
	5	[148]	EQ       	1 7 -3	; - "string"
	6	[148]	JMP      	3	; to 10
	7	[148]	NOT      	7 0
	8	[148]	JMP      	2	; to 11
	9	[148]	LOADBOOL 	7 0 1
	10	[148]	LOADBOOL 	7 1 0
	11	[148]	CALL     	6 2 1
	12	[149]	GETGLOBAL	6 -1	; assert
	13	[149]	GETGLOBAL	7 -2	; type
	14	[149]	MOVE     	8 1
	15	[149]	CALL     	7 2 2
	16	[149]	EQ       	1 7 -3	; - "string"
	17	[149]	JMP      	1	; to 19
	18	[149]	LOADBOOL 	7 0 1
	19	[149]	LOADBOOL 	7 1 0
	20	[149]	CALL     	6 2 1
	21	[150]	GETGLOBAL	6 -1	; assert
	22	[150]	GETGLOBAL	7 -2	; type
	23	[150]	MOVE     	8 2
	24	[150]	CALL     	7 2 2
	25	[150]	EQ       	1 7 -3	; - "string"
	26	[150]	JMP      	1	; to 28
	27	[150]	LOADBOOL 	7 0 1
	28	[150]	LOADBOOL 	7 1 0
	29	[150]	CALL     	6 2 1
	30	[151]	GETGLOBAL	6 -1	; assert
	31	[151]	GETGLOBAL	7 -2	; type
	32	[151]	MOVE     	8 3
	33	[151]	CALL     	7 2 2
	34	[151]	EQ       	1 7 -3	; - "string"
	35	[151]	JMP      	3	; to 39
	36	[151]	NOT      	7 3
	37	[151]	JMP      	2	; to 40
	38	[151]	LOADBOOL 	7 0 1
	39	[151]	LOADBOOL 	7 1 0
	40	[151]	CALL     	6 2 1
	41	[152]	GETGLOBAL	6 -1	; assert
	42	[152]	GETGLOBAL	7 -2	; type
	43	[152]	MOVE     	8 4
	44	[152]	CALL     	7 2 2
	45	[152]	EQ       	1 7 -3	; - "string"
	46	[152]	JMP      	3	; to 50
	47	[152]	NOT      	7 4
	48	[152]	JMP      	2	; to 51
	49	[152]	LOADBOOL 	7 0 1
	50	[152]	LOADBOOL 	7 1 0
	51	[152]	CALL     	6 2 1
	52	[154]	MOVE     	6 1
	53	[154]	LOADK    	7 -4	; ".bat"
	54	[154]	CONCAT   	6 6 7
	55	[155]	GETGLOBAL	7 -5	; io
	56	[155]	GETTABLE 	7 7 -6	; "open"
	57	[155]	MOVE     	8 6
	58	[155]	LOADK    	9 -7	; "wb"
	59	[155]	CALL     	7 3 2
	60	[156]	TEST     	7 0 1
	61	[156]	JMP      	6	; to 68
	62	[157]	LOADNIL  	8 8
	63	[157]	LOADK    	9 -8	; "Could not open "
	64	[157]	MOVE     	10 6
	65	[157]	LOADK    	11 -9	; " for writing."
	66	[157]	CONCAT   	9 9 11
	67	[157]	RETURN   	8 3
	68	[160]	GETUPVAL 	8 0	; path
	69	[160]	GETTABLE 	8 8 -10	; "package_paths"
	70	[160]	MOVE     	9 2
	71	[160]	CALL     	8 2 3
	72	[162]	NEWTABLE 	10 2 0
	73	[163]	LOADK    	11 -11	; "package.path="
	74	[163]	GETUPVAL 	12 1	; util
	75	[163]	GETTABLE 	12 12 -12	; "LQ"
	76	[163]	MOVE     	13 8
	77	[163]	LOADK    	14 -13	; ";"
	78	[163]	CONCAT   	13 13 14
	79	[163]	CALL     	12 2 2
	80	[163]	LOADK    	13 -14	; "..package.path"
	81	[163]	CONCAT   	11 11 13
	82	[164]	LOADK    	12 -15	; "package.cpath="
	83	[164]	GETUPVAL 	13 1	; util
	84	[164]	GETTABLE 	13 13 -12	; "LQ"
	85	[164]	MOVE     	14 9
	86	[164]	LOADK    	15 -13	; ";"
	87	[164]	CONCAT   	14 14 15
	88	[164]	CALL     	13 2 2
	89	[164]	LOADK    	14 -16	; "..package.cpath"
	90	[164]	CONCAT   	12 12 14
	91	[165]	SETLIST  	10 2 1	; 1
	92	[166]	EQ       	1 1 -17	; - "luarocks"
	93	[166]	JMP      	2	; to 96
	94	[166]	EQ       	0 1 -18	; - "luarocks-admin"
	95	[166]	JMP      	17	; to 113
	96	[167]	NEWTABLE 	11 2 0
	97	[168]	LOADK    	12 -11	; "package.path="
	98	[168]	GETUPVAL 	13 1	; util
	99	[168]	GETTABLE 	13 13 -12	; "LQ"
	100	[168]	GETGLOBAL	14 -19	; package
	101	[168]	GETTABLE 	14 14 -20	; "path"
	102	[168]	CALL     	13 2 2
	103	[168]	CONCAT   	12 12 13
	104	[169]	LOADK    	13 -15	; "package.cpath="
	105	[169]	GETUPVAL 	14 1	; util
	106	[169]	GETTABLE 	14 14 -12	; "LQ"
	107	[169]	GETGLOBAL	15 -19	; package
	108	[169]	GETTABLE 	15 15 -21	; "cpath"
	109	[169]	CALL     	14 2 2
	110	[169]	CONCAT   	13 13 14
	111	[170]	SETLIST  	11 2 1	; 1
	112	[170]	MOVE     	10 11
	113	[172]	TEST     	3 0 0
	114	[172]	JMP      	14	; to 129
	115	[172]	TEST     	4 0 0
	116	[172]	JMP      	12	; to 129
	117	[173]	LOADK    	11 -22	; "local k,l,_=pcall(require,'luarocks.loader') _=k "
	118	[174]	LOADK    	12 -23	; "and l.add_context('"
	119	[174]	MOVE     	13 3
	120	[174]	LOADK    	14 -24	; "','"
	121	[174]	MOVE     	15 4
	122	[174]	LOADK    	16 -25	; "')"
	123	[174]	CONCAT   	11 11 16
	124	[175]	GETGLOBAL	12 -26	; table
	125	[175]	GETTABLE 	12 12 -27	; "insert"
	126	[175]	MOVE     	13 10
	127	[175]	MOVE     	14 11
	128	[175]	CALL     	12 3 1
	129	[178]	NEWTABLE 	11 4 0
	130	[179]	GETUPVAL 	12 2	; fs
	131	[179]	GETTABLE 	12 12 -28	; "Qb"
	132	[179]	GETUPVAL 	13 3	; dir
	133	[179]	GETTABLE 	13 13 -20	; "path"
	134	[179]	GETUPVAL 	14 4	; cfg
	135	[179]	GETTABLE 	14 14 -29	; "variables"
	136	[179]	GETTABLE 	14 14 -30	; "LUA_BINDIR"
	137	[179]	GETUPVAL 	15 4	; cfg
	138	[179]	GETTABLE 	15 15 -31	; "lua_interpreter"
	139	[179]	CALL     	13 3 0
	140	[179]	CALL     	12 0 2
	141	[180]	LOADK    	13 -32	; "-e"
	142	[181]	GETUPVAL 	14 2	; fs
	143	[181]	GETTABLE 	14 14 -28	; "Qb"
	144	[181]	GETGLOBAL	15 -26	; table
	145	[181]	GETTABLE 	15 15 -33	; "concat"
	146	[181]	MOVE     	16 10
	147	[181]	LOADK    	17 -13	; ";"
	148	[181]	CALL     	15 3 0
	149	[181]	CALL     	14 0 2
	150	[182]	TEST     	0 0 0
	151	[182]	JMP      	6	; to 158
	152	[182]	GETUPVAL 	15 2	; fs
	153	[182]	GETTABLE 	15 15 -28	; "Qb"
	154	[182]	MOVE     	16 0
	155	[182]	CALL     	15 2 2
	156	[182]	TEST     	15 0 1
	157	[182]	JMP      	1	; to 159
	158	[182]	LOADK    	15 -34	; "%I%"
	159	[182]	VARARG   	16 0
	160	[184]	SETLIST  	11 0 1	; 1
	161	[186]	SELF     	12 7 -35	; "write"
	162	[186]	LOADK    	14 -36	; "@echo off\r\n"
	163	[186]	CALL     	12 3 1
	164	[187]	SELF     	12 7 -35	; "write"
	165	[187]	LOADK    	14 -37	; "setlocal\r\n"
	166	[187]	CALL     	12 3 1
	167	[188]	TEST     	0 0 1
	168	[188]	JMP      	5	; to 174
	169	[189]	SELF     	12 7 -35	; "write"
	170	[189]	LOADK    	14 -38	; "IF \"%*\"==\"\" (set I=-i) ELSE (set I=)"
	171	[189]	LOADK    	15 -39	; "\r\n"
	172	[189]	CONCAT   	14 14 15
	173	[189]	CALL     	12 3 1
	174	[191]	SELF     	12 7 -35	; "write"
	175	[191]	LOADK    	14 -40	; "set "
	176	[191]	GETUPVAL 	15 2	; fs
	177	[191]	GETTABLE 	15 15 -28	; "Qb"
	178	[191]	LOADK    	16 -41	; "LUAROCKS_SYSCONFDIR="
	179	[191]	GETUPVAL 	17 4	; cfg
	180	[191]	GETTABLE 	17 17 -42	; "sysconfdir"
	181	[191]	CONCAT   	16 16 17
	182	[191]	CALL     	15 2 2
	183	[191]	LOADK    	16 -39	; "\r\n"
	184	[191]	CONCAT   	14 14 16
	185	[191]	CALL     	12 3 1
	186	[192]	SELF     	12 7 -35	; "write"
	187	[192]	GETGLOBAL	14 -26	; table
	188	[192]	GETTABLE 	14 14 -33	; "concat"
	189	[192]	MOVE     	15 11
	190	[192]	LOADK    	16 -43	; " "
	191	[192]	CALL     	14 3 2
	192	[192]	LOADK    	15 -44	; " %*\r\n"
	193	[192]	CONCAT   	14 14 15
	194	[192]	CALL     	12 3 1
	195	[193]	SELF     	12 7 -35	; "write"
	196	[193]	LOADK    	14 -45	; "exit /b %ERRORLEVEL%\r\n"
	197	[193]	CALL     	12 3 1
	198	[194]	SELF     	12 7 -46	; "close"
	199	[194]	CALL     	12 2 1
	200	[195]	LOADBOOL 	12 1 0
	201	[195]	RETURN   	12 2
	202	[196]	RETURN   	0 1

function <./fs/win32.lua:198,204> (18 instructions, 72 bytes at 0x7f93884098c0)
1 param, 4 slots, 0 upvalues, 1 local, 4 constants, 0 functions
	1	[199]	SELF     	1 0 -1	; "lower"
	2	[199]	CALL     	1 2 2
	3	[199]	MOVE     	0 1
	4	[200]	SELF     	1 0 -2	; "match"
	5	[200]	LOADK    	3 -3	; "%.bat$"
	6	[200]	CALL     	1 3 2
	7	[200]	TEST     	1 0 1
	8	[200]	JMP      	5	; to 14
	9	[200]	SELF     	1 0 -2	; "match"
	10	[200]	LOADK    	3 -4	; "%.exe$"
	11	[200]	CALL     	1 3 2
	12	[200]	TEST     	1 0 0
	13	[200]	JMP      	2	; to 16
	14	[201]	LOADBOOL 	1 1 0
	15	[201]	RETURN   	1 2
	16	[203]	LOADBOOL 	1 0 0
	17	[203]	RETURN   	1 2
	18	[204]	RETURN   	0 1

function <./fs/win32.lua:206,226> (74 instructions, 296 bytes at 0x7f9388409f00)
2 params, 15 slots, 2 upvalues, 8 locals, 23 constants, 0 functions
	1	[207]	GETUPVAL 	2 0	; fs
	2	[207]	GETTABLE 	2 2 -1	; "copy"
	3	[207]	MOVE     	3 0
	4	[207]	MOVE     	4 1
	5	[207]	CALL     	2 3 3
	6	[208]	TEST     	2 0 1
	7	[208]	JMP      	3	; to 11
	8	[209]	LOADNIL  	4 4
	9	[209]	MOVE     	5 3
	10	[209]	RETURN   	4 3
	11	[211]	LOADK    	4 -2	; "%.[Ee][Xx][Ee]$"
	12	[212]	GETUPVAL 	5 1	; dir
	13	[212]	GETTABLE 	5 5 -3	; "base_name"
	14	[212]	MOVE     	6 0
	15	[212]	CALL     	5 2 2
	16	[213]	GETUPVAL 	6 1	; dir
	17	[213]	GETTABLE 	6 6 -4	; "dir_name"
	18	[213]	MOVE     	7 1
	19	[213]	CALL     	6 2 2
	20	[213]	MOVE     	1 6
	21	[214]	SELF     	6 5 -5	; "match"
	22	[214]	MOVE     	8 4
	23	[214]	CALL     	6 3 2
	24	[214]	TEST     	6 0 0
	25	[214]	JMP      	46	; to 72
	26	[215]	SELF     	6 5 -6	; "gsub"
	27	[215]	MOVE     	8 4
	28	[215]	LOADK    	9 -7	; ".lua"
	29	[215]	CALL     	6 4 2
	30	[215]	MOVE     	5 6
	31	[216]	MOVE     	6 1
	32	[216]	LOADK    	7 -8	; "/"
	33	[216]	MOVE     	8 5
	34	[216]	CONCAT   	6 6 8
	35	[217]	GETGLOBAL	7 -9	; io
	36	[217]	GETTABLE 	7 7 -10	; "open"
	37	[217]	MOVE     	8 6
	38	[217]	LOADK    	9 -11	; "w"
	39	[217]	CALL     	7 3 2
	40	[218]	TEST     	7 0 1
	41	[218]	JMP      	6	; to 48
	42	[219]	LOADNIL  	8 8
	43	[219]	LOADK    	9 -12	; "Could not open "
	44	[219]	MOVE     	10 6
	45	[219]	LOADK    	11 -13	; " for writing."
	46	[219]	CONCAT   	9 9 11
	47	[219]	RETURN   	8 3
	48	[221]	SELF     	8 7 -14	; "write"
	49	[221]	LOADK    	10 -15	; "package.path=\""
	50	[221]	GETGLOBAL	11 -16	; package
	51	[221]	GETTABLE 	11 11 -17	; "path"
	52	[221]	SELF     	11 11 -6	; "gsub"
	53	[221]	LOADK    	13 -18	; "\\"
	54	[221]	LOADK    	14 -19	; "\\\\"
	55	[221]	CALL     	11 4 2
	56	[221]	LOADK    	12 -20	; ";\"..package.path\n"
	57	[221]	CONCAT   	10 10 12
	58	[221]	CALL     	8 3 1
	59	[222]	SELF     	8 7 -14	; "write"
	60	[222]	LOADK    	10 -21	; "package.cpath=\""
	61	[222]	GETGLOBAL	11 -16	; package
	62	[222]	GETTABLE 	11 11 -17	; "path"
	63	[222]	SELF     	11 11 -6	; "gsub"
	64	[222]	LOADK    	13 -18	; "\\"
	65	[222]	LOADK    	14 -19	; "\\\\"
	66	[222]	CALL     	11 4 2
	67	[222]	LOADK    	12 -22	; ";\"..package.cpath\n"
	68	[222]	CONCAT   	10 10 12
	69	[222]	CALL     	8 3 1
	70	[223]	SELF     	8 7 -23	; "close"
	71	[223]	CALL     	8 2 1
	72	[225]	LOADBOOL 	6 1 0
	73	[225]	RETURN   	6 2
	74	[226]	RETURN   	0 1

function <./fs/win32.lua:239,242> (11 instructions, 44 bytes at 0x7f938840a330)
2 params, 5 slots, 0 upvalues, 2 locals, 3 constants, 0 functions
	1	[240]	GETGLOBAL	2 -1	; os
	2	[240]	GETTABLE 	2 2 -2	; "remove"
	3	[240]	MOVE     	3 0
	4	[240]	CALL     	2 2 1
	5	[241]	GETGLOBAL	2 -1	; os
	6	[241]	GETTABLE 	2 2 -3	; "rename"
	7	[241]	MOVE     	3 1
	8	[241]	MOVE     	4 0
	9	[241]	TAILCALL 	2 3 0
	10	[241]	RETURN   	2 0
	11	[242]	RETURN   	0 1

function <./fs/win32.lua:244,258> (38 instructions, 152 bytes at 0x7f9388409e70)
1 param, 7 slots, 2 upvalues, 4 locals, 9 constants, 0 functions
	1	[245]	GETUPVAL 	1 0	; fs
	2	[245]	GETTABLE 	1 1 -1	; "absolute_name"
	3	[245]	MOVE     	2 0
	4	[245]	CALL     	1 2 2
	5	[245]	MOVE     	0 1
	6	[246]	GETUPVAL 	1 1	; dir
	7	[246]	GETTABLE 	1 1 -2	; "normalize"
	8	[246]	MOVE     	2 0
	9	[246]	CALL     	1 2 2
	10	[246]	MOVE     	0 1
	11	[247]	GETGLOBAL	1 -3	; io
	12	[247]	GETTABLE 	1 1 -4	; "open"
	13	[247]	MOVE     	2 0
	14	[247]	LOADK    	3 -5	; "r"
	15	[247]	CALL     	1 3 4
	16	[248]	EQ       	0 3 -6	; - 13
	17	[248]	JMP      	14	; to 32
	18	[249]	GETGLOBAL	4 -3	; io
	19	[249]	GETTABLE 	4 4 -4	; "open"
	20	[249]	MOVE     	5 0
	21	[249]	LOADK    	6 -7	; "\\"
	22	[249]	CONCAT   	5 5 6
	23	[249]	LOADK    	6 -5	; "r"
	24	[249]	CALL     	4 3 4
	25	[249]	MOVE     	3 6
	26	[249]	MOVE     	2 5
	27	[249]	MOVE     	1 4
	28	[250]	EQ       	0 3 -8	; - 2
	29	[250]	JMP      	2	; to 32
	30	[251]	LOADBOOL 	4 1 0
	31	[251]	RETURN   	4 2
	32	[254]	TEST     	1 0 0
	33	[254]	JMP      	2	; to 36
	34	[255]	SELF     	4 1 -9	; "close"
	35	[255]	CALL     	4 2 1
	36	[257]	LOADBOOL 	4 0 0
	37	[257]	RETURN   	4 2
	38	[258]	RETURN   	0 1

function <./fs/win32.lua:260,277> (45 instructions, 180 bytes at 0x7f9388407730)
1 param, 7 slots, 2 upvalues, 4 locals, 10 constants, 0 functions
	1	[261]	GETUPVAL 	1 0	; fs
	2	[261]	GETTABLE 	1 1 -1	; "absolute_name"
	3	[261]	MOVE     	2 0
	4	[261]	CALL     	1 2 2
	5	[261]	MOVE     	0 1
	6	[262]	GETUPVAL 	1 1	; dir
	7	[262]	GETTABLE 	1 1 -2	; "normalize"
	8	[262]	MOVE     	2 0
	9	[262]	CALL     	1 2 2
	10	[262]	MOVE     	0 1
	11	[263]	GETGLOBAL	1 -3	; io
	12	[263]	GETTABLE 	1 1 -4	; "open"
	13	[263]	MOVE     	2 0
	14	[263]	LOADK    	3 -5	; "r"
	15	[263]	CALL     	1 3 4
	16	[264]	EQ       	0 3 -6	; - 13
	17	[264]	JMP      	19	; to 37
	18	[265]	GETGLOBAL	4 -3	; io
	19	[265]	GETTABLE 	4 4 -4	; "open"
	20	[265]	MOVE     	5 0
	21	[265]	LOADK    	6 -7	; "\\"
	22	[265]	CONCAT   	5 5 6
	23	[265]	LOADK    	6 -5	; "r"
	24	[265]	CALL     	4 3 4
	25	[265]	MOVE     	3 6
	26	[265]	MOVE     	2 5
	27	[265]	MOVE     	1 4
	28	[266]	EQ       	0 3 -8	; - 2
	29	[266]	JMP      	3	; to 33
	30	[267]	LOADBOOL 	4 0 0
	31	[267]	RETURN   	4 2
	32	[267]	JMP      	4	; to 37
	33	[268]	EQ       	0 3 -9	; - 22
	34	[268]	JMP      	2	; to 37
	35	[269]	LOADBOOL 	4 1 0
	36	[269]	RETURN   	4 2
	37	[272]	TEST     	1 0 0
	38	[272]	JMP      	4	; to 43
	39	[273]	SELF     	4 1 -10	; "close"
	40	[273]	CALL     	4 2 1
	41	[274]	LOADBOOL 	4 1 0
	42	[274]	RETURN   	4 2
	43	[276]	LOADBOOL 	4 0 0
	44	[276]	RETURN   	4 2
	45	[277]	RETURN   	0 1

function <./fs/win32.lua:285,308> (61 instructions, 244 bytes at 0x7f93884074a0)
1 param, 7 slots, 2 upvalues, 6 locals, 14 constants, 0 functions
	1	[286]	GETGLOBAL	1 -1	; assert
	2	[286]	MOVE     	2 0
	3	[286]	CALL     	1 2 1
	4	[287]	GETUPVAL 	1 0	; dir
	5	[287]	GETTABLE 	1 1 -2	; "normalize"
	6	[287]	MOVE     	2 0
	7	[287]	CALL     	1 2 2
	8	[287]	MOVE     	0 1
	9	[288]	LOADNIL  	1 1
	10	[289]	LOADK    	2 -3	; "tmpluarockstestwritable.deleteme"
	11	[290]	GETUPVAL 	3 1	; fs
	12	[290]	GETTABLE 	3 3 -4	; "is_dir"
	13	[290]	MOVE     	4 0
	14	[290]	CALL     	3 2 2
	15	[290]	TEST     	3 0 0
	16	[290]	JMP      	30	; to 47
	17	[291]	GETUPVAL 	3 0	; dir
	18	[291]	GETTABLE 	3 3 -5	; "path"
	19	[291]	MOVE     	4 0
	20	[291]	MOVE     	5 2
	21	[291]	CALL     	3 3 2
	22	[292]	GETGLOBAL	4 -6	; io
	23	[292]	GETTABLE 	4 4 -7	; "open"
	24	[292]	MOVE     	5 3
	25	[292]	LOADK    	6 -8	; "wb"
	26	[292]	CALL     	4 3 2
	27	[293]	EQ       	0 4 -9	; - nil
	28	[293]	JMP      	1	; to 30
	29	[293]	LOADBOOL 	1 0 1
	30	[293]	LOADBOOL 	1 1 0
	31	[294]	TEST     	4 0 0
	32	[294]	JMP      	2	; to 35
	33	[294]	SELF     	5 4 -10	; "close"
	34	[294]	CALL     	5 2 1
	35	[295]	TEST     	1 0 0
	36	[295]	JMP      	5	; to 42
	37	[299]	GETUPVAL 	5 1	; fs
	38	[299]	GETTABLE 	5 5 -11	; "exists"
	39	[299]	MOVE     	6 3
	40	[299]	CALL     	5 2 2
	41	[299]	MOVE     	1 5
	42	[301]	GETGLOBAL	5 -12	; os
	43	[301]	GETTABLE 	5 5 -13	; "remove"
	44	[301]	MOVE     	6 3
	45	[301]	CALL     	5 2 1
	46	[301]	JMP      	13	; to 60
	47	[303]	GETGLOBAL	3 -6	; io
	48	[303]	GETTABLE 	3 3 -7	; "open"
	49	[303]	MOVE     	4 0
	50	[303]	LOADK    	5 -14	; "r+b"
	51	[303]	CALL     	3 3 2
	52	[304]	EQ       	0 3 -9	; - nil
	53	[304]	JMP      	1	; to 55
	54	[304]	LOADBOOL 	1 0 1
	55	[304]	LOADBOOL 	1 1 0
	56	[305]	TEST     	3 0 0
	57	[305]	JMP      	2	; to 60
	58	[305]	SELF     	4 3 -10	; "close"
	59	[305]	CALL     	4 2 1
	60	[307]	RETURN   	1 2
	61	[308]	RETURN   	0 1

function <./fs/win32.lua:314,325> (46 instructions, 184 bytes at 0x7f938840b4d0)
1 param, 8 slots, 2 upvalues, 4 locals, 18 constants, 0 functions
	1	[315]	GETGLOBAL	1 -1	; assert
	2	[315]	GETGLOBAL	2 -2	; type
	3	[315]	MOVE     	3 0
	4	[315]	CALL     	2 2 2
	5	[315]	EQ       	1 2 -3	; - "string"
	6	[315]	JMP      	1	; to 8
	7	[315]	LOADBOOL 	2 0 1
	8	[315]	LOADBOOL 	2 1 0
	9	[315]	CALL     	1 2 1
	10	[316]	GETUPVAL 	1 0	; dir
	11	[316]	GETTABLE 	1 1 -4	; "normalize"
	12	[316]	MOVE     	2 0
	13	[316]	CALL     	1 2 2
	14	[316]	MOVE     	0 1
	15	[318]	GETGLOBAL	1 -5	; os
	16	[318]	GETTABLE 	1 1 -6	; "getenv"
	17	[318]	LOADK    	2 -7	; "TMP"
	18	[318]	CALL     	1 2 2
	19	[318]	LOADK    	2 -8	; "/luarocks_"
	20	[318]	SELF     	3 0 -9	; "gsub"
	21	[318]	LOADK    	5 -10	; "/"
	22	[318]	LOADK    	6 -11	; "_"
	23	[318]	CALL     	3 4 2
	24	[318]	LOADK    	4 -12	; "-"
	25	[318]	GETGLOBAL	5 -13	; tostring
	26	[318]	GETGLOBAL	6 -14	; math
	27	[318]	GETTABLE 	6 6 -15	; "floor"
	28	[318]	GETGLOBAL	7 -14	; math
	29	[318]	GETTABLE 	7 7 -16	; "random"
	30	[318]	CALL     	7 1 2
	31	[318]	MUL      	7 7 -17	; - 10000
	32	[318]	CALL     	6 2 0
	33	[318]	CALL     	5 0 2
	34	[318]	CONCAT   	1 1 5
	35	[319]	GETUPVAL 	2 1	; fs
	36	[319]	GETTABLE 	2 2 -18	; "make_dir"
	37	[319]	MOVE     	3 1
	38	[319]	CALL     	2 2 3
	39	[320]	TEST     	2 0 0
	40	[320]	JMP      	2	; to 43
	41	[321]	RETURN   	1 2
	42	[321]	JMP      	3	; to 46
	43	[323]	LOADNIL  	4 4
	44	[323]	MOVE     	5 3
	45	[323]	RETURN   	4 3
	46	[325]	RETURN   	0 1

function <./fs/win32.lua:327,329> (10 instructions, 40 bytes at 0x7f9388408e00)
0 params, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[328]	GETGLOBAL	0 -1	; os
	2	[328]	GETTABLE 	0 0 -2	; "getenv"
	3	[328]	LOADK    	1 -3	; "TMP"
	4	[328]	CALL     	0 2 2
	5	[328]	GETGLOBAL	1 -1	; os
	6	[328]	GETTABLE 	1 1 -4	; "tmpname"
	7	[328]	CALL     	1 1 2
	8	[328]	CONCAT   	0 0 1
	9	[328]	RETURN   	0 2
	10	[329]	RETURN   	0 1

function <./fs/win32.lua:331,333> (6 instructions, 24 bytes at 0x7f938840c280)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[332]	GETGLOBAL	0 -1	; os
	2	[332]	GETTABLE 	0 0 -2	; "getenv"
	3	[332]	LOADK    	1 -3	; "USERNAME"
	4	[332]	TAILCALL 	0 2 0
	5	[332]	RETURN   	0 0
	6	[333]	RETURN   	0 1

function <./fs/win32.lua:335,337> (7 instructions, 28 bytes at 0x7f938840c360)
2 params, 6 slots, 0 upvalues, 2 locals, 2 constants, 0 functions
	1	[336]	LOADK    	2 -1	; "SET %s=%s"
	2	[336]	SELF     	2 2 -2	; "format"
	3	[336]	MOVE     	4 0
	4	[336]	MOVE     	5 1
	5	[336]	TAILCALL 	2 4 0
	6	[336]	RETURN   	2 0
	7	[337]	RETURN   	0 1

function <./fs/win32.lua:339,341> (9 instructions, 36 bytes at 0x7f938840c690)
0 params, 3 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[340]	GETUPVAL 	0 0	; dir
	2	[340]	GETTABLE 	0 0 -1	; "path"
	3	[340]	GETUPVAL 	1 1	; fs
	4	[340]	GETTABLE 	1 1 -2	; "system_temp_dir"
	5	[340]	CALL     	1 1 2
	6	[340]	LOADK    	2 -3	; "cache"
	7	[340]	TAILCALL 	0 3 0
	8	[340]	RETURN   	0 0
	9	[341]	RETURN   	0 1
