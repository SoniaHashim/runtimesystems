-- BYTECODE -- manif.lua:24-31
0001    UGET     3   0      ; type_manifest
0002    TGETS    3   3   0  ; "check"
0003    MOV      4   1
0004    MOV      5   2
0005    CALL     3   3   3
0006    IST          3
0007    JMP      5 => 0021
0008    UGET     5   1      ; core
0009    TGETS    5   5   1  ; "cache_manifest"
0010    MOV      6   0
0011    UGET     7   2      ; cfg
0012    TGETS    7   7   2  ; "lua_version"
0013    KPRI     8   0
0014    CALL     5   1   4
0015    KPRI     5   0
0016    KSTR     6   3      ; "Error checking manifest: "
0017    MOV      7   4
0018    CAT      6   6   7
0019    KSTR     7   4      ; "type"
0020    RET      5   4
0021 => RET1     1   2

-- BYTECODE -- manif.lua:36-50
0001    UGET     1   0      ; postprocess_check
0002    TGETV    1   1   0
0003    ISF          1
0004    JMP      2 => 0006
0005    RET0     0   1
0006 => TGETS    1   0   0  ; "dependencies"
0007    ISF          1
0008    JMP      2 => 0032
0009    GGET     1   1      ; "pairs"
0010    TGETS    2   0   0  ; "dependencies"
0011    CALL     1   4   2
0012    ISNEXT   4 => 0030
0013 => GGET     6   1      ; "pairs"
0014    MOV      7   5
0015    CALL     6   4   2
0016    ISNEXT   9 => 0028
0017 => GGET    11   1      ; "pairs"
0018    MOV     12  10
0019    CALL    11   4   2
0020    ISNEXT  14 => 0026
0021 => UGET    16   1      ; queries
0022    TGETS   16  16   2  ; "from_persisted_table"
0023    MOV     17  15
0024    CALL    16   2   2
0025    TSETV   16  10  14
0026 => ITERN   14   3   3
0027    ITERL   14 => 0021
0028 => ITERN    9   3   3
0029    ITERL    9 => 0017
0030 => ITERN    4   3   3
0031    ITERL    4 => 0013
0032 => UGET     1   0      ; postprocess_check
0033    KPRI     2   2
0034    TSETV    2   1   0
0035    RET0     0   1

-- BYTECODE -- manif.lua:53-68
0001    GGET     3   0      ; "assert"
0002    GGET     4   1      ; "type"
0003    MOV      5   0
0004    CALL     4   2   2
0005    ISNES    4   2      ; "string"
0006    JMP      4 => 0013
0007    MOV      5   0
0008    TGETS    4   0   3  ; "match"
0009    KSTR     6   4      ; "/"
0010    CALL     4   2   3
0011    NOT      4   4
0012    JMP      5 => 0016
0013 => KPRI     4   1
0014    JMP      5 => 0016
0015    KPRI     4   2
0016 => CALL     3   1   2
0017    GGET     3   0      ; "assert"
0018    GGET     4   1      ; "type"
0019    MOV      5   1
0020    CALL     4   2   2
0021    ISEQS    4   2      ; "string"
0022    JMP      4 => 0025
0023    KPRI     4   1
0024    JMP      5 => 0026
0025 => KPRI     4   2
0026 => CALL     3   1   2
0027    MOV      3   0
0028    KSTR     4   4      ; "/"
0029    MOV      5   1
0030    CAT      3   3   5
0031    UGET     4   0      ; manif
0032    TGETS    4   4   5  ; "rock_manifest_cache"
0033    TGETV    4   4   3
0034    ISF          4
0035    JMP      5 => 0041
0036    UGET     4   0      ; manif
0037    TGETS    4   4   5  ; "rock_manifest_cache"
0038    TGETV    4   4   3
0039    TGETS    4   4   6  ; "rock_manifest"
0040    RET1     4   2
0041 => UGET     4   1      ; path
0042    TGETS    4   4   7  ; "rock_manifest_file"
0043    MOV      5   0
0044    MOV      6   1
0045    MOV      7   2
0046    CALL     4   2   4
0047    UGET     5   2      ; persist
0048    TGETS    5   5   8  ; "load_into_table"
0049    MOV      6   4
0050    CALL     5   2   2
0051    IST          5
0052    JMP      6 => 0061
0053    KPRI     6   0
0054    KSTR     7   9      ; "rock_manifest file not found for "
0055    MOV      8   0
0056    KSTR     9  10      ; " "
0057    MOV     10   1
0058    KSTR    11  11      ; " - not a LuaRocks tree?"
0059    CAT      7   7  11
0060    RET      6   3
0061 => UGET     6   0      ; manif
0062    TGETS    6   6   5  ; "rock_manifest_cache"
0063    TSETV    5   6   3
0064    TGETS    6   5   6  ; "rock_manifest"
0065    RET1     6   2

-- BYTECODE -- manif.lua:79-141
0001    GGET     3   0      ; "assert"
0002    GGET     4   1      ; "type"
0003    MOV      5   0
0004    CALL     4   2   2
0005    ISEQS    4   2      ; "string"
0006    JMP      4 => 0009
0007    KPRI     4   1
0008    JMP      5 => 0010
0009 => KPRI     4   2
0010 => CALL     3   1   2
0011    GGET     3   0      ; "assert"
0012    GGET     4   1      ; "type"
0013    MOV      5   1
0014    CALL     4   2   2
0015    ISEQS    4   2      ; "string"
0016    JMP      4 => 0021
0017    NOT      4   1
0018    JMP      5 => 0022
0019    KPRI     4   1
0020    JMP      5 => 0022
0021 => KPRI     4   2
0022 => CALL     3   1   2
0023    IST          1
0024    JMP      3 => 0027
0025    UGET     3   0      ; cfg
0026    TGETS    1   3   3  ; "lua_version"
0027 => UGET     3   1      ; core
0028    TGETS    3   3   4  ; "get_cached_manifest"
0029    MOV      4   0
0030    MOV      5   1
0031    CALL     3   2   3
0032    ISF          3
0033    JMP      4 => 0038
0034    UGET     4   2      ; postprocess_dependencies
0035    MOV      5   3
0036    CALL     4   1   2
0037    RET1     3   2
0038 => TNEW     4   4
0039    KSTR     5   5      ; "manifest-"
0040    MOV      6   1
0041    KSTR     7   6      ; ".zip"
0042    CAT      5   5   7
0043    TSETB    5   4   1
0044    KSTR     5   5      ; "manifest-"
0045    MOV      6   1
0046    CAT      5   5   6
0047    TSETB    5   4   2
0048    IST          2
0049    JMP      5 => 0052
0050    KSTR     5   7      ; "manifest"
0051    JMP      6 => 0053
0052 => KPRI     5   0
0053 => TSETB    5   4   3
0054    UGET     5   3      ; dir
0055    TGETS    5   5   8  ; "split_url"
0056    MOV      6   0
0057    CALL     5   3   2
0058    KNIL     7   8
0059    ISNES    5   9      ; "file"
0060    JMP      9 => 0081
0061    GGET     9  10      ; "ipairs"
0062    MOV     10   4
0063    CALL     9   4   2
0064    JMP     12 => 0078
0065 => UGET    14   3      ; dir
0066    TGETS   14  14  11  ; "path"
0067    MOV     15   6
0068    MOV     16  13
0069    CALL    14   2   3
0070    MOV      7  14
0071    UGET    14   4      ; fs
0072    TGETS   14  14  12  ; "exists"
0073    MOV     15   7
0074    CALL    14   2   2
0075    ISF         14
0076    JMP     15 => 0078
0077    JMP      9 => 0109
0078 => ITERC   12   3   3
0079    ITERL   12 => 0065
0080    JMP      9 => 0109
0081 => KNIL     9  10
0082    GGET    11  10      ; "ipairs"
0083    MOV     12   4
0084    CALL    11   4   2
0085    JMP     14 => 0101
0086 => UGET    16   5      ; fetch
0087    TGETS   16  16  13  ; "fetch_caching"
0088    UGET    17   3      ; dir
0089    TGETS   17  17  11  ; "path"
0090    MOV     18   0
0091    MOV     19  15
0092    CALL    17   0   3
0093    CALLM   16   5   0
0094    MOV      8  19
0095    MOV     10  18
0096    MOV      9  17
0097    MOV      7  16
0098    ISF          7
0099    JMP     16 => 0101
0100    JMP     11 => 0103
0101 => ITERC   14   3   3
0102    ITERL   14 => 0086
0103 => IST          7
0104    JMP     11 => 0109
0105    KPRI    11   0
0106    MOV     12   9
0107    MOV     13  10
0108    RET     11   4
0109 => MOV     10   7
0110    TGETS    9   7  14  ; "match"
0111    KSTR    11  15      ; ".*%.zip$"
0112    CALL     9   2   3
0113    ISF          9
0114    JMP     10 => 0163
0115    UGET     9   4      ; fs
0116    TGETS    9   9  16  ; "absolute_name"
0117    MOV     10   7
0118    CALL     9   2   2
0119    MOV      7   9
0120    MOV     10   7
0121    TGETS    9   7  14  ; "match"
0122    KSTR    11  17      ; "(.*)%.zip$"
0123    CALL     9   2   3
0124    IST          8
0125    JMP     10 => 0162
0126    UGET    10   3      ; dir
0127    TGETS   10  10  18  ; "dir_name"
0128    MOV     11   7
0129    CALL    10   2   2
0130    UGET    11   4      ; fs
0131    TGETS   11  11  19  ; "change_dir"
0132    MOV     12  10
0133    CALL    11   1   2
0134    UGET    11   4      ; fs
0135    TGETS   11  11  20  ; "delete"
0136    MOV     12   9
0137    CALL    11   1   2
0138    UGET    11   4      ; fs
0139    TGETS   11  11  21  ; "unzip"
0140    MOV     12   7
0141    CALL    11   3   2
0142    UGET    13   4      ; fs
0143    TGETS   13  13  22  ; "pop_dir"
0144    CALL    13   1   1
0145    IST         11
0146    JMP     13 => 0162
0147    UGET    13   4      ; fs
0148    TGETS   13  13  20  ; "delete"
0149    MOV     14   7
0150    CALL    13   1   2
0151    UGET    13   4      ; fs
0152    TGETS   13  13  20  ; "delete"
0153    MOV     14   7
0154    KSTR    15  23      ; ".timestamp"
0155    CAT     14  14  15
0156    CALL    13   1   2
0157    KPRI    13   0
0158    KSTR    14  24      ; "Failed extracting manifest file: "
0159    MOV     15  12
0160    CAT     14  14  15
0161    RET     13   3
0162 => MOV      7   9
0163 => UGET     9   1      ; core
0164    TGETS    9   9  25  ; "manifest_loader"
0165    MOV     10   7
0166    MOV     11   0
0167    MOV     12   1
0168    CALL     9   4   4
0169    IST          9
0170    JMP     12 => 0175
0171    KPRI    12   0
0172    MOV     13  10
0173    MOV     14  11
0174    RET     12   4
0175 => UGET    12   2      ; postprocess_dependencies
0176    MOV     13   9
0177    CALL    12   1   2
0178    UGET    12   6      ; check_manifest
0179    MOV     13   0
0180    MOV     14   9
0181    MOV     15  10
0182    CALLT   12   4

-- BYTECODE -- manif.lua:147-153
0001    GGET     2   0      ; "assert"
0002    GGET     3   1      ; "type"
0003    MOV      4   0
0004    CALL     3   2   2
0005    ISEQS    3   2      ; "string"
0006    JMP      3 => 0009
0007    KPRI     3   1
0008    JMP      4 => 0010
0009 => KPRI     3   2
0010 => CALL     2   1   2
0011    GGET     2   0      ; "assert"
0012    GGET     3   1      ; "type"
0013    MOV      4   1
0014    CALL     3   2   2
0015    ISEQS    3   2      ; "string"
0016    JMP      3 => 0019
0017    KPRI     3   1
0018    JMP      4 => 0020
0019 => KPRI     3   2
0020 => CALL     2   1   2
0021    ISNES    0   3      ; "bin"
0022    JMP      2 => 0025
0023    KSTR     2   4      ; "command"
0024    JMP      3 => 0026
0025 => KSTR     2   5      ; "module"
0026 => ISNES    2   4      ; "command"
0027    JMP      3 => 0030
0028    ISTC     3   1
0029    JMP      3 => 0034
0030 => UGET     3   0      ; path
0031    TGETS    3   3   6  ; "path_to_module"
0032    MOV      4   1
0033    CALL     3   2   2
0034 => MOV      4   2
0035    MOV      5   3
0036    RET      4   3

-- BYTECODE -- manif.lua:155-161
0001    GGET     3   0      ; "assert"
0002    GGET     4   1      ; "type"
0003    MOV      5   0
0004    CALL     4   2   2
0005    ISEQS    4   2      ; "string"
0006    JMP      4 => 0009
0007    KPRI     4   1
0008    JMP      5 => 0010
0009 => KPRI     4   2
0010 => CALL     3   1   2
0011    GGET     3   0      ; "assert"
0012    GGET     4   1      ; "type"
0013    MOV      5   1
0014    CALL     4   2   2
0015    ISEQS    4   2      ; "string"
0016    JMP      4 => 0019
0017    KPRI     4   1
0018    JMP      5 => 0020
0019 => KPRI     4   2
0020 => CALL     3   1   2
0021    UGET     3   0      ; path
0022    TGETS    3   3   3  ; "rocks_dir"
0023    ISTC     4   2
0024    JMP      4 => 0027
0025    UGET     4   1      ; cfg
0026    TGETS    4   4   4  ; "root_dir"
0027 => CALL     3   2   2
0028    UGET     4   2      ; manif
0029    TGETS    4   4   5  ; "load_manifest"
0030    MOV      5   3
0031    CALL     4   2   2
0032    ISFC     5   4
0033    JMP      5 => 0039
0034    MOV      5   0
0035    KSTR     6   6      ; "s"
0036    CAT      5   5   6
0037    TGETV    5   4   5
0038    TGETV    5   5   1
0039 => RET1     5   2

-- BYTECODE -- manif.lua:170-175
0001    UGET     3   0      ; get_providers
0002    MOV      4   0
0003    MOV      5   1
0004    MOV      6   2
0005    CALL     3   2   4
0006    ISF          3
0007    JMP      4 => 0013
0008    TGETB    4   3   1
0009    MOV      5   4
0010    TGETS    4   4   0  ; "match"
0011    KSTR     6   1      ; "([^/]*)/([^/]*)"
0012    CALLT    4   3
0013 => RET0     0   1

-- BYTECODE -- manif.lua:177-182
0001    UGET     3   0      ; get_providers
0002    MOV      4   0
0003    MOV      5   1
0004    MOV      6   2
0005    CALL     3   2   4
0006    ISF          3
0007    JMP      4 => 0016
0008    TGETB    4   3   2
0009    ISF          4
0010    JMP      5 => 0016
0011    TGETB    4   3   2
0012    MOV      5   4
0013    TGETS    4   4   0  ; "match"
0014    KSTR     6   1      ; "([^/]*)/([^/]*)"
0015    CALLT    4   3
0016 => RET0     0   1

-- BYTECODE -- manif.lua:193-226
0001    UGET     5   0      ; path
0002    TGETS    5   5   0  ; "rocks_dir"
0003    ISTC     6   4
0004    JMP      6 => 0007
0005    UGET     6   1      ; cfg
0006    TGETS    6   6   1  ; "root_dir"
0007 => CALL     5   2   2
0008    UGET     6   2      ; manif
0009    TGETS    6   6   2  ; "load_manifest"
0010    MOV      7   5
0011    CALL     6   2   2
0012    TGETS    7   6   3  ; "repository"
0013    TGETV    7   7   0
0014    TGETV    7   7   1
0015    TGETB    7   7   1
0016    MOV      8   2
0017    KSTR     9   4      ; "s"
0018    CAT      8   8   9
0019    TGETV    8   7   8
0020    TGETV    8   8   3
0021    ISNES    2   5      ; "command"
0022    JMP      9 => 0026
0023    KSTR     9   6      ; "bin"
0024    MOV     10   8
0025    RET      9   3
0026 => MOV     10   8
0027    TGETS    9   8   7  ; "match"
0028    KSTR    11   8      ; "%."
0029    UGET    12   1      ; cfg
0030    TGETS   12  12   9  ; "lua_extension"
0031    KSTR    13  10      ; "$"
0032    CAT     11  11  13
0033    CALL     9   2   3
0034    ISF          9
0035    JMP     10 => 0040
0036    KSTR     9  11      ; "lua"
0037    MOV     10   8
0038    RET      9   3
0039    JMP      9 => 0053
0040 => MOV     10   8
0041    TGETS    9   8   7  ; "match"
0042    KSTR    11   8      ; "%."
0043    UGET    12   1      ; cfg
0044    TGETS   12  12  12  ; "lib_extension"
0045    KSTR    13  10      ; "$"
0046    CAT     11  11  13
0047    CALL     9   2   3
0048    ISF          9
0049    JMP     10 => 0053
0050    KSTR     9  13      ; "lib"
0051    MOV     10   8
0052    RET      9   3
0053 => UGET     9   2      ; manif
0054    TGETS    9   9  14  ; "load_rock_manifest"
0055    MOV     10   0
0056    MOV     11   1
0057    ISFC    12   4
0058    JMP     12 => 0060
0059    TGETS   12   4  15  ; "root"
0060 => CALL     9   2   4
0061    TGETS   10   9  13  ; "lib"
0062    MOV     12   8
0063    TGETS   11   8  16  ; "gmatch"
0064    KSTR    13  17      ; "[^/]+"
0065    CALL    11   4   3
0066    JMP     14 => 0077
0067 => GGET    15  18      ; "type"
0068    MOV     16  10
0069    CALL    15   2   2
0070    ISNES   15  19      ; "table"
0071    JMP     15 => 0074
0072    TGETV   10  10  14
0073    JMP     15 => 0077
0074 => KSTR    15  11      ; "lua"
0075    MOV     16   8
0076    RET     15   3
0077 => ITERC   14   2   3
0078    ITERL   14 => 0067
0079    GGET    11  18      ; "type"
0080    MOV     12  10
0081    CALL    11   2   2
0082    ISNES   11  20      ; "string"
0083    JMP     11 => 0086
0084    KSTR    11  13      ; "lib"
0085    JMP     12 => 0087
0086 => KSTR    11  11      ; "lua"
0087 => MOV     12   8
0088    RET     11   3

-- BYTECODE -- manif.lua:244-264
0001    UGET     1   0      ; manif
0002    TGETS    1   1   0  ; "load_manifest"
0003    UGET     2   1      ; path
0004    TGETS    2   2   1  ; "rocks_dir"
0005    MOV      3   0
0006    CALL     2   0   2
0007    CALLM    1   2   0
0008    ISF          1
0009    JMP      2 => 0055
0010    TGETS    2   1   2  ; "repository"
0011    UGET     3   2      ; name
0012    TGETV    2   2   3
0013    ISF          2
0014    JMP      3 => 0055
0015    GGET     2   3      ; "pairs"
0016    TGETS    3   1   2  ; "repository"
0017    UGET     4   2      ; name
0018    TGETV    3   3   4
0019    CALL     2   4   2
0020    ISNEXT   5 => 0053
0021 => UGET     6   3      ; dep
0022    TGETS    6   6   4  ; "namespace"
0023    ISF          6
0024    JMP      7 => 0051
0025    UGET     6   1      ; path
0026    TGETS    6   6   5  ; "rock_namespace_file"
0027    UGET     7   2      ; name
0028    MOV      8   5
0029    MOV      9   0
0030    CALL     6   2   4
0031    GGET     7   6      ; "io"
0032    TGETS    7   7   7  ; "open"
0033    MOV      8   6
0034    KSTR     9   8      ; "r"
0035    CALL     7   2   3
0036    ISF          7
0037    JMP      8 => 0053
0038    MOV      9   7
0039    TGETS    8   7   9  ; "read"
0040    KSTR    10  10      ; "*a"
0041    CALL     8   2   3
0042    MOV     10   7
0043    TGETS    9   7  11  ; "close"
0044    CALL     9   1   2
0045    UGET     9   4      ; namespace
0046    ISNEV    8   9
0047    JMP      9 => 0053
0048    UGET     9   5      ; version_set
0049    TSETV    0   9   5
0050    JMP      6 => 0053
0051 => UGET     6   5      ; version_set
0052    TSETV    0   6   5
0053 => ITERN    5   2   3
0054    ITERL    5 => 0021
0055 => RET0     0   1

-- BYTECODE -- manif.lua:236-267
0001    GGET     2   0      ; "assert"
0002    GGET     3   1      ; "type"
0003    MOV      4   0
0004    CALL     3   2   2
0005    ISEQS    3   2      ; "table"
0006    JMP      3 => 0009
0007    KPRI     3   1
0008    JMP      4 => 0010
0009 => KPRI     3   2
0010 => CALL     2   1   2
0011    GGET     2   0      ; "assert"
0012    GGET     3   1      ; "type"
0013    MOV      4   1
0014    CALL     3   2   2
0015    ISEQS    3   3      ; "string"
0016    JMP      3 => 0019
0017    KPRI     3   1
0018    JMP      4 => 0020
0019 => KPRI     3   2
0020 => CALL     2   1   2
0021    TGETS    2   0   4  ; "name"
0022    TGETS    3   0   5  ; "namespace"
0023    TNEW     4   0
0024    UGET     5   0      ; path
0025    TGETS    5   5   6  ; "map_trees"
0026    MOV      6   1
0027    FNEW     7   7      ; manif.lua:244
0028    CALL     5   1   3
0029    UGET     5   2      ; util
0030    TGETS    5   5   8  ; "keys"
0031    MOV      6   4
0032    CALL     5   2   2
0033    MOV      6   4
0034    UCLO     0 => 0035
0035 => RET      5   3

-- BYTECODE -- manif.lua:0-270
0001    TNEW     0   0
0002    GGET     1   0      ; "require"
0003    KSTR     2   1      ; "luarocks.core.manif"
0004    CALL     1   2   2
0005    GGET     2   0      ; "require"
0006    KSTR     3   2      ; "luarocks.persist"
0007    CALL     2   2   2
0008    GGET     3   0      ; "require"
0009    KSTR     4   3      ; "luarocks.fetch"
0010    CALL     3   2   2
0011    GGET     4   0      ; "require"
0012    KSTR     5   4      ; "luarocks.dir"
0013    CALL     4   2   2
0014    GGET     5   0      ; "require"
0015    KSTR     6   5      ; "luarocks.fs"
0016    CALL     5   2   2
0017    GGET     6   0      ; "require"
0018    KSTR     7   6      ; "luarocks.core.cfg"
0019    CALL     6   2   2
0020    GGET     7   0      ; "require"
0021    KSTR     8   7      ; "luarocks.path"
0022    CALL     7   2   2
0023    GGET     8   0      ; "require"
0024    KSTR     9   8      ; "luarocks.util"
0025    CALL     8   2   2
0026    GGET     9   0      ; "require"
0027    KSTR    10   9      ; "luarocks.queries"
0028    CALL     9   2   2
0029    GGET    10   0      ; "require"
0030    KSTR    11  10      ; "luarocks.type.manifest"
0031    CALL    10   2   2
0032    TGETS   11   1  11  ; "cache_manifest"
0033    TSETS   11   0  11  ; "cache_manifest"
0034    TGETS   11   1  12  ; "load_rocks_tree_manifests"
0035    TSETS   11   0  12  ; "load_rocks_tree_manifests"
0036    TGETS   11   1  13  ; "scan_dependencies"
0037    TSETS   11   0  13  ; "scan_dependencies"
0038    TNEW    11   0
0039    TSETS   11   0  14  ; "rock_manifest_cache"
0040    FNEW    11  15      ; manif.lua:24
0041    KPRI    12   0
0042    GGET    13  16      ; "setmetatable"
0043    TNEW    14   0
0044    TDUP    15  17
0045    CALL    13   2   3
0046    FNEW    12  18      ; manif.lua:36
0047    UCLO    13 => 0048
0048 => FNEW    13  20      ; manif.lua:53
0049    TSETS   13   0  19  ; "load_rock_manifest"
0050    FNEW    13  22      ; manif.lua:79
0051    TSETS   13   0  21  ; "load_manifest"
0052    FNEW    13  24      ; manif.lua:147
0053    TSETS   13   0  23  ; "get_provided_item"
0054    FNEW    13  25      ; manif.lua:155
0055    FNEW    14  27      ; manif.lua:170
0056    TSETS   14   0  26  ; "get_current_provider"
0057    FNEW    14  29      ; manif.lua:177
0058    TSETS   14   0  28  ; "get_next_provider"
0059    FNEW    14  31      ; manif.lua:193
0060    TSETS   14   0  30  ; "get_providing_file"
0061    FNEW    14  33      ; manif.lua:236
0062    TSETS   14   0  32  ; "get_versions"
0063    UCLO     0 => 0064
0064 => RET1     0   2

