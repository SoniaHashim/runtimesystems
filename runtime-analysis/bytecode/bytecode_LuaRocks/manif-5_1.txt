
main <./manif.lua:0,0> (92 instructions, 368 bytes at 0x7ff095c068a0)
0+ params, 16 slots, 0 upvalues, 15 locals, 25 constants, 10 functions
	1	[5]	NEWTABLE 	0 0 0
	2	[7]	GETGLOBAL	1 -1	; require
	3	[7]	LOADK    	2 -2	; "luarocks.core.manif"
	4	[7]	CALL     	1 2 2
	5	[8]	GETGLOBAL	2 -1	; require
	6	[8]	LOADK    	3 -3	; "luarocks.persist"
	7	[8]	CALL     	2 2 2
	8	[9]	GETGLOBAL	3 -1	; require
	9	[9]	LOADK    	4 -4	; "luarocks.fetch"
	10	[9]	CALL     	3 2 2
	11	[10]	GETGLOBAL	4 -1	; require
	12	[10]	LOADK    	5 -5	; "luarocks.dir"
	13	[10]	CALL     	4 2 2
	14	[11]	GETGLOBAL	5 -1	; require
	15	[11]	LOADK    	6 -6	; "luarocks.fs"
	16	[11]	CALL     	5 2 2
	17	[12]	GETGLOBAL	6 -1	; require
	18	[12]	LOADK    	7 -7	; "luarocks.core.cfg"
	19	[12]	CALL     	6 2 2
	20	[13]	GETGLOBAL	7 -1	; require
	21	[13]	LOADK    	8 -8	; "luarocks.path"
	22	[13]	CALL     	7 2 2
	23	[14]	GETGLOBAL	8 -1	; require
	24	[14]	LOADK    	9 -9	; "luarocks.util"
	25	[14]	CALL     	8 2 2
	26	[15]	GETGLOBAL	9 -1	; require
	27	[15]	LOADK    	10 -10	; "luarocks.queries"
	28	[15]	CALL     	9 2 2
	29	[16]	GETGLOBAL	10 -1	; require
	30	[16]	LOADK    	11 -11	; "luarocks.type.manifest"
	31	[16]	CALL     	10 2 2
	32	[18]	GETTABLE 	11 1 -12	; "cache_manifest"
	33	[18]	SETTABLE 	0 -12 11	; "cache_manifest" -
	34	[19]	GETTABLE 	11 1 -13	; "load_rocks_tree_manifests"
	35	[19]	SETTABLE 	0 -13 11	; "load_rocks_tree_manifests" -
	36	[20]	GETTABLE 	11 1 -14	; "scan_dependencies"
	37	[20]	SETTABLE 	0 -14 11	; "scan_dependencies" -
	38	[22]	NEWTABLE 	11 0 0
	39	[22]	SETTABLE 	0 -15 11	; "rock_manifest_cache" -
	40	[31]	CLOSURE  	11 0	; 0x7ff095c06fd0
	41	[31]	MOVE     	0 10
	42	[31]	MOVE     	0 1
	43	[31]	MOVE     	0 6
	44	[33]	LOADNIL  	12 12
	45	[35]	GETGLOBAL	13 -16	; setmetatable
	46	[35]	NEWTABLE 	14 0 0
	47	[35]	NEWTABLE 	15 0 1
	48	[35]	SETTABLE 	15 -17 -18	; "__mode" "k"
	49	[35]	CALL     	13 3 2
	50	[50]	CLOSURE  	12 1	; 0x7ff095c06dd0
	51	[50]	MOVE     	0 13
	52	[50]	MOVE     	0 9
	53	[50]	CLOSE    	13
	54	[68]	CLOSURE  	13 2	; 0x7ff095c07b10
	55	[68]	MOVE     	0 0
	56	[68]	MOVE     	0 7
	57	[68]	MOVE     	0 2
	58	[53]	SETTABLE 	0 -19 13	; "load_rock_manifest" -
	59	[141]	CLOSURE  	13 3	; 0x7ff095c07e90
	60	[141]	MOVE     	0 6
	61	[141]	MOVE     	0 1
	62	[141]	MOVE     	0 12
	63	[141]	MOVE     	0 4
	64	[141]	MOVE     	0 5
	65	[141]	MOVE     	0 3
	66	[141]	MOVE     	0 11
	67	[79]	SETTABLE 	0 -20 13	; "load_manifest" -
	68	[153]	CLOSURE  	13 4	; 0x7ff095c07080
	69	[153]	MOVE     	0 7
	70	[147]	SETTABLE 	0 -21 13	; "get_provided_item" -
	71	[161]	CLOSURE  	13 5	; 0x7ff095c086f0
	72	[161]	MOVE     	0 7
	73	[161]	MOVE     	0 6
	74	[161]	MOVE     	0 0
	75	[175]	CLOSURE  	14 6	; 0x7ff095c098e0
	76	[175]	MOVE     	0 13
	77	[170]	SETTABLE 	0 -22 14	; "get_current_provider" -
	78	[182]	CLOSURE  	14 7	; 0x7ff095c09bd0
	79	[182]	MOVE     	0 13
	80	[177]	SETTABLE 	0 -23 14	; "get_next_provider" -
	81	[226]	CLOSURE  	14 8	; 0x7ff095c0a050
	82	[226]	MOVE     	0 7
	83	[226]	MOVE     	0 6
	84	[226]	MOVE     	0 0
	85	[193]	SETTABLE 	0 -24 14	; "get_providing_file" -
	86	[267]	CLOSURE  	14 9	; 0x7ff095c0a820
	87	[267]	MOVE     	0 7
	88	[267]	MOVE     	0 0
	89	[267]	MOVE     	0 8
	90	[236]	SETTABLE 	0 -25 14	; "get_versions" -
	91	[269]	RETURN   	0 2
	92	[269]	RETURN   	0 1

function <./manif.lua:24,31> (22 instructions, 88 bytes at 0x7ff095c06fd0)
3 params, 9 slots, 3 upvalues, 5 locals, 5 constants, 0 functions
	1	[25]	GETUPVAL 	3 0	; type_manifest
	2	[25]	GETTABLE 	3 3 -1	; "check"
	3	[25]	MOVE     	4 1
	4	[25]	MOVE     	5 2
	5	[25]	CALL     	3 3 3
	6	[26]	TEST     	3 0 1
	7	[26]	JMP      	13	; to 21
	8	[27]	GETUPVAL 	5 1	; core
	9	[27]	GETTABLE 	5 5 -2	; "cache_manifest"
	10	[27]	MOVE     	6 0
	11	[27]	GETUPVAL 	7 2	; cfg
	12	[27]	GETTABLE 	7 7 -3	; "lua_version"
	13	[27]	LOADNIL  	8 8
	14	[27]	CALL     	5 4 1
	15	[28]	LOADNIL  	5 5
	16	[28]	LOADK    	6 -4	; "Error checking manifest: "
	17	[28]	MOVE     	7 4
	18	[28]	CONCAT   	6 6 7
	19	[28]	LOADK    	7 -5	; "type"
	20	[28]	RETURN   	5 4
	21	[30]	RETURN   	1 2
	22	[31]	RETURN   	0 1

function <./manif.lua:36,50> (34 instructions, 136 bytes at 0x7ff095c06dd0)
1 param, 18 slots, 2 upvalues, 16 locals, 4 constants, 0 functions
	1	[37]	GETUPVAL 	1 0	; postprocess_check
	2	[37]	GETTABLE 	1 1 0
	3	[37]	TEST     	1 0 0
	4	[37]	JMP      	1	; to 6
	5	[38]	RETURN   	0 1
	6	[40]	GETTABLE 	1 0 -1	; "dependencies"
	7	[40]	TEST     	1 0 0
	8	[40]	JMP      	23	; to 32
	9	[41]	GETGLOBAL	1 -2	; pairs
	10	[41]	GETTABLE 	2 0 -1	; "dependencies"
	11	[41]	CALL     	1 2 4
	12	[41]	JMP      	17	; to 30
	13	[42]	GETGLOBAL	6 -2	; pairs
	14	[42]	MOVE     	7 5
	15	[42]	CALL     	6 2 4
	16	[42]	JMP      	11	; to 28
	17	[43]	GETGLOBAL	11 -2	; pairs
	18	[43]	MOVE     	12 10
	19	[43]	CALL     	11 2 4
	20	[43]	JMP      	5	; to 26
	21	[44]	GETUPVAL 	16 1	; queries
	22	[44]	GETTABLE 	16 16 -3	; "from_persisted_table"
	23	[44]	MOVE     	17 15
	24	[44]	CALL     	16 2 2
	25	[44]	SETTABLE 	10 14 16
	26	[43]	TFORLOOP 	11 2
	27	[44]	JMP      	-7	; to 21
	28	[42]	TFORLOOP 	6 2
	29	[45]	JMP      	-13	; to 17
	30	[41]	TFORLOOP 	1 2
	31	[46]	JMP      	-19	; to 13
	32	[49]	GETUPVAL 	1 0	; postprocess_check
	33	[49]	SETTABLE 	1 0 -4	; - true
	34	[50]	RETURN   	0 1

function <./manif.lua:53,68> (63 instructions, 252 bytes at 0x7ff095c07b10)
3 params, 12 slots, 3 upvalues, 6 locals, 12 constants, 0 functions
	1	[54]	GETGLOBAL	3 -1	; assert
	2	[54]	GETGLOBAL	4 -2	; type
	3	[54]	MOVE     	5 0
	4	[54]	CALL     	4 2 2
	5	[54]	EQ       	0 4 -3	; - "string"
	6	[54]	JMP      	5	; to 12
	7	[54]	SELF     	4 0 -4	; "match"
	8	[54]	LOADK    	6 -5	; "/"
	9	[54]	CALL     	4 3 2
	10	[54]	NOT      	4 4
	11	[54]	JMP      	2	; to 14
	12	[54]	LOADBOOL 	4 0 1
	13	[54]	LOADBOOL 	4 1 0
	14	[54]	CALL     	3 2 1
	15	[55]	GETGLOBAL	3 -1	; assert
	16	[55]	GETGLOBAL	4 -2	; type
	17	[55]	MOVE     	5 1
	18	[55]	CALL     	4 2 2
	19	[55]	EQ       	1 4 -3	; - "string"
	20	[55]	JMP      	1	; to 22
	21	[55]	LOADBOOL 	4 0 1
	22	[55]	LOADBOOL 	4 1 0
	23	[55]	CALL     	3 2 1
	24	[57]	MOVE     	3 0
	25	[57]	LOADK    	4 -5	; "/"
	26	[57]	MOVE     	5 1
	27	[57]	CONCAT   	3 3 5
	28	[58]	GETUPVAL 	4 0	; manif
	29	[58]	GETTABLE 	4 4 -6	; "rock_manifest_cache"
	30	[58]	GETTABLE 	4 4 3
	31	[58]	TEST     	4 0 0
	32	[58]	JMP      	5	; to 38
	33	[59]	GETUPVAL 	4 0	; manif
	34	[59]	GETTABLE 	4 4 -6	; "rock_manifest_cache"
	35	[59]	GETTABLE 	4 4 3
	36	[59]	GETTABLE 	4 4 -7	; "rock_manifest"
	37	[59]	RETURN   	4 2
	38	[61]	GETUPVAL 	4 1	; path
	39	[61]	GETTABLE 	4 4 -8	; "rock_manifest_file"
	40	[61]	MOVE     	5 0
	41	[61]	MOVE     	6 1
	42	[61]	MOVE     	7 2
	43	[61]	CALL     	4 4 2
	44	[62]	GETUPVAL 	5 2	; persist
	45	[62]	GETTABLE 	5 5 -9	; "load_into_table"
	46	[62]	MOVE     	6 4
	47	[62]	CALL     	5 2 2
	48	[63]	TEST     	5 0 1
	49	[63]	JMP      	8	; to 58
	50	[64]	LOADNIL  	6 6
	51	[64]	LOADK    	7 -10	; "rock_manifest file not found for "
	52	[64]	MOVE     	8 0
	53	[64]	LOADK    	9 -11	; " "
	54	[64]	MOVE     	10 1
	55	[64]	LOADK    	11 -12	; " - not a LuaRocks tree?"
	56	[64]	CONCAT   	7 7 11
	57	[64]	RETURN   	6 3
	58	[66]	GETUPVAL 	6 0	; manif
	59	[66]	GETTABLE 	6 6 -6	; "rock_manifest_cache"
	60	[66]	SETTABLE 	6 3 5
	61	[67]	GETTABLE 	6 5 -7	; "rock_manifest"
	62	[67]	RETURN   	6 2
	63	[68]	RETURN   	0 1

function <./manif.lua:79,141> (179 instructions, 716 bytes at 0x7ff095c07e90)
3 params, 20 slots, 7 upvalues, 28 locals, 26 constants, 0 functions
	1	[80]	GETGLOBAL	3 -1	; assert
	2	[80]	GETGLOBAL	4 -2	; type
	3	[80]	MOVE     	5 0
	4	[80]	CALL     	4 2 2
	5	[80]	EQ       	1 4 -3	; - "string"
	6	[80]	JMP      	1	; to 8
	7	[80]	LOADBOOL 	4 0 1
	8	[80]	LOADBOOL 	4 1 0
	9	[80]	CALL     	3 2 1
	10	[81]	GETGLOBAL	3 -1	; assert
	11	[81]	GETGLOBAL	4 -2	; type
	12	[81]	MOVE     	5 1
	13	[81]	CALL     	4 2 2
	14	[81]	EQ       	1 4 -3	; - "string"
	15	[81]	JMP      	3	; to 19
	16	[81]	NOT      	4 1
	17	[81]	JMP      	2	; to 20
	18	[81]	LOADBOOL 	4 0 1
	19	[81]	LOADBOOL 	4 1 0
	20	[81]	CALL     	3 2 1
	21	[82]	TEST     	1 0 1
	22	[82]	JMP      	2	; to 25
	23	[82]	GETUPVAL 	3 0	; cfg
	24	[82]	GETTABLE 	1 3 -4	; "lua_version"
	25	[84]	GETUPVAL 	3 1	; core
	26	[84]	GETTABLE 	3 3 -5	; "get_cached_manifest"
	27	[84]	MOVE     	4 0
	28	[84]	MOVE     	5 1
	29	[84]	CALL     	3 3 2
	30	[85]	TEST     	3 0 0
	31	[85]	JMP      	4	; to 36
	32	[86]	GETUPVAL 	4 2	; postprocess_dependencies
	33	[86]	MOVE     	5 3
	34	[86]	CALL     	4 2 1
	35	[87]	RETURN   	3 2
	36	[90]	NEWTABLE 	4 3 0
	37	[91]	LOADK    	5 -6	; "manifest-"
	38	[91]	MOVE     	6 1
	39	[91]	LOADK    	7 -7	; ".zip"
	40	[91]	CONCAT   	5 5 7
	41	[92]	LOADK    	6 -6	; "manifest-"
	42	[92]	MOVE     	7 1
	43	[92]	CONCAT   	6 6 7
	44	[93]	TEST     	2 0 1
	45	[93]	JMP      	3	; to 49
	46	[93]	LOADK    	7 -8	; "manifest"
	47	[93]	TEST     	7 0 1
	48	[93]	JMP      	1	; to 50
	49	[94]	LOADNIL  	7 7
	50	[94]	SETLIST  	4 3 1	; 1
	51	[96]	GETUPVAL 	5 3	; dir
	52	[96]	GETTABLE 	5 5 -9	; "split_url"
	53	[96]	MOVE     	6 0
	54	[96]	CALL     	5 2 3
	55	[97]	LOADNIL  	7 8
	56	[98]	EQ       	0 5 -10	; - "file"
	57	[98]	JMP      	20	; to 78
	58	[99]	GETGLOBAL	9 -11	; ipairs
	59	[99]	MOVE     	10 4
	60	[99]	CALL     	9 2 4
	61	[99]	JMP      	13	; to 75
	62	[100]	GETUPVAL 	14 3	; dir
	63	[100]	GETTABLE 	14 14 -12	; "path"
	64	[100]	MOVE     	15 6
	65	[100]	MOVE     	16 13
	66	[100]	CALL     	14 3 2
	67	[100]	MOVE     	7 14
	68	[101]	GETUPVAL 	14 4	; fs
	69	[101]	GETTABLE 	14 14 -13	; "exists"
	70	[101]	MOVE     	15 7
	71	[101]	CALL     	14 2 2
	72	[101]	TEST     	14 0 0
	73	[101]	JMP      	1	; to 75
	74	[102]	JMP      	31	; to 106
	75	[99]	TFORLOOP 	9 2
	76	[103]	JMP      	-15	; to 62
	77	[104]	JMP      	28	; to 106
	78	[106]	LOADNIL  	9 10
	79	[107]	GETGLOBAL	11 -11	; ipairs
	80	[107]	MOVE     	12 4
	81	[107]	CALL     	11 2 4
	82	[107]	JMP      	15	; to 98
	83	[108]	GETUPVAL 	16 5	; fetch
	84	[108]	GETTABLE 	16 16 -14	; "fetch_caching"
	85	[108]	GETUPVAL 	17 3	; dir
	86	[108]	GETTABLE 	17 17 -12	; "path"
	87	[108]	MOVE     	18 0
	88	[108]	MOVE     	19 15
	89	[108]	CALL     	17 3 0
	90	[108]	CALL     	16 0 5
	91	[108]	MOVE     	8 19
	92	[108]	MOVE     	10 18
	93	[108]	MOVE     	9 17
	94	[108]	MOVE     	7 16
	95	[109]	TEST     	7 0 0
	96	[109]	JMP      	1	; to 98
	97	[110]	JMP      	2	; to 100
	98	[107]	TFORLOOP 	11 2
	99	[111]	JMP      	-17	; to 83
	100	[113]	TEST     	7 0 1
	101	[113]	JMP      	4	; to 106
	102	[114]	LOADNIL  	11 11
	103	[114]	MOVE     	12 9
	104	[114]	MOVE     	13 10
	105	[114]	RETURN   	11 4
	106	[117]	SELF     	9 7 -15	; "match"
	107	[117]	LOADK    	11 -16	; ".*%.zip$"
	108	[117]	CALL     	9 3 2
	109	[117]	TEST     	9 0 0
	110	[117]	JMP      	47	; to 158
	111	[118]	GETUPVAL 	9 4	; fs
	112	[118]	GETTABLE 	9 9 -17	; "absolute_name"
	113	[118]	MOVE     	10 7
	114	[118]	CALL     	9 2 2
	115	[118]	MOVE     	7 9
	116	[119]	SELF     	9 7 -15	; "match"
	117	[119]	LOADK    	11 -18	; "(.*)%.zip$"
	118	[119]	CALL     	9 3 2
	119	[120]	TEST     	8 0 1
	120	[120]	JMP      	36	; to 157
	121	[121]	GETUPVAL 	10 3	; dir
	122	[121]	GETTABLE 	10 10 -19	; "dir_name"
	123	[121]	MOVE     	11 7
	124	[121]	CALL     	10 2 2
	125	[122]	GETUPVAL 	11 4	; fs
	126	[122]	GETTABLE 	11 11 -20	; "change_dir"
	127	[122]	MOVE     	12 10
	128	[122]	CALL     	11 2 1
	129	[123]	GETUPVAL 	11 4	; fs
	130	[123]	GETTABLE 	11 11 -21	; "delete"
	131	[123]	MOVE     	12 9
	132	[123]	CALL     	11 2 1
	133	[124]	GETUPVAL 	11 4	; fs
	134	[124]	GETTABLE 	11 11 -22	; "unzip"
	135	[124]	MOVE     	12 7
	136	[124]	CALL     	11 2 3
	137	[125]	GETUPVAL 	13 4	; fs
	138	[125]	GETTABLE 	13 13 -23	; "pop_dir"
	139	[125]	CALL     	13 1 1
	140	[126]	TEST     	11 0 1
	141	[126]	JMP      	15	; to 157
	142	[127]	GETUPVAL 	13 4	; fs
	143	[127]	GETTABLE 	13 13 -21	; "delete"
	144	[127]	MOVE     	14 7
	145	[127]	CALL     	13 2 1
	146	[128]	GETUPVAL 	13 4	; fs
	147	[128]	GETTABLE 	13 13 -21	; "delete"
	148	[128]	MOVE     	14 7
	149	[128]	LOADK    	15 -24	; ".timestamp"
	150	[128]	CONCAT   	14 14 15
	151	[128]	CALL     	13 2 1
	152	[129]	LOADNIL  	13 13
	153	[129]	LOADK    	14 -25	; "Failed extracting manifest file: "
	154	[129]	MOVE     	15 12
	155	[129]	CONCAT   	14 14 15
	156	[129]	RETURN   	13 3
	157	[132]	MOVE     	7 9
	158	[134]	GETUPVAL 	9 1	; core
	159	[134]	GETTABLE 	9 9 -26	; "manifest_loader"
	160	[134]	MOVE     	10 7
	161	[134]	MOVE     	11 0
	162	[134]	MOVE     	12 1
	163	[134]	CALL     	9 4 4
	164	[135]	TEST     	9 0 1
	165	[135]	JMP      	4	; to 170
	166	[136]	LOADNIL  	12 12
	167	[136]	MOVE     	13 10
	168	[136]	MOVE     	14 11
	169	[136]	RETURN   	12 4
	170	[139]	GETUPVAL 	12 2	; postprocess_dependencies
	171	[139]	MOVE     	13 9
	172	[139]	CALL     	12 2 1
	173	[140]	GETUPVAL 	12 6	; check_manifest
	174	[140]	MOVE     	13 0
	175	[140]	MOVE     	14 9
	176	[140]	MOVE     	15 10
	177	[140]	TAILCALL 	12 4 0
	178	[140]	RETURN   	12 0
	179	[141]	RETURN   	0 1

function <./manif.lua:147,153> (36 instructions, 144 bytes at 0x7ff095c07080)
2 params, 6 slots, 1 upvalue, 4 locals, 7 constants, 0 functions
	1	[148]	GETGLOBAL	2 -1	; assert
	2	[148]	GETGLOBAL	3 -2	; type
	3	[148]	MOVE     	4 0
	4	[148]	CALL     	3 2 2
	5	[148]	EQ       	1 3 -3	; - "string"
	6	[148]	JMP      	1	; to 8
	7	[148]	LOADBOOL 	3 0 1
	8	[148]	LOADBOOL 	3 1 0
	9	[148]	CALL     	2 2 1
	10	[149]	GETGLOBAL	2 -1	; assert
	11	[149]	GETGLOBAL	3 -2	; type
	12	[149]	MOVE     	4 1
	13	[149]	CALL     	3 2 2
	14	[149]	EQ       	1 3 -3	; - "string"
	15	[149]	JMP      	1	; to 17
	16	[149]	LOADBOOL 	3 0 1
	17	[149]	LOADBOOL 	3 1 0
	18	[149]	CALL     	2 2 1
	19	[150]	EQ       	0 0 -4	; - "bin"
	20	[150]	JMP      	3	; to 24
	21	[150]	LOADK    	2 -5	; "command"
	22	[150]	TEST     	2 0 1
	23	[150]	JMP      	1	; to 25
	24	[150]	LOADK    	2 -6	; "module"
	25	[151]	EQ       	0 2 -5	; - "command"
	26	[151]	JMP      	2	; to 29
	27	[151]	TESTSET  	3 1 1
	28	[151]	JMP      	4	; to 33
	29	[151]	GETUPVAL 	3 0	; path
	30	[151]	GETTABLE 	3 3 -7	; "path_to_module"
	31	[151]	MOVE     	4 1
	32	[151]	CALL     	3 2 2
	33	[152]	MOVE     	4 2
	34	[152]	MOVE     	5 3
	35	[152]	RETURN   	4 3
	36	[153]	RETURN   	0 1

function <./manif.lua:155,161> (38 instructions, 152 bytes at 0x7ff095c086f0)
3 params, 7 slots, 3 upvalues, 5 locals, 7 constants, 0 functions
	1	[156]	GETGLOBAL	3 -1	; assert
	2	[156]	GETGLOBAL	4 -2	; type
	3	[156]	MOVE     	5 0
	4	[156]	CALL     	4 2 2
	5	[156]	EQ       	1 4 -3	; - "string"
	6	[156]	JMP      	1	; to 8
	7	[156]	LOADBOOL 	4 0 1
	8	[156]	LOADBOOL 	4 1 0
	9	[156]	CALL     	3 2 1
	10	[157]	GETGLOBAL	3 -1	; assert
	11	[157]	GETGLOBAL	4 -2	; type
	12	[157]	MOVE     	5 1
	13	[157]	CALL     	4 2 2
	14	[157]	EQ       	1 4 -3	; - "string"
	15	[157]	JMP      	1	; to 17
	16	[157]	LOADBOOL 	4 0 1
	17	[157]	LOADBOOL 	4 1 0
	18	[157]	CALL     	3 2 1
	19	[158]	GETUPVAL 	3 0	; path
	20	[158]	GETTABLE 	3 3 -4	; "rocks_dir"
	21	[158]	TESTSET  	4 2 1
	22	[158]	JMP      	2	; to 25
	23	[158]	GETUPVAL 	4 1	; cfg
	24	[158]	GETTABLE 	4 4 -5	; "root_dir"
	25	[158]	CALL     	3 2 2
	26	[159]	GETUPVAL 	4 2	; manif
	27	[159]	GETTABLE 	4 4 -6	; "load_manifest"
	28	[159]	MOVE     	5 3
	29	[159]	CALL     	4 2 2
	30	[160]	TESTSET  	5 4 0
	31	[160]	JMP      	5	; to 37
	32	[160]	MOVE     	5 0
	33	[160]	LOADK    	6 -7	; "s"
	34	[160]	CONCAT   	5 5 6
	35	[160]	GETTABLE 	5 4 5
	36	[160]	GETTABLE 	5 5 1
	37	[160]	RETURN   	5 2
	38	[161]	RETURN   	0 1

function <./manif.lua:170,175> (13 instructions, 52 bytes at 0x7ff095c098e0)
3 params, 7 slots, 1 upvalue, 4 locals, 3 constants, 0 functions
	1	[171]	GETUPVAL 	3 0	; get_providers
	2	[171]	MOVE     	4 0
	3	[171]	MOVE     	5 1
	4	[171]	MOVE     	6 2
	5	[171]	CALL     	3 4 2
	6	[172]	TEST     	3 0 0
	7	[172]	JMP      	5	; to 13
	8	[173]	GETTABLE 	4 3 -1	; 1
	9	[173]	SELF     	4 4 -2	; "match"
	10	[173]	LOADK    	6 -3	; "([^/]*)/([^/]*)"
	11	[173]	TAILCALL 	4 3 0
	12	[173]	RETURN   	4 0
	13	[175]	RETURN   	0 1

function <./manif.lua:177,182> (16 instructions, 64 bytes at 0x7ff095c09bd0)
3 params, 7 slots, 1 upvalue, 4 locals, 3 constants, 0 functions
	1	[178]	GETUPVAL 	3 0	; get_providers
	2	[178]	MOVE     	4 0
	3	[178]	MOVE     	5 1
	4	[178]	MOVE     	6 2
	5	[178]	CALL     	3 4 2
	6	[179]	TEST     	3 0 0
	7	[179]	JMP      	8	; to 16
	8	[179]	GETTABLE 	4 3 -1	; 2
	9	[179]	TEST     	4 0 0
	10	[179]	JMP      	5	; to 16
	11	[180]	GETTABLE 	4 3 -1	; 2
	12	[180]	SELF     	4 4 -2	; "match"
	13	[180]	LOADK    	6 -3	; "([^/]*)/([^/]*)"
	14	[180]	TAILCALL 	4 3 0
	15	[180]	RETURN   	4 0
	16	[182]	RETURN   	0 1

function <./manif.lua:193,226> (87 instructions, 348 bytes at 0x7ff095c0a050)
5 params, 17 slots, 3 upvalues, 15 locals, 22 constants, 0 functions
	1	[194]	GETUPVAL 	5 0	; path
	2	[194]	GETTABLE 	5 5 -1	; "rocks_dir"
	3	[194]	TESTSET  	6 4 1
	4	[194]	JMP      	2	; to 7
	5	[194]	GETUPVAL 	6 1	; cfg
	6	[194]	GETTABLE 	6 6 -2	; "root_dir"
	7	[194]	CALL     	5 2 2
	8	[195]	GETUPVAL 	6 2	; manif
	9	[195]	GETTABLE 	6 6 -3	; "load_manifest"
	10	[195]	MOVE     	7 5
	11	[195]	CALL     	6 2 2
	12	[197]	GETTABLE 	7 6 -4	; "repository"
	13	[197]	GETTABLE 	7 7 0
	14	[197]	GETTABLE 	7 7 1
	15	[197]	GETTABLE 	7 7 -5	; 1
	16	[198]	MOVE     	8 2
	17	[198]	LOADK    	9 -6	; "s"
	18	[198]	CONCAT   	8 8 9
	19	[198]	GETTABLE 	8 7 8
	20	[198]	GETTABLE 	8 8 3
	21	[200]	EQ       	0 2 -7	; - "command"
	22	[200]	JMP      	3	; to 26
	23	[201]	LOADK    	9 -8	; "bin"
	24	[201]	MOVE     	10 8
	25	[201]	RETURN   	9 3
	26	[206]	SELF     	9 8 -9	; "match"
	27	[206]	LOADK    	11 -10	; "%."
	28	[206]	GETUPVAL 	12 1	; cfg
	29	[206]	GETTABLE 	12 12 -11	; "lua_extension"
	30	[206]	LOADK    	13 -12	; "$"
	31	[206]	CONCAT   	11 11 13
	32	[206]	CALL     	9 3 2
	33	[206]	TEST     	9 0 0
	34	[206]	JMP      	4	; to 39
	35	[207]	LOADK    	9 -13	; "lua"
	36	[207]	MOVE     	10 8
	37	[207]	RETURN   	9 3
	38	[207]	JMP      	12	; to 51
	39	[208]	SELF     	9 8 -9	; "match"
	40	[208]	LOADK    	11 -10	; "%."
	41	[208]	GETUPVAL 	12 1	; cfg
	42	[208]	GETTABLE 	12 12 -14	; "lib_extension"
	43	[208]	LOADK    	13 -12	; "$"
	44	[208]	CONCAT   	11 11 13
	45	[208]	CALL     	9 3 2
	46	[208]	TEST     	9 0 0
	47	[208]	JMP      	3	; to 51
	48	[209]	LOADK    	9 -15	; "lib"
	49	[209]	MOVE     	10 8
	50	[209]	RETURN   	9 3
	51	[213]	GETUPVAL 	9 2	; manif
	52	[213]	GETTABLE 	9 9 -16	; "load_rock_manifest"
	53	[213]	MOVE     	10 0
	54	[213]	MOVE     	11 1
	55	[213]	TESTSET  	12 4 0
	56	[213]	JMP      	1	; to 58
	57	[213]	GETTABLE 	12 4 -17	; "root"
	58	[213]	CALL     	9 4 2
	59	[214]	GETTABLE 	10 9 -15	; "lib"
	60	[216]	SELF     	11 8 -18	; "gmatch"
	61	[216]	LOADK    	13 -19	; "[^/]+"
	62	[216]	CALL     	11 3 4
	63	[216]	JMP      	10	; to 74
	64	[217]	GETGLOBAL	15 -20	; type
	65	[217]	MOVE     	16 10
	66	[217]	CALL     	15 2 2
	67	[217]	EQ       	0 15 -21	; - "table"
	68	[217]	JMP      	2	; to 71
	69	[218]	GETTABLE 	10 10 14
	70	[218]	JMP      	3	; to 74
	71	[221]	LOADK    	15 -13	; "lua"
	72	[221]	MOVE     	16 8
	73	[221]	RETURN   	15 3
	74	[216]	TFORLOOP 	11 1
	75	[222]	JMP      	-12	; to 64
	76	[225]	GETGLOBAL	11 -20	; type
	77	[225]	MOVE     	12 10
	78	[225]	CALL     	11 2 2
	79	[225]	EQ       	0 11 -22	; - "string"
	80	[225]	JMP      	3	; to 84
	81	[225]	LOADK    	11 -15	; "lib"
	82	[225]	TEST     	11 0 1
	83	[225]	JMP      	1	; to 85
	84	[225]	LOADK    	11 -13	; "lua"
	85	[225]	MOVE     	12 8
	86	[225]	RETURN   	11 3
	87	[226]	RETURN   	0 1

function <./manif.lua:236,267> (39 instructions, 156 bytes at 0x7ff095c0a820)
2 params, 8 slots, 3 upvalues, 5 locals, 8 constants, 1 function
	1	[237]	GETGLOBAL	2 -1	; assert
	2	[237]	GETGLOBAL	3 -2	; type
	3	[237]	MOVE     	4 0
	4	[237]	CALL     	3 2 2
	5	[237]	EQ       	1 3 -3	; - "table"
	6	[237]	JMP      	1	; to 8
	7	[237]	LOADBOOL 	3 0 1
	8	[237]	LOADBOOL 	3 1 0
	9	[237]	CALL     	2 2 1
	10	[238]	GETGLOBAL	2 -1	; assert
	11	[238]	GETGLOBAL	3 -2	; type
	12	[238]	MOVE     	4 1
	13	[238]	CALL     	3 2 2
	14	[238]	EQ       	1 3 -4	; - "string"
	15	[238]	JMP      	1	; to 17
	16	[238]	LOADBOOL 	3 0 1
	17	[238]	LOADBOOL 	3 1 0
	18	[238]	CALL     	2 2 1
	19	[240]	GETTABLE 	2 0 -5	; "name"
	20	[241]	GETTABLE 	3 0 -6	; "namespace"
	21	[243]	NEWTABLE 	4 0 0
	22	[244]	GETUPVAL 	5 0	; path
	23	[244]	GETTABLE 	5 5 -7	; "map_trees"
	24	[244]	MOVE     	6 1
	25	[264]	CLOSURE  	7 0	; 0x7ff095c09e10
	26	[264]	GETUPVAL 	0 1	; manif
	27	[264]	GETUPVAL 	0 0	; path
	28	[264]	MOVE     	0 2
	29	[264]	MOVE     	0 0
	30	[264]	MOVE     	0 3
	31	[264]	MOVE     	0 4
	32	[244]	CALL     	5 3 1
	33	[266]	GETUPVAL 	5 2	; util
	34	[266]	GETTABLE 	5 5 -8	; "keys"
	35	[266]	MOVE     	6 4
	36	[266]	CALL     	5 2 2
	37	[266]	MOVE     	6 4
	38	[266]	RETURN   	5 3
	39	[267]	RETURN   	0 1

function <./manif.lua:244,264> (53 instructions, 212 bytes at 0x7ff095c09e10)
1 param, 11 slots, 6 upvalues, 9 locals, 12 constants, 0 functions
	1	[245]	GETUPVAL 	1 0	; manif
	2	[245]	GETTABLE 	1 1 -1	; "load_manifest"
	3	[245]	GETUPVAL 	2 1	; path
	4	[245]	GETTABLE 	2 2 -2	; "rocks_dir"
	5	[245]	MOVE     	3 0
	6	[245]	CALL     	2 2 0
	7	[245]	CALL     	1 0 2
	8	[247]	TEST     	1 0 0
	9	[247]	JMP      	43	; to 53
	10	[247]	GETTABLE 	2 1 -3	; "repository"
	11	[247]	GETUPVAL 	3 2	; name
	12	[247]	GETTABLE 	2 2 3
	13	[247]	TEST     	2 0 0
	14	[247]	JMP      	38	; to 53
	15	[248]	GETGLOBAL	2 -4	; pairs
	16	[248]	GETTABLE 	3 1 -3	; "repository"
	17	[248]	GETUPVAL 	4 2	; name
	18	[248]	GETTABLE 	3 3 4
	19	[248]	CALL     	2 2 4
	20	[248]	JMP      	30	; to 51
	21	[249]	GETUPVAL 	6 3	; dep
	22	[249]	GETTABLE 	6 6 -5	; "namespace"
	23	[249]	TEST     	6 0 0
	24	[249]	JMP      	24	; to 49
	25	[250]	GETUPVAL 	6 1	; path
	26	[250]	GETTABLE 	6 6 -6	; "rock_namespace_file"
	27	[250]	GETUPVAL 	7 2	; name
	28	[250]	MOVE     	8 5
	29	[250]	MOVE     	9 0
	30	[250]	CALL     	6 4 2
	31	[251]	GETGLOBAL	7 -7	; io
	32	[251]	GETTABLE 	7 7 -8	; "open"
	33	[251]	MOVE     	8 6
	34	[251]	LOADK    	9 -9	; "r"
	35	[251]	CALL     	7 3 2
	36	[252]	TEST     	7 0 0
	37	[252]	JMP      	13	; to 51
	38	[253]	SELF     	8 7 -10	; "read"
	39	[253]	LOADK    	10 -11	; "*a"
	40	[253]	CALL     	8 3 2
	41	[254]	SELF     	9 7 -12	; "close"
	42	[254]	CALL     	9 2 1
	43	[255]	GETUPVAL 	9 4	; namespace
	44	[255]	EQ       	0 8 9
	45	[255]	JMP      	5	; to 51
	46	[256]	GETUPVAL 	9 5	; version_set
	47	[256]	SETTABLE 	9 5 0
	48	[258]	JMP      	2	; to 51
	49	[260]	GETUPVAL 	6 5	; version_set
	50	[260]	SETTABLE 	6 5 0
	51	[248]	TFORLOOP 	2 1
	52	[261]	JMP      	-32	; to 21
	53	[264]	RETURN   	0 1
