
main <./core/sysdetect.lua:0,0> (99 instructions, 396 bytes at 0x7f969e4068a0)
0+ params, 24 slots, 0 upvalues, 23 locals, 59 constants, 13 functions
	1	[7]	NEWTABLE 	0 0 0
	2	[13]	CLOSURE  	1 0	; 0x7f969e406b10
	3	[25]	CLOSURE  	2 1	; 0x7f969e407320
	4	[27]	LOADK    	3 -1	; 1
	5	[42]	CLOSURE  	4 2	; 0x7f969e407a00
	6	[42]	MOVE     	0 3
	7	[54]	CLOSURE  	5 3	; 0x7f969e406740
	8	[54]	MOVE     	0 4
	9	[58]	CLOSURE  	6 4	; 0x7f969e407280
	10	[58]	MOVE     	0 5
	11	[58]	MOVE     	0 3
	12	[64]	NEWTABLE 	7 0 10
	13	[65]	SETTABLE 	7 -2 -3	; 0 "sysv"
	14	[66]	SETTABLE 	7 -1 -4	; 1 "hpux"
	15	[67]	SETTABLE 	7 -5 -6	; 2 "netbsd"
	16	[68]	SETTABLE 	7 -7 -8	; 3 "linux"
	17	[69]	SETTABLE 	7 -9 -10	; 4 "hurd"
	18	[70]	SETTABLE 	7 -11 -12	; 6 "solaris"
	19	[71]	SETTABLE 	7 -13 -14	; 7 "aix"
	20	[72]	SETTABLE 	7 -15 -16	; 8 "irix"
	21	[73]	SETTABLE 	7 -17 -18	; 9 "freebsd"
	22	[74]	SETTABLE 	7 -19 -20	; 12 "openbsd"
	23	[77]	NEWTABLE 	8 0 17
	24	[78]	SETTABLE 	8 -5 -21	; 2 "sparc"
	25	[79]	SETTABLE 	8 -7 -22	; 3 "x86"
	26	[80]	SETTABLE 	8 -15 -23	; 8 "mips"
	27	[81]	SETTABLE 	8 -24 -25	; 15 "hppa"
	28	[82]	SETTABLE 	8 -26 -27	; 18 "sparcv8"
	29	[83]	SETTABLE 	8 -28 -29	; 20 "ppc"
	30	[84]	SETTABLE 	8 -30 -31	; 21 "ppc64"
	31	[85]	SETTABLE 	8 -32 -33	; 22 "s390"
	32	[86]	SETTABLE 	8 -34 -35	; 40 "arm"
	33	[87]	SETTABLE 	8 -36 -37	; 42 "superh"
	34	[88]	SETTABLE 	8 -38 -39	; 43 "sparcv9"
	35	[89]	SETTABLE 	8 -40 -41	; 50 "ia_64"
	36	[90]	SETTABLE 	8 -42 -43	; 62 "x86_64"
	37	[91]	SETTABLE 	8 -44 -45	; 182 "alpha"
	38	[92]	SETTABLE 	8 -46 -47	; 183 "aarch64"
	39	[93]	SETTABLE 	8 -48 -49	; 243 "riscv64"
	40	[94]	SETTABLE 	8 -50 -45	; 36902 "alpha"
	41	[97]	LOADK    	9 -13	; 7
	42	[136]	CLOSURE  	10 5	; 0x7f969e4080e0
	43	[136]	MOVE     	0 5
	44	[136]	MOVE     	0 9
	45	[195]	CLOSURE  	11 6	; 0x7f969e408930
	46	[195]	MOVE     	0 7
	47	[195]	MOVE     	0 5
	48	[240]	CLOSURE  	12 7	; 0x7f969e408e40
	49	[240]	MOVE     	0 2
	50	[240]	MOVE     	0 5
	51	[240]	MOVE     	0 8
	52	[250]	CLOSURE  	13 8	; 0x7f969e409050
	53	[250]	MOVE     	0 12
	54	[250]	MOVE     	0 10
	55	[250]	MOVE     	0 11
	56	[256]	NEWTABLE 	14 0 2
	57	[257]	SETTABLE 	14 -13 -43	; 7 "x86_64"
	58	[258]	SETTABLE 	14 -19 -47	; 12 "aarch64"
	59	[261]	NEWTABLE 	15 0 1
	60	[262]	SETTABLE 	15 -2 -31	; 0 "ppc64"
	61	[265]	NEWTABLE 	16 0 2
	62	[266]	SETTABLE 	16 -13 -22	; 7 "x86"
	63	[267]	SETTABLE 	16 -19 -35	; 12 "arm"
	64	[270]	NEWTABLE 	17 0 1
	65	[271]	SETTABLE 	17 -2 -29	; 0 "ppc"
	66	[302]	CLOSURE  	18 9	; 0x7f969e409150
	67	[302]	MOVE     	0 1
	68	[302]	MOVE     	0 2
	69	[302]	MOVE     	0 18
	70	[302]	MOVE     	0 14
	71	[302]	MOVE     	0 15
	72	[302]	MOVE     	0 16
	73	[302]	MOVE     	0 17
	74	[308]	NEWTABLE 	19 0 5
	75	[309]	SETTABLE 	19 -51 -43	; 34404 "x86_64"
	76	[310]	SETTABLE 	19 -52 -35	; 448 "arm"
	77	[311]	SETTABLE 	19 -53 -54	; 452 "armv7l"
	78	[312]	SETTABLE 	19 -55 -56	; 43620 "arm64"
	79	[313]	SETTABLE 	19 -57 -22	; 332 "x86"
	80	[338]	CLOSURE  	20 10	; 0x7f969e40a1a0
	81	[338]	MOVE     	0 6
	82	[338]	MOVE     	0 5
	83	[338]	MOVE     	0 3
	84	[338]	MOVE     	0 19
	85	[338]	MOVE     	0 4
	86	[358]	CLOSURE  	21 11	; 0x7f969e40a2d0
	87	[358]	MOVE     	0 1
	88	[358]	MOVE     	0 13
	89	[358]	MOVE     	0 20
	90	[358]	MOVE     	0 18
	91	[344]	SETTABLE 	0 -58 21	; "detect_file" -
	92	[360]	LOADNIL  	21 22
	93	[414]	CLOSURE  	23 12	; 0x7f969e40ae50
	94	[414]	MOVE     	0 21
	95	[414]	MOVE     	0 22
	96	[414]	MOVE     	0 0
	97	[363]	SETTABLE 	0 -59 23	; "detect" -
	98	[416]	RETURN   	0 2
	99	[416]	RETURN   	0 1

function <./core/sysdetect.lua:9,13> (6 instructions, 24 bytes at 0x7f969e406b10)
1 param, 5 slots, 0 upvalues, 1 local, 2 constants, 1 function
	1	[10]	SELF     	1 0 -1	; "gsub"
	2	[10]	LOADK    	3 -2	; "$(..)"
	3	[12]	CLOSURE  	4 0	; 0x7f969e406ea0
	4	[10]	TAILCALL 	1 4 0
	5	[12]	RETURN   	1 0
	6	[13]	RETURN   	0 1

function <./core/sysdetect.lua:10,12> (9 instructions, 36 bytes at 0x7f969e406ea0)
1 param, 5 slots, 0 upvalues, 1 local, 4 constants, 0 functions
	1	[11]	GETGLOBAL	1 -1	; string
	2	[11]	GETTABLE 	1 1 -2	; "char"
	3	[11]	GETGLOBAL	2 -3	; tonumber
	4	[11]	MOVE     	3 0
	5	[11]	LOADK    	4 -4	; 16
	6	[11]	CALL     	2 3 0
	7	[11]	TAILCALL 	1 0 0
	8	[11]	RETURN   	1 0
	9	[12]	RETURN   	0 1

function <./core/sysdetect.lua:15,25> (21 instructions, 84 bytes at 0x7f969e407320)
1 param, 4 slots, 0 upvalues, 2 locals, 7 constants, 0 functions
	1	[16]	GETGLOBAL	1 -1	; io
	2	[16]	GETTABLE 	1 1 -2	; "type"
	3	[16]	MOVE     	2 0
	4	[16]	CALL     	1 2 2
	5	[16]	EQ       	0 1 -3	; - "closed file"
	6	[16]	JMP      	2	; to 9
	7	[17]	LOADNIL  	1 1
	8	[17]	RETURN   	1 2
	9	[19]	SELF     	1 0 -4	; "read"
	10	[19]	LOADK    	3 -5	; 1
	11	[19]	CALL     	1 3 2
	12	[20]	TEST     	1 0 1
	13	[20]	JMP      	4	; to 18
	14	[21]	SELF     	2 0 -6	; "close"
	15	[21]	CALL     	2 2 1
	16	[22]	LOADNIL  	2 2
	17	[22]	RETURN   	2 2
	18	[24]	SELF     	2 1 -7	; "byte"
	19	[24]	TAILCALL 	2 2 0
	20	[24]	RETURN   	2 0
	21	[25]	RETURN   	0 1

function <./core/sysdetect.lua:30,42> (29 instructions, 116 bytes at 0x7f969e407a00)
2 params, 12 slots, 1 upvalue, 11 locals, 5 constants, 0 functions
	1	[31]	LOADK    	2 -1	; 0
	2	[32]	GETUPVAL 	3 0	; LITTLE
	3	[32]	EQ       	0 1 3
	4	[32]	JMP      	12	; to 17
	5	[33]	LEN      	3 0
	6	[33]	LOADK    	4 -2	; 1
	7	[33]	LOADK    	5 -3	; -1
	8	[33]	FORPREP  	3 6	; to 15
	9	[34]	MUL      	7 2 -4	; - 256
	10	[34]	SELF     	8 0 -5	; "byte"
	11	[34]	MOVE     	10 6
	12	[34]	MOVE     	11 6
	13	[34]	CALL     	8 4 2
	14	[34]	ADD      	2 7 8
	15	[33]	FORLOOP  	3 -7	; to 9
	16	[35]	JMP      	11	; to 28
	17	[37]	LOADK    	3 -2	; 1
	18	[37]	LEN      	4 0
	19	[37]	LOADK    	5 -2	; 1
	20	[37]	FORPREP  	3 6	; to 27
	21	[38]	MUL      	7 2 -4	; - 256
	22	[38]	SELF     	8 0 -5	; "byte"
	23	[38]	MOVE     	10 6
	24	[38]	MOVE     	11 6
	25	[38]	CALL     	8 4 2
	26	[38]	ADD      	2 7 8
	27	[37]	FORLOOP  	3 -7	; to 21
	28	[41]	RETURN   	2 2
	29	[42]	RETURN   	0 1

function <./core/sysdetect.lua:44,54> (23 instructions, 92 bytes at 0x7f969e406740)
3 params, 7 slots, 1 upvalue, 4 locals, 5 constants, 0 functions
	1	[45]	GETGLOBAL	3 -1	; io
	2	[45]	GETTABLE 	3 3 -2	; "type"
	3	[45]	MOVE     	4 0
	4	[45]	CALL     	3 2 2
	5	[45]	EQ       	0 3 -3	; - "closed file"
	6	[45]	JMP      	2	; to 9
	7	[46]	LOADNIL  	3 3
	8	[46]	RETURN   	3 2
	9	[48]	SELF     	3 0 -4	; "read"
	10	[48]	MOVE     	5 1
	11	[48]	CALL     	3 3 2
	12	[49]	TEST     	3 0 1
	13	[49]	JMP      	4	; to 18
	14	[50]	SELF     	4 0 -5	; "close"
	15	[50]	CALL     	4 2 1
	16	[51]	LOADNIL  	4 4
	17	[51]	RETURN   	4 2
	18	[53]	GETUPVAL 	4 0	; bytes2number
	19	[53]	MOVE     	5 3
	20	[53]	MOVE     	6 2
	21	[53]	TAILCALL 	4 3 0
	22	[53]	RETURN   	4 0
	23	[54]	RETURN   	0 1

function <./core/sysdetect.lua:56,58> (7 instructions, 28 bytes at 0x7f969e407280)
1 param, 5 slots, 2 upvalues, 1 local, 1 constant, 0 functions
	1	[57]	GETUPVAL 	1 0	; read
	2	[57]	MOVE     	2 0
	3	[57]	LOADK    	3 -1	; 4
	4	[57]	GETUPVAL 	4 1	; LITTLE
	5	[57]	TAILCALL 	1 4 0
	6	[57]	RETURN   	1 0
	7	[58]	RETURN   	0 1

function <./core/sysdetect.lua:99,136> (139 instructions, 556 bytes at 0x7f969e4080e0)
2 params, 15 slots, 2 upvalues, 16 locals, 33 constants, 0 functions
	1	[100]	GETTABLE 	2 1 -1	; "endian"
	2	[101]	GETTABLE 	3 1 -2	; "word"
	3	[103]	LOADNIL  	4 4
	4	[104]	NEWTABLE 	5 0 0
	5	[105]	LOADK    	6 -3	; 0
	6	[105]	GETTABLE 	7 1 -4	; "e_shnum"
	7	[105]	SUB      	7 7 -5	; - 1
	8	[105]	LOADK    	8 -5	; 1
	9	[105]	FORPREP  	6 104	; to 114
	10	[106]	SELF     	10 0 -6	; "seek"
	11	[106]	LOADK    	12 -7	; "set"
	12	[106]	GETTABLE 	13 1 -8	; "e_shoff"
	13	[106]	GETTABLE 	14 1 -9	; "e_shentsize"
	14	[106]	MUL      	14 9 14
	15	[106]	ADD      	13 13 14
	16	[106]	CALL     	10 4 1
	17	[107]	NEWTABLE 	10 0 0
	18	[108]	GETUPVAL 	11 0	; read
	19	[108]	MOVE     	12 0
	20	[108]	LOADK    	13 -11	; 4
	21	[108]	MOVE     	14 2
	22	[108]	CALL     	11 4 2
	23	[108]	SETTABLE 	10 -10 11	; "sh_name_off" -
	24	[109]	GETUPVAL 	11 0	; read
	25	[109]	MOVE     	12 0
	26	[109]	LOADK    	13 -11	; 4
	27	[109]	MOVE     	14 2
	28	[109]	CALL     	11 4 2
	29	[109]	SETTABLE 	10 -12 11	; "sh_type" -
	30	[110]	GETUPVAL 	11 0	; read
	31	[110]	MOVE     	12 0
	32	[110]	MOVE     	13 3
	33	[110]	MOVE     	14 2
	34	[110]	CALL     	11 4 2
	35	[110]	SETTABLE 	10 -13 11	; "sh_flags" -
	36	[111]	GETUPVAL 	11 0	; read
	37	[111]	MOVE     	12 0
	38	[111]	MOVE     	13 3
	39	[111]	MOVE     	14 2
	40	[111]	CALL     	11 4 2
	41	[111]	SETTABLE 	10 -14 11	; "sh_addr" -
	42	[112]	GETUPVAL 	11 0	; read
	43	[112]	MOVE     	12 0
	44	[112]	MOVE     	13 3
	45	[112]	MOVE     	14 2
	46	[112]	CALL     	11 4 2
	47	[112]	SETTABLE 	10 -15 11	; "sh_offset" -
	48	[113]	GETUPVAL 	11 0	; read
	49	[113]	MOVE     	12 0
	50	[113]	MOVE     	13 3
	51	[113]	MOVE     	14 2
	52	[113]	CALL     	11 4 2
	53	[113]	SETTABLE 	10 -16 11	; "sh_size" -
	54	[114]	GETUPVAL 	11 0	; read
	55	[114]	MOVE     	12 0
	56	[114]	LOADK    	13 -11	; 4
	57	[114]	MOVE     	14 2
	58	[114]	CALL     	11 4 2
	59	[114]	SETTABLE 	10 -17 11	; "sh_link" -
	60	[115]	GETUPVAL 	11 0	; read
	61	[115]	MOVE     	12 0
	62	[115]	LOADK    	13 -11	; 4
	63	[115]	MOVE     	14 2
	64	[115]	CALL     	11 4 2
	65	[115]	SETTABLE 	10 -18 11	; "sh_info" -
	66	[116]	GETTABLE 	11 10 -12	; "sh_type"
	67	[116]	GETUPVAL 	12 1	; SHT_NOTE
	68	[116]	EQ       	0 11 12
	69	[116]	JMP      	35	; to 105
	70	[117]	SELF     	11 0 -6	; "seek"
	71	[117]	LOADK    	13 -7	; "set"
	72	[117]	GETTABLE 	14 10 -15	; "sh_offset"
	73	[117]	CALL     	11 4 1
	74	[118]	GETUPVAL 	11 0	; read
	75	[118]	MOVE     	12 0
	76	[118]	LOADK    	13 -11	; 4
	77	[118]	MOVE     	14 2
	78	[118]	CALL     	11 4 2
	79	[118]	SETTABLE 	10 -19 11	; "namesz" -
	80	[119]	GETUPVAL 	11 0	; read
	81	[119]	MOVE     	12 0
	82	[119]	LOADK    	13 -11	; 4
	83	[119]	MOVE     	14 2
	84	[119]	CALL     	11 4 2
	85	[119]	SETTABLE 	10 -20 11	; "descsz" -
	86	[120]	GETUPVAL 	11 0	; read
	87	[120]	MOVE     	12 0
	88	[120]	LOADK    	13 -11	; 4
	89	[120]	MOVE     	14 2
	90	[120]	CALL     	11 4 2
	91	[120]	SETTABLE 	10 -21 11	; "type" -
	92	[121]	SELF     	11 0 -23	; "read"
	93	[121]	GETTABLE 	13 10 -19	; "namesz"
	94	[121]	CALL     	11 3 2
	95	[121]	SELF     	11 11 -24	; "gsub"
	96	[121]	LOADK    	13 -25	; "%z.*"
	97	[121]	LOADK    	14 -26	; ""
	98	[121]	CALL     	11 4 2
	99	[121]	SETTABLE 	10 -22 11	; "namedata" -
	100	[122]	SELF     	11 0 -23	; "read"
	101	[122]	GETTABLE 	13 10 -20	; "descsz"
	102	[122]	CALL     	11 3 2
	103	[122]	SETTABLE 	10 -27 11	; "descdata" -
	104	[122]	JMP      	4	; to 109
	105	[123]	GETTABLE 	11 1 -28	; "e_shstrndx"
	106	[123]	EQ       	0 9 11
	107	[123]	JMP      	1	; to 109
	108	[124]	GETTABLE 	4 10 -15	; "sh_offset"
	109	[126]	GETGLOBAL	11 -29	; table
	110	[126]	GETTABLE 	11 11 -30	; "insert"
	111	[126]	MOVE     	12 5
	112	[126]	MOVE     	13 10
	113	[126]	CALL     	11 3 1
	114	[105]	FORLOOP  	6 -105	; to 10
	115	[128]	TEST     	4 0 0
	116	[128]	JMP      	21	; to 138
	117	[129]	GETGLOBAL	6 -31	; ipairs
	118	[129]	MOVE     	7 5
	119	[129]	CALL     	6 2 4
	120	[129]	JMP      	15	; to 136
	121	[130]	SELF     	11 0 -6	; "seek"
	122	[130]	LOADK    	13 -7	; "set"
	123	[130]	GETTABLE 	14 10 -10	; "sh_name_off"
	124	[130]	ADD      	14 4 14
	125	[130]	CALL     	11 4 1
	126	[131]	SELF     	11 0 -23	; "read"
	127	[131]	LOADK    	13 -33	; 32
	128	[131]	CALL     	11 3 2
	129	[131]	SELF     	11 11 -24	; "gsub"
	130	[131]	LOADK    	13 -25	; "%z.*"
	131	[131]	LOADK    	14 -26	; ""
	132	[131]	CALL     	11 4 2
	133	[131]	SETTABLE 	10 -32 11	; "name" -
	134	[132]	GETTABLE 	11 10 -32	; "name"
	135	[132]	SETTABLE 	5 11 10
	136	[129]	TFORLOOP 	6 2
	137	[132]	JMP      	-17	; to 121
	138	[135]	RETURN   	5 2
	139	[136]	RETURN   	0 1

function <./core/sysdetect.lua:138,195> (130 instructions, 520 bytes at 0x7f969e408930)
3 params, 20 slots, 2 upvalues, 19 locals, 45 constants, 0 functions
	1	[139]	GETUPVAL 	3 0	; e_osabi
	2	[139]	GETTABLE 	4 1 -1	; "osabi"
	3	[139]	GETTABLE 	3 3 4
	4	[140]	GETTABLE 	4 1 -2	; "endian"
	5	[142]	EQ       	0 3 -3	; - "sysv"
	6	[142]	JMP      	122	; to 129
	7	[143]	GETTABLE 	5 2 -4	; ".note.ABI-tag"
	8	[144]	TEST     	5 0 0
	9	[144]	JMP      	16	; to 26
	10	[145]	GETTABLE 	6 5 -5	; "namedata"
	11	[145]	EQ       	0 6 -6	; - "GNU"
	12	[145]	JMP      	33	; to 46
	13	[145]	GETTABLE 	6 5 -7	; "type"
	14	[145]	EQ       	0 6 -8	; - 1
	15	[145]	JMP      	30	; to 46
	16	[146]	GETTABLE 	6 5 -9	; "descdata"
	17	[146]	SELF     	6 6 -10	; "sub"
	18	[146]	LOADK    	8 -11	; 0
	19	[146]	LOADK    	9 -12	; 4
	20	[146]	CALL     	6 4 2
	21	[146]	EQ       	0 6 -13	; - "\000\000\000\000"
	22	[146]	JMP      	23	; to 46
	23	[147]	LOADK    	6 -14	; "linux"
	24	[147]	RETURN   	6 2
	25	[148]	JMP      	20	; to 46
	26	[150]	GETTABLE 	6 2 -15	; ".SUNW_version"
	27	[150]	TEST     	6 0 1
	28	[150]	JMP      	3	; to 32
	29	[150]	GETTABLE 	6 2 -16	; ".SUNW_signature"
	30	[150]	TEST     	6 0 0
	31	[150]	JMP      	3	; to 35
	32	[151]	LOADK    	6 -17	; "solaris"
	33	[151]	RETURN   	6 2
	34	[151]	JMP      	11	; to 46
	35	[152]	GETTABLE 	6 2 -18	; ".note.netbsd.ident"
	36	[152]	TEST     	6 0 0
	37	[152]	JMP      	3	; to 41
	38	[153]	LOADK    	6 -19	; "netbsd"
	39	[153]	RETURN   	6 2
	40	[153]	JMP      	5	; to 46
	41	[154]	GETTABLE 	6 2 -20	; ".note.openbsd.ident"
	42	[154]	TEST     	6 0 0
	43	[154]	JMP      	2	; to 46
	44	[155]	LOADK    	6 -21	; "openbsd"
	45	[155]	RETURN   	6 2
	46	[158]	GETTABLE 	6 2 -22	; ".gnu.version_r"
	47	[159]	TEST     	6 0 0
	48	[159]	JMP      	65	; to 114
	49	[161]	GETTABLE 	7 2 -23	; ".dynstr"
	50	[161]	GETTABLE 	7 7 -24	; "sh_offset"
	51	[163]	LOADK    	8 -11	; 0
	52	[164]	LOADK    	9 -11	; 0
	53	[164]	GETTABLE 	10 6 -25	; "sh_info"
	54	[164]	SUB      	10 10 -8	; - 1
	55	[164]	LOADK    	11 -8	; 1
	56	[164]	FORPREP  	9 56	; to 113
	57	[165]	SELF     	13 0 -26	; "seek"
	58	[165]	LOADK    	15 -27	; "set"
	59	[165]	GETTABLE 	16 6 -24	; "sh_offset"
	60	[165]	ADD      	16 16 8
	61	[165]	CALL     	13 4 1
	62	[166]	GETGLOBAL	13 -28	; assert
	63	[166]	GETUPVAL 	14 1	; read
	64	[166]	MOVE     	15 0
	65	[166]	LOADK    	16 -29	; 2
	66	[166]	MOVE     	17 4
	67	[166]	CALL     	14 4 0
	68	[166]	CALL     	13 0 1
	69	[167]	GETUPVAL 	13 1	; read
	70	[167]	MOVE     	14 0
	71	[167]	LOADK    	15 -29	; 2
	72	[167]	MOVE     	16 4
	73	[167]	CALL     	13 4 2
	74	[168]	GETUPVAL 	14 1	; read
	75	[168]	MOVE     	15 0
	76	[168]	LOADK    	16 -12	; 4
	77	[168]	MOVE     	17 4
	78	[168]	CALL     	14 4 2
	79	[169]	GETUPVAL 	15 1	; read
	80	[169]	MOVE     	16 0
	81	[169]	LOADK    	17 -29	; 2
	82	[169]	MOVE     	18 4
	83	[169]	CALL     	15 4 2
	84	[171]	SELF     	16 0 -26	; "seek"
	85	[171]	LOADK    	18 -27	; "set"
	86	[171]	ADD      	19 7 14
	87	[171]	CALL     	16 4 1
	88	[172]	SELF     	16 0 -30	; "read"
	89	[172]	LOADK    	18 -31	; 64
	90	[172]	CALL     	16 3 2
	91	[172]	SELF     	16 16 -32	; "gsub"
	92	[172]	LOADK    	18 -33	; "%z.*"
	93	[172]	LOADK    	19 -34	; ""
	94	[172]	CALL     	16 4 2
	95	[174]	GETTABLE 	17 1 -35	; "e_type"
	96	[174]	EQ       	0 17 -36	; - 3
	97	[174]	JMP      	5	; to 103
	98	[174]	EQ       	0 16 -37	; - "libroot.so"
	99	[174]	JMP      	3	; to 103
	100	[175]	LOADK    	17 -38	; "haiku"
	101	[175]	RETURN   	17 2
	102	[175]	JMP      	7	; to 110
	103	[176]	SELF     	17 16 -39	; "match"
	104	[176]	LOADK    	19 -14	; "linux"
	105	[176]	CALL     	17 3 2
	106	[176]	TEST     	17 0 0
	107	[176]	JMP      	2	; to 110
	108	[177]	LOADK    	17 -14	; "linux"
	109	[177]	RETURN   	17 2
	110	[180]	ADD      	17 13 -8	; - 1
	111	[180]	MUL      	17 15 17
	112	[180]	ADD      	8 8 17
	113	[164]	FORLOOP  	9 -57	; to 57
	114	[184]	GETGLOBAL	7 -40	; io
	115	[184]	GETTABLE 	7 7 -41	; "open"
	116	[184]	LOADK    	8 -42	; "/proc/sys/kernel/ostype"
	117	[184]	CALL     	7 2 2
	118	[185]	TEST     	7 0 0
	119	[185]	JMP      	9	; to 129
	120	[186]	SELF     	8 7 -30	; "read"
	121	[186]	LOADK    	10 -43	; 6
	122	[186]	CALL     	8 3 2
	123	[187]	SELF     	9 7 -44	; "close"
	124	[187]	CALL     	9 2 1
	125	[188]	EQ       	0 8 -45	; - "Linux\n"
	126	[188]	JMP      	2	; to 129
	127	[189]	LOADK    	9 -14	; "linux"
	128	[189]	RETURN   	9 2
	129	[194]	RETURN   	3 2
	130	[195]	RETURN   	0 1

function <./core/sysdetect.lua:197,240> (134 instructions, 536 bytes at 0x7f969e408e40)
1 param, 11 slots, 3 upvalues, 7 locals, 26 constants, 0 functions
	1	[198]	NEWTABLE 	1 0 0
	2	[200]	GETUPVAL 	2 0	; read_int8
	3	[200]	MOVE     	3 0
	4	[200]	CALL     	2 2 2
	5	[200]	SETTABLE 	1 -1 2	; "bits" -
	6	[201]	GETUPVAL 	2 0	; read_int8
	7	[201]	MOVE     	3 0
	8	[201]	CALL     	2 2 2
	9	[201]	SETTABLE 	1 -2 2	; "endian" -
	10	[202]	GETUPVAL 	2 0	; read_int8
	11	[202]	MOVE     	3 0
	12	[202]	CALL     	2 2 2
	13	[202]	SETTABLE 	1 -3 2	; "elf_version" -
	14	[203]	GETTABLE 	2 1 -3	; "elf_version"
	15	[203]	EQ       	1 2 -4	; - 1
	16	[203]	JMP      	2	; to 19
	17	[204]	LOADNIL  	2 2
	18	[204]	RETURN   	2 2
	19	[206]	GETUPVAL 	2 0	; read_int8
	20	[206]	MOVE     	3 0
	21	[206]	CALL     	2 2 2
	22	[206]	SETTABLE 	1 -5 2	; "osabi" -
	23	[207]	GETTABLE 	2 1 -5	; "osabi"
	24	[207]	TEST     	2 0 1
	25	[207]	JMP      	2	; to 28
	26	[208]	LOADNIL  	2 2
	27	[208]	RETURN   	2 2
	28	[211]	GETTABLE 	2 1 -2	; "endian"
	29	[212]	SELF     	3 0 -6	; "seek"
	30	[212]	LOADK    	5 -7	; "set"
	31	[212]	LOADK    	6 -8	; 16
	32	[212]	CALL     	3 4 1
	33	[213]	GETUPVAL 	3 1	; read
	34	[213]	MOVE     	4 0
	35	[213]	LOADK    	5 -10	; 2
	36	[213]	MOVE     	6 2
	37	[213]	CALL     	3 4 2
	38	[213]	SETTABLE 	1 -9 3	; "e_type" -
	39	[214]	GETUPVAL 	3 1	; read
	40	[214]	MOVE     	4 0
	41	[214]	LOADK    	5 -10	; 2
	42	[214]	MOVE     	6 2
	43	[214]	CALL     	3 4 2
	44	[215]	GETUPVAL 	4 2	; e_machines
	45	[215]	GETTABLE 	4 4 3
	46	[215]	TEST     	4 0 1
	47	[215]	JMP      	1	; to 49
	48	[215]	LOADK    	4 -11	; "unknown"
	49	[216]	EQ       	0 2 -4	; - 1
	50	[216]	JMP      	3	; to 54
	51	[216]	EQ       	0 4 -12	; - "ppc64"
	52	[216]	JMP      	1	; to 54
	53	[217]	LOADK    	4 -13	; "ppc64le"
	54	[220]	GETUPVAL 	5 1	; read
	55	[220]	MOVE     	6 0
	56	[220]	LOADK    	7 -14	; 4
	57	[220]	MOVE     	8 2
	58	[220]	CALL     	5 4 2
	59	[221]	EQ       	1 5 -4	; - 1
	60	[221]	JMP      	2	; to 63
	61	[222]	LOADNIL  	6 6
	62	[222]	RETURN   	6 2
	63	[225]	GETTABLE 	6 1 -1	; "bits"
	64	[225]	EQ       	0 6 -4	; - 1
	65	[225]	JMP      	3	; to 69
	66	[225]	LOADK    	6 -14	; 4
	67	[225]	TEST     	6 0 1
	68	[225]	JMP      	1	; to 70
	69	[225]	LOADK    	6 -15	; 8
	70	[226]	SETTABLE 	1 -16 6	; "word" -
	71	[228]	GETUPVAL 	7 1	; read
	72	[228]	MOVE     	8 0
	73	[228]	MOVE     	9 6
	74	[228]	MOVE     	10 2
	75	[228]	CALL     	7 4 2
	76	[228]	SETTABLE 	1 -17 7	; "e_entry" -
	77	[229]	GETUPVAL 	7 1	; read
	78	[229]	MOVE     	8 0
	79	[229]	MOVE     	9 6
	80	[229]	MOVE     	10 2
	81	[229]	CALL     	7 4 2
	82	[229]	SETTABLE 	1 -18 7	; "e_phoff" -
	83	[230]	GETUPVAL 	7 1	; read
	84	[230]	MOVE     	8 0
	85	[230]	MOVE     	9 6
	86	[230]	MOVE     	10 2
	87	[230]	CALL     	7 4 2
	88	[230]	SETTABLE 	1 -19 7	; "e_shoff" -
	89	[231]	GETUPVAL 	7 1	; read
	90	[231]	MOVE     	8 0
	91	[231]	LOADK    	9 -14	; 4
	92	[231]	MOVE     	10 2
	93	[231]	CALL     	7 4 2
	94	[231]	SETTABLE 	1 -20 7	; "e_flags" -
	95	[232]	GETUPVAL 	7 1	; read
	96	[232]	MOVE     	8 0
	97	[232]	LOADK    	9 -10	; 2
	98	[232]	MOVE     	10 2
	99	[232]	CALL     	7 4 2
	100	[232]	SETTABLE 	1 -21 7	; "e_ehsize" -
	101	[233]	GETUPVAL 	7 1	; read
	102	[233]	MOVE     	8 0
	103	[233]	LOADK    	9 -10	; 2
	104	[233]	MOVE     	10 2
	105	[233]	CALL     	7 4 2
	106	[233]	SETTABLE 	1 -22 7	; "e_phentsize" -
	107	[234]	GETUPVAL 	7 1	; read
	108	[234]	MOVE     	8 0
	109	[234]	LOADK    	9 -10	; 2
	110	[234]	MOVE     	10 2
	111	[234]	CALL     	7 4 2
	112	[234]	SETTABLE 	1 -23 7	; "e_phnum" -
	113	[235]	GETUPVAL 	7 1	; read
	114	[235]	MOVE     	8 0
	115	[235]	LOADK    	9 -10	; 2
	116	[235]	MOVE     	10 2
	117	[235]	CALL     	7 4 2
	118	[235]	SETTABLE 	1 -24 7	; "e_shentsize" -
	119	[236]	GETUPVAL 	7 1	; read
	120	[236]	MOVE     	8 0
	121	[236]	LOADK    	9 -10	; 2
	122	[236]	MOVE     	10 2
	123	[236]	CALL     	7 4 2
	124	[236]	SETTABLE 	1 -25 7	; "e_shnum" -
	125	[237]	GETUPVAL 	7 1	; read
	126	[237]	MOVE     	8 0
	127	[237]	LOADK    	9 -10	; 2
	128	[237]	MOVE     	10 2
	129	[237]	CALL     	7 4 2
	130	[237]	SETTABLE 	1 -26 7	; "e_shstrndx" -
	131	[239]	MOVE     	7 1
	132	[239]	MOVE     	8 4
	133	[239]	RETURN   	7 3
	134	[240]	RETURN   	0 1

function <./core/sysdetect.lua:242,250> (20 instructions, 80 bytes at 0x7f969e409050)
1 param, 8 slots, 3 upvalues, 5 locals, 0 constants, 0 functions
	1	[243]	GETUPVAL 	1 0	; read_elf_header
	2	[243]	MOVE     	2 0
	3	[243]	CALL     	1 2 3
	4	[244]	TEST     	1 0 1
	5	[244]	JMP      	2	; to 8
	6	[245]	LOADNIL  	3 3
	7	[245]	RETURN   	3 2
	8	[247]	GETUPVAL 	3 1	; read_elf_section_headers
	9	[247]	MOVE     	4 0
	10	[247]	MOVE     	5 1
	11	[247]	CALL     	3 3 2
	12	[248]	GETUPVAL 	4 2	; detect_elf_system
	13	[248]	MOVE     	5 0
	14	[248]	MOVE     	6 1
	15	[248]	MOVE     	7 3
	16	[248]	CALL     	4 4 2
	17	[249]	MOVE     	5 4
	18	[249]	MOVE     	6 2
	19	[249]	RETURN   	5 3
	20	[250]	RETURN   	0 1

function <./core/sysdetect.lua:274,302> (88 instructions, 352 bytes at 0x7f969e409150)
2 params, 7 slots, 7 upvalues, 4 locals, 13 constants, 0 functions
	1	[275]	TEST     	0 0 1
	2	[275]	JMP      	2	; to 5
	3	[276]	LOADNIL  	2 2
	4	[276]	RETURN   	2 2
	5	[279]	GETUPVAL 	2 0	; hex
	6	[279]	LOADK    	3 -1	; "$CA$FE$BA$BE"
	7	[279]	CALL     	2 2 2
	8	[279]	EQ       	0 0 2
	9	[279]	JMP      	24	; to 34
	10	[281]	SELF     	2 1 -2	; "seek"
	11	[281]	LOADK    	4 -3	; "set"
	12	[281]	LOADK    	5 -4	; 18
	13	[281]	CALL     	2 4 1
	14	[282]	GETUPVAL 	2 1	; read_int8
	15	[282]	MOVE     	3 1
	16	[282]	CALL     	2 2 2
	17	[283]	TEST     	2 0 1
	18	[283]	JMP      	2	; to 21
	19	[284]	LOADNIL  	3 3
	20	[284]	RETURN   	3 2
	21	[286]	SELF     	3 1 -2	; "seek"
	22	[286]	LOADK    	5 -3	; "set"
	23	[286]	MUL      	6 2 -5	; - 256
	24	[286]	CALL     	3 4 1
	25	[287]	SELF     	3 1 -6	; "read"
	26	[287]	LOADK    	5 -7	; 4
	27	[287]	CALL     	3 3 2
	28	[287]	MOVE     	0 3
	29	[288]	GETUPVAL 	3 2	; detect_mach
	30	[288]	MOVE     	4 0
	31	[288]	MOVE     	5 1
	32	[288]	TAILCALL 	3 3 0
	33	[288]	RETURN   	3 0
	34	[291]	GETUPVAL 	2 1	; read_int8
	35	[291]	MOVE     	3 1
	36	[291]	CALL     	2 2 2
	37	[293]	GETUPVAL 	3 0	; hex
	38	[293]	LOADK    	4 -8	; "$CF$FA$ED$FE"
	39	[293]	CALL     	3 2 2
	40	[293]	EQ       	0 0 3
	41	[293]	JMP      	8	; to 50
	42	[294]	LOADK    	3 -9	; "macosx"
	43	[294]	GETUPVAL 	4 3	; mach_l64
	44	[294]	GETTABLE 	4 4 2
	45	[294]	TEST     	4 0 1
	46	[294]	JMP      	1	; to 48
	47	[294]	LOADK    	4 -10	; "unknown"
	48	[294]	RETURN   	3 3
	49	[294]	JMP      	38	; to 88
	50	[295]	GETUPVAL 	3 0	; hex
	51	[295]	LOADK    	4 -11	; "$FE$ED$CF$FA"
	52	[295]	CALL     	3 2 2
	53	[295]	EQ       	0 0 3
	54	[295]	JMP      	8	; to 63
	55	[296]	LOADK    	3 -9	; "macosx"
	56	[296]	GETUPVAL 	4 4	; mach_b64
	57	[296]	GETTABLE 	4 4 2
	58	[296]	TEST     	4 0 1
	59	[296]	JMP      	1	; to 61
	60	[296]	LOADK    	4 -10	; "unknown"
	61	[296]	RETURN   	3 3
	62	[296]	JMP      	25	; to 88
	63	[297]	GETUPVAL 	3 0	; hex
	64	[297]	LOADK    	4 -12	; "$CE$FA$ED$FE"
	65	[297]	CALL     	3 2 2
	66	[297]	EQ       	0 0 3
	67	[297]	JMP      	8	; to 76
	68	[298]	LOADK    	3 -9	; "macosx"
	69	[298]	GETUPVAL 	4 5	; mach_l32
	70	[298]	GETTABLE 	4 4 2
	71	[298]	TEST     	4 0 1
	72	[298]	JMP      	1	; to 74
	73	[298]	LOADK    	4 -10	; "unknown"
	74	[298]	RETURN   	3 3
	75	[298]	JMP      	12	; to 88
	76	[299]	GETUPVAL 	3 0	; hex
	77	[299]	LOADK    	4 -13	; "$FE$ED$FA$CE"
	78	[299]	CALL     	3 2 2
	79	[299]	EQ       	0 0 3
	80	[299]	JMP      	7	; to 88
	81	[300]	LOADK    	3 -9	; "macosx"
	82	[300]	GETUPVAL 	4 6	; mach_b32
	83	[300]	GETTABLE 	4 4 2
	84	[300]	TEST     	4 0 1
	85	[300]	JMP      	1	; to 87
	86	[300]	LOADK    	4 -10	; "unknown"
	87	[300]	RETURN   	3 3
	88	[302]	RETURN   	0 1

function <./core/sysdetect.lua:316,338> (55 instructions, 220 bytes at 0x7f969e40a1a0)
1 param, 10 slots, 5 upvalues, 7 locals, 14 constants, 0 functions
	1	[317]	SELF     	1 0 -1	; "seek"
	2	[317]	LOADK    	3 -2	; "set"
	3	[317]	LOADK    	4 -3	; 60
	4	[317]	CALL     	1 4 1
	5	[318]	GETUPVAL 	1 0	; read_int32le
	6	[318]	MOVE     	2 0
	7	[318]	CALL     	1 2 2
	8	[319]	TEST     	1 0 1
	9	[319]	JMP      	2	; to 12
	10	[320]	LOADNIL  	2 2
	11	[320]	RETURN   	2 2
	12	[322]	LOADK    	2 -4	; "windows"
	13	[323]	SELF     	3 0 -1	; "seek"
	14	[323]	LOADK    	5 -2	; "set"
	15	[323]	ADD      	6 1 -5	; - 4
	16	[323]	CALL     	3 4 1
	17	[324]	GETUPVAL 	3 1	; read
	18	[324]	MOVE     	4 0
	19	[324]	LOADK    	5 -6	; 2
	20	[324]	GETUPVAL 	6 2	; LITTLE
	21	[324]	CALL     	3 4 2
	22	[325]	GETUPVAL 	4 3	; pe_machine
	23	[325]	GETTABLE 	4 4 3
	24	[327]	SELF     	5 0 -7	; "read"
	25	[327]	LOADK    	7 -8	; 736
	26	[327]	CALL     	5 3 2
	27	[327]	SELF     	5 5 -9	; "match"
	28	[327]	LOADK    	7 -10	; ".rdata%z%z............(....)"
	29	[327]	CALL     	5 3 2
	30	[328]	TEST     	5 0 0
	31	[328]	JMP      	18	; to 50
	32	[329]	GETUPVAL 	6 4	; bytes2number
	33	[329]	MOVE     	7 5
	34	[329]	GETUPVAL 	8 2	; LITTLE
	35	[329]	CALL     	6 3 2
	36	[329]	MOVE     	5 6
	37	[330]	SELF     	6 0 -1	; "seek"
	38	[330]	LOADK    	8 -2	; "set"
	39	[330]	MOVE     	9 5
	40	[330]	CALL     	6 4 1
	41	[331]	SELF     	6 0 -7	; "read"
	42	[331]	LOADK    	8 -11	; 512
	43	[331]	CALL     	6 3 2
	44	[332]	SELF     	7 6 -9	; "match"
	45	[332]	LOADK    	9 -12	; "cyggcc"
	46	[332]	CALL     	7 3 2
	47	[332]	TEST     	7 0 0
	48	[332]	JMP      	1	; to 50
	49	[333]	LOADK    	2 -13	; "cygwin"
	50	[337]	MOVE     	6 2
	51	[337]	TESTSET  	7 4 1
	52	[337]	JMP      	1	; to 54
	53	[337]	LOADK    	7 -14	; "unknown"
	54	[337]	RETURN   	6 3
	55	[338]	RETURN   	0 1

function <./core/sysdetect.lua:344,358> (45 instructions, 180 bytes at 0x7f969e40a2d0)
1 param, 6 slots, 4 upvalues, 3 locals, 10 constants, 0 functions
	1	[345]	GETGLOBAL	1 -1	; assert
	2	[345]	GETGLOBAL	2 -2	; type
	3	[345]	MOVE     	3 0
	4	[345]	CALL     	2 2 2
	5	[345]	EQ       	1 2 -3	; - "string"
	6	[345]	JMP      	1	; to 8
	7	[345]	LOADBOOL 	2 0 1
	8	[345]	LOADBOOL 	2 1 0
	9	[345]	CALL     	1 2 1
	10	[346]	GETGLOBAL	1 -4	; io
	11	[346]	GETTABLE 	1 1 -5	; "open"
	12	[346]	MOVE     	2 0
	13	[346]	LOADK    	3 -6	; "rb"
	14	[346]	CALL     	1 3 2
	15	[347]	TEST     	1 0 1
	16	[347]	JMP      	2	; to 19
	17	[348]	LOADNIL  	2 2
	18	[348]	RETURN   	2 2
	19	[350]	SELF     	2 1 -7	; "read"
	20	[350]	LOADK    	4 -8	; 4
	21	[350]	CALL     	2 3 2
	22	[351]	GETUPVAL 	3 0	; hex
	23	[351]	LOADK    	4 -9	; "$7FELF"
	24	[351]	CALL     	3 2 2
	25	[351]	EQ       	0 2 3
	26	[351]	JMP      	4	; to 31
	27	[352]	GETUPVAL 	3 1	; detect_elf
	28	[352]	MOVE     	4 1
	29	[352]	TAILCALL 	3 2 0
	30	[352]	RETURN   	3 0
	31	[354]	GETUPVAL 	3 0	; hex
	32	[354]	LOADK    	4 -10	; "MZ$90$00"
	33	[354]	CALL     	3 2 2
	34	[354]	EQ       	0 2 3
	35	[354]	JMP      	4	; to 40
	36	[355]	GETUPVAL 	3 2	; detect_pe
	37	[355]	MOVE     	4 1
	38	[355]	TAILCALL 	3 2 0
	39	[355]	RETURN   	3 0
	40	[357]	GETUPVAL 	3 3	; detect_mach
	41	[357]	MOVE     	4 2
	42	[357]	MOVE     	5 1
	43	[357]	TAILCALL 	3 3 0
	44	[357]	RETURN   	3 0
	45	[358]	RETURN   	0 1

function <./core/sysdetect.lua:363,414> (113 instructions, 452 bytes at 0x7f969e40ae50)
1 param, 14 slots, 3 upvalues, 17 locals, 28 constants, 0 functions
	1	[364]	GETGLOBAL	1 -1	; package
	2	[364]	GETTABLE 	1 1 -2	; "config"
	3	[364]	SELF     	1 1 -3	; "sub"
	4	[364]	LOADK    	3 -4	; 1
	5	[364]	LOADK    	4 -4	; 1
	6	[364]	CALL     	1 4 2
	7	[365]	LOADNIL  	2 2
	8	[367]	TEST     	0 0 0
	9	[367]	JMP      	5	; to 15
	10	[368]	NEWTABLE 	3 1 0
	11	[368]	MOVE     	4 0
	12	[368]	SETLIST  	3 1 1	; 1
	13	[368]	MOVE     	2 3
	14	[368]	JMP      	81	; to 96
	15	[370]	GETUPVAL 	3 0	; cache_system
	16	[370]	TEST     	3 0 0
	17	[370]	JMP      	3	; to 21
	18	[371]	GETUPVAL 	3 0	; cache_system
	19	[371]	GETUPVAL 	4 1	; cache_processor
	20	[371]	RETURN   	3 3
	21	[374]	LOADNIL  	3 3
	22	[375]	GETGLOBAL	4 -5	; arg
	23	[375]	TEST     	4 0 0
	24	[375]	JMP      	2	; to 27
	25	[375]	GETGLOBAL	4 -5	; arg
	26	[375]	GETTABLE 	4 4 -6	; -1
	27	[376]	EQ       	0 1 -7	; - "/"
	28	[376]	JMP      	7	; to 36
	29	[378]	NEWTABLE 	5 2 0
	30	[379]	LOADK    	6 -8	; "/bin/sh"
	31	[381]	LOADK    	7 -9	; "/proc/self/exe"
	32	[381]	SETLIST  	5 2 1	; 1
	33	[381]	MOVE     	2 5
	34	[382]	LOADK    	3 -10	; ":"
	35	[382]	JMP      	26	; to 62
	36	[385]	GETGLOBAL	5 -11	; os
	37	[385]	GETTABLE 	5 5 -12	; "getenv"
	38	[385]	LOADK    	6 -13	; "SystemRoot"
	39	[385]	CALL     	5 2 2
	40	[386]	NEWTABLE 	6 2 0
	41	[387]	MOVE     	7 5
	42	[387]	LOADK    	8 -14	; "\\system32\\notepad.exe"
	43	[387]	CONCAT   	7 7 8
	44	[388]	MOVE     	8 5
	45	[388]	LOADK    	9 -15	; "\\explorer.exe"
	46	[388]	CONCAT   	8 8 9
	47	[389]	SETLIST  	6 2 1	; 1
	48	[389]	MOVE     	2 6
	49	[390]	TEST     	4 0 0
	50	[390]	JMP      	10	; to 61
	51	[390]	SELF     	6 4 -16	; "lower"
	52	[390]	CALL     	6 2 2
	53	[390]	SELF     	6 6 -17	; "match"
	54	[390]	LOADK    	8 -18	; "exe$"
	55	[390]	CALL     	6 3 2
	56	[390]	TEST     	6 0 1
	57	[390]	JMP      	3	; to 61
	58	[391]	MOVE     	6 4
	59	[391]	LOADK    	7 -19	; ".exe"
	60	[391]	CONCAT   	4 6 7
	61	[393]	LOADK    	3 -20	; ";"
	62	[395]	TEST     	4 0 0
	63	[395]	JMP      	32	; to 96
	64	[396]	SELF     	5 4 -17	; "match"
	65	[396]	MOVE     	7 1
	66	[396]	CALL     	5 3 2
	67	[396]	TEST     	5 0 0
	68	[396]	JMP      	6	; to 75
	69	[398]	GETGLOBAL	5 -21	; table
	70	[398]	GETTABLE 	5 5 -22	; "insert"
	71	[398]	MOVE     	6 2
	72	[398]	MOVE     	7 4
	73	[398]	CALL     	5 3 1
	74	[398]	JMP      	21	; to 96
	75	[400]	GETGLOBAL	5 -11	; os
	76	[400]	GETTABLE 	5 5 -12	; "getenv"
	77	[400]	LOADK    	6 -23	; "PATH"
	78	[400]	CALL     	5 2 2
	79	[400]	SELF     	5 5 -24	; "gmatch"
	80	[400]	LOADK    	7 -25	; "[^"
	81	[400]	MOVE     	8 3
	82	[400]	LOADK    	9 -26	; "]+"
	83	[400]	CONCAT   	7 7 9
	84	[400]	CALL     	5 3 4
	85	[400]	JMP      	8	; to 94
	86	[401]	GETGLOBAL	9 -21	; table
	87	[401]	GETTABLE 	9 9 -22	; "insert"
	88	[401]	MOVE     	10 2
	89	[401]	MOVE     	11 8
	90	[401]	MOVE     	12 1
	91	[401]	MOVE     	13 4
	92	[401]	CONCAT   	11 11 13
	93	[401]	CALL     	9 3 1
	94	[400]	TFORLOOP 	5 1
	95	[401]	JMP      	-10	; to 86
	96	[406]	GETGLOBAL	3 -27	; ipairs
	97	[406]	MOVE     	4 2
	98	[406]	CALL     	3 2 4
	99	[406]	JMP      	11	; to 111
	100	[407]	GETUPVAL 	8 2	; sysdetect
	101	[407]	GETTABLE 	8 8 -28	; "detect_file"
	102	[407]	MOVE     	9 7
	103	[407]	CALL     	8 2 3
	104	[408]	TEST     	8 0 0
	105	[408]	JMP      	5	; to 111
	106	[409]	SETUPVAL 	8 0	; cache_system
	107	[410]	SETUPVAL 	9 1	; cache_processor
	108	[411]	MOVE     	10 8
	109	[411]	MOVE     	11 9
	110	[411]	RETURN   	10 3
	111	[406]	TFORLOOP 	3 2
	112	[412]	JMP      	-13	; to 100
	113	[414]	RETURN   	0 1
